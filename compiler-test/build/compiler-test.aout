tls_init(): nil
address: 0
file: /usr/include/sharp/0.3.0/platform/kernel/platform.sharp
owner: platform.kernel#platform
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]: line: 16 - 0ret

static_init(): nil
address: 1
file: /usr/include/sharp/0.3.0/platform/kernel/platform.sharp
owner: platform.kernel#platform
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         new_class @std#_enum_
2 [0x2]:         dup 
3 [0x3]:         newstr @0 (OPEN)
4 [0x4]:         istore 15289
6 [0x6]:         call @273 // std#_enum_._enum_
7 [0x7]:         movg @std.io#channel<std.io.coroutines#job>.channel_state
8 [0x8]:         movn #0
10 [0xa]:         popobj
11 [0xb]:         new_class @std#_enum_
13 [0xd]:         dup 
14 [0xe]:         newstr @1 (CLOSED)
15 [0xf]:         istore 15290
17 [0x11]:         call @273 // std#_enum_._enum_
18 [0x12]:         movg @std.io#channel<std.io.coroutines#job>.channel_state
19 [0x13]:         movn #1
21 [0x15]:         popobj
22 [0x16]:         new_class @std#_enum_
24 [0x18]:         dup 
25 [0x19]:         newstr @0 (OPEN)
26 [0x1a]:         istore 15435
28 [0x1c]:         call @273 // std#_enum_._enum_
29 [0x1d]:         movg @std.io#channel<std#int>.channel_state
30 [0x1e]:         movn #0
32 [0x20]:         popobj
33 [0x21]:         new_class @std#_enum_
35 [0x23]:         dup 
36 [0x24]:         newstr @1 (CLOSED)
37 [0x25]:         istore 15436
39 [0x27]:         call @273 // std#_enum_._enum_
40 [0x28]:         movg @std.io#channel<std#int>.channel_state
41 [0x29]:         movn #1
43 [0x2b]:         popobj
44 [0x2c]:         new_class @std#_enum_
46 [0x2e]:         dup 
47 [0x2f]:         newstr @2 (tm_seconds)
48 [0x30]:         istore 0
50 [0x32]:         call @273 // std#_enum_._enum_
51 [0x33]:         movg @std#time_request
52 [0x34]:         movn #0
54 [0x36]:         popobj
55 [0x37]:         new_class @std#_enum_
57 [0x39]:         dup 
58 [0x3a]:         newstr @3 (tm_minutes)
59 [0x3b]:         istore 1
61 [0x3d]:         call @273 // std#_enum_._enum_
62 [0x3e]:         movg @std#time_request
63 [0x3f]:         movn #1
65 [0x41]:         popobj
66 [0x42]:         new_class @std#_enum_
68 [0x44]:         dup 
69 [0x45]:         newstr @4 (tm_hour)
70 [0x46]:         istore 2
72 [0x48]:         call @273 // std#_enum_._enum_
73 [0x49]:         movg @std#time_request
74 [0x4a]:         movn #2
76 [0x4c]:         popobj
77 [0x4d]:         new_class @std#_enum_
79 [0x4f]:         dup 
80 [0x50]:         newstr @5 (tm_mday)
81 [0x51]:         istore 3
83 [0x53]:         call @273 // std#_enum_._enum_
84 [0x54]:         movg @std#time_request
85 [0x55]:         movn #3
87 [0x57]:         popobj
88 [0x58]:         new_class @std#_enum_
90 [0x5a]:         dup 
91 [0x5b]:         newstr @6 (tm_mon)
92 [0x5c]:         istore 4
94 [0x5e]:         call @273 // std#_enum_._enum_
95 [0x5f]:         movg @std#time_request
96 [0x60]:         movn #4
98 [0x62]:         popobj
99 [0x63]:         new_class @std#_enum_
101 [0x65]:         dup 
102 [0x66]:         newstr @7 (tm_year)
103 [0x67]:         istore 5
105 [0x69]:         call @273 // std#_enum_._enum_
106 [0x6a]:         movg @std#time_request
107 [0x6b]:         movn #5
109 [0x6d]:         popobj
110 [0x6e]:         new_class @std#_enum_
112 [0x70]:         dup 
113 [0x71]:         newstr @8 (tm_wday)
114 [0x72]:         istore 6
116 [0x74]:         call @273 // std#_enum_._enum_
117 [0x75]:         movg @std#time_request
118 [0x76]:         movn #6
120 [0x78]:         popobj
121 [0x79]:         new_class @std#_enum_
123 [0x7b]:         dup 
124 [0x7c]:         newstr @9 (tm_yday)
125 [0x7d]:         istore 7
127 [0x7f]:         call @273 // std#_enum_._enum_
128 [0x80]:         movg @std#time_request
129 [0x81]:         movn #7
131 [0x83]:         popobj
132 [0x84]:         new_class @std#_enum_
134 [0x86]:         dup 
135 [0x87]:         newstr @10 (tm_isdst)
136 [0x88]:         istore 8
138 [0x8a]:         call @273 // std#_enum_._enum_
139 [0x8b]:         movg @std#time_request
140 [0x8c]:         movn #8
142 [0x8e]:         popobj
143 [0x8f]:         new_class @std#_enum_
145 [0x91]:         dup 
146 [0x92]:         newstr @11 (seconds)
147 [0x93]:         istore 0
149 [0x95]:         call @273 // std#_enum_._enum_
150 [0x96]:         movg @std#time_unit
151 [0x97]:         movn #0
153 [0x99]:         popobj
154 [0x9a]:         new_class @std#_enum_
156 [0x9c]:         dup 
157 [0x9d]:         newstr @12 (milliseconds)
158 [0x9e]:         istore 1
160 [0xa0]:         call @273 // std#_enum_._enum_
161 [0xa1]:         movg @std#time_unit
162 [0xa2]:         movn #1
164 [0xa4]:         popobj
165 [0xa5]:         new_class @std#_enum_
167 [0xa7]:         dup 
168 [0xa8]:         newstr @13 (microseconds)
169 [0xa9]:         istore 2
171 [0xab]:         call @273 // std#_enum_._enum_
172 [0xac]:         movg @std#time_unit
173 [0xad]:         movn #2
175 [0xaf]:         popobj
176 [0xb0]:         new_class @std#_enum_
178 [0xb2]:         dup 
179 [0xb3]:         newstr @14 (nanoseconds)
180 [0xb4]:         istore 3
182 [0xb6]:         call @273 // std#_enum_._enum_
183 [0xb7]:         movg @std#time_unit
184 [0xb8]:         movn #3
186 [0xba]:         popobj
187 [0xbb]:         new_class @std#_enum_
189 [0xbd]:         dup 
190 [0xbe]:         newstr @15 (result_ok)
191 [0xbf]:         istore 0
193 [0xc1]:         call @273 // std#_enum_._enum_
194 [0xc2]:         movg @std.io#thread_result
195 [0xc3]:         movn #0
197 [0xc5]:         popobj
198 [0xc6]:         new_class @std#_enum_
200 [0xc8]:         dup 
201 [0xc9]:         newstr @16 (result_ill_thread_start)
202 [0xca]:         istore 1
204 [0xcc]:         call @273 // std#_enum_._enum_
205 [0xcd]:         movg @std.io#thread_result
206 [0xce]:         movn #1
208 [0xd0]:         popobj
209 [0xd1]:         new_class @std#_enum_
211 [0xd3]:         dup 
212 [0xd4]:         newstr @17 (result_thread_running)
213 [0xd5]:         istore 2
215 [0xd7]:         call @273 // std#_enum_._enum_
216 [0xd8]:         movg @std.io#thread_result
217 [0xd9]:         movn #2
219 [0xdb]:         popobj
220 [0xdc]:         new_class @std#_enum_
222 [0xde]:         dup 
223 [0xdf]:         newstr @18 (result_thread_terminated)
224 [0xe0]:         istore 3
226 [0xe2]:         call @273 // std#_enum_._enum_
227 [0xe3]:         movg @std.io#thread_result
228 [0xe4]:         movn #3
230 [0xe6]:         popobj
231 [0xe7]:         new_class @std#_enum_
233 [0xe9]:         dup 
234 [0xea]:         newstr @19 (result_invalid_stack_size)
235 [0xeb]:         istore 4
237 [0xed]:         call @273 // std#_enum_._enum_
238 [0xee]:         movg @std.io#thread_result
239 [0xef]:         movn #4
241 [0xf1]:         popobj
242 [0xf2]:         new_class @std#_enum_
244 [0xf4]:         dup 
245 [0xf5]:         newstr @20 (result_thread_not_started)
246 [0xf6]:         istore 5
248 [0xf8]:         call @273 // std#_enum_._enum_
249 [0xf9]:         movg @std.io#thread_result
250 [0xfa]:         movn #5
252 [0xfc]:         popobj
253 [0xfd]:         new_class @std#_enum_
255 [0xff]:         dup 
256 [0x100]:         newstr @21 (result_ill_thread_join)
257 [0x101]:         istore 6
259 [0x103]:         call @273 // std#_enum_._enum_
260 [0x104]:         movg @std.io#thread_result
261 [0x105]:         movn #6
263 [0x107]:         popobj
264 [0x108]:         new_class @std#_enum_
266 [0x10a]:         dup 
267 [0x10b]:         newstr @22 (result_thread_join_failed)
268 [0x10c]:         istore 7
270 [0x10e]:         call @273 // std#_enum_._enum_
271 [0x10f]:         movg @std.io#thread_result
272 [0x110]:         movn #7
274 [0x112]:         popobj
275 [0x113]:         new_class @std#_enum_
277 [0x115]:         dup 
278 [0x116]:         newstr @23 (result_ill_thread_interrupt)
279 [0x117]:         istore 8
281 [0x119]:         call @273 // std#_enum_._enum_
282 [0x11a]:         movg @std.io#thread_result
283 [0x11b]:         movn #8
285 [0x11d]:         popobj
286 [0x11e]:         new_class @std#_enum_
288 [0x120]:         dup 
289 [0x121]:         newstr @24 (result_thread_interrupt_failed)
290 [0x122]:         istore 9
292 [0x124]:         call @273 // std#_enum_._enum_
293 [0x125]:         movg @std.io#thread_result
294 [0x126]:         movn #9
296 [0x128]:         popobj
297 [0x129]:         new_class @std#_enum_
299 [0x12b]:         dup 
300 [0x12c]:         newstr @25 (result_ill_thread_destroy)
301 [0x12d]:         istore 10
303 [0x12f]:         call @273 // std#_enum_._enum_
304 [0x130]:         movg @std.io#thread_result
305 [0x131]:         movn #10
307 [0x133]:         popobj
308 [0x134]:         new_class @std#_enum_
310 [0x136]:         dup 
311 [0x137]:         newstr @26 (result_thread_create_failed)
312 [0x138]:         istore 11
314 [0x13a]:         call @273 // std#_enum_._enum_
315 [0x13b]:         movg @std.io#thread_result
316 [0x13c]:         movn #11
318 [0x13e]:         popobj
319 [0x13f]:         new_class @std#_enum_
321 [0x141]:         dup 
322 [0x142]:         newstr @27 (result_no_thread_id)
323 [0x143]:         istore 12
325 [0x145]:         call @273 // std#_enum_._enum_
326 [0x146]:         movg @std.io#thread_result
327 [0x147]:         movn #12
329 [0x149]:         popobj
330 [0x14a]:         new_class @std#_enum_
332 [0x14c]:         dup 
333 [0x14d]:         newstr @28 (result_thread_destroy_failed)
334 [0x14e]:         istore 13
336 [0x150]:         call @273 // std#_enum_._enum_
337 [0x151]:         movg @std.io#thread_result
338 [0x152]:         movn #13
340 [0x154]:         popobj
341 [0x155]:         new_class @std#_enum_
343 [0x157]:         dup 
344 [0x158]:         newstr @29 (result_ill_priority_set)
345 [0x159]:         istore 14
347 [0x15b]:         call @273 // std#_enum_._enum_
348 [0x15c]:         movg @std.io#thread_result
349 [0x15d]:         movn #14
351 [0x15f]:         popobj
352 [0x160]:         new_class @std#_enum_
354 [0x162]:         dup 
355 [0x163]:         newstr @30 (result_ill_thread_suspend)
356 [0x164]:         istore 15
358 [0x166]:         call @273 // std#_enum_._enum_
359 [0x167]:         movg @std.io#thread_result
360 [0x168]:         movn #15
362 [0x16a]:         popobj
363 [0x16b]:         new_class @std#_enum_
365 [0x16d]:         dup 
366 [0x16e]:         newstr @31 (result_max_spin)
367 [0x16f]:         istore 255
369 [0x171]:         call @273 // std#_enum_._enum_
370 [0x172]:         movg @std.io#thread_result
371 [0x173]:         movn #16
373 [0x175]:         popobj
374 [0x176]:         new_class @std#_enum_
376 [0x178]:         dup 
377 [0x179]:         newstr @32 (int8)
378 [0x17a]:         istore 0
380 [0x17c]:         call @273 // std#_enum_._enum_
381 [0x17d]:         movg @std.reflect#data_type
382 [0x17e]:         movn #0
384 [0x180]:         popobj
385 [0x181]:         new_class @std#_enum_
387 [0x183]:         dup 
388 [0x184]:         newstr @33 (int16)
389 [0x185]:         istore 1
391 [0x187]:         call @273 // std#_enum_._enum_
392 [0x188]:         movg @std.reflect#data_type
393 [0x189]:         movn #1
395 [0x18b]:         popobj
396 [0x18c]:         new_class @std#_enum_
398 [0x18e]:         dup 
399 [0x18f]:         newstr @34 (int32)
400 [0x190]:         istore 2
402 [0x192]:         call @273 // std#_enum_._enum_
403 [0x193]:         movg @std.reflect#data_type
404 [0x194]:         movn #2
406 [0x196]:         popobj
407 [0x197]:         new_class @std#_enum_
409 [0x199]:         dup 
410 [0x19a]:         newstr @35 (int64)
411 [0x19b]:         istore 3
413 [0x19d]:         call @273 // std#_enum_._enum_
414 [0x19e]:         movg @std.reflect#data_type
415 [0x19f]:         movn #3
417 [0x1a1]:         popobj
418 [0x1a2]:         new_class @std#_enum_
420 [0x1a4]:         dup 
421 [0x1a5]:         newstr @36 (uint8)
422 [0x1a6]:         istore 4
424 [0x1a8]:         call @273 // std#_enum_._enum_
425 [0x1a9]:         movg @std.reflect#data_type
426 [0x1aa]:         movn #4
428 [0x1ac]:         popobj
429 [0x1ad]:         new_class @std#_enum_
431 [0x1af]:         dup 
432 [0x1b0]:         newstr @37 (uint16)
433 [0x1b1]:         istore 5
435 [0x1b3]:         call @273 // std#_enum_._enum_
436 [0x1b4]:         movg @std.reflect#data_type
437 [0x1b5]:         movn #5
439 [0x1b7]:         popobj
440 [0x1b8]:         new_class @std#_enum_
442 [0x1ba]:         dup 
443 [0x1bb]:         newstr @38 (uint32)
444 [0x1bc]:         istore 6
446 [0x1be]:         call @273 // std#_enum_._enum_
447 [0x1bf]:         movg @std.reflect#data_type
448 [0x1c0]:         movn #6
450 [0x1c2]:         popobj
451 [0x1c3]:         new_class @std#_enum_
453 [0x1c5]:         dup 
454 [0x1c6]:         newstr @39 (uint64)
455 [0x1c7]:         istore 7
457 [0x1c9]:         call @273 // std#_enum_._enum_
458 [0x1ca]:         movg @std.reflect#data_type
459 [0x1cb]:         movn #7
461 [0x1cd]:         popobj
462 [0x1ce]:         new_class @std#_enum_
464 [0x1d0]:         dup 
465 [0x1d1]:         newstr @40 (fnptr)
466 [0x1d2]:         istore 8
468 [0x1d4]:         call @273 // std#_enum_._enum_
469 [0x1d5]:         movg @std.reflect#data_type
470 [0x1d6]:         movn #8
472 [0x1d8]:         popobj
473 [0x1d9]:         new_class @std#_enum_
475 [0x1db]:         dup 
476 [0x1dc]:         newstr @41 (_var)
477 [0x1dd]:         istore 9
479 [0x1df]:         call @273 // std#_enum_._enum_
480 [0x1e0]:         movg @std.reflect#data_type
481 [0x1e1]:         movn #9
483 [0x1e3]:         popobj
484 [0x1e4]:         new_class @std#_enum_
486 [0x1e6]:         dup 
487 [0x1e7]:         newstr @42 (_object)
488 [0x1e8]:         istore 10
490 [0x1ea]:         call @273 // std#_enum_._enum_
491 [0x1eb]:         movg @std.reflect#data_type
492 [0x1ec]:         movn #10
494 [0x1ee]:         popobj
495 [0x1ef]:         new_class @std#_enum_
497 [0x1f1]:         dup 
498 [0x1f2]:         newstr @43 (_class)
499 [0x1f3]:         istore 11
501 [0x1f5]:         call @273 // std#_enum_._enum_
502 [0x1f6]:         movg @std.reflect#data_type
503 [0x1f7]:         movn #11
505 [0x1f9]:         popobj
506 [0x1fa]:         new_class @std#_enum_
508 [0x1fc]:         dup 
509 [0x1fd]:         newstr @44 (method)
510 [0x1fe]:         istore 12
512 [0x200]:         call @273 // std#_enum_._enum_
513 [0x201]:         movg @std.reflect#data_type
514 [0x202]:         movn #12
516 [0x204]:         popobj
517 [0x205]:         new_class @std#_enum_
519 [0x207]:         dup 
520 [0x208]:         newstr @45 (_nil)
521 [0x209]:         istore 13
523 [0x20b]:         call @273 // std#_enum_._enum_
524 [0x20c]:         movg @std.reflect#data_type
525 [0x20d]:         movn #13
527 [0x20f]:         popobj
528 [0x210]:         new_class @std#_enum_
530 [0x212]:         dup 
531 [0x213]:         newstr @46 (any)
532 [0x214]:         istore 14
534 [0x216]:         call @273 // std#_enum_._enum_
535 [0x217]:         movg @std.reflect#data_type
536 [0x218]:         movn #14
538 [0x21a]:         popobj
539 [0x21b]:         new_class @std#_enum_
541 [0x21d]:         dup 
542 [0x21e]:         newstr @47 (untyped)
543 [0x21f]:         istore 15
545 [0x221]:         call @273 // std#_enum_._enum_
546 [0x222]:         movg @std.reflect#data_type
547 [0x223]:         movn #15
549 [0x225]:         popobj
550 [0x226]:         new_class @std#_enum_
552 [0x228]:         dup 
553 [0x229]:         newstr @48 (undefined)
554 [0x22a]:         istore 16
556 [0x22c]:         call @273 // std#_enum_._enum_
557 [0x22d]:         movg @std.reflect#data_type
558 [0x22e]:         movn #16
560 [0x230]:         popobj
561 [0x231]:         new_class @std#_enum_
563 [0x233]:         dup 
564 [0x234]:         newstr @49 (min_priority)
565 [0x235]:         istore 1
567 [0x237]:         call @273 // std#_enum_._enum_
568 [0x238]:         movg @std.io#thread_priority
569 [0x239]:         movn #0
571 [0x23b]:         popobj
572 [0x23c]:         new_class @std#_enum_
574 [0x23e]:         dup 
575 [0x23f]:         newstr @50 (norm_priority)
576 [0x240]:         istore 4
578 [0x242]:         call @273 // std#_enum_._enum_
579 [0x243]:         movg @std.io#thread_priority
580 [0x244]:         movn #1
582 [0x246]:         popobj
583 [0x247]:         new_class @std#_enum_
585 [0x249]:         dup 
586 [0x24a]:         newstr @51 (max_priority)
587 [0x24b]:         istore 6
589 [0x24d]:         call @273 // std#_enum_._enum_
590 [0x24e]:         movg @std.io#thread_priority
591 [0x24f]:         movn #2
593 [0x251]:         popobj
594 [0x252]:         new_class @std#_enum_
596 [0x254]:         dup 
597 [0x255]:         newstr @52 (class_property)
598 [0x256]:         istore 17692
600 [0x258]:         call @273 // std#_enum_._enum_
601 [0x259]:         movg @std.reflect#property_type
602 [0x25a]:         movn #0
604 [0x25c]:         popobj
605 [0x25d]:         new_class @std#_enum_
607 [0x25f]:         dup 
608 [0x260]:         newstr @53 (field_property)
609 [0x261]:         istore 17693
611 [0x263]:         call @273 // std#_enum_._enum_
612 [0x264]:         movg @std.reflect#property_type
613 [0x265]:         movn #1
615 [0x267]:         popobj
616 [0x268]:         new_class @std#_enum_
618 [0x26a]:         dup 
619 [0x26b]:         newstr @54 (function_property)
620 [0x26c]:         istore 17694
622 [0x26e]:         call @273 // std#_enum_._enum_
623 [0x26f]:         movg @std.reflect#property_type
624 [0x270]:         movn #2
626 [0x272]:         popobj
627 [0x273]:         new_class @std#_enum_
629 [0x275]:         dup 
630 [0x276]:         newstr @55 (FIB_CREATED)
631 [0x277]:         istore 17694
633 [0x279]:         call @273 // std#_enum_._enum_
634 [0x27a]:         movg @std.io.fiber#fiber_state
635 [0x27b]:         movn #0
637 [0x27d]:         popobj
638 [0x27e]:         new_class @std#_enum_
640 [0x280]:         dup 
641 [0x281]:         newstr @56 (FIB_RUNNING)
642 [0x282]:         istore 17695
644 [0x284]:         call @273 // std#_enum_._enum_
645 [0x285]:         movg @std.io.fiber#fiber_state
646 [0x286]:         movn #1
648 [0x288]:         popobj
649 [0x289]:         new_class @std#_enum_
651 [0x28b]:         dup 
652 [0x28c]:         newstr @57 (FIB_SUSPENDED)
653 [0x28d]:         istore 17696
655 [0x28f]:         call @273 // std#_enum_._enum_
656 [0x290]:         movg @std.io.fiber#fiber_state
657 [0x291]:         movn #2
659 [0x293]:         popobj
660 [0x294]:         new_class @std#_enum_
662 [0x296]:         dup 
663 [0x297]:         newstr @58 (FIB_KILLED)
664 [0x298]:         istore 17697
666 [0x29a]:         call @273 // std#_enum_._enum_
667 [0x29b]:         movg @std.io.fiber#fiber_state
668 [0x29c]:         movn #3
670 [0x29e]:         popobj
671 [0x29f]:         new_class @std#_enum_
673 [0x2a1]:         dup 
674 [0x2a2]:         newstr @59 (FIB_INVALID)
675 [0x2a3]:         istore 17698
677 [0x2a5]:         call @273 // std#_enum_._enum_
678 [0x2a6]:         movg @std.io.fiber#fiber_state
679 [0x2a7]:         movn #4
681 [0x2a9]:         popobj
682 [0x2aa]:         new_class @std#_enum_
684 [0x2ac]:         dup 
685 [0x2ad]:         newstr @60 (EXCLUSIVE)
686 [0x2ae]:         istore 17696
688 [0x2b0]:         call @273 // std#_enum_._enum_
689 [0x2b1]:         movg @std.io#buffer_type
690 [0x2b2]:         movn #0
692 [0x2b4]:         popobj
693 [0x2b5]:         new_class @std#_enum_
695 [0x2b7]:         dup 
696 [0x2b8]:         newstr @61 (SINGLE)
697 [0x2b9]:         istore 17697
699 [0x2bb]:         call @273 // std#_enum_._enum_
700 [0x2bc]:         movg @std.io#buffer_type
701 [0x2bd]:         movn #1
703 [0x2bf]:         popobj
704 [0x2c0]:         new_class @std#_enum_
706 [0x2c2]:         dup 
707 [0x2c3]:         newstr @62 (UNLIMITED)
708 [0x2c4]:         istore 17698
710 [0x2c6]:         call @273 // std#_enum_._enum_
711 [0x2c7]:         movg @std.io#buffer_type
712 [0x2c8]:         movn #2
714 [0x2ca]:         popobj
715 [0x2cb]:         new_class @std#_enum_
717 [0x2cd]:         dup 
718 [0x2ce]:         newstr @63 (BUFFERED)
719 [0x2cf]:         istore 17699
721 [0x2d1]:         call @273 // std#_enum_._enum_
722 [0x2d2]:         movg @std.io#buffer_type
723 [0x2d3]:         movn #3
725 [0x2d5]:         popobj
726 [0x2d6]:         new_class @std#_enum_
728 [0x2d8]:         dup 
729 [0x2d9]:         newstr @64 (created)
730 [0x2da]:         istore 4294967295
732 [0x2dc]:         call @273 // std#_enum_._enum_
733 [0x2dd]:         movg @std.io.coroutines#job_state
734 [0x2de]:         movn #0
736 [0x2e0]:         popobj
737 [0x2e1]:         new_class @std#_enum_
739 [0x2e3]:         dup 
740 [0x2e4]:         newstr @65 (active)
741 [0x2e5]:         istore 0
743 [0x2e7]:         call @273 // std#_enum_._enum_
744 [0x2e8]:         movg @std.io.coroutines#job_state
745 [0x2e9]:         movn #1
747 [0x2eb]:         popobj
748 [0x2ec]:         new_class @std#_enum_
750 [0x2ee]:         dup 
751 [0x2ef]:         newstr @66 (completed)
752 [0x2f0]:         istore 1
754 [0x2f2]:         call @273 // std#_enum_._enum_
755 [0x2f3]:         movg @std.io.coroutines#job_state
756 [0x2f4]:         movn #2
758 [0x2f6]:         popobj
759 [0x2f7]:         new_class @std#_enum_
761 [0x2f9]:         dup 
762 [0x2fa]:         newstr @67 (cancelled)
763 [0x2fb]:         istore 2
765 [0x2fd]:         call @273 // std#_enum_._enum_
766 [0x2fe]:         movg @std.io.coroutines#job_state
767 [0x2ff]:         movn #3
769 [0x301]:         popobj
770 [0x302]: line: 17 - 770istore 1295
772 [0x304]:          movg @platform.kernel#platform
773 [0x305]:          movn #2
775 [0x307]:          loadval egx
776 [0x308]:          imov egx
777 [0x309]:          call @30 // platform.kernel#stack_state.static_init<stack_state>
778 [0x30a]:          call @33 // std#_object_.static_init<_object_>
779 [0x30b]:          call @48 // std#ulong.static_init<ulong>
780 [0x30c]:          call @53 // std#long.static_init<long>
781 [0x30d]:          call @60 // std#uint.static_init<uint>
782 [0x30e]:          call @64 // std#int.static_init<int>
783 [0x30f]:          call @86 // std#ushort.static_init<ushort>
784 [0x310]:          call @90 // std#short.static_init<short>
785 [0x311]:          call @94 // std#uchar.static_init<uchar>
786 [0x312]:          call @98 // std#char.static_init<char>
787 [0x313]:          call @104 // std#byte.static_init<byte>
788 [0x314]:          call @107 // std#bool.static_init<bool>
789 [0x315]:          call @114 // std#double.static_init<double>
790 [0x316]:          call @127 // std#string.static_init<string>
791 [0x317]:          call @177 // std#string_builder.static_init<string_builder>
792 [0x318]:          call @190 // std#throwable.static_init<throwable>
793 [0x319]:          call @197 // std#exception.static_init<exception>
794 [0x31a]:          call @201 // std#illegal_argument_exception.static_init<illegal_argument_exception>
795 [0x31b]:          call @205 // std#illegal_state_exception.static_init<illegal_state_exception>
796 [0x31c]:          call @209 // std#out_of_bounds_exception.static_init<out_of_bounds_exception>
797 [0x31d]:          call @213 // std#invalid_operation_exception.static_init<invalid_operation_exception>
798 [0x31e]:          call @217 // std#nullptr_exception.static_init<nullptr_exception>
799 [0x31f]:          call @221 // std#runtime_exception.static_init<runtime_exception>
800 [0x320]:          call @225 // std#stack_overflow_exception.static_init<stack_overflow_exception>
801 [0x321]:          call @229 // std#thread_stack_exception.static_init<thread_stack_exception>
802 [0x322]:          call @233 // std#class_cast_exception.static_init<class_cast_exception>
803 [0x323]:          call @237 // std#out_of_memory_exception.static_init<out_of_memory_exception>
804 [0x324]:          call @241 // std#incompatible_class_exception.static_init<incompatible_class_exception>
805 [0x325]:          call @245 // std#object_import_error.static_init<object_import_error>
806 [0x326]:          call @249 // std#unsatisfied_link_error.static_init<unsatisfied_link_error>
807 [0x327]:          call @253 // std#error.static_init<error>
808 [0x328]:          call @263 // std#time_request.static_init<time_request>
809 [0x329]:          call @266 // std#time_unit.static_init<time_unit>
810 [0x32a]:          call @269 // std#_enum_.static_init<_enum_>
811 [0x32b]:          call @281 // std#char_array.static_init<char_array>
812 [0x32c]:          call @297 // std#number<_uint64, std#ulong>.static_init<number<_uint64, std#ulong>>
813 [0x32d]:          call @304 // std#number<_int64, std#long>.static_init<number<_int64, std#long>>
814 [0x32e]:          call @328 // std#number<_uint32, std#uint>.static_init<number<_uint32, std#uint>>
815 [0x32f]:          call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
816 [0x330]:          call @916 // std#number<_uint16, std#ushort>.static_init<number<_uint16, std#ushort>>
817 [0x331]:          call @923 // std#number<_int16, std#short>.static_init<number<_int16, std#short>>
818 [0x332]:          call @933 // std#number<_uint8, std#uchar>.static_init<number<_uint8, std#uchar>>
819 [0x333]:          call @939 // std#number<_int8, std#char>.static_init<number<_int8, std#char>>
820 [0x334]:          call @948 // std#number<_int8, std#bool>.static_init<number<_int8, std#bool>>
821 [0x335]:          call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
822 [0x336]:          call @979 // std#synced_list<std.io.coroutines#job>.static_init<synced_list<std.io.coroutines#job>>
823 [0x337]:          call @991 // std#base_number<std#ulong>.static_init<base_number<std#ulong>>
824 [0x338]:          call @994 // std#base_number<std#long>.static_init<base_number<std#long>>
825 [0x339]:          call @997 // std#base_number<std#uint>.static_init<base_number<std#uint>>
826 [0x33a]:          call @1000 // std#base_number<std#int>.static_init<base_number<std#int>>
827 [0x33b]:          call @1003 // std#base_number<std#ushort>.static_init<base_number<std#ushort>>
828 [0x33c]:          call @1006 // std#list<std.io.coroutines#job>.static_init<list<std.io.coroutines#job>>
829 [0x33d]:          call @1015 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.static_init<list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>>
830 [0x33e]:          call @1025 // std#base_number<std#short>.static_init<base_number<std#short>>
831 [0x33f]:          call @1028 // std#list<std#int>.static_init<list<std#int>>
832 [0x340]:          call @1040 // std#list<std.io#channel<std#int>.filter<std#int>>.static_init<list<std.io#channel<std#int>.filter<std#int>>>
833 [0x341]:          call @1050 // std#base_number<std#uchar>.static_init<base_number<std#uchar>>
834 [0x342]:          call @1053 // std#base_number<std#char>.static_init<base_number<std#char>>
835 [0x343]:          call @1056 // std#base_number<std#bool>.static_init<base_number<std#bool>>
836 [0x344]:          call @1059 // std#base_number<std#double>.static_init<base_number<std#double>>
837 [0x345]:          call @1062 // std#list<std.io#thread>.static_init<list<std.io#thread>>
838 [0x346]:          call @1095 // std.io#thread.static_init<thread>
839 [0x347]:          call @1138 // std.io#thread_group.static_init<thread_group>
840 [0x348]:          call @1148 // std.io#thread_result.static_init<thread_result>
841 [0x349]:          call @1152 // std.io#thread_priority.static_init<thread_priority>
842 [0x34a]:          call @1155 // std.io#buffer_type.static_init<buffer_type>
843 [0x34b]:          call @1159 // std.io#channel<std.io.coroutines#job>.static_init<channel<std.io.coroutines#job>>
844 [0x34c]:          call @1171 // std.io#channel<std.io.coroutines#job>.channel_state.static_init<channel_state>
845 [0x34d]:          call @1174 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.static_init<filter<std.io.coroutines#job>>
846 [0x34e]:          call @1184 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.static_init<channel_data<std.io.coroutines#job>>
847 [0x34f]:          call @1187 // std.io#channel<std#int>.static_init<channel<std#int>>
848 [0x350]:          call @1197 // std.io#channel<std#int>.channel_state.static_init<channel_state>
849 [0x351]:          call @1200 // std.io#channel<std#int>.filter<std#int>.static_init<filter<std#int>>
850 [0x352]:          call @1211 // std.io#atomic<std#int>.static_init<atomic<std#int>>
851 [0x353]:          call @1224 // std.io.coroutines#job_master.static_init<job_master>
852 [0x354]:          call @1231 // std.io.coroutines#__srt_global.static_init<__srt_global>
853 [0x355]:          call @1246 // std.io.coroutines#job.static_init<job>
854 [0x356]:          call @1257 // std.io.coroutines#coroutine_builder.static_init<coroutine_builder>
855 [0x357]:          call @1268 // std.io.coroutines#job_state.static_init<job_state>
856 [0x358]:          call @1271 // std.io.fiber#__srt_global.static_init<__srt_global>
857 [0x359]:          call @1274 // std.io.fiber#fiber.static_init<fiber>
858 [0x35a]:          call @1290 // std.io.fiber#fiber_state.static_init<fiber_state>
859 [0x35b]:          call @1294 // main#__srt_global.static_init<__srt_global>
860 [0x35c]:          call @1301 // platform#build.static_init<build>
861 [0x35d]:          call @1302 // std.reflect#data_type.static_init<data_type>
862 [0x35e]:          call @1305 // std.reflect#property_type.static_init<property_type>
863 [0x35f]:          ret

setup_build_config(object[]): nil
address: 2
file: /usr/include/sharp/0.3.0/platform/kernel/platform.sharp
owner: platform.kernel#platform
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 20 - 0new_class @std#string
2 [0x2]:          dup 
3 [0x3]:          newstr @68 ()
4 [0x4]:          call @130 // std#string.string
5 [0x5]:          pushl 0
6 [0x6]:          ldc adx @ 4 (0)
7 [0x7]:          popobj2 
8 [0x8]:          chklen adx
9 [0x9]:          movnd adx
10 [0xa]:          vcast 0 -> []
11 [0xb]:          pushobj
12 [0xc]:          call @143 // std#string.operator+
13 [0xd]:          movg @platform#build
14 [0xe]:          movn #1
16 [0x10]:          popobj
17 [0x11]: line: 21 - 17new_class @std#string
19 [0x13]:          dup 
20 [0x14]:          newstr @68 ()
21 [0x15]:          call @130 // std#string.string
22 [0x16]:          pushl 0
23 [0x17]:          ldc adx @ 5 (1)
24 [0x18]:          popobj2 
25 [0x19]:          chklen adx
26 [0x1a]:          movnd adx
27 [0x1b]:          vcast 0 -> []
28 [0x1c]:          pushobj
29 [0x1d]:          call @143 // std#string.operator+
30 [0x1e]:          movg @platform#build
31 [0x1f]:          movn #3
33 [0x21]:          popobj
34 [0x22]: line: 22 - 34new_class @std#string
36 [0x24]:          dup 
37 [0x25]:          newstr @68 ()
38 [0x26]:          call @130 // std#string.string
39 [0x27]:          pushl 0
40 [0x28]:          ldc adx @ 6 (2)
41 [0x29]:          popobj2 
42 [0x2a]:          chklen adx
43 [0x2b]:          movnd adx
44 [0x2c]:          vcast 0 -> []
45 [0x2d]:          pushobj
46 [0x2e]:          call @143 // std#string.operator+
47 [0x2f]:          movg @platform#build
48 [0x30]:          movn #2
50 [0x32]:          popobj
51 [0x33]: line: 23 - 51new_class @std#string
53 [0x35]:          dup 
54 [0x36]:          newstr @68 ()
55 [0x37]:          call @130 // std#string.string
56 [0x38]:          pushl 0
57 [0x39]:          ldc adx @ 7 (3)
58 [0x3a]:          popobj2 
59 [0x3b]:          chklen adx
60 [0x3c]:          movnd adx
61 [0x3d]:          vcast 0 -> []
62 [0x3e]:          pushobj
63 [0x3f]:          call @143 // std#string.operator+
64 [0x40]:          movg @platform#build
65 [0x41]:          movn #0
67 [0x43]:          popobj
68 [0x44]:          ret

srt_init(object[]): std#int
address: 3
file: /usr/include/sharp/0.3.0/platform/kernel/platform.sharp
owner: platform.kernel#platform
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 27 - 0pushl 0
1 [0x1]:          call @2 // platform.kernel#platform.setup_build_config
2 [0x2]: line: 28 - 2call @1 // platform.kernel#platform.static_init
3 [0x3]: line: 29 - 3pushl 0
4 [0x4]:          call @2 // platform.kernel#platform.setup_build_config
5 [0x5]: line: 30 - 5call @0 // platform.kernel#platform.tls_init
6 [0x6]: line: 31 - 6call @1232 // std.io.coroutines#__srt_global.start_scheduler
7 [0x7]: line: 33 - 7pushl 0
8 [0x8]:          ldc adx @ 8 (4)
9 [0x9]:          popobj2 
10 [0xa]:          chklen adx
11 [0xb]:          movnd adx
12 [0xc]:          cast 91 // std.io#thread
13 [0xd]:          pushobj
14 [0xe]:          popl 1
15 [0xf]: line: 34 - 15pushl 1
16 [0x10]:          call @23 // platform.kernel#vm.set_thread
17 [0x11]: line: 36 - 17movg @std.io#thread_priority
18 [0x12]:          movn #2
20 [0x14]:          pushobj
21 [0x15]:          popl 2
22 [0x16]: line: 37 - 22movg @std.io#thread_group
23 [0x17]:          movn #0
25 [0x19]:          pushobj
26 [0x1a]:          pushl 1
27 [0x1b]:          call @1142 // std.io#thread_group.add
28 [0x1c]: line: 39 - 28call @43 // std#__srt_global.utc_mills
29 [0x1d]:          istore 4
31 [0x1f]:          call @321 // std#number<_int64, std#long>.operator>>
32 [0x20]:          popobj2 
33 [0x21]:          pushobj
34 [0x22]:          call @325 // std#number<_int64, std#long>.to_int
35 [0x23]:          call @47 // std#__srt_global.set_seed
36 [0x24]: line: 41 - 36movg @std.io#thread_group
37 [0x25]:          movn #0
39 [0x27]:          pushobj
40 [0x28]:          movl 1
41 [0x29]:          movn #7
43 [0x2b]:          popobj
44 [0x2c]:          movl 2
45 [0x2d]:          pushobj
46 [0x2e]:          movl 1
47 [0x2f]:          movn #3
49 [0x31]:          popobj
50 [0x32]: line: 59 - 50istore 5
52 [0x34]:          ipopl 3
53 [0x35]: line: 60 - 53ipushl #3
54 [0x36]:          movl 0
55 [0x37]:          sizeof ebx
56 [0x38]:          movr cx, ebx
57 [0x39]:          loadval ecx
58 [0x3a]:          sub cx, ecx -> bmr
59 [0x3b]:          movr adx, bmr
60 [0x3c]:          new_classarray adx @ std#string
62 [0x3e]:          popl 4
63 [0x3f]: line: 61 - 63istore 0
65 [0x41]:          ipopl 5
66 [0x42]: line: 63 - 66ipushl #3
67 [0x43]:          ipopl 6
68 [0x44]:          movl 0
69 [0x45]:          sizeof ebx
70 [0x46]:          rstore ebx
71 [0x47]:          loadl cx, fp+6
72 [0x48]:          loadval ecx
73 [0x49]:          lt cx, ecx
74 [0x4a]:          jne 101
75 [0x4b]: line: 64 - 75new_class @std#string
77 [0x4d]:          dup 
78 [0x4e]:          pushl 0
79 [0x4f]:          loadl adx, fp+6
80 [0x50]:          popobj2 
81 [0x51]:          chklen adx
82 [0x52]:          movnd adx
83 [0x53]:          vcast 0 -> []
84 [0x54]:          pushobj
85 [0x55]:          call @130 // std#string.string
86 [0x56]:          pushl 4
87 [0x57]:          ipushl #5
88 [0x58]:          iaddl 1, fp@5
90 [0x5a]:          loadval ebx
91 [0x5b]:          movr adx, ebx
92 [0x5c]:          popobj2 
93 [0x5d]:          chklen adx
94 [0x5e]:          movnd adx
95 [0x5f]:          popobj
96 [0x60]:          ipushl #6
97 [0x61]:          iaddl 1, fp@6
99 [0x63]:          loadval ebx
100 [0x64]:          jmp @68
101 [0x65]: line: 67 - 101new_class @std#int
103 [0x67]:          dup 
104 [0x68]:          istore 0
106 [0x6a]:          call @79 // std#int.init<int>
107 [0x6b]:          popl 7
108 [0x6c]: line: 68 - 108istore 0
110 [0x6e]:          movg @platform.kernel#platform
111 [0x6f]:          movn #0
113 [0x71]:          iload cx
114 [0x72]:          loadval ecx
115 [0x73]:          tne cx, ecx
116 [0x74]:          movr cmt, bmr
117 [0x75]:          jne 127
118 [0x76]: line: 69 - 118movg @platform.kernel#platform
119 [0x77]:          movn #0
121 [0x79]:          iload cx
122 [0x7a]:          pushl 4
123 [0x7b]:          movr egx, cx
124 [0x7c]:          calld egx
125 [0x7d]:          popl 7
126 [0x7e]:          jmp @179
127 [0x7f]:          istore 0
129 [0x81]:          movg @platform.kernel#platform
130 [0x82]:          movn #1
132 [0x84]:          iload cx
133 [0x85]:          loadval ecx
134 [0x86]:          tne cx, ecx
135 [0x87]:          movr cmt, bmr
136 [0x88]:          jne 145
137 [0x89]: line: 70 - 137movg @platform.kernel#platform
138 [0x8a]:          movn #1
140 [0x8c]:          iload cx
141 [0x8d]:          pushl 4
142 [0x8e]:          movr egx, cx
143 [0x8f]:          calld egx
144 [0x90]:          jmp @179
145 [0x91]:          istore 0
147 [0x93]:          movg @platform.kernel#platform
148 [0x94]:          movn #2
150 [0x96]:          iload cx
151 [0x97]:          loadval ecx
152 [0x98]:          tne cx, ecx
153 [0x99]:          movr cmt, bmr
154 [0x9a]:          jne 162
155 [0x9b]: line: 71 - 155movg @platform.kernel#platform
156 [0x9c]:          movn #2
158 [0x9e]:          iload cx
159 [0x9f]:          movr egx, cx
160 [0xa0]:          calld egx
161 [0xa1]:          jmp @179
162 [0xa2]:          istore 0
164 [0xa4]:          movg @platform.kernel#platform
165 [0xa5]:          movn #3
167 [0xa7]:          iload cx
168 [0xa8]:          loadval ecx
169 [0xa9]:          tne cx, ecx
170 [0xaa]:          movr cmt, bmr
171 [0xab]:          jne 179
172 [0xac]: line: 72 - 172movg @platform.kernel#platform
173 [0xad]:          movn #3
175 [0xaf]:          iload cx
176 [0xb0]:          movr egx, cx
177 [0xb1]:          calld egx
178 [0xb2]:          popl 7
179 [0xb3]: line: 75 - 179movl 7
180 [0xb4]:          returnobj
181 [0xb5]:          ret

get_frame_info(): platform.kernel#stack_state?
address: 4
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 0
fpOffset: -1
spOffset: -1
stackSize: 0
code:

0 [0x0]: line: 65 - 0int 0x35
1 [0x1]:          popobj2 
2 [0x2]:          returnobj
3 [0x3]:          ret
4 [0x4]: line: 71 - 4pushnull 
5 [0x5]:          popobj2 
6 [0x6]:          returnobj
7 [0x7]:          ret

get_stack_trace(platform.kernel#stack_state): std#string?
address: 5
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 75 - 0pushl 0
1 [0x1]:          int 0x36
2 [0x2]:          popobj2 
3 [0x3]:          returnobj
4 [0x4]:          ret
5 [0x5]: line: 82 - 5pushnull 
6 [0x6]:          popobj2 
7 [0x7]:          returnobj
8 [0x8]:          ret

thread_create(var): std#int
address: 6
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 86 - 0istorel 0, fp+1
2 [0x2]: line: 87 - 2movi #1094, adx
4 [0x4]:          loadl ebx, fp+0
5 [0x5]:          int 0x10
6 [0x6]:          smovr_2 ebx, fp+1
7 [0x7]: line: 94 - 7new_class @std#int
9 [0x9]:          dup 
10 [0xa]:          ipushl #1
11 [0xb]:          call @67 // std#int.int
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

start_fiber(std.io.fiber#fiber, std.io#thread, object[]?, *(object[]?)(var)): std#int
address: 7
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 3
fpOffset: 3
spOffset: 3
stackSize: 7
code:

0 [0x0]: line: 98 - 0istorel 0, fp+4
2 [0x2]: line: 99 - 2movl 0
3 [0x3]:          movn #0
5 [0x5]:          movn #0
7 [0x7]:          pushobj
8 [0x8]:          popl 5
9 [0x9]: line: 100 - 9istore 4294967295
11 [0xb]:           ipopl 6
12 [0xc]: line: 102 - 12movl 1
13 [0xd]:           checknull
14 [0xe]:           movr ebx, cmt
15 [0xf]:           not ebx, ebx
16 [0x10]:           movr cmt, ebx
17 [0x11]:           jne 26
18 [0x12]: line: 103 - 18pushl 1
19 [0x13]:           call @1124 // std.io#thread.get_native_handle
20 [0x14]:           popobj2 
21 [0x15]:           movn #0
23 [0x17]:           iload egx
24 [0x18]:           rstore egx
25 [0x19]:           ipopl 6
26 [0x1a]: line: 105 - 26pushl 2
27 [0x1b]:           pushl 0
28 [0x1c]:           ipushl #6
29 [0x1d]:           ipushl #3
30 [0x1e]:           pushl 5
31 [0x1f]:           int 0x45
32 [0x20]:           smovr_2 ebx, fp+4
33 [0x21]: line: 115 - 33new_class @std#int
35 [0x23]:           dup 
36 [0x24]:           ipushl #4
37 [0x25]:           call @67 // std#int.int
38 [0x26]:           popobj2 
39 [0x27]:           returnobj
40 [0x28]:           ret

suspend_fiber(std.io.fiber#fiber): std#int
address: 8
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 119 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           iload egx
4 [0x4]:           rstore egx
5 [0x5]:           ipopl 1
6 [0x6]: line: 120 - 6istorel 0, fp+2
8 [0x8]: line: 122 - 8ipushl #1
9 [0x9]:           int 0x46
10 [0xa]:           smovr_2 ebx, fp+2
11 [0xb]: line: 128 - 11new_class @std#int
13 [0xd]:           dup 
14 [0xe]:           ipushl #2
15 [0xf]:           call @67 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

unsuspend_fiber(std.io.fiber#fiber): std#int
address: 9
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 132 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           iload egx
4 [0x4]:           rstore egx
5 [0x5]:           ipopl 1
6 [0x6]: line: 133 - 6istorel 0, fp+2
8 [0x8]: line: 135 - 8ipushl #1
9 [0x9]:           int 0x47
10 [0xa]:           smovr_2 ebx, fp+2
11 [0xb]: line: 141 - 11new_class @std#int
13 [0xd]:           dup 
14 [0xe]:           ipushl #2
15 [0xf]:           call @67 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

kill_fiber(std.io.fiber#fiber): std#int
address: 10
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 145 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           iload egx
4 [0x4]:           rstore egx
5 [0x5]:           ipopl 1
6 [0x6]: line: 146 - 6istorel 0, fp+2
8 [0x8]: line: 148 - 8ipushl #1
9 [0x9]:           int 0x48
10 [0xa]:           smovr_2 ebx, fp+2
11 [0xb]: line: 154 - 11new_class @std#int
13 [0xd]:           dup 
14 [0xe]:           ipushl #2
15 [0xf]:           call @67 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

bind_fiber(std.io.fiber#fiber, std.io#thread?): std#int
address: 11
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 3
fpOffset: 1
spOffset: 1
stackSize: 5
code:

0 [0x0]: line: 158 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           iload egx
4 [0x4]:           rstore egx
5 [0x5]:           ipopl 2
6 [0x6]: line: 159 - 6new_class @std#int
8 [0x8]:           dup 
9 [0x9]:           istore 4294967295
11 [0xb]:           call @79 // std#int.init<int>
12 [0xc]:           popl 3
13 [0xd]: line: 161 - 13movl 1
14 [0xe]:           checknull
15 [0xf]:           movr ebx, cmt
16 [0x10]:           not ebx, ebx
17 [0x11]:           movr cmt, ebx
18 [0x12]:           jne 22
19 [0x13]: line: 162 - 19pushl 1
20 [0x14]:           call @1124 // std.io#thread.get_native_handle
21 [0x15]:           popl 3
22 [0x16]: line: 163 - 22istorel 0, fp+4
24 [0x18]: line: 165 - 24ipushl #3
25 [0x19]:           ipushl #2
26 [0x1a]:           int 0x49
27 [0x1b]:           smovr_2 ebx, fp+4
28 [0x1c]: line: 172 - 28new_class @std#int
30 [0x1e]:           dup 
31 [0x1f]:           ipushl #4
32 [0x20]:           call @67 // std#int.int
33 [0x21]:           popobj2 
34 [0x22]:           returnobj
35 [0x23]:           ret

get_bound_fibers(std.io#thread?): std#int
address: 12
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 176 - 0istorel 0, fp+1
2 [0x2]: line: 177 - 2istorel 0, fp+2
4 [0x4]: line: 179 - 4movl 0
5 [0x5]:           checknull
6 [0x6]:           movr ebx, cmt
7 [0x7]:           not ebx, ebx
8 [0x8]:           movr cmt, ebx
9 [0x9]:           jne 18
10 [0xa]: line: 180 - 10pushl 0
11 [0xb]:           call @1124 // std.io#thread.get_native_handle
12 [0xc]:           popobj2 
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           ipopl 1
18 [0x12]: line: 182 - 18ipushl #1
19 [0x13]:           int 0x4a
20 [0x14]:           smovr_2 ebx, fp+2
21 [0x15]: line: 188 - 21new_class @std#int
23 [0x17]:           dup 
24 [0x18]:           ipushl #2
25 [0x19]:           call @67 // std#int.int
26 [0x1a]:           popobj2 
27 [0x1b]:           returnobj
28 [0x1c]:           ret

get_fiber_state(std.io.fiber#fiber): std#int
address: 13
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 192 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           iload egx
4 [0x4]:           rstore egx
5 [0x5]:           ipopl 1
6 [0x6]: line: 193 - 6istorel 0, fp+2
8 [0x8]: line: 195 - 8ipushl #1
9 [0x9]:           int 0x4b
10 [0xa]:           smovr_2 ebx, fp+2
11 [0xb]: line: 201 - 11new_class @std#int
13 [0xd]:           dup 
14 [0xe]:           ipushl #2
15 [0xf]:           call @67 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

current_fiber(): std.io.fiber#fiber
address: 14
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 1
fpOffset: -1
spOffset: -1
stackSize: 1
code:

0 [0x0]: line: 205 - 0pushnull 
1 [0x1]:           popl 0
2 [0x2]: line: 207 - 2int 0x4c
3 [0x3]:           movl 0
4 [0x4]:           popobj
5 [0x5]: line: 213 - 5movl 0
6 [0x6]:           returnobj
7 [0x7]:           ret

suspend(std.io#thread): std.io#thread_result
address: 15
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 217 - 0pushl 0
1 [0x1]:           call @1124 // std.io#thread.get_native_handle
2 [0x2]:           popl 1
3 [0x3]: line: 218 - 3istorel 0, fp+2
5 [0x5]: line: 220 - 5loadl adx, fp+1
6 [0x6]:           int 0x12
7 [0x7]:           smovr_2 cmt, fp+2
8 [0x8]: line: 226 - 8new_class @std#int
10 [0xa]:           dup 
11 [0xb]:           ipushl #2
12 [0xc]:           call @67 // std#int.int
13 [0xd]:           call @1151 // std.io#thread_result.at
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

unsuspend(std.io#thread, var): std.io#thread_result
address: 16
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 230 - 0pushl 0
1 [0x1]:           call @1124 // std.io#thread.get_native_handle
2 [0x2]:           popl 2
3 [0x3]: line: 231 - 3istorel 0, fp+3
5 [0x5]: line: 233 - 5loadl adx, fp+2
6 [0x6]:           loadl ebx, fp+1
7 [0x7]:           int 0x13
8 [0x8]:           smovr_2 cmt, fp+3
9 [0x9]: line: 240 - 9new_class @std#int
11 [0xb]:           dup 
12 [0xc]:           ipushl #3
13 [0xd]:           call @67 // std#int.int
14 [0xe]:           call @1151 // std.io#thread_result.at
15 [0xf]:           popobj2 
16 [0x10]:           returnobj
17 [0x11]:           ret

thread_join(std.io#thread): std.io#thread_result
address: 17
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 255 - 0pushl 0
1 [0x1]:           call @1124 // std.io#thread.get_native_handle
2 [0x2]:           popl 1
3 [0x3]: line: 256 - 3istorel 0, fp+2
5 [0x5]: line: 258 - 5loadl adx, fp+1
6 [0x6]:           int 0xd
7 [0x7]:           smovr_2 cmt, fp+2
8 [0x8]: line: 264 - 8new_class @std#int
10 [0xa]:           dup 
11 [0xb]:           ipushl #2
12 [0xc]:           call @67 // std#int.int
13 [0xd]:           call @1151 // std.io#thread_result.at
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

kill(std.io#thread): std.io#thread_result
address: 18
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 268 - 0pushl 0
1 [0x1]:           call @1124 // std.io#thread.get_native_handle
2 [0x2]:           popl 1
3 [0x3]: line: 269 - 3istorel 0, fp+2
5 [0x5]: line: 271 - 5loadl adx, fp+1
6 [0x6]:           int 0xe
7 [0x7]:           smovr_2 cmt, fp+2
8 [0x8]: line: 277 - 8pushl 0
9 [0x9]:           new_class @std#int
11 [0xb]:           dup 
12 [0xc]:           istore 1
14 [0xe]:           call @72 // std#int.int
15 [0xf]:           call @1113 // std.io#thread.set_finished
16 [0x10]: line: 278 - 16new_class @std#int
18 [0x12]:           dup 
19 [0x13]:           ipushl #2
20 [0x14]:           call @67 // std#int.int
21 [0x15]:           call @1151 // std.io#thread_result.at
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

current_thread(): std.io#thread
address: 19
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 1
fpOffset: -1
spOffset: -1
stackSize: 1
code:

0 [0x0]: line: 282 - 0int 0x15
1 [0x1]:           popobj2 
2 [0x2]:           returnobj
3 [0x3]:           ret
4 [0x4]: line: 289 - 4pushnull 
5 [0x5]:           popl 0
6 [0x6]: line: 290 - 6movl 0
7 [0x7]:           returnobj
8 [0x8]:           ret

thread_yield(): nil
address: 20
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]: line: 294 - 0int 0x1c
1 [0x1]:           ret

thread_start(std.io#thread, object[]?): std.io#thread_result
address: 21
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 3
fpOffset: 1
spOffset: 1
stackSize: 5
code:

0 [0x0]: line: 300 - 0pushl 0
1 [0x1]:           call @1124 // std.io#thread.get_native_handle
2 [0x2]:           popobj2 
3 [0x3]:           movn #0
5 [0x5]:           iload egx
6 [0x6]:           rstore egx
7 [0x7]:           ipopl 2
8 [0x8]: line: 301 - 8pushl 0
9 [0x9]:           call @1125 // std.io#thread.get_stack_size
10 [0xa]:           ipopl 3
11 [0xb]: line: 302 - 11istorel 0, fp+4
13 [0xd]: line: 304 - 13loadl ebx, fp+3
14 [0xe]:           loadl adx, fp+2
15 [0xf]:           pushl 1
16 [0x10]:           pushl 0
17 [0x11]:           int 0xc
18 [0x12]:           smovr_2 cmt, fp+4
19 [0x13]: line: 313 - 19istore 0
21 [0x15]:           loadl cx, fp+4
22 [0x16]:           loadval ecx
23 [0x17]:           test cx, ecx
24 [0x18]:           movr cmt, bmr
25 [0x19]:           jne 55
26 [0x1a]: line: 314 - 26pushl 0
27 [0x1b]:           call @1129 // std.io#thread.is_started
28 [0x1c]:           call @957 // std#number<_int8, std#bool>.operator!
29 [0x1d]:           popobj2 
30 [0x1e]:           movn #0
32 [0x20]:           iload cmt
33 [0x21]:           jne 55
34 [0x22]: line: 315 - 34pushl 0
35 [0x23]:           call @1127 // std.io#thread.is_exited
36 [0x24]:           popobj2 
37 [0x25]:           movn #0
39 [0x27]:           iload cmt
40 [0x28]:           jne 47
41 [0x29]: line: 316 - 41movg @std.io#thread_result
42 [0x2a]:           movn #5
44 [0x2c]:           returnobj
45 [0x2d]:           ret
46 [0x2e]:           jmp @54
47 [0x2f]: line: 318 - 47new_class @std#long
49 [0x31]:           dup 
50 [0x32]:           istore 0
52 [0x34]:           call @56 // std#long.long
53 [0x35]:           call @28 // platform.kernel#vm.delay
54 [0x36]:           jmp @26
55 [0x37]: line: 323 - 55new_class @std#int
57 [0x39]:           dup 
58 [0x3a]:           ipushl #4
59 [0x3b]:           call @67 // std#int.int
60 [0x3c]:           call @1151 // std.io#thread_result.at
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret

set_thread_priority(std.io#thread, var): std.io#thread_result
address: 22
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 327 - 0pushl 0
1 [0x1]:           call @1124 // std.io#thread.get_native_handle
2 [0x2]:           popl 2
3 [0x3]: line: 328 - 3istorel 0, fp+3
5 [0x5]: line: 330 - 5loadl adx, fp+2
6 [0x6]:           loadl egx, fp+1
7 [0x7]:           int 0x11
8 [0x8]:           smovr_2 cmt, fp+3
9 [0x9]: line: 337 - 9new_class @std#int
11 [0xb]:           dup 
12 [0xc]:           ipushl #3
13 [0xd]:           call @67 // std#int.int
14 [0xe]:           call @1151 // std.io#thread_result.at
15 [0xf]:           popobj2 
16 [0x10]:           returnobj
17 [0x11]:           ret

set_thread(std.io#thread): nil
address: 23
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 341 - 0pushl 0
1 [0x1]:           int 0x17
2 [0x2]:           ret

thread_args(): object[]
address: 24
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 1
fpOffset: -1
spOffset: -1
stackSize: 1
code:

0 [0x0]: line: 348 - 0int 0x16
1 [0x1]:           popobj2 
2 [0x2]:           returnobj
3 [0x3]:           ret
4 [0x4]: line: 355 - 4pushnull 
5 [0x5]:           popl 0
6 [0x6]: line: 356 - 6movl 0
7 [0x7]:           returnobj
8 [0x8]:           ret

hardware_concurrency(): std#int
address: 25
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 1
fpOffset: -1
spOffset: -1
stackSize: 1
code:

0 [0x0]: line: 360 - 0istorel 0, fp+0
2 [0x2]: line: 362 - 2int 0x38
3 [0x3]:           smovr_2 ebx, fp+0
4 [0x4]: line: 367 - 4new_class @std#int
6 [0x6]:           dup 
7 [0x7]:           ipushl #0
8 [0x8]:           call @67 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

random_int(var, var): std#int
address: 26
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 382 - 0istorel 0, fp+2
2 [0x2]: line: 384 - 2loadl ebx, fp+0
3 [0x3]:           loadl egx, fp+1
4 [0x4]:           int 0x3f
5 [0x5]:           smovr_2 ebx, fp+2
6 [0x6]: line: 391 - 6new_class @std#int
8 [0x8]:           dup 
9 [0x9]:           ipushl #2
10 [0xa]:           call @67 // std#int.int
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

time_in_nanoseconds(): std#long
address: 27
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 1
fpOffset: -1
spOffset: -1
stackSize: 1
code:

0 [0x0]: line: 419 - 0istorel 0, fp+0
2 [0x2]: line: 421 - 2int 0xb
3 [0x3]:           smovr_2 bmr, fp+0
4 [0x4]: line: 427 - 4new_class @std#long
6 [0x6]:           dup 
7 [0x7]:           ipushl #0
8 [0x8]:           call @55 // std#long.long
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

delay(std#long): nil
address: 28
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 1
fpOffset: 0
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 445 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           iload egx
4 [0x4]:           rstore egx
5 [0x5]:           loadval egx
6 [0x6]:           mov64 egx, egx
7 [0x7]:           smovr_2 egx, fp+1
8 [0x8]: line: 447 - 8loadl ebx, fp+1
9 [0x9]:           int 0x44
10 [0xa]:           ret

random_seed(std#int): nil
address: 29
file: /usr/include/sharp/0.3.0/platform/kernel/vm.sharp
owner: platform.kernel#vm
frameStackOffset: 1
fpOffset: 0
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 454 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           iload egx
4 [0x4]:           rstore egx
5 [0x5]:           loadval egx
6 [0x6]:           mov32 egx, egx
7 [0x7]:           smovr_2 egx, fp+1
8 [0x8]: line: 455 - 8loadl adx, fp+1
9 [0x9]:           int 0x42
10 [0xa]:           ret

static_init<stack_state>(): nil
address: 30
file: /usr/include/sharp/0.3.0/platform/kernel/stack_state.sharp
owner: platform.kernel#stack_state
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @platform.kernel#stack_state
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @platform.kernel#stack_state
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<stack_state>(): nil
address: 31
file: /usr/include/sharp/0.3.0/platform/kernel/stack_state.sharp
owner: platform.kernel#stack_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

stack_state(): nil
address: 32
file: /usr/include/sharp/0.3.0/platform/kernel/stack_state.sharp
owner: platform.kernel#stack_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @platform.kernel#stack_state
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @30 // platform.kernel#stack_state.static_init<stack_state>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @31 // platform.kernel#stack_state.init<stack_state>
12 [0xc]:         ret

static_init<_object_>(): nil
address: 33
file: /usr/include/sharp/0.3.0/std/object.sharp
owner: std#_object_
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#_object_
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#_object_
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<_object_>(): nil
address: 34
file: /usr/include/sharp/0.3.0/std/object.sharp
owner: std#_object_
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

to_string(): std#string?
address: 35
file: /usr/include/sharp/0.3.0/std/object.sharp
owner: std#_object_
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 18 - 0pushnull 
1 [0x1]:          popobj2 
2 [0x2]:          returnobj
3 [0x3]:          ret

hash(): std#int
address: 36
file: /usr/include/sharp/0.3.0/std/object.sharp
owner: std#_object_
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 32 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          istore 1
5 [0x5]:          call @74 // std#int.int
6 [0x6]:          popobj2 
7 [0x7]:          returnobj
8 [0x8]:          ret

_object_(): nil
address: 37
file: /usr/include/sharp/0.3.0/std/object.sharp
owner: std#_object_
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movg @std#_object_
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         je 6
5 [0x5]:         call @33 // std#_object_.static_init<_object_>
6 [0x6]:         movl 0
7 [0x7]:         pushobj
8 [0x8]:         call @34 // std#_object_.init<_object_>
9 [0x9]:         ret

strtod(std#string): std#double
address: 38
file: /usr/include/sharp/0.3.0/std/console.sharp
owner: std#__srt_global
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 8 - 0movl 0
1 [0x1]:         movn #0
3 [0x3]:         pushobj
4 [0x4]:         popl 1
5 [0x5]: line: 9 - 5istorel 0, fp+2
7 [0x7]: line: 11 - 7pushl 1
8 [0x8]:          int 0x43
9 [0x9]:          smovr_2 ebx, fp+2
10 [0xa]: line: 17 - 10new_class @std#double
12 [0xc]:          dup 
13 [0xd]:          ipushl #2
14 [0xe]:          call @116 // std#double.double
15 [0xf]:          popobj2 
16 [0x10]:          returnobj
17 [0x11]:          ret

snprintf(std#int, std#double, std#int): std#string
address: 39
file: /usr/include/sharp/0.3.0/std/console.sharp
owner: std#__srt_global
frameStackOffset: 4
fpOffset: 2
spOffset: 2
stackSize: 7
code:

0 [0x0]: line: 35 - 0pushnull 
1 [0x1]:          popl 3
2 [0x2]: line: 36 - 2movl 0
3 [0x3]:          movn #0
5 [0x5]:          iload egx
6 [0x6]:          rstore egx
7 [0x7]:          loadval egx
8 [0x8]:          mov32 egx, egx
9 [0x9]:          smovr_2 egx, fp+4
10 [0xa]: line: 37 - 10movl 1
11 [0xb]:          movn #0
13 [0xd]:          iload egx
14 [0xe]:          rstore egx
15 [0xf]:          ipopl 5
16 [0x10]: line: 38 - 16movl 2
17 [0x11]:          movn #0
19 [0x13]:          iload egx
20 [0x14]:          rstore egx
21 [0x15]:          loadval egx
22 [0x16]:          mov32 egx, egx
23 [0x17]:          smovr_2 egx, fp+6
24 [0x18]: line: 39 - 24loadl egx, fp+4
25 [0x19]:          loadl ebx, fp+5
26 [0x1a]:          loadl ecx, fp+6
27 [0x1b]:          int 0x1
28 [0x1c]:          movl 3
29 [0x1d]:          popobj
30 [0x1e]: line: 47 - 30new_class @std#string
32 [0x20]:          dup 
33 [0x21]:          pushl 3
34 [0x22]:          call @130 // std#string.string
35 [0x23]:          popobj2 
36 [0x24]:          returnobj
37 [0x25]:          ret

println(_int8[]): nil
address: 40
file: /usr/include/sharp/0.3.0/std/console.sharp
owner: std#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 76 - 0new_class @std#char_array
2 [0x2]:          dup 
3 [0x3]:          pushl 0
4 [0x4]:          call @284 // std#char_array.char_array
5 [0x5]:          call @44 // std#__srt_global.print_chars
6 [0x6]: line: 77 - 6new_class @std#char
8 [0x8]:          dup 
9 [0x9]:          istore 10
11 [0xb]:          call @100 // std#char.char
12 [0xc]:          call @45 // std#__srt_global.print_char
13 [0xd]:          ret

println(std#string): nil
address: 41
file: /usr/include/sharp/0.3.0/std/console.sharp
owner: std#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 166 - 0new_class @std#char_array
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           pushobj
7 [0x7]:           call @284 // std#char_array.char_array
8 [0x8]:           call @44 // std#__srt_global.print_chars
9 [0x9]: line: 167 - 9new_class @std#char
11 [0xb]:           dup 
12 [0xc]:           istore 10
14 [0xe]:           call @100 // std#char.char
15 [0xf]:           call @45 // std#__srt_global.print_char
16 [0x10]:           ret

flush(): nil
address: 42
file: /usr/include/sharp/0.3.0/std/console.sharp
owner: std#__srt_global
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]: line: 184 - 0int 0x34
1 [0x1]:           ret

utc_mills(): std#long
address: 43
file: /usr/include/sharp/0.3.0/std/console.sharp
owner: std#__srt_global
frameStackOffset: 0
fpOffset: -1
spOffset: -1
stackSize: 0
code:

0 [0x0]: line: 188 - 0call @260 // std#time.mills_time
1 [0x1]:           popobj2 
2 [0x2]:           returnobj
3 [0x3]:           ret

print_chars(std#char_array): nil
address: 44
file: /usr/include/sharp/0.3.0/std/console.sharp
owner: std#__srt_global
frameStackOffset: 3
fpOffset: 0
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 227 - 0istore 4294967295
2 [0x2]:           ipopl 2
3 [0x3]:           pushl 0
4 [0x4]:           call @291 // std#char_array.get_elements
5 [0x5]:           popl 3
6 [0x6]:           iaddl 1, fp@2
8 [0x8]:           loadl cx, fp+2
9 [0x9]:           movl 3
10 [0xa]:           sizeof ebx
11 [0xb]:           movr ecx, ebx
12 [0xc]:           lt cx, ecx
13 [0xd]:           jne 26
14 [0xe]:           pushl 3
15 [0xf]:           loadl adx, fp+2
16 [0x10]:           popobj2 
17 [0x11]:           chklen adx
18 [0x12]:           iaload ebx, adx
19 [0x13]:           rstore ebx
20 [0x14]:           loadval egx
21 [0x15]:           mov8 egx, egx
22 [0x16]:           smovr_2 egx, fp+1
23 [0x17]: line: 228 - 23loadl ebx, fp+1
24 [0x18]:           _putc ebx
25 [0x19]:           jmp @6
26 [0x1a]: line: 234 - 26call @42 // std#__srt_global.flush
27 [0x1b]:           ret

print_char(std#char): nil
address: 45
file: /usr/include/sharp/0.3.0/std/console.sharp
owner: std#__srt_global
frameStackOffset: 1
fpOffset: 0
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 249 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           iload egx
4 [0x4]:           rstore egx
5 [0x5]:           loadval egx
6 [0x6]:           mov8 egx, egx
7 [0x7]:           smovr_2 egx, fp+1
8 [0x8]: line: 251 - 8loadl ebx, fp+1
9 [0x9]:           _putc ebx
10 [0xa]: line: 256 - 10call @42 // std#__srt_global.flush
11 [0xb]:           ret

rand_int(): std#int
address: 46
file: /usr/include/sharp/0.3.0/std/random.sharp
owner: std#__srt_global
frameStackOffset: 0
fpOffset: -1
spOffset: -1
stackSize: 0
code:

0 [0x0]: line: 20 - 0istore 0
2 [0x2]:          istore 1000000000
4 [0x4]:          call @26 // platform.kernel#vm.random_int
5 [0x5]:          popobj2 
6 [0x6]:          returnobj
7 [0x7]:          ret

set_seed(std#int): nil
address: 47
file: /usr/include/sharp/0.3.0/std/random.sharp
owner: std#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 28 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @72 // std#int.int
9 [0x9]:          call @29 // platform.kernel#vm.random_seed
10 [0xa]:          ret

static_init<ulong>(): nil
address: 48
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#ulong
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#ulong
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#ulong
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<ulong>(): nil
address: 49
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#ulong
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

ulong(_int32): nil
address: 50
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#ulong
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @300 // std#number<_uint64, std#ulong>.number
4 [0x4]:         movg @std#ulong
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @48 // std#ulong.static_init<ulong>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @49 // std#ulong.init<ulong>
13 [0xd]:         ret

ulong(_uint64): nil
address: 51
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#ulong
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @301 // std#number<_uint64, std#ulong>.number
4 [0x4]:         movg @std#ulong
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @48 // std#ulong.static_init<ulong>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @49 // std#ulong.init<ulong>
13 [0xd]:         ret

to_string(): std#string?
address: 52
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#ulong
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 713 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 76
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @124 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

static_init<long>(): nil
address: 53
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#long
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#long
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#long
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<long>(): nil
address: 54
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#long
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

long(var): nil
address: 55
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#long
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @307 // std#number<_int64, std#long>.number
4 [0x4]:         movg @std#long
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @53 // std#long.static_init<long>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @54 // std#long.init<long>
13 [0xd]:         ret

long(_int32): nil
address: 56
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#long
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @308 // std#number<_int64, std#long>.number
4 [0x4]:         movg @std#long
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @53 // std#long.static_init<long>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @54 // std#long.init<long>
13 [0xd]:         ret

long(_int64): nil
address: 57
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#long
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @309 // std#number<_int64, std#long>.number
4 [0x4]:         movg @std#long
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @53 // std#long.static_init<long>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @54 // std#long.init<long>
13 [0xd]:         ret

init<long>(_int32): nil
address: 58
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#long
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @308 // std#number<_int64, std#long>.number
4 [0x4]:         ret

long(): nil
address: 59
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#long
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @327 // std#number<_int64, std#long>.number<_int64, std#long>
3 [0x3]:         movg @std#long
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @53 // std#long.static_init<long>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @54 // std#long.init<long>
12 [0xc]:         ret

static_init<uint>(): nil
address: 60
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#uint
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#uint
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#uint
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<uint>(): nil
address: 61
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#uint
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

uint(_int32): nil
address: 62
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#uint
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @331 // std#number<_uint32, std#uint>.number
4 [0x4]:         movg @std#uint
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @60 // std#uint.static_init<uint>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @61 // std#uint.init<uint>
13 [0xd]:         ret

uint(_uint32): nil
address: 63
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#uint
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @332 // std#number<_uint32, std#uint>.number
4 [0x4]:         movg @std#uint
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @60 // std#uint.static_init<uint>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @61 // std#uint.init<uint>
13 [0xd]:         ret

static_init<int>(): nil
address: 64
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#int
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#int
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<int>(): nil
address: 65
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

int(std#int): nil
address: 66
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         movl 1
3 [0x3]:         movn #0
5 [0x5]:         iload egx
6 [0x6]:         rstore egx
7 [0x7]:         call @343 // std#number<_int32, std#int>.number
8 [0x8]:         movg @std#int
9 [0x9]:         movn #0
11 [0xb]:         iload cmt
12 [0xc]:         je 14
13 [0xd]:         call @64 // std#int.static_init<int>
14 [0xe]:         movl 0
15 [0xf]:         pushobj
16 [0x10]:         call @65 // std#int.init<int>
17 [0x11]:         ret

int(var): nil
address: 67
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @338 // std#number<_int32, std#int>.number
4 [0x4]:         movg @std#int
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @64 // std#int.static_init<int>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @65 // std#int.init<int>
13 [0xd]:         ret

int(_int8): nil
address: 68
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @339 // std#number<_int32, std#int>.number
4 [0x4]:         movg @std#int
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @64 // std#int.static_init<int>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @65 // std#int.init<int>
13 [0xd]:         ret

int(_uint8): nil
address: 69
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @340 // std#number<_int32, std#int>.number
4 [0x4]:         movg @std#int
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @64 // std#int.static_init<int>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @65 // std#int.init<int>
13 [0xd]:         ret

int(_int16): nil
address: 70
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @341 // std#number<_int32, std#int>.number
4 [0x4]:         movg @std#int
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @64 // std#int.static_init<int>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @65 // std#int.init<int>
13 [0xd]:         ret

int(_uint16): nil
address: 71
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @342 // std#number<_int32, std#int>.number
4 [0x4]:         movg @std#int
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @64 // std#int.static_init<int>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @65 // std#int.init<int>
13 [0xd]:         ret

int(_int32): nil
address: 72
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @343 // std#number<_int32, std#int>.number
4 [0x4]:         movg @std#int
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @64 // std#int.static_init<int>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @65 // std#int.init<int>
13 [0xd]:         ret

int(_uint32): nil
address: 73
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @344 // std#number<_int32, std#int>.number
4 [0x4]:         movg @std#int
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @64 // std#int.static_init<int>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @65 // std#int.init<int>
13 [0xd]:         ret

int(_int64): nil
address: 74
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @345 // std#number<_int32, std#int>.number
4 [0x4]:         movg @std#int
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @64 // std#int.static_init<int>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @65 // std#int.init<int>
13 [0xd]:         ret

int(_uint64): nil
address: 75
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @346 // std#number<_int32, std#int>.number
4 [0x4]:         movg @std#int
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @64 // std#int.static_init<int>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @65 // std#int.init<int>
13 [0xd]:         ret

init<int>(var): nil
address: 76
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @338 // std#number<_int32, std#int>.number
4 [0x4]:         ret

init<int>(_int8): nil
address: 77
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @339 // std#number<_int32, std#int>.number
4 [0x4]:         ret

init<int>(_int16): nil
address: 78
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @341 // std#number<_int32, std#int>.number
4 [0x4]:         ret

init<int>(_int32): nil
address: 79
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @343 // std#number<_int32, std#int>.number
4 [0x4]:         ret

init<int>(_int64): nil
address: 80
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @345 // std#number<_int32, std#int>.number
4 [0x4]:         ret

init<int>(_uint8): nil
address: 81
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @340 // std#number<_int32, std#int>.number
4 [0x4]:         ret

init<int>(_uint16): nil
address: 82
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @342 // std#number<_int32, std#int>.number
4 [0x4]:         ret

init<int>(_uint32): nil
address: 83
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @344 // std#number<_int32, std#int>.number
4 [0x4]:         ret

init<int>(_uint64): nil
address: 84
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @346 // std#number<_int32, std#int>.number
4 [0x4]:         ret

int(): nil
address: 85
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#int
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @915 // std#number<_int32, std#int>.number<_int32, std#int>
3 [0x3]:         movg @std#int
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @64 // std#int.static_init<int>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @65 // std#int.init<int>
12 [0xc]:         ret

static_init<ushort>(): nil
address: 86
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#ushort
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#ushort
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#ushort
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<ushort>(): nil
address: 87
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#ushort
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

ushort(_uint16): nil
address: 88
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#ushort
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @919 // std#number<_uint16, std#ushort>.number
4 [0x4]:         movg @std#ushort
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @86 // std#ushort.static_init<ushort>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @87 // std#ushort.init<ushort>
13 [0xd]:         ret

ushort(_int32): nil
address: 89
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#ushort
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @920 // std#number<_uint16, std#ushort>.number
4 [0x4]:         movg @std#ushort
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @86 // std#ushort.static_init<ushort>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @87 // std#ushort.init<ushort>
13 [0xd]:         ret

static_init<short>(): nil
address: 90
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#short
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#short
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#short
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<short>(): nil
address: 91
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#short
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

short(_int16): nil
address: 92
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#short
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @926 // std#number<_int16, std#short>.number
4 [0x4]:         movg @std#short
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @90 // std#short.static_init<short>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @91 // std#short.init<short>
13 [0xd]:         ret

short(_int32): nil
address: 93
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#short
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @927 // std#number<_int16, std#short>.number
4 [0x4]:         movg @std#short
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @90 // std#short.static_init<short>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @91 // std#short.init<short>
13 [0xd]:         ret

static_init<uchar>(): nil
address: 94
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#uchar
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#uchar
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#uchar
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<uchar>(): nil
address: 95
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#uchar
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

uchar(_int32): nil
address: 96
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#uchar
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @936 // std#number<_uint8, std#uchar>.number
4 [0x4]:         movg @std#uchar
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @94 // std#uchar.static_init<uchar>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @95 // std#uchar.init<uchar>
13 [0xd]:         ret

to_string(): std#string?
address: 97
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#uchar
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 850 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           mov8 egx, egx
8 [0x8]:           rstore egx
9 [0x9]:           call @132 // std#string.string
10 [0xa]:           popobj2 
11 [0xb]:           returnobj
12 [0xc]:           ret

static_init<char>(): nil
address: 98
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#char
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#char
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#char
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<char>(): nil
address: 99
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#char
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

char(_int8): nil
address: 100
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#char
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @942 // std#number<_int8, std#char>.number
4 [0x4]:         movg @std#char
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @98 // std#char.static_init<char>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @99 // std#char.init<char>
13 [0xd]:         ret

char(_int32): nil
address: 101
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#char
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @943 // std#number<_int8, std#char>.number
4 [0x4]:         movg @std#char
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @98 // std#char.static_init<char>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @99 // std#char.init<char>
13 [0xd]:         ret

to_string(): std#string?
address: 102
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#char
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 908 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @132 // std#string.string
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

is_digit(std#char): std#bool
address: 103
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#char
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 912 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           istore 48
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gte cx, ecx
11 [0xb]:           jne 22
12 [0xc]:           istore 57
14 [0xe]:           movl 0
15 [0xf]:           movn #0
17 [0x11]:           iload cx
18 [0x12]:           loadval ecx
19 [0x13]:           lte cx, ecx
20 [0x14]:           jne 22
21 [0x15]:           ldc cmt @ 5 (1)
22 [0x16]:           rstore cmt
23 [0x17]:           call @111 // std#bool.bool
24 [0x18]:           popobj2 
25 [0x19]:           returnobj
26 [0x1a]:           ret

static_init<byte>(): nil
address: 104
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#byte
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#byte
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#byte
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<byte>(): nil
address: 105
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#byte
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

byte(_int32): nil
address: 106
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#byte
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @96 // std#uchar.uchar
4 [0x4]:         movg @std#byte
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @104 // std#byte.static_init<byte>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @105 // std#byte.init<byte>
13 [0xd]:         ret

static_init<bool>(): nil
address: 107
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#bool
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#bool
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#bool
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<bool>(): nil
address: 108
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#bool
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

bool(var): nil
address: 109
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#bool
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         istore 1
4 [0x4]:         loadl cx, fp+1
5 [0x5]:         loadval ecx
6 [0x6]:         gte cx, ecx
7 [0x7]:         rstore cmt
8 [0x8]:         call @951 // std#number<_int8, std#bool>.number
9 [0x9]:         movg @std#bool
10 [0xa]:         movn #0
12 [0xc]:         iload cmt
13 [0xd]:         je 15
14 [0xe]:         call @107 // std#bool.static_init<bool>
15 [0xf]:         movl 0
16 [0x10]:         pushobj
17 [0x11]:         call @108 // std#bool.init<bool>
18 [0x12]:         ret

bool(_int8): nil
address: 110
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#bool
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         istore 1
4 [0x4]:         loadl cx, fp+1
5 [0x5]:         loadval ecx
6 [0x6]:         gte cx, ecx
7 [0x7]:         rstore cmt
8 [0x8]:         call @951 // std#number<_int8, std#bool>.number
9 [0x9]:         movg @std#bool
10 [0xa]:         movn #0
12 [0xc]:         iload cmt
13 [0xd]:         je 15
14 [0xe]:         call @107 // std#bool.static_init<bool>
15 [0xf]:         movl 0
16 [0x10]:         pushobj
17 [0x11]:         call @108 // std#bool.init<bool>
18 [0x12]:         ret

bool(_int32): nil
address: 111
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#bool
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         istore 1
4 [0x4]:         loadl cx, fp+1
5 [0x5]:         loadval ecx
6 [0x6]:         gte cx, ecx
7 [0x7]:         rstore cmt
8 [0x8]:         call @951 // std#number<_int8, std#bool>.number
9 [0x9]:         movg @std#bool
10 [0xa]:         movn #0
12 [0xc]:         iload cmt
13 [0xd]:         je 15
14 [0xe]:         call @107 // std#bool.static_init<bool>
15 [0xf]:         movl 0
16 [0x10]:         pushobj
17 [0x11]:         call @108 // std#bool.init<bool>
18 [0x12]:         ret

init<bool>(_int8): nil
address: 112
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#bool
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         istore 1
4 [0x4]:         loadl cx, fp+1
5 [0x5]:         loadval ecx
6 [0x6]:         gte cx, ecx
7 [0x7]:         rstore cmt
8 [0x8]:         call @951 // std#number<_int8, std#bool>.number
9 [0x9]:         ret

to_string(): std#string
address: 113
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#bool
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 989 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           newstr @69 (true)
9 [0x9]:           popobj2 
10 [0xa]:           jmp @13
11 [0xb]:           newstr @70 (false)
12 [0xc]:           popobj2 
13 [0xd]:           pushobj
14 [0xe]:           call @130 // std#string.string
15 [0xf]:           popobj2 
16 [0x10]:           returnobj
17 [0x11]:           ret

static_init<double>(): nil
address: 114
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#double
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#double
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<double>(): nil
address: 115
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

double(var): nil
address: 116
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @962 // std#number<var, std#double>.number
4 [0x4]:         movg @std#double
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @114 // std#double.static_init<double>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @115 // std#double.init<double>
13 [0xd]:         ret

double(_int8): nil
address: 117
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @963 // std#number<var, std#double>.number
4 [0x4]:         movg @std#double
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @114 // std#double.static_init<double>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @115 // std#double.init<double>
13 [0xd]:         ret

double(_uint8): nil
address: 118
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @964 // std#number<var, std#double>.number
4 [0x4]:         movg @std#double
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @114 // std#double.static_init<double>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @115 // std#double.init<double>
13 [0xd]:         ret

double(_int16): nil
address: 119
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @965 // std#number<var, std#double>.number
4 [0x4]:         movg @std#double
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @114 // std#double.static_init<double>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @115 // std#double.init<double>
13 [0xd]:         ret

double(_uint16): nil
address: 120
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @966 // std#number<var, std#double>.number
4 [0x4]:         movg @std#double
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @114 // std#double.static_init<double>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @115 // std#double.init<double>
13 [0xd]:         ret

double(_int32): nil
address: 121
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @967 // std#number<var, std#double>.number
4 [0x4]:         movg @std#double
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @114 // std#double.static_init<double>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @115 // std#double.init<double>
13 [0xd]:         ret

double(_uint32): nil
address: 122
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @968 // std#number<var, std#double>.number
4 [0x4]:         movg @std#double
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @114 // std#double.static_init<double>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @115 // std#double.init<double>
13 [0xd]:         ret

double(_int64): nil
address: 123
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @969 // std#number<var, std#double>.number
4 [0x4]:         movg @std#double
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @114 // std#double.static_init<double>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @115 // std#double.init<double>
13 [0xd]:         ret

double(_uint64): nil
address: 124
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @970 // std#number<var, std#double>.number
4 [0x4]:         movg @std#double
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @114 // std#double.static_init<double>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @115 // std#double.init<double>
13 [0xd]:         ret

init<double>(var): nil
address: 125
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         ipushl #1
3 [0x3]:         call @962 // std#number<var, std#double>.number
4 [0x4]:         ret

to_string(): std#string?
address: 126
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#double
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 1016 - 0new_class @std#int
2 [0x2]:            dup 
3 [0x3]:            istore 102
5 [0x5]:            call @68 // std#int.int
6 [0x6]:            new_class @std#double
8 [0x8]:            dup 
9 [0x9]:            movl 0
10 [0xa]:            movn #0
12 [0xc]:            iload egx
13 [0xd]:            rstore egx
14 [0xe]:            call @116 // std#double.double
15 [0xf]:            new_class @std#int
17 [0x11]:            dup 
18 [0x12]:            istore 16
20 [0x14]:            call @72 // std#int.int
21 [0x15]:            call @39 // std#__srt_global.snprintf
22 [0x16]:            popobj2 
23 [0x17]:            returnobj
24 [0x18]:            ret

static_init<string>(): nil
address: 127
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#string
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#string
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<string>(): nil
address: 128
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_data(_int8[]?): nil
address: 129
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 19 - 0pushl 1
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          popobj
5 [0x5]:          ret

string(_int8[]?): nil
address: 130
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#string
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @127 // std#string.static_init<string>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @128 // std#string.init<string>
12 [0xc]: line: 22 - 12movl 1
13 [0xd]:          checknull
14 [0xe]:          movr ebx, cmt
15 [0xf]:          not ebx, ebx
16 [0x10]:          movr cmt, ebx
17 [0x11]:          jne 23
18 [0x12]: line: 23 - 18movl 0
19 [0x13]:          pushobj
20 [0x14]:          pushl 1
21 [0x15]:          call @141 // std#string.append
22 [0x16]:          pop
23 [0x17]:          ret

init<string>(_int8[]): nil
address: 131
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]: line: 28 - 3movl 0
4 [0x4]:          pushobj
5 [0x5]:          pushl 1
6 [0x6]:          call @141 // std#string.append
7 [0x7]:          pop
8 [0x8]:          ret

string(_int8): nil
address: 132
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#string
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @127 // std#string.static_init<string>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @128 // std#string.init<string>
12 [0xc]: line: 32 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          new_class @std#char
16 [0x10]:          dup 
17 [0x11]:          ipushl #1
18 [0x12]:          call @100 // std#char.char
19 [0x13]:          call @139 // std#string.append
20 [0x14]:          pop
21 [0x15]:          ret

string(std#char[]): nil
address: 133
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 4
fpOffset: 1
spOffset: 2
stackSize: 6
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#string
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @127 // std#string.static_init<string>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @128 // std#string.init<string>
12 [0xc]: line: 36 - 12movl 1
13 [0xd]:          checknull
14 [0xe]:          movr ebx, cmt
15 [0xf]:          not ebx, ebx
16 [0x10]:          movr cmt, ebx
17 [0x11]:          jne 67
18 [0x12]: line: 37 - 18movl 0
19 [0x13]:          pushobj
20 [0x14]:          movl 1
21 [0x15]:          sizeof ebx
22 [0x16]:          movr adx, ebx
23 [0x17]:          newarry adx: 0
24 [0x18]:          call @129 // std#string.set_data
25 [0x19]: line: 38 - 25istore 0
27 [0x1b]:          ipopl 2
28 [0x1c]: line: 39 - 28istore 4294967295
30 [0x1e]:          ipopl 4
31 [0x1f]:          pushl 1
32 [0x20]:          popl 5
33 [0x21]:          iaddl 1, fp@4
35 [0x23]:          loadl cx, fp+4
36 [0x24]:          movl 5
37 [0x25]:          sizeof ebx
38 [0x26]:          movr ecx, ebx
39 [0x27]:          lt cx, ecx
40 [0x28]:          jne 67
41 [0x29]:          pushl 5
42 [0x2a]:          loadl adx, fp+4
43 [0x2b]:          popobj2 
44 [0x2c]:          chklen adx
45 [0x2d]:          movnd adx
46 [0x2e]:          pushobj
47 [0x2f]:          popl 3
48 [0x30]: line: 40 - 48movl 3
49 [0x31]:          movn #0
51 [0x33]:          iload egx
52 [0x34]:          rstore egx
53 [0x35]:          movl 0
54 [0x36]:          movn #0
56 [0x38]:          pushobj
57 [0x39]:          ipushl #2
58 [0x3a]:          iaddl 1, fp@2
60 [0x3c]:          loadval ebx
61 [0x3d]:          movr adx, ebx
62 [0x3e]:          popobj2 
63 [0x3f]:          chklen adx
64 [0x40]:          loadval ebx
65 [0x41]:          rmov adx, ebx
66 [0x42]:          jmp @33
67 [0x43]:          ret

string(std#string): nil
address: 134
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#string
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @127 // std#string.static_init<string>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @128 // std#string.init<string>
12 [0xc]: line: 46 - 12movl 1
13 [0xd]:          checknull
14 [0xe]:          movr ebx, cmt
15 [0xf]:          not ebx, ebx
16 [0x10]:          movr cmt, ebx
17 [0x11]:          jne 27
18 [0x12]:          movl 1
19 [0x13]:          movn #0
21 [0x15]:          checknull
22 [0x16]:          movr ebx, cmt
23 [0x17]:          not ebx, ebx
24 [0x18]:          movr cmt, ebx
25 [0x19]:          jne 27
26 [0x1a]:          ldc cmt @ 5 (1)
27 [0x1b]:          jne 36
28 [0x1c]: line: 47 - 28movl 0
29 [0x1d]:          pushobj
30 [0x1e]:          movl 1
31 [0x1f]:          movn #0
33 [0x21]:          pushobj
34 [0x22]:          call @141 // std#string.append
35 [0x23]:          pop
36 [0x24]:          ret

string(_int8[], std#int): nil
address: 135
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 2
spOffset: 3
stackSize: 3
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#string
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @127 // std#string.static_init<string>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @128 // std#string.init<string>
12 [0xc]: line: 52 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          pushl 1
15 [0xf]:          movl 2
16 [0x10]:          movn #0
18 [0x12]:          iload egx
19 [0x13]:          rstore egx
20 [0x14]:          movl 1
21 [0x15]:          sizeof ebx
22 [0x16]:          rstore ebx
23 [0x17]:          call @1093 // std.io#__srt_global.copy
24 [0x18]:          call @129 // std#string.set_data
25 [0x19]:          ret

string(std#char[], std#int, std#int): nil
address: 136
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 1
fpOffset: 3
spOffset: 4
stackSize: 5
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#string
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @127 // std#string.static_init<string>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @128 // std#string.init<string>
12 [0xc]: line: 56 - 12istore 0
14 [0xe]:          movl 2
15 [0xf]:          movn #0
17 [0x11]:          iload egx
18 [0x12]:          rstore egx
19 [0x13]:          movl 3
20 [0x14]:          movn #0
22 [0x16]:          iload ecx
23 [0x17]:          loadval ecf
24 [0x18]:          sub ecx, ecf -> bmr
25 [0x19]:          loadval cx
26 [0x1a]:          gt bmr, cx
27 [0x1b]:          jne 71
28 [0x1c]: line: 57 - 28movl 0
29 [0x1d]:          pushobj
30 [0x1e]:          movl 2
31 [0x1f]:          movn #0
33 [0x21]:          iload egx
34 [0x22]:          rstore egx
35 [0x23]:          movl 3
36 [0x24]:          movn #0
38 [0x26]:          iload cx
39 [0x27]:          loadval ecx
40 [0x28]:          sub cx, ecx -> bmr
41 [0x29]:          movr adx, bmr
42 [0x2a]:          newarry adx: 0
43 [0x2b]:          call @129 // std#string.set_data
44 [0x2c]: line: 58 - 44new_class @std#char_array
46 [0x2e]:          dup 
47 [0x2f]:          pushl 1
48 [0x30]:          call @287 // std#char_array.char_array
49 [0x31]:          popobj2 
50 [0x32]:          pushobj
51 [0x33]:          call @291 // std#char_array.get_elements
52 [0x34]:          popl 4
53 [0x35]: line: 59 - 53pushl 4
54 [0x36]:          movl 0
55 [0x37]:          movn #0
57 [0x39]:          pushobj
58 [0x3a]:          istore 0
60 [0x3c]:          movl 2
61 [0x3d]:          movn #0
63 [0x3f]:          iload egx
64 [0x40]:          rstore egx
65 [0x41]:          movl 3
66 [0x42]:          movn #0
68 [0x44]:          iload egx
69 [0x45]:          rstore egx
70 [0x46]:          call @1091 // std.io#__srt_global.memcopy
71 [0x47]:          ret

string(_int8[], std#int, std#int): nil
address: 137
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 3
spOffset: 4
stackSize: 4
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#string
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @127 // std#string.static_init<string>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @128 // std#string.init<string>
12 [0xc]: line: 64 - 12istore 0
14 [0xe]:          movl 2
15 [0xf]:          movn #0
17 [0x11]:          iload egx
18 [0x12]:          rstore egx
19 [0x13]:          movl 3
20 [0x14]:          movn #0
22 [0x16]:          iload ecx
23 [0x17]:          loadval ecf
24 [0x18]:          sub ecx, ecf -> bmr
25 [0x19]:          loadval cx
26 [0x1a]:          gt bmr, cx
27 [0x1b]:          jne 62
28 [0x1c]: line: 65 - 28movl 0
29 [0x1d]:          pushobj
30 [0x1e]:          movl 2
31 [0x1f]:          movn #0
33 [0x21]:          iload egx
34 [0x22]:          rstore egx
35 [0x23]:          movl 3
36 [0x24]:          movn #0
38 [0x26]:          iload cx
39 [0x27]:          loadval ecx
40 [0x28]:          sub cx, ecx -> bmr
41 [0x29]:          movr adx, bmr
42 [0x2a]:          newarry adx: 0
43 [0x2b]:          call @129 // std#string.set_data
44 [0x2c]: line: 66 - 44pushl 1
45 [0x2d]:          movl 0
46 [0x2e]:          movn #0
48 [0x30]:          pushobj
49 [0x31]:          istore 0
51 [0x33]:          movl 2
52 [0x34]:          movn #0
54 [0x36]:          iload egx
55 [0x37]:          rstore egx
56 [0x38]:          movl 3
57 [0x39]:          movn #0
59 [0x3b]:          iload egx
60 [0x3c]:          rstore egx
61 [0x3d]:          call @1091 // std.io#__srt_global.memcopy
62 [0x3e]:          ret

replace(std#int, std#char): std#string
address: 138
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 2
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 71 - 0movl 0
1 [0x1]:          movn #0
3 [0x3]:          sizeof ebx
4 [0x4]:          rstore ebx
5 [0x5]:          movl 1
6 [0x6]:          movn #0
8 [0x8]:          iload cx
9 [0x9]:          loadval ecx
10 [0xa]:          gte cx, ecx
11 [0xb]:          jne 17
12 [0xc]: line: 72 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          pushl 1
15 [0xf]:          call @174 // std#string.bounds_error
16 [0x10]:          throw 
17 [0x11]: line: 75 - 17movl 2
18 [0x12]:          movn #0
20 [0x14]:          iload egx
21 [0x15]:          rstore egx
22 [0x16]:          movl 0
23 [0x17]:          movn #0
25 [0x19]:          pushobj
26 [0x1a]:          movl 1
27 [0x1b]:          movn #0
29 [0x1d]:          iload adx
30 [0x1e]:          popobj2 
31 [0x1f]:          chklen adx
32 [0x20]:          loadval ebx
33 [0x21]:          rmov adx, ebx
34 [0x22]: line: 76 - 34movl 0
35 [0x23]:          returnobj
36 [0x24]:          ret

append(std#char): std#string
address: 139
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 81 - 0movl 0
1 [0x1]:          movn #0
3 [0x3]:          checknull
4 [0x4]:          jne 11
5 [0x5]: line: 82 - 5movl 0
6 [0x6]:          pushobj
7 [0x7]:          ldc adx @ 5 (1)
8 [0x8]:          newarry adx: 0
9 [0x9]:          call @129 // std#string.set_data
10 [0xa]:          jmp @26
11 [0xb]: line: 84 - 11movl 0
12 [0xc]:          movn #0
14 [0xe]:          pushobj
15 [0xf]:          istore 1
17 [0x11]:          movl 0
18 [0x12]:          movn #0
20 [0x14]:          sizeof ebx
21 [0x15]:          movr cx, ebx
22 [0x16]:          loadval ecx
23 [0x17]:          add cx, ecx -> bmr
24 [0x18]:          rstore bmr
25 [0x19]:          call @1089 // std.io#__srt_global.realloc
26 [0x1a]: line: 86 - 26movl 1
27 [0x1b]:          movn #0
29 [0x1d]:          iload egx
30 [0x1e]:          rstore egx
31 [0x1f]:          movl 0
32 [0x20]:          movn #0
34 [0x22]:          pushobj
35 [0x23]:          istore 1
37 [0x25]:          movl 0
38 [0x26]:          movn #0
40 [0x28]:          sizeof ebx
41 [0x29]:          movr cx, ebx
42 [0x2a]:          loadval ecx
43 [0x2b]:          sub cx, ecx -> bmr
44 [0x2c]:          movr adx, bmr
45 [0x2d]:          popobj2 
46 [0x2e]:          chklen adx
47 [0x2f]:          loadval ebx
48 [0x30]:          rmov adx, ebx
49 [0x31]: line: 87 - 49movl 0
50 [0x32]:          returnobj
51 [0x33]:          ret

empty(): std#bool
address: 140
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 90 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          istore 0
5 [0x5]:          movl 0
6 [0x6]:          movn #0
8 [0x8]:          sizeof ebx
9 [0x9]:          movr cx, ebx
10 [0xa]:          loadval ecx
11 [0xb]:          test cx, ecx
12 [0xc]:          rstore bmr
13 [0xd]:          call @111 // std#bool.bool
14 [0xe]:          popobj2 
15 [0xf]:          returnobj
16 [0x10]:          ret

append(_int8[]?): std#string
address: 141
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 94 - 0movl 1
1 [0x1]:          checknull
2 [0x2]:          jne 6
3 [0x3]:          movl 0
4 [0x4]:          returnobj
5 [0x5]:          ret
6 [0x6]: line: 96 - 6movl 0
7 [0x7]:          movn #0
9 [0x9]:          sizeof ebx
10 [0xa]:          rstore ebx
11 [0xb]:          ipopl 2
12 [0xc]: line: 98 - 12movl 0
13 [0xd]:          movn #0
15 [0xf]:          checknull
16 [0x10]:          jne 25
17 [0x11]: line: 99 - 17movl 0
18 [0x12]:          pushobj
19 [0x13]:          movl 1
20 [0x14]:          sizeof ebx
21 [0x15]:          movr adx, ebx
22 [0x16]:          newarry adx: 0
23 [0x17]:          call @129 // std#string.set_data
24 [0x18]:          jmp @41
25 [0x19]: line: 101 - 25movl 0
26 [0x1a]:           movn #0
28 [0x1c]:           pushobj
29 [0x1d]:           movl 1
30 [0x1e]:           sizeof ebx
31 [0x1f]:           rstore ebx
32 [0x20]:           movl 0
33 [0x21]:           movn #0
35 [0x23]:           sizeof ebx
36 [0x24]:           movr cx, ebx
37 [0x25]:           loadval ecx
38 [0x26]:           add cx, ecx -> bmr
39 [0x27]:           rstore bmr
40 [0x28]:           call @1089 // std.io#__srt_global.realloc
41 [0x29]: line: 103 - 41pushl 1
42 [0x2a]:           movl 0
43 [0x2b]:           movn #0
45 [0x2d]:           pushobj
46 [0x2e]:           ipushl #2
47 [0x2f]:           istore 0
49 [0x31]:           movl 1
50 [0x32]:           sizeof ebx
51 [0x33]:           rstore ebx
52 [0x34]:           call @1091 // std.io#__srt_global.memcopy
53 [0x35]: line: 104 - 53movl 0
54 [0x36]:           returnobj
55 [0x37]:           ret

append(_int8[]?, std#int): std#string
address: 142
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 1
fpOffset: 2
spOffset: 2
stackSize: 4
code:

0 [0x0]: line: 109 - 0movl 1
1 [0x1]:           checknull
2 [0x2]:           jne 7
3 [0x3]:           movl 0
4 [0x4]:           returnobj
5 [0x5]:           ret
6 [0x6]:           jmp @55
7 [0x7]:           istore 0
9 [0x9]:           movl 2
10 [0xa]:           movn #0
12 [0xc]:           iload cx
13 [0xd]:           loadval ecx
14 [0xe]:           lt cx, ecx
15 [0xf]:           jne 27
16 [0x10]: line: 111 - 16new_class @std#error
18 [0x12]:           dup 
19 [0x13]:           new_class @std#string
21 [0x15]:           dup 
22 [0x16]:           newstr @71 (length cannot be less than zero)
23 [0x17]:           call @130 // std#string.string
24 [0x18]:           call @255 // std#error.error
25 [0x19]:           throw 
26 [0x1a]:           jmp @55
27 [0x1b]:           movl 1
28 [0x1c]:           sizeof ebx
29 [0x1d]:           rstore ebx
30 [0x1e]:           movl 2
31 [0x1f]:           movn #0
33 [0x21]:           iload cx
34 [0x22]:           loadval ecx
35 [0x23]:           gt cx, ecx
36 [0x24]:           jne 55
37 [0x25]: line: 113 - 37new_class @std#error
39 [0x27]:           dup 
40 [0x28]:           new_class @std#string
42 [0x2a]:           dup 
43 [0x2b]:           newstr @72 (length of: )
44 [0x2c]:           call @130 // std#string.string
45 [0x2d]:           pushl 2
46 [0x2e]:           call @145 // std#string.operator+
47 [0x2f]:           newstr @73 ( is greater than the string: )
48 [0x30]:           call @143 // std#string.operator+
49 [0x31]:           movl 1
50 [0x32]:           sizeof ebx
51 [0x33]:           rstore ebx
52 [0x34]:           call @163 // std#string.operator+
53 [0x35]:           call @255 // std#error.error
54 [0x36]:           throw 
55 [0x37]: line: 115 - 55movl 0
56 [0x38]:           movn #0
58 [0x3a]:           sizeof ebx
59 [0x3b]:           rstore ebx
60 [0x3c]:           ipopl 3
61 [0x3d]: line: 117 - 61movl 0
62 [0x3e]:           movn #0
64 [0x40]:           checknull
65 [0x41]:           jne 75
66 [0x42]: line: 118 - 66movl 0
67 [0x43]:           pushobj
68 [0x44]:           movl 2
69 [0x45]:           movn #0
71 [0x47]:           iload adx
72 [0x48]:           newarry adx: 0
73 [0x49]:           call @129 // std#string.set_data
74 [0x4a]:           jmp @93
75 [0x4b]: line: 120 - 75movl 0
76 [0x4c]:           movn #0
78 [0x4e]:           pushobj
79 [0x4f]:           movl 2
80 [0x50]:           movn #0
82 [0x52]:           iload egx
83 [0x53]:           rstore egx
84 [0x54]:           movl 0
85 [0x55]:           movn #0
87 [0x57]:           sizeof ebx
88 [0x58]:           movr cx, ebx
89 [0x59]:           loadval ecx
90 [0x5a]:           add cx, ecx -> bmr
91 [0x5b]:           rstore bmr
92 [0x5c]:           call @1089 // std.io#__srt_global.realloc
93 [0x5d]: line: 122 - 93pushl 1
94 [0x5e]:           movl 0
95 [0x5f]:           movn #0
97 [0x61]:           pushobj
98 [0x62]:           ipushl #3
99 [0x63]:           istore 0
101 [0x65]:           movl 2
102 [0x66]:           movn #0
104 [0x68]:           iload egx
105 [0x69]:           rstore egx
106 [0x6a]:           call @1091 // std.io#__srt_global.memcopy
107 [0x6b]: line: 123 - 107movl 0
108 [0x6c]:           returnobj
109 [0x6d]:           ret

operator+(_int8[]?): std#string
address: 143
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 127 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           pushobj
7 [0x7]:           call @130 // std#string.string
8 [0x8]:           popl 2
9 [0x9]: line: 128 - 9pushl 2
10 [0xa]:           movl 1
11 [0xb]:           checknull
12 [0xc]:           jne 15
13 [0xd]:           newstr @74 (null)
14 [0xe]:           popobj2 
15 [0xf]:           pushobj
16 [0x10]:           call @141 // std#string.append
17 [0x11]:           popobj2 
18 [0x12]:           returnobj
19 [0x13]:           ret

to_lower(): std#string
address: 144
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 5
fpOffset: 0
spOffset: 0
stackSize: 6
code:

0 [0x0]: line: 132 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           call @176 // std#string.string
4 [0x4]:           popl 1
5 [0x5]: line: 133 - 5movl 0
6 [0x6]:           movn #0
8 [0x8]:           checknull
9 [0x9]:           movr ebx, cmt
10 [0xa]:           not ebx, ebx
11 [0xb]:           movr cmt, ebx
12 [0xc]:           jne 92
13 [0xd]: line: 134 - 13pushl 1
14 [0xe]:           movl 0
15 [0xf]:           movn #0
17 [0x11]:           pushobj
18 [0x12]:           istore 0
20 [0x14]:           movl 0
21 [0x15]:           movn #0
23 [0x17]:           sizeof ebx
24 [0x18]:           rstore ebx
25 [0x19]:           call @1093 // std.io#__srt_global.copy
26 [0x1a]:           call @129 // std#string.set_data
27 [0x1b]: line: 136 - 27istore 0
29 [0x1d]:           ipopl 2
30 [0x1e]: line: 137 - 30istore 4294967295
32 [0x20]:           ipopl 4
33 [0x21]:           movl 0
34 [0x22]:           movn #0
36 [0x24]:           pushobj
37 [0x25]:           popl 5
38 [0x26]:           iaddl 1, fp@4
40 [0x28]:           loadl cx, fp+4
41 [0x29]:           movl 5
42 [0x2a]:           sizeof ebx
43 [0x2b]:           movr ecx, ebx
44 [0x2c]:           lt cx, ecx
45 [0x2d]:           jne 92
46 [0x2e]:           pushl 5
47 [0x2f]:           loadl adx, fp+4
48 [0x30]:           popobj2 
49 [0x31]:           chklen adx
50 [0x32]:           iaload ebx, adx
51 [0x33]:           rstore ebx
52 [0x34]:           loadval egx
53 [0x35]:           mov8 egx, egx
54 [0x36]:           smovr_2 egx, fp+3
55 [0x37]: line: 138 - 55ipushl #3
56 [0x38]:           ldc cx @ 37 (65)
57 [0x39]:           loadval ecx
58 [0x3a]:           lte cx, ecx
59 [0x3b]:           jne 67
60 [0x3c]:           istore 90
62 [0x3e]:           loadl cx, fp+3
63 [0x3f]:           loadval ecx
64 [0x40]:           lte cx, ecx
65 [0x41]:           jne 67
66 [0x42]:           ldc cmt @ 5 (1)
67 [0x43]:           jne 87
68 [0x44]: line: 139 - 68istore 65
70 [0x46]:           loadl ecf, fp+3
71 [0x47]:           loadval edf
72 [0x48]:           sub ecf, edf -> bmr
73 [0x49]:           rstore bmr
74 [0x4a]:           ldc cx @ 39 (97)
75 [0x4b]:           loadval ecx
76 [0x4c]:           add cx, ecx -> bmr
77 [0x4d]:           rstore bmr
78 [0x4e]:           movl 1
79 [0x4f]:           movn #0
81 [0x51]:           pushobj
82 [0x52]:           loadl adx, fp+2
83 [0x53]:           popobj2 
84 [0x54]:           chklen adx
85 [0x55]:           loadval ebx
86 [0x56]:           rmov adx, ebx
87 [0x57]: line: 140 - 87ipushl #2
88 [0x58]:           iaddl 1, fp@2
90 [0x5a]:           loadval ebx
91 [0x5b]:           jmp @38
92 [0x5c]: line: 144 - 92movl 1
93 [0x5d]:           returnobj
94 [0x5e]:           ret

operator+(std#printable?): std#string
address: 145
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 148 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           pushobj
7 [0x7]:           call @130 // std#string.string
8 [0x8]:           popl 2
9 [0x9]: line: 149 - 9pushl 2
10 [0xa]:           movl 1
11 [0xb]:           checknull
12 [0xc]:           je 23
13 [0xd]:           pushobj
14 [0xe]:           invoke_delegate 294 { static=0, args=0 }
16 [0x10]:           popobj2 
17 [0x11]:           checknull
18 [0x12]:           je 23
19 [0x13]:           movn #0
21 [0x15]:           checknull
22 [0x16]:           jne 25
23 [0x17]:           newstr @74 (null)
24 [0x18]:           popobj2 
25 [0x19]:           pushobj
26 [0x1a]:           call @141 // std#string.append
27 [0x1b]:           popobj2 
28 [0x1c]:           returnobj
29 [0x1d]:           ret

operator+(std#string?): std#string
address: 146
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 153 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           pushobj
7 [0x7]:           call @130 // std#string.string
8 [0x8]:           popl 2
9 [0x9]: line: 154 - 9pushl 2
10 [0xa]:           movl 1
11 [0xb]:           checknull
12 [0xc]:           je 17
13 [0xd]:           movn #0
15 [0xf]:           checknull
16 [0x10]:           jne 19
17 [0x11]:           newstr @74 (null)
18 [0x12]:           popobj2 
19 [0x13]:           pushobj
20 [0x14]:           call @141 // std#string.append
21 [0x15]:           popobj2 
22 [0x16]:           returnobj
23 [0x17]:           ret

to_string(): std#string?
address: 147
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 157 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           pushobj
7 [0x7]:           call @130 // std#string.string
8 [0x8]:           popobj2 
9 [0x9]:           returnobj
10 [0xa]:           ret

operator==(_int8[]?): std#bool
address: 148
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 4
fpOffset: 1
spOffset: 1
stackSize: 6
code:

0 [0x0]: line: 160 - 0movl 1
1 [0x1]:           checknull
2 [0x2]:           je 14
3 [0x3]:           movl 1
4 [0x4]:           sizeof ebx
5 [0x5]:           rstore ebx
6 [0x6]:           movl 0
7 [0x7]:           movn #0
9 [0x9]:           sizeof ebx
10 [0xa]:           movr cx, ebx
11 [0xb]:           loadval ecx
12 [0xc]:           tne cx, ecx
13 [0xd]:           movr cmt, bmr
14 [0xe]:           jne 24
15 [0xf]: line: 161 - 15new_class @std#bool
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @110 // std#bool.bool
21 [0x15]:           popobj2 
22 [0x16]:           returnobj
23 [0x17]:           ret
24 [0x18]: line: 163 - 24new_class @std#int
26 [0x1a]:           dup 
27 [0x1b]:           istore 0
29 [0x1d]:           call @79 // std#int.init<int>
30 [0x1e]:           popl 2
31 [0x1f]: line: 164 - 31istore 4294967295
33 [0x21]:           ipopl 4
34 [0x22]:           pushl 1
35 [0x23]:           popl 5
36 [0x24]:           iaddl 1, fp@4
38 [0x26]:           loadl cx, fp+4
39 [0x27]:           movl 5
40 [0x28]:           sizeof ebx
41 [0x29]:           movr ecx, ebx
42 [0x2a]:           lt cx, ecx
43 [0x2b]:           jne 84
44 [0x2c]:           pushl 5
45 [0x2d]:           loadl adx, fp+4
46 [0x2e]:           popobj2 
47 [0x2f]:           chklen adx
48 [0x30]:           iaload ebx, adx
49 [0x31]:           rstore ebx
50 [0x32]:           loadval egx
51 [0x33]:           mov8 egx, egx
52 [0x34]:           smovr_2 egx, fp+3
53 [0x35]: line: 165 - 53movl 0
54 [0x36]:           movn #0
56 [0x38]:           pushobj
57 [0x39]:           pushl 2
58 [0x3a]:           istore 1
60 [0x3c]:           call @739 // std#number<_int32, std#int>.operator++
61 [0x3d]:           popobj2 
62 [0x3e]:           movn #0
64 [0x40]:           iload adx
65 [0x41]:           popobj2 
66 [0x42]:           chklen adx
67 [0x43]:           iaload ebx, adx
68 [0x44]:           rstore ebx
69 [0x45]:           loadl cx, fp+3
70 [0x46]:           loadval ecx
71 [0x47]:           tne cx, ecx
72 [0x48]:           movr cmt, bmr
73 [0x49]:           jne 83
74 [0x4a]: line: 166 - 74new_class @std#bool
76 [0x4c]:           dup 
77 [0x4d]:           istore 0
79 [0x4f]:           call @110 // std#bool.bool
80 [0x50]:           popobj2 
81 [0x51]:           returnobj
82 [0x52]:           ret
83 [0x53]:           jmp @36
84 [0x54]: line: 170 - 84new_class @std#bool
86 [0x56]:           dup 
87 [0x57]:           istore 1
89 [0x59]:           call @110 // std#bool.bool
90 [0x5a]:           popobj2 
91 [0x5b]:           returnobj
92 [0x5c]:           ret

operator==(std#string?): std#bool
address: 149
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 4
fpOffset: 1
spOffset: 1
stackSize: 6
code:

0 [0x0]: line: 174 - 0movl 1
1 [0x1]:           checknull
2 [0x2]:           je 18
3 [0x3]:           movl 1
4 [0x4]:           checknull
5 [0x5]:           je 8
6 [0x6]:           movn #0
8 [0x8]:           sizeof ebx
9 [0x9]:           rstore ebx
10 [0xa]:           movl 0
11 [0xb]:           movn #0
13 [0xd]:           sizeof ebx
14 [0xe]:           movr cx, ebx
15 [0xf]:           loadval ecx
16 [0x10]:           tne cx, ecx
17 [0x11]:           movr cmt, bmr
18 [0x12]:           jne 28
19 [0x13]: line: 175 - 19new_class @std#bool
21 [0x15]:           dup 
22 [0x16]:           istore 0
24 [0x18]:           call @110 // std#bool.bool
25 [0x19]:           popobj2 
26 [0x1a]:           returnobj
27 [0x1b]:           ret
28 [0x1c]: line: 177 - 28new_class @std#int
30 [0x1e]:           dup 
31 [0x1f]:           istore 0
33 [0x21]:           call @79 // std#int.init<int>
34 [0x22]:           popl 2
35 [0x23]: line: 178 - 35istore 4294967295
37 [0x25]:           ipopl 4
38 [0x26]:           movl 1
39 [0x27]:           checknull
40 [0x28]:           je 43
41 [0x29]:           movn #0
43 [0x2b]:           pushobj
44 [0x2c]:           popl 5
45 [0x2d]:           iaddl 1, fp@4
47 [0x2f]:           loadl cx, fp+4
48 [0x30]:           movl 5
49 [0x31]:           sizeof ebx
50 [0x32]:           movr ecx, ebx
51 [0x33]:           lt cx, ecx
52 [0x34]:           jne 93
53 [0x35]:           pushl 5
54 [0x36]:           loadl adx, fp+4
55 [0x37]:           popobj2 
56 [0x38]:           chklen adx
57 [0x39]:           iaload ebx, adx
58 [0x3a]:           rstore ebx
59 [0x3b]:           loadval egx
60 [0x3c]:           mov8 egx, egx
61 [0x3d]:           smovr_2 egx, fp+3
62 [0x3e]: line: 179 - 62movl 0
63 [0x3f]:           movn #0
65 [0x41]:           pushobj
66 [0x42]:           pushl 2
67 [0x43]:           istore 1
69 [0x45]:           call @739 // std#number<_int32, std#int>.operator++
70 [0x46]:           popobj2 
71 [0x47]:           movn #0
73 [0x49]:           iload adx
74 [0x4a]:           popobj2 
75 [0x4b]:           chklen adx
76 [0x4c]:           iaload ebx, adx
77 [0x4d]:           rstore ebx
78 [0x4e]:           loadl cx, fp+3
79 [0x4f]:           loadval ecx
80 [0x50]:           tne cx, ecx
81 [0x51]:           movr cmt, bmr
82 [0x52]:           jne 92
83 [0x53]: line: 180 - 83new_class @std#bool
85 [0x55]:           dup 
86 [0x56]:           istore 0
88 [0x58]:           call @110 // std#bool.bool
89 [0x59]:           popobj2 
90 [0x5a]:           returnobj
91 [0x5b]:           ret
92 [0x5c]:           jmp @45
93 [0x5d]: line: 184 - 93new_class @std#bool
95 [0x5f]:           dup 
96 [0x60]:           istore 1
98 [0x62]:           call @110 // std#bool.bool
99 [0x63]:           popobj2 
100 [0x64]:           returnobj
101 [0x65]:           ret

operator!=(_int8[]?): std#bool
address: 150
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 188 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           pushl 1
3 [0x3]:           call @148 // std#string.operator==
4 [0x4]:           call @957 // std#number<_int8, std#bool>.operator!
5 [0x5]:           popobj2 
6 [0x6]:           returnobj
7 [0x7]:           ret

operator!=(std#string?): std#bool
address: 151
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 189 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           pushl 1
3 [0x3]:           call @149 // std#string.operator==
4 [0x4]:           call @957 // std#number<_int8, std#bool>.operator!
5 [0x5]:           popobj2 
6 [0x6]:           returnobj
7 [0x7]:           ret

operator=(_int8[]?): nil
address: 152
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 193 - 0movl 1
1 [0x1]:           checknull
2 [0x2]:           jne 8
3 [0x3]:           movl 0
4 [0x4]:           pushobj
5 [0x5]:           pushnull 
6 [0x6]:           call @129 // std#string.set_data
7 [0x7]:           jmp @18
8 [0x8]: line: 195 - 8movl 0
9 [0x9]:           pushobj
10 [0xa]:           pushl 1
11 [0xb]:           istore 0
13 [0xd]:           movl 1
14 [0xe]:           sizeof ebx
15 [0xf]:           rstore ebx
16 [0x10]:           call @1093 // std.io#__srt_global.copy
17 [0x11]:           call @129 // std#string.set_data
18 [0x12]:           ret

at(std#int): std#char
address: 153
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 199 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           sizeof ebx
4 [0x4]:           rstore ebx
5 [0x5]:           movl 1
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gte cx, ecx
11 [0xb]:           jne 25
12 [0xc]: line: 200 - 12movl 0
13 [0xd]:           pushobj
14 [0xe]:           new_class @std#int
16 [0x10]:           dup 
17 [0x11]:           movl 1
18 [0x12]:           movn #0
20 [0x14]:           iload egx
21 [0x15]:           rstore egx
22 [0x16]:           call @72 // std#int.int
23 [0x17]:           call @174 // std#string.bounds_error
24 [0x18]:           throw 
25 [0x19]: line: 201 - 25new_class @std#char
27 [0x1b]:           dup 
28 [0x1c]:           movl 0
29 [0x1d]:           movn #0
31 [0x1f]:           pushobj
32 [0x20]:           movl 1
33 [0x21]:           movn #0
35 [0x23]:           iload adx
36 [0x24]:           popobj2 
37 [0x25]:           chklen adx
38 [0x26]:           iaload ebx, adx
39 [0x27]:           rstore ebx
40 [0x28]:           call @100 // std#char.char
41 [0x29]:           popobj2 
42 [0x2a]:           returnobj
43 [0x2b]:           ret

operator[(std#int): std#char
address: 154
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 204 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           pushl 1
3 [0x3]:           call @153 // std#string.at
4 [0x4]:           popobj2 
5 [0x5]:           returnobj
6 [0x6]:           ret

get_elements(): _int8[]?
address: 155
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 206 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           returnobj
4 [0x4]:           ret

to_char_array(): std#char_array?
address: 156
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 210 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           checknull
4 [0x4]:           jne 9
5 [0x5]:           pushnull 
6 [0x6]:           popobj2 
7 [0x7]:           returnobj
8 [0x8]:           ret
9 [0x9]: line: 211 - 9new_class @std#char_array
11 [0xb]:           dup 
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           pushobj
16 [0x10]:           istore 0
18 [0x12]:           movl 0
19 [0x13]:           movn #0
21 [0x15]:           sizeof ebx
22 [0x16]:           rstore ebx
23 [0x17]:           call @1093 // std.io#__srt_global.copy
24 [0x18]:           call @284 // std#char_array.char_array
25 [0x19]:           popobj2 
26 [0x1a]:           returnobj
27 [0x1b]:           ret

starts_with(std#string): std#bool
address: 157
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 216 - 0movl 1
1 [0x1]:           checknull
2 [0x2]:           je 15
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           sizeof ebx
7 [0x7]:           rstore ebx
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           sizeof ebx
12 [0xc]:           movr cx, ebx
13 [0xd]:           loadval ecx
14 [0xe]:           gt cx, ecx
15 [0xf]:           jne 25
16 [0x10]: line: 217 - 16new_class @std#bool
18 [0x12]:           dup 
19 [0x13]:           istore 0
21 [0x15]:           call @110 // std#bool.bool
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret
25 [0x19]: line: 220 - 25new_class @std#int
27 [0x1b]:           dup 
28 [0x1c]:           istore 0
30 [0x1e]:           call @79 // std#int.init<int>
31 [0x1f]:           popl 2
32 [0x20]:           pushl 2
33 [0x21]:           movl 1
34 [0x22]:           movn #0
36 [0x24]:           sizeof ebx
37 [0x25]:           rstore ebx
38 [0x26]:           call @502 // std#number<_int32, std#int>.operator<
39 [0x27]:           popobj2 
40 [0x28]:           movn #0
42 [0x2a]:           iload cmt
43 [0x2b]:           jne 87
44 [0x2c]: line: 222 - 44movl 1
45 [0x2d]:           movn #0
47 [0x2f]:           pushobj
48 [0x30]:           movl 2
49 [0x31]:           movn #0
51 [0x33]:           iload adx
52 [0x34]:           popobj2 
53 [0x35]:           chklen adx
54 [0x36]:           iaload ebx, adx
55 [0x37]:           rstore ebx
56 [0x38]:           movl 0
57 [0x39]:           movn #0
59 [0x3b]:           pushobj
60 [0x3c]:           movl 2
61 [0x3d]:           movn #0
63 [0x3f]:           iload adx
64 [0x40]:           popobj2 
65 [0x41]:           chklen adx
66 [0x42]:           iaload ebx, adx
67 [0x43]:           movr cx, ebx
68 [0x44]:           loadval ecx
69 [0x45]:           tne cx, ecx
70 [0x46]:           movr cmt, bmr
71 [0x47]:           jne 81
72 [0x48]: line: 223 - 72new_class @std#bool
74 [0x4a]:           dup 
75 [0x4b]:           istore 0
77 [0x4d]:           call @110 // std#bool.bool
78 [0x4e]:           popobj2 
79 [0x4f]:           returnobj
80 [0x50]:           ret
81 [0x51]:           pushl 2
82 [0x52]:           istore 1
84 [0x54]:           call @739 // std#number<_int32, std#int>.operator++
85 [0x55]:           pop
86 [0x56]:           jmp @32
87 [0x57]: line: 225 - 87new_class @std#bool
89 [0x59]:           dup 
90 [0x5a]:           istore 1
92 [0x5c]:           call @110 // std#bool.bool
93 [0x5d]:           popobj2 
94 [0x5e]:           returnobj
95 [0x5f]:           ret

find(std#string): std#bool
address: 158
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 4
fpOffset: 1
spOffset: 1
stackSize: 6
code:

0 [0x0]: line: 229 - 0pushl 1
1 [0x1]:           call @169 // std#string.size
2 [0x2]:           popl 2
3 [0x3]: line: 230 - 3movl 0
4 [0x4]:           movn #0
6 [0x6]:           sizeof ebx
7 [0x7]:           rstore ebx
8 [0x8]:           loadval egx
9 [0x9]:           mov32 egx, egx
10 [0xa]:           smovr_2 egx, fp+3
11 [0xb]: line: 233 - 11new_class @std#int
13 [0xd]:           dup 
14 [0xe]:           istore 0
16 [0x10]:           call @79 // std#int.init<int>
17 [0x11]:           popl 4
18 [0x12]:           pushl 4
19 [0x13]:           movl 2
20 [0x14]:           movn #0
22 [0x16]:           iload egx
23 [0x17]:           rstore egx
24 [0x18]:           loadl cx, fp+3
25 [0x19]:           loadval ecx
26 [0x1a]:           sub cx, ecx -> bmr
27 [0x1b]:           rstore bmr
28 [0x1c]:           call @542 // std#number<_int32, std#int>.operator<=
29 [0x1d]:           popobj2 
30 [0x1e]:           movn #0
32 [0x20]:           iload cmt
33 [0x21]:           jne 106
34 [0x22]: line: 234 - 34new_class @std#int
36 [0x24]:           dup 
37 [0x25]:           istore 0
39 [0x27]:           call @79 // std#int.init<int>
40 [0x28]:           popl 5
41 [0x29]: line: 238 - 41pushl 5
42 [0x2a]:           pushl 2
43 [0x2b]:           call @491 // std#number<_int32, std#int>.operator<
44 [0x2c]:           popobj2 
45 [0x2d]:           movn #0
47 [0x2f]:           iload cmt
48 [0x30]:           jne 87
49 [0x31]: line: 239 - 49movl 1
50 [0x32]:           movn #0
52 [0x34]:           pushobj
53 [0x35]:           movl 5
54 [0x36]:           movn #0
56 [0x38]:           iload adx
57 [0x39]:           popobj2 
58 [0x3a]:           chklen adx
59 [0x3b]:           iaload ebx, adx
60 [0x3c]:           rstore ebx
61 [0x3d]:           movl 0
62 [0x3e]:           movn #0
64 [0x40]:           pushobj
65 [0x41]:           pushl 4
66 [0x42]:           pushl 5
67 [0x43]:           call @390 // std#number<_int32, std#int>.operator+
68 [0x44]:           popobj2 
69 [0x45]:           movn #0
71 [0x47]:           iload adx
72 [0x48]:           popobj2 
73 [0x49]:           chklen adx
74 [0x4a]:           iaload ebx, adx
75 [0x4b]:           movr cx, ebx
76 [0x4c]:           loadval ecx
77 [0x4d]:           tne cx, ecx
78 [0x4e]:           movr cmt, bmr
79 [0x4f]:           jne 81
80 [0x50]: line: 241 - 80jmp @87
81 [0x51]:           pushl 5
82 [0x52]:           istore 1
84 [0x54]:           call @739 // std#number<_int32, std#int>.operator++
85 [0x55]:           pop
86 [0x56]:           jmp @41
87 [0x57]: line: 243 - 87pushl 2
88 [0x58]:           pushl 5
89 [0x59]:           itest cmt
90 [0x5a]:           jne 100
91 [0x5b]: line: 244 - 91new_class @std#bool
93 [0x5d]:           dup 
94 [0x5e]:           istore 1
96 [0x60]:           call @110 // std#bool.bool
97 [0x61]:           popobj2 
98 [0x62]:           returnobj
99 [0x63]:           ret
100 [0x64]:           pushl 4
101 [0x65]:           istore 1
103 [0x67]:           call @739 // std#number<_int32, std#int>.operator++
104 [0x68]:           pop
105 [0x69]:           jmp @18
106 [0x6a]: line: 247 - 106new_class @std#bool
108 [0x6c]:           dup 
109 [0x6d]:           istore 0
111 [0x6f]:           call @110 // std#bool.bool
112 [0x70]:           popobj2 
113 [0x71]:           returnobj
114 [0x72]:           ret

ends_with(std#string): std#bool
address: 159
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 251 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           sizeof ebx
4 [0x4]:           rstore ebx
5 [0x5]:           movl 1
6 [0x6]:           movn #0
8 [0x8]:           sizeof ebx
9 [0x9]:           movr cx, ebx
10 [0xa]:           loadval ecx
11 [0xb]:           gte cx, ecx
12 [0xc]:           jne 22
13 [0xd]: line: 252 - 13new_class @std#bool
15 [0xf]:           dup 
16 [0x10]:           istore 0
18 [0x12]:           call @110 // std#bool.bool
19 [0x13]:           popobj2 
20 [0x14]:           returnobj
21 [0x15]:           ret
22 [0x16]: line: 254 - 22new_class @std#int
24 [0x18]:           dup 
25 [0x19]:           istore 0
27 [0x1b]:           call @79 // std#int.init<int>
28 [0x1c]:           popl 2
29 [0x1d]: line: 255 - 29movl 1
30 [0x1e]:           movn #0
32 [0x20]:           sizeof ebx
33 [0x21]:           rstore ebx
34 [0x22]:           movl 0
35 [0x23]:           movn #0
37 [0x25]:           sizeof ebx
38 [0x26]:           movr cx, ebx
39 [0x27]:           loadval ecx
40 [0x28]:           sub cx, ecx -> bmr
41 [0x29]:           rstore bmr
42 [0x2a]:           loadval egx
43 [0x2b]:           mov32 egx, egx
44 [0x2c]:           smovr_2 egx, fp+3
45 [0x2d]:           movl 0
46 [0x2e]:           movn #0
48 [0x30]:           sizeof ebx
49 [0x31]:           rstore ebx
50 [0x32]:           loadl cx, fp+3
51 [0x33]:           loadval ecx
52 [0x34]:           lt cx, ecx
53 [0x35]:           jne 99
54 [0x36]: line: 256 - 54movl 1
55 [0x37]:           movn #0
57 [0x39]:           pushobj
58 [0x3a]:           pushl 2
59 [0x3b]:           istore 1
61 [0x3d]:           call @739 // std#number<_int32, std#int>.operator++
62 [0x3e]:           popobj2 
63 [0x3f]:           movn #0
65 [0x41]:           iload adx
66 [0x42]:           popobj2 
67 [0x43]:           chklen adx
68 [0x44]:           iaload ebx, adx
69 [0x45]:           rstore ebx
70 [0x46]:           movl 0
71 [0x47]:           movn #0
73 [0x49]:           pushobj
74 [0x4a]:           loadl adx, fp+3
75 [0x4b]:           popobj2 
76 [0x4c]:           chklen adx
77 [0x4d]:           iaload ebx, adx
78 [0x4e]:           movr cx, ebx
79 [0x4f]:           loadval ecx
80 [0x50]:           tne cx, ecx
81 [0x51]:           movr cmt, bmr
82 [0x52]:           jne 92
83 [0x53]: line: 257 - 83new_class @std#bool
85 [0x55]:           dup 
86 [0x56]:           istore 0
88 [0x58]:           call @110 // std#bool.bool
89 [0x59]:           popobj2 
90 [0x5a]:           returnobj
91 [0x5b]:           ret
92 [0x5c]:           ipushl #3
93 [0x5d]:           loadl egx, fp+3
94 [0x5e]:           inc egx
95 [0x5f]:           mov32 egx, egx
96 [0x60]:           smovr_2 egx, fp+3
97 [0x61]:           loadval ebx
98 [0x62]:           jmp @45
99 [0x63]: line: 260 - 99new_class @std#bool
101 [0x65]:           dup 
102 [0x66]:           istore 1
104 [0x68]:           call @110 // std#bool.bool
105 [0x69]:           popobj2 
106 [0x6a]:           returnobj
107 [0x6b]:           ret

operator+(_int8): std#string
address: 160
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 264 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           pushobj
7 [0x7]:           call @130 // std#string.string
8 [0x8]:           popl 2
9 [0x9]: line: 265 - 9pushl 2
10 [0xa]:           new_class @std#char
12 [0xc]:           dup 
13 [0xd]:           ipushl #1
14 [0xe]:           call @100 // std#char.char
15 [0xf]:           call @139 // std#string.append
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator+(var): std#string
address: 161
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 269 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           new_class @std#double
4 [0x4]:           dup 
5 [0x5]:           ipushl #1
6 [0x6]:           call @116 // std#double.double
7 [0x7]:           popobj2 
8 [0x8]:           pushobj
9 [0x9]:           call @126 // std#double.to_string
10 [0xa]:           call @146 // std#string.operator+
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator+(_int16): std#string
address: 162
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 273 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           new_class @std#short
4 [0x4]:           dup 
5 [0x5]:           ipushl #1
6 [0x6]:           call @92 // std#short.short
7 [0x7]:           popobj2 
8 [0x8]:           pushobj
9 [0x9]:           call @929 // std#number<_int16, std#short>.to_string
10 [0xa]:           call @146 // std#string.operator+
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator+(_int32): std#string
address: 163
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 277 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           new_class @std#int
4 [0x4]:           dup 
5 [0x5]:           ipushl #1
6 [0x6]:           call @72 // std#int.int
7 [0x7]:           popobj2 
8 [0x8]:           pushobj
9 [0x9]:           call @902 // std#number<_int32, std#int>.to_string
10 [0xa]:           call @146 // std#string.operator+
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator+(_int64): std#string
address: 164
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 281 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           new_class @std#long
4 [0x4]:           dup 
5 [0x5]:           ipushl #1
6 [0x6]:           call @57 // std#long.long
7 [0x7]:           popobj2 
8 [0x8]:           pushobj
9 [0x9]:           call @324 // std#number<_int64, std#long>.to_string
10 [0xa]:           call @146 // std#string.operator+
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator+(_uint8): std#string
address: 165
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 285 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           loadl egx, fp+1
3 [0x3]:           mov8 egx, egx
4 [0x4]:           rstore egx
5 [0x5]:           call @160 // std#string.operator+
6 [0x6]:           popobj2 
7 [0x7]:           returnobj
8 [0x8]:           ret

operator+(_uint16): std#string
address: 166
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 289 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           new_class @std#ushort
4 [0x4]:           dup 
5 [0x5]:           ipushl #1
6 [0x6]:           call @88 // std#ushort.ushort
7 [0x7]:           popobj2 
8 [0x8]:           pushobj
9 [0x9]:           call @922 // std#number<_uint16, std#ushort>.to_string
10 [0xa]:           call @146 // std#string.operator+
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator+(_uint32): std#string
address: 167
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 293 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           new_class @std#uint
4 [0x4]:           dup 
5 [0x5]:           ipushl #1
6 [0x6]:           call @63 // std#uint.uint
7 [0x7]:           popobj2 
8 [0x8]:           pushobj
9 [0x9]:           call @334 // std#number<_uint32, std#uint>.to_string
10 [0xa]:           call @146 // std#string.operator+
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator+(_uint64): std#string
address: 168
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 297 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           new_class @std#ulong
4 [0x4]:           dup 
5 [0x5]:           ipushl #1
6 [0x6]:           call @51 // std#ulong.ulong
7 [0x7]:           popobj2 
8 [0x8]:           pushobj
9 [0x9]:           call @52 // std#ulong.to_string
10 [0xa]:           call @146 // std#string.operator+
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

size(): std#int
address: 169
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 300 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           sizeof ebx
7 [0x7]:           rstore ebx
8 [0x8]:           call @72 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

operator+=(std#printable?): std#string
address: 170
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 304 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           movl 1
3 [0x3]:           checknull
4 [0x4]:           je 15
5 [0x5]:           pushobj
6 [0x6]:           invoke_delegate 294 { static=0, args=0 }
8 [0x8]:           popobj2 
9 [0x9]:           checknull
10 [0xa]:           je 15
11 [0xb]:           movn #0
13 [0xd]:           checknull
14 [0xe]:           jne 17
15 [0xf]:           newstr @74 (null)
16 [0x10]:           popobj2 
17 [0x11]:           pushobj
18 [0x12]:           call @141 // std#string.append
19 [0x13]:           popobj2 
20 [0x14]:           returnobj
21 [0x15]:           ret

operator+=(std#string): std#string
address: 171
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 307 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           movl 1
3 [0x3]:           movn #0
5 [0x5]:           pushobj
6 [0x6]:           call @141 // std#string.append
7 [0x7]:           popobj2 
8 [0x8]:           returnobj
9 [0x9]:           ret

operator+=(_int8[]?): std#string
address: 172
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 309 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           pushl 1
3 [0x3]:           call @141 // std#string.append
4 [0x4]:           popobj2 
5 [0x5]:           returnobj
6 [0x6]:           ret

substring(std#int, std#int): std#string
address: 173
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 1
fpOffset: 2
spOffset: 2
stackSize: 4
code:

0 [0x0]: line: 312 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           sizeof ebx
4 [0x4]:           rstore ebx
5 [0x5]:           movl 1
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gte cx, ecx
11 [0xb]:           je 20
12 [0xc]:           istore 0
14 [0xe]:           movl 1
15 [0xf]:           movn #0
17 [0x11]:           iload cx
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 26
21 [0x15]: line: 313 - 21movl 0
22 [0x16]:           pushobj
23 [0x17]:           pushl 1
24 [0x18]:           call @174 // std#string.bounds_error
25 [0x19]:           throw 
26 [0x1a]: line: 314 - 26movl 1
27 [0x1b]:           movn #0
29 [0x1d]:           iload egx
30 [0x1e]:           rstore egx
31 [0x1f]:           movl 2
32 [0x20]:           movn #0
34 [0x22]:           iload cx
35 [0x23]:           loadval ecx
36 [0x24]:           lt cx, ecx
37 [0x25]:           jne 54
38 [0x26]: line: 315 - 38new_class @std#illegal_argument_exception
40 [0x28]:           dup 
41 [0x29]:           new_class @std#string
43 [0x2b]:           dup 
44 [0x2c]:           newstr @75 (end_pos: )
45 [0x2d]:           call @130 // std#string.string
46 [0x2e]:           pushl 2
47 [0x2f]:           call @145 // std#string.operator+
48 [0x30]:           newstr @76 ( cannot be less than the start_pos: )
49 [0x31]:           call @143 // std#string.operator+
50 [0x32]:           pushl 1
51 [0x33]:           call @145 // std#string.operator+
52 [0x34]:           call @203 // std#illegal_argument_exception.illegal_argument_exception
53 [0x35]:           throw 
54 [0x36]: line: 319 - 54new_class @std#string
56 [0x38]:           dup 
57 [0x39]:           call @176 // std#string.string
58 [0x3a]:           popl 3
59 [0x3b]: line: 320 - 59pushl 3
60 [0x3c]:           movl 0
61 [0x3d]:           movn #0
63 [0x3f]:           pushobj
64 [0x40]:           movl 1
65 [0x41]:           movn #0
67 [0x43]:           iload egx
68 [0x44]:           rstore egx
69 [0x45]:           movl 2
70 [0x46]:           movn #0
72 [0x48]:           iload egx
73 [0x49]:           rstore egx
74 [0x4a]:           call @1093 // std.io#__srt_global.copy
75 [0x4b]:           call @129 // std#string.set_data
76 [0x4c]: line: 321 - 76movl 3
77 [0x4d]:           returnobj
78 [0x4e]:           ret

bounds_error(std#int): std#out_of_bounds_exception
address: 174
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 325 - 0new_class @std#out_of_bounds_exception
2 [0x2]:           dup 
3 [0x3]:           new_class @std#string
5 [0x5]:           dup 
6 [0x6]:           newstr @77 (Index out of bounds exception at: )
7 [0x7]:           call @130 // std#string.string
8 [0x8]:           pushl 1
9 [0x9]:           call @145 // std#string.operator+
10 [0xa]:           newstr @78 ( with size of: )
11 [0xb]:           call @143 // std#string.operator+
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           sizeof ebx
16 [0x10]:           rstore ebx
17 [0x11]:           call @163 // std#string.operator+
18 [0x12]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
19 [0x13]:           popobj2 
20 [0x14]:           returnobj
21 [0x15]:           ret

hash(): std#int
address: 175
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 329 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 31
5 [0x5]:           call @79 // std#int.init<int>
6 [0x6]:           popl 1
7 [0x7]: line: 330 - 7new_class @std#double
9 [0x9]:           dup 
10 [0xa]:           istore 1000000009
12 [0xc]:           call @125 // std#double.init<double>
13 [0xd]:           popl 2
14 [0xe]: line: 331 - 14new_class @std#int
16 [0x10]:           dup 
17 [0x11]:           istore 0
19 [0x13]:           call @79 // std#int.init<int>
20 [0x14]:           popl 3
21 [0x15]: line: 332 - 21istore 1
23 [0x17]:           ipopl 4
24 [0x18]: line: 333 - 24istore 4294967295
26 [0x1a]:           ipopl 6
27 [0x1b]:           movl 0
28 [0x1c]:           movn #0
30 [0x1e]:           pushobj
31 [0x1f]:           popl 7
32 [0x20]:           iaddl 1, fp@6
34 [0x22]:           loadl cx, fp+6
35 [0x23]:           movl 7
36 [0x24]:           sizeof ebx
37 [0x25]:           movr ecx, ebx
38 [0x26]:           lt cx, ecx
39 [0x27]:           jne 86
40 [0x28]:           pushl 7
41 [0x29]:           loadl adx, fp+6
42 [0x2a]:           popobj2 
43 [0x2b]:           chklen adx
44 [0x2c]:           iaload ebx, adx
45 [0x2d]:           rstore ebx
46 [0x2e]:           loadval egx
47 [0x2f]:           mov8 egx, egx
48 [0x30]:           smovr_2 egx, fp+5
49 [0x31]: line: 334 - 49pushl 3
50 [0x32]:           ipushl #4
51 [0x33]:           istore 1
53 [0x35]:           istore 97
55 [0x37]:           loadl edf, fp+5
56 [0x38]:           loadval ehf
57 [0x39]:           sub edf, ehf -> bmr
58 [0x3a]:           loadval ecf
59 [0x3b]:           add bmr, ecf -> bmr
60 [0x3c]:           movr cx, bmr
61 [0x3d]:           loadval ecx
62 [0x3e]:           mul cx, ecx -> bmr
63 [0x3f]:           rstore bmr
64 [0x40]:           call @401 // std#number<_int32, std#int>.operator+
65 [0x41]:           pushl 2
66 [0x42]:           call @478 // std#number<_int32, std#int>.operator%
67 [0x43]:           popl 3
68 [0x44]: line: 335 - 68movl 2
69 [0x45]:           movn #0
71 [0x47]:           iload egx
72 [0x48]:           rstore egx
73 [0x49]:           movl 1
74 [0x4a]:           movn #0
76 [0x4c]:           iload egx
77 [0x4d]:           rstore egx
78 [0x4e]:           loadl ecx, fp+4
79 [0x4f]:           loadval ecf
80 [0x50]:           mul ecx, ecf -> bmr
81 [0x51]:           loadval cx
82 [0x52]:           mod bmr, cx -> bmr
83 [0x53]:           rstore bmr
84 [0x54]:           ipopl 4
85 [0x55]:           jmp @32
86 [0x56]: line: 338 - 86movl 3
87 [0x57]:           returnobj
88 [0x58]:           ret

string(): nil
address: 176
file: /usr/include/sharp/0.3.0/std/string.sharp
owner: std#string
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#string
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @127 // std#string.static_init<string>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @128 // std#string.init<string>
12 [0xc]:         ret

static_init<string_builder>(): nil
address: 177
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#string_builder
1 [0x1]:         movn #1
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#string_builder
9 [0x9]:         movn #1
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#int
15 [0xf]:         dup 
16 [0x10]:         istore 255
18 [0x12]:         call @79 // std#int.init<int>
19 [0x13]:         movg @std#string_builder
20 [0x14]:         movn #0
22 [0x16]:         popobj
23 [0x17]:         ret

init<string_builder>(): nil
address: 178
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 26 - 0movl 0
1 [0x1]:          pushobj
2 [0x2]:          movg @std#string_builder
3 [0x3]:          movn #0
5 [0x5]:          movn #0
7 [0x7]:          iload adx
8 [0x8]:          newarry adx: 0
9 [0x9]:          call @179 // std#string_builder.set_data
10 [0xa]:          new_class @std#int
12 [0xc]:          dup 
13 [0xd]:          istore 128
15 [0xf]:          call @79 // std#int.init<int>
16 [0x10]:          movl 0
17 [0x11]:          movn #1
19 [0x13]:          popobj
20 [0x14]:          new_class @std#int
22 [0x16]:          dup 
23 [0x17]:          istore 0
25 [0x19]:          call @79 // std#int.init<int>
26 [0x1a]:          movl 0
27 [0x1b]:          movn #2
29 [0x1d]:          popobj
30 [0x1e]:          ret

set_data(_int8[]?): nil
address: 179
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 19 - 0pushl 1
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          popobj
5 [0x5]:          ret

space_available(var): std#bool
address: 180
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 61 - 0movl 0
1 [0x1]:          movn #2
3 [0x3]:          pushobj
4 [0x4]:          istore 1
6 [0x6]:          call @401 // std#number<_int32, std#int>.operator+
7 [0x7]:          ipushl #1
8 [0x8]:          call @398 // std#number<_int32, std#int>.operator+
9 [0x9]:          movl 0
10 [0xa]:          movn #0
12 [0xc]:          sizeof ebx
13 [0xd]:          rstore ebx
14 [0xe]:          call @502 // std#number<_int32, std#int>.operator<
15 [0xf]:          popobj2 
16 [0x10]:          returnobj
17 [0x11]:          ret

expand(std#int): nil
address: 181
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 65 - 0movl 0
1 [0x1]:          movn #2
3 [0x3]:          pushobj
4 [0x4]:          istore 1
6 [0x6]:          call @401 // std#number<_int32, std#int>.operator+
7 [0x7]:          pushl 1
8 [0x8]:          call @390 // std#number<_int32, std#int>.operator+
9 [0x9]:          movl 0
10 [0xa]:          movn #1
12 [0xc]:          movn #0
14 [0xe]:          iload egx
15 [0xf]:          rstore egx
16 [0x10]:          istore 4
18 [0x12]:          movl 0
19 [0x13]:          movn #0
21 [0x15]:          sizeof ebx
22 [0x16]:          movr ecx, ebx
23 [0x17]:          loadval ecf
24 [0x18]:          shl ecx, ecf -> bmr
25 [0x19]:          loadval cx
26 [0x1a]:          add bmr, cx -> bmr
27 [0x1b]:          rstore bmr
28 [0x1c]:          call @401 // std#number<_int32, std#int>.operator+
29 [0x1d]:          popl 2
30 [0x1e]: line: 66 - 30movl 0
31 [0x1f]:          movn #0
33 [0x21]:          pushobj
34 [0x22]:          movl 2
35 [0x23]:          movn #0
37 [0x25]:          iload egx
38 [0x26]:          rstore egx
39 [0x27]:          call @1089 // std.io#__srt_global.realloc
40 [0x28]:          ret

get_elements(): _int8[]?
address: 182
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 89 - 0movl 0
1 [0x1]:          pushobj
2 [0x2]:          call @184 // std#string_builder.to_string
3 [0x3]:          popobj2 
4 [0x4]:          checknull
5 [0x5]:          je 8
6 [0x6]:          pushobj
7 [0x7]:          call @155 // std#string.get_elements
8 [0x8]:          popobj2 
9 [0x9]:          returnobj
10 [0xa]:          ret

append(_int8[]?): std#string_builder
address: 183
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 99 - 0movl 1
1 [0x1]:          checknull
2 [0x2]:          jne 6
3 [0x3]:          movl 0
4 [0x4]:          returnobj
5 [0x5]:          ret
6 [0x6]: line: 101 - 6movl 0
7 [0x7]:           movn #0
9 [0x9]:           checknull
10 [0xa]:           jne 29
11 [0xb]: line: 102 - 11movl 0
12 [0xc]:           pushobj
13 [0xd]:           movg @std#string_builder
14 [0xe]:           movn #0
16 [0x10]:           movn #0
18 [0x12]:           iload egx
19 [0x13]:           rstore egx
20 [0x14]:           movl 1
21 [0x15]:           sizeof ebx
22 [0x16]:           movr cx, ebx
23 [0x17]:           loadval ecx
24 [0x18]:           add cx, ecx -> bmr
25 [0x19]:           movr adx, bmr
26 [0x1a]:           newarry adx: 0
27 [0x1b]:           call @179 // std#string_builder.set_data
28 [0x1c]:           jmp @51
29 [0x1d]:           movl 0
30 [0x1e]:           pushobj
31 [0x1f]:           movl 1
32 [0x20]:           sizeof ebx
33 [0x21]:           rstore ebx
34 [0x22]:           call @180 // std#string_builder.space_available
35 [0x23]:           call @957 // std#number<_int8, std#bool>.operator!
36 [0x24]:           popobj2 
37 [0x25]:           movn #0
39 [0x27]:           iload cmt
40 [0x28]:           jne 51
41 [0x29]: line: 104 - 41movl 0
42 [0x2a]:           pushobj
43 [0x2b]:           new_class @std#int
45 [0x2d]:           dup 
46 [0x2e]:           movl 1
47 [0x2f]:           sizeof ebx
48 [0x30]:           rstore ebx
49 [0x31]:           call @72 // std#int.int
50 [0x32]:           call @181 // std#string_builder.expand
51 [0x33]: line: 106 - 51pushl 1
52 [0x34]:           movl 0
53 [0x35]:           movn #0
55 [0x37]:           pushobj
56 [0x38]:           movl 0
57 [0x39]:           movn #2
59 [0x3b]:           movn #0
61 [0x3d]:           iload egx
62 [0x3e]:           rstore egx
63 [0x3f]:           istore 0
65 [0x41]:           movl 1
66 [0x42]:           sizeof ebx
67 [0x43]:           rstore ebx
68 [0x44]:           call @1091 // std.io#__srt_global.memcopy
69 [0x45]: line: 107 - 69movl 0
70 [0x46]:           movn #2
72 [0x48]:           pushobj
73 [0x49]:           movl 1
74 [0x4a]:           sizeof ebx
75 [0x4b]:           rstore ebx
76 [0x4c]:           call @756 // std#number<_int32, std#int>.operator+=
77 [0x4d]:           pop
78 [0x4e]: line: 108 - 78movl 0
79 [0x4f]:           returnobj
80 [0x50]:           ret

to_string(): std#string?
address: 184
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 140 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           pushobj
7 [0x7]:           new_class @std#int
9 [0x9]:           dup 
10 [0xa]:           istore 0
12 [0xc]:           call @72 // std#int.int
13 [0xd]:           movl 0
14 [0xe]:           movn #2
16 [0x10]:           pushobj
17 [0x11]:           istore 1
19 [0x13]:           call @401 // std#number<_int32, std#int>.operator+
20 [0x14]:           call @137 // std#string.string
21 [0x15]:           popobj2 
22 [0x16]:           returnobj
23 [0x17]:           ret

operator+=(std#printable?): std#string_builder
address: 185
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 273 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           movl 1
3 [0x3]:           checknull
4 [0x4]:           je 15
5 [0x5]:           pushobj
6 [0x6]:           invoke_delegate 294 { static=0, args=0 }
8 [0x8]:           popobj2 
9 [0x9]:           checknull
10 [0xa]:           je 15
11 [0xb]:           movn #0
13 [0xd]:           checknull
14 [0xe]:           jne 17
15 [0xf]:           newstr @74 (null)
16 [0x10]:           popobj2 
17 [0x11]:           pushobj
18 [0x12]:           call @183 // std#string_builder.append
19 [0x13]:           popobj2 
20 [0x14]:           returnobj
21 [0x15]:           ret

operator+=(std#string): std#string_builder
address: 186
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 278 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           movl 1
3 [0x3]:           movn #0
5 [0x5]:           pushobj
6 [0x6]:           call @183 // std#string_builder.append
7 [0x7]:           popobj2 
8 [0x8]:           returnobj
9 [0x9]:           ret

operator+=(_int8[]): std#string_builder
address: 187
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 288 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           pushl 1
3 [0x3]:           call @183 // std#string_builder.append
4 [0x4]:           popobj2 
5 [0x5]:           returnobj
6 [0x6]:           ret

hash(): std#int
address: 188
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 309 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 31
5 [0x5]:           call @79 // std#int.init<int>
6 [0x6]:           popl 1
7 [0x7]: line: 310 - 7new_class @std#double
9 [0x9]:           dup 
10 [0xa]:           istore 1000000009
12 [0xc]:           call @125 // std#double.init<double>
13 [0xd]:           popl 2
14 [0xe]: line: 311 - 14new_class @std#int
16 [0x10]:           dup 
17 [0x11]:           istore 0
19 [0x13]:           call @79 // std#int.init<int>
20 [0x14]:           popl 3
21 [0x15]: line: 312 - 21istore 1
23 [0x17]:           ipopl 4
24 [0x18]: line: 313 - 24istore 4294967295
26 [0x1a]:           ipopl 6
27 [0x1b]:           movl 0
28 [0x1c]:           movn #0
30 [0x1e]:           pushobj
31 [0x1f]:           popl 7
32 [0x20]:           iaddl 1, fp@6
34 [0x22]:           loadl cx, fp+6
35 [0x23]:           movl 7
36 [0x24]:           sizeof ebx
37 [0x25]:           movr ecx, ebx
38 [0x26]:           lt cx, ecx
39 [0x27]:           jne 86
40 [0x28]:           pushl 7
41 [0x29]:           loadl adx, fp+6
42 [0x2a]:           popobj2 
43 [0x2b]:           chklen adx
44 [0x2c]:           iaload ebx, adx
45 [0x2d]:           rstore ebx
46 [0x2e]:           loadval egx
47 [0x2f]:           mov8 egx, egx
48 [0x30]:           smovr_2 egx, fp+5
49 [0x31]: line: 314 - 49pushl 3
50 [0x32]:           ipushl #4
51 [0x33]:           istore 1
53 [0x35]:           istore 97
55 [0x37]:           loadl edf, fp+5
56 [0x38]:           loadval ehf
57 [0x39]:           sub edf, ehf -> bmr
58 [0x3a]:           loadval ecf
59 [0x3b]:           add bmr, ecf -> bmr
60 [0x3c]:           movr cx, bmr
61 [0x3d]:           loadval ecx
62 [0x3e]:           mul cx, ecx -> bmr
63 [0x3f]:           rstore bmr
64 [0x40]:           call @401 // std#number<_int32, std#int>.operator+
65 [0x41]:           pushl 2
66 [0x42]:           call @478 // std#number<_int32, std#int>.operator%
67 [0x43]:           popl 3
68 [0x44]: line: 315 - 68movl 2
69 [0x45]:           movn #0
71 [0x47]:           iload egx
72 [0x48]:           rstore egx
73 [0x49]:           movl 1
74 [0x4a]:           movn #0
76 [0x4c]:           iload egx
77 [0x4d]:           rstore egx
78 [0x4e]:           loadl ecx, fp+4
79 [0x4f]:           loadval ecf
80 [0x50]:           mul ecx, ecf -> bmr
81 [0x51]:           loadval cx
82 [0x52]:           mod bmr, cx -> bmr
83 [0x53]:           rstore bmr
84 [0x54]:           ipopl 4
85 [0x55]:           jmp @32
86 [0x56]: line: 318 - 86movl 3
87 [0x57]:           returnobj
88 [0x58]:           ret

string_builder(): nil
address: 189
file: /usr/include/sharp/0.3.0/std/string_builder.sharp
owner: std#string_builder
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#string_builder
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @177 // std#string_builder.static_init<string_builder>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @178 // std#string_builder.init<string_builder>
12 [0xc]:         ret

static_init<throwable>(): nil
address: 190
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#throwable
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#throwable
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#throwable
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<throwable>(): nil
address: 191
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#throwable
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 28 - 0call @4 // platform.kernel#vm.get_frame_info
1 [0x1]:          movl 0
2 [0x2]:          movn #2
4 [0x4]:          popobj
5 [0x5]:          ret

get_stack_trace(): std#string?
address: 192
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#throwable
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 17 - 0movl 0
1 [0x1]:          movn #1
3 [0x3]:          checknull
4 [0x4]:          jne 14
5 [0x5]:          movl 0
6 [0x6]:          movn #2
8 [0x8]:          checknull
9 [0x9]:          movr ebx, cmt
10 [0xa]:          not ebx, ebx
11 [0xb]:          movr cmt, ebx
12 [0xc]:          jne 14
13 [0xd]:          ldc cmt @ 5 (1)
14 [0xe]:          jne 24
15 [0xf]: line: 18 - 15movl 0
16 [0x10]:          movn #2
18 [0x12]:          pushobj
19 [0x13]:          call @5 // platform.kernel#vm.get_stack_trace
20 [0x14]:          movl 0
21 [0x15]:          movn #1
23 [0x17]:          popobj
24 [0x18]: line: 22 - 24movl 0
25 [0x19]:          movn #1
27 [0x1b]:          returnobj
28 [0x1c]:          ret

throwable(std#string?): nil
address: 193
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#throwable
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#throwable
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @190 // std#throwable.static_init<throwable>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @191 // std#throwable.init<throwable>
12 [0xc]: line: 33 - 12movl 1
13 [0xd]:          checknull
14 [0xe]:          je 17
15 [0xf]:          movn #0
17 [0x11]:          pushobj
18 [0x12]:          movl 0
19 [0x13]:          movl 0
20 [0x14]:          movn #0
22 [0x16]:          popobj
23 [0x17]:          ret

get_message(): std#string
address: 194
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#throwable
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 37 - 0new_class @std#string
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          pushobj
7 [0x7]:          call @130 // std#string.string
8 [0x8]:          popobj2 
9 [0x9]:          returnobj
10 [0xa]:          ret

to_string(): std#string?
address: 195
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#throwable
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 40 - 0new_class @std#string
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          pushobj
7 [0x7]:          call @130 // std#string.string
8 [0x8]:          popobj2 
9 [0x9]:          returnobj
10 [0xa]:          ret

throwable(): nil
address: 196
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#throwable
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#throwable
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @190 // std#throwable.static_init<throwable>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @191 // std#throwable.init<throwable>
12 [0xc]:         ret

static_init<exception>(): nil
address: 197
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<exception>(): nil
address: 198
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

exception(std#string?): nil
address: 199
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @193 // std#throwable.throwable
4 [0x4]:         movg @std#exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @197 // std#exception.static_init<exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @198 // std#exception.init<exception>
13 [0xd]:         ret

exception(): nil
address: 200
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @196 // std#throwable.throwable
3 [0x3]:         movg @std#exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @197 // std#exception.static_init<exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @198 // std#exception.init<exception>
12 [0xc]:         ret

static_init<illegal_argument_exception>(): nil
address: 201
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#illegal_argument_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#illegal_argument_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#illegal_argument_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<illegal_argument_exception>(): nil
address: 202
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#illegal_argument_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

illegal_argument_exception(std#string?): nil
address: 203
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#illegal_argument_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#illegal_argument_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @201 // std#illegal_argument_exception.static_init<illegal_argument_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @202 // std#illegal_argument_exception.init<illegal_argument_exception>
13 [0xd]:         ret

illegal_argument_exception(): nil
address: 204
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#illegal_argument_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#illegal_argument_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @201 // std#illegal_argument_exception.static_init<illegal_argument_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @202 // std#illegal_argument_exception.init<illegal_argument_exception>
12 [0xc]:         ret

static_init<illegal_state_exception>(): nil
address: 205
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#illegal_state_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#illegal_state_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#illegal_state_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<illegal_state_exception>(): nil
address: 206
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#illegal_state_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

illegal_state_exception(std#string?): nil
address: 207
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#illegal_state_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#illegal_state_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @205 // std#illegal_state_exception.static_init<illegal_state_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @206 // std#illegal_state_exception.init<illegal_state_exception>
13 [0xd]:         ret

illegal_state_exception(): nil
address: 208
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#illegal_state_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#illegal_state_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @205 // std#illegal_state_exception.static_init<illegal_state_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @206 // std#illegal_state_exception.init<illegal_state_exception>
12 [0xc]:         ret

static_init<out_of_bounds_exception>(): nil
address: 209
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#out_of_bounds_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#out_of_bounds_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#out_of_bounds_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<out_of_bounds_exception>(): nil
address: 210
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#out_of_bounds_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

out_of_bounds_exception(std#string?): nil
address: 211
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#out_of_bounds_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#out_of_bounds_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @209 // std#out_of_bounds_exception.static_init<out_of_bounds_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @210 // std#out_of_bounds_exception.init<out_of_bounds_exception>
13 [0xd]:         ret

out_of_bounds_exception(): nil
address: 212
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#out_of_bounds_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#out_of_bounds_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @209 // std#out_of_bounds_exception.static_init<out_of_bounds_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @210 // std#out_of_bounds_exception.init<out_of_bounds_exception>
12 [0xc]:         ret

static_init<invalid_operation_exception>(): nil
address: 213
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#invalid_operation_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#invalid_operation_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#invalid_operation_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<invalid_operation_exception>(): nil
address: 214
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#invalid_operation_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

invalid_operation_exception(std#string?): nil
address: 215
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#invalid_operation_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#invalid_operation_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @213 // std#invalid_operation_exception.static_init<invalid_operation_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @214 // std#invalid_operation_exception.init<invalid_operation_exception>
13 [0xd]:         ret

invalid_operation_exception(): nil
address: 216
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#invalid_operation_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#invalid_operation_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @213 // std#invalid_operation_exception.static_init<invalid_operation_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @214 // std#invalid_operation_exception.init<invalid_operation_exception>
12 [0xc]:         ret

static_init<nullptr_exception>(): nil
address: 217
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#nullptr_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#nullptr_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#nullptr_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<nullptr_exception>(): nil
address: 218
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#nullptr_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

nullptr_exception(std#string?): nil
address: 219
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#nullptr_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#nullptr_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @217 // std#nullptr_exception.static_init<nullptr_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @218 // std#nullptr_exception.init<nullptr_exception>
13 [0xd]:         ret

nullptr_exception(): nil
address: 220
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#nullptr_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#nullptr_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @217 // std#nullptr_exception.static_init<nullptr_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @218 // std#nullptr_exception.init<nullptr_exception>
12 [0xc]:         ret

static_init<runtime_exception>(): nil
address: 221
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#runtime_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#runtime_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#runtime_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<runtime_exception>(): nil
address: 222
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#runtime_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

runtime_exception(std#string?): nil
address: 223
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#runtime_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#runtime_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @221 // std#runtime_exception.static_init<runtime_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @222 // std#runtime_exception.init<runtime_exception>
13 [0xd]:         ret

runtime_exception(): nil
address: 224
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#runtime_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#runtime_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @221 // std#runtime_exception.static_init<runtime_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @222 // std#runtime_exception.init<runtime_exception>
12 [0xc]:         ret

static_init<stack_overflow_exception>(): nil
address: 225
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#stack_overflow_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#stack_overflow_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#stack_overflow_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<stack_overflow_exception>(): nil
address: 226
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#stack_overflow_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

stack_overflow_exception(std#string?): nil
address: 227
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#stack_overflow_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#stack_overflow_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @225 // std#stack_overflow_exception.static_init<stack_overflow_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @226 // std#stack_overflow_exception.init<stack_overflow_exception>
13 [0xd]:         ret

stack_overflow_exception(): nil
address: 228
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#stack_overflow_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#stack_overflow_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @225 // std#stack_overflow_exception.static_init<stack_overflow_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @226 // std#stack_overflow_exception.init<stack_overflow_exception>
12 [0xc]:         ret

static_init<thread_stack_exception>(): nil
address: 229
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#thread_stack_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#thread_stack_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#thread_stack_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<thread_stack_exception>(): nil
address: 230
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#thread_stack_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

thread_stack_exception(std#string?): nil
address: 231
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#thread_stack_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#thread_stack_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @229 // std#thread_stack_exception.static_init<thread_stack_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @230 // std#thread_stack_exception.init<thread_stack_exception>
13 [0xd]:         ret

thread_stack_exception(): nil
address: 232
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#thread_stack_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#thread_stack_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @229 // std#thread_stack_exception.static_init<thread_stack_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @230 // std#thread_stack_exception.init<thread_stack_exception>
12 [0xc]:         ret

static_init<class_cast_exception>(): nil
address: 233
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#class_cast_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#class_cast_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#class_cast_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<class_cast_exception>(): nil
address: 234
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#class_cast_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

class_cast_exception(std#string?): nil
address: 235
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#class_cast_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#class_cast_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @233 // std#class_cast_exception.static_init<class_cast_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @234 // std#class_cast_exception.init<class_cast_exception>
13 [0xd]:         ret

class_cast_exception(): nil
address: 236
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#class_cast_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#class_cast_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @233 // std#class_cast_exception.static_init<class_cast_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @234 // std#class_cast_exception.init<class_cast_exception>
12 [0xc]:         ret

static_init<out_of_memory_exception>(): nil
address: 237
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#out_of_memory_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#out_of_memory_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#out_of_memory_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<out_of_memory_exception>(): nil
address: 238
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#out_of_memory_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

out_of_memory_exception(std#string?): nil
address: 239
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#out_of_memory_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#out_of_memory_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @237 // std#out_of_memory_exception.static_init<out_of_memory_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @238 // std#out_of_memory_exception.init<out_of_memory_exception>
13 [0xd]:         ret

out_of_memory_exception(): nil
address: 240
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#out_of_memory_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#out_of_memory_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @237 // std#out_of_memory_exception.static_init<out_of_memory_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @238 // std#out_of_memory_exception.init<out_of_memory_exception>
12 [0xc]:         ret

static_init<incompatible_class_exception>(): nil
address: 241
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#incompatible_class_exception
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#incompatible_class_exception
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#incompatible_class_exception
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<incompatible_class_exception>(): nil
address: 242
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#incompatible_class_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

incompatible_class_exception(std#string?): nil
address: 243
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#incompatible_class_exception
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#incompatible_class_exception
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @241 // std#incompatible_class_exception.static_init<incompatible_class_exception>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @242 // std#incompatible_class_exception.init<incompatible_class_exception>
13 [0xd]:         ret

incompatible_class_exception(): nil
address: 244
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#incompatible_class_exception
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#incompatible_class_exception
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @241 // std#incompatible_class_exception.static_init<incompatible_class_exception>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @242 // std#incompatible_class_exception.init<incompatible_class_exception>
12 [0xc]:         ret

static_init<object_import_error>(): nil
address: 245
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#object_import_error
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#object_import_error
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#object_import_error
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<object_import_error>(): nil
address: 246
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#object_import_error
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

object_import_error(std#string?): nil
address: 247
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#object_import_error
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @255 // std#error.error
4 [0x4]:         movg @std#object_import_error
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @245 // std#object_import_error.static_init<object_import_error>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @246 // std#object_import_error.init<object_import_error>
13 [0xd]:         ret

object_import_error(): nil
address: 248
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#object_import_error
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @256 // std#error.error
3 [0x3]:         movg @std#object_import_error
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @245 // std#object_import_error.static_init<object_import_error>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @246 // std#object_import_error.init<object_import_error>
12 [0xc]:         ret

static_init<unsatisfied_link_error>(): nil
address: 249
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#unsatisfied_link_error
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#unsatisfied_link_error
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#unsatisfied_link_error
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<unsatisfied_link_error>(): nil
address: 250
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#unsatisfied_link_error
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

unsatisfied_link_error(std#string?): nil
address: 251
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#unsatisfied_link_error
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @255 // std#error.error
4 [0x4]:         movg @std#unsatisfied_link_error
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @249 // std#unsatisfied_link_error.static_init<unsatisfied_link_error>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @250 // std#unsatisfied_link_error.init<unsatisfied_link_error>
13 [0xd]:         ret

unsatisfied_link_error(): nil
address: 252
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#unsatisfied_link_error
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @256 // std#error.error
3 [0x3]:         movg @std#unsatisfied_link_error
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @249 // std#unsatisfied_link_error.static_init<unsatisfied_link_error>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @250 // std#unsatisfied_link_error.init<unsatisfied_link_error>
12 [0xc]:         ret

static_init<error>(): nil
address: 253
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#error
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#error
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#error
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<error>(): nil
address: 254
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#error
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

error(std#string?): nil
address: 255
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#error
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         pushl 1
3 [0x3]:         call @199 // std#exception.exception
4 [0x4]:         movg @std#error
5 [0x5]:         movn #0
7 [0x7]:         iload cmt
8 [0x8]:         je 10
9 [0x9]:         call @253 // std#error.static_init<error>
10 [0xa]:         movl 0
11 [0xb]:         pushobj
12 [0xc]:         call @254 // std#error.init<error>
13 [0xd]:         ret

error(): nil
address: 256
file: /usr/include/sharp/0.3.0/std/exceptions.sharp
owner: std#error
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @200 // std#exception.exception
3 [0x3]:         movg @std#error
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @253 // std#error.static_init<error>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @254 // std#error.init<error>
12 [0xc]:         ret

nano_time(): std#long
address: 257
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time
frameStackOffset: 0
fpOffset: -1
spOffset: -1
stackSize: 0
code:

0 [0x0]: line: 21 - 0call @27 // platform.kernel#vm.time_in_nanoseconds
1 [0x1]:          popobj2 
2 [0x2]:          returnobj
3 [0x3]:          ret

nano_to_micro(std#long): std#long
address: 258
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 28 - 0pushl 0
1 [0x1]:          istore 1000
3 [0x3]:          call @318 // std#number<_int64, std#long>.operator/
4 [0x4]:          popobj2 
5 [0x5]:          returnobj
6 [0x6]:          ret

nano_to_mills(std#long): std#long
address: 259
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 32 - 0pushl 0
1 [0x1]:          call @258 // std#time.nano_to_micro
2 [0x2]:          istore 1000
4 [0x4]:          call @318 // std#number<_int64, std#long>.operator/
5 [0x5]:          popobj2 
6 [0x6]:          returnobj
7 [0x7]:          ret

mills_time(): std#long
address: 260
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time
frameStackOffset: 0
fpOffset: -1
spOffset: -1
stackSize: 0
code:

0 [0x0]: line: 40 - 0call @257 // std#time.nano_time
1 [0x1]:          call @259 // std#time.nano_to_mills
2 [0x2]:          popobj2 
3 [0x3]:          returnobj
4 [0x4]:          ret

sleep(std#time_unit, std#long): nil
address: 261
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 52 - 0pushl 1
1 [0x1]:          istore 0
3 [0x3]:          call @319 // std#number<_int64, std#long>.operator<
4 [0x4]:          popobj2 
5 [0x5]:          movn #0
7 [0x7]:          iload cmt
8 [0x8]:          jne 21
9 [0x9]: line: 53 - 9new_class @std#error
11 [0xb]:          dup 
12 [0xc]:          new_class @std#string
14 [0xe]:          dup 
15 [0xf]:          newstr @79 (cannot sleep for negative time: )
16 [0x10]:          call @130 // std#string.string
17 [0x11]:          pushl 1
18 [0x12]:          call @145 // std#string.operator+
19 [0x13]:          call @255 // std#error.error
20 [0x14]:          throw 
21 [0x15]: line: 55 - 21movg @std#time_unit
22 [0x16]:          movn #0
24 [0x18]:          pushobj
25 [0x19]:          pushl 0
26 [0x1a]:          itest cmt
27 [0x1b]:          jne 34
28 [0x1c]: line: 56 - 28pushl 1
29 [0x1d]:          istore 1000000
31 [0x1f]:          call @322 // std#number<_int64, std#long>.operator*=
32 [0x20]:          pop
33 [0x21]:          jmp @59
34 [0x22]:          movg @std#time_unit
35 [0x23]:          movn #1
37 [0x25]:          pushobj
38 [0x26]:          pushl 0
39 [0x27]:          itest cmt
40 [0x28]:          jne 47
41 [0x29]: line: 58 - 41pushl 1
42 [0x2a]:          istore 1000
44 [0x2c]:          call @322 // std#number<_int64, std#long>.operator*=
45 [0x2d]:          pop
46 [0x2e]:          jmp @59
47 [0x2f]:          movg @std#time_unit
48 [0x30]:          movn #3
50 [0x32]:          pushobj
51 [0x33]:          pushl 0
52 [0x34]:          itest cmt
53 [0x35]:          jne 59
54 [0x36]: line: 60 - 54pushl 1
55 [0x37]:          istore 1000
57 [0x39]:          call @323 // std#number<_int64, std#long>.operator/=
58 [0x3a]:          pop
59 [0x3b]: line: 64 - 59movl 1
60 [0x3c]:          movn #0
62 [0x3e]:          iload egx
63 [0x3f]:          rstore egx
64 [0x40]:          loadval egx
65 [0x41]:          mov64 egx, egx
66 [0x42]:          smovr_2 egx, fp+2
67 [0x43]: line: 65 - 67loadl ebx, fp+2
68 [0x44]:          sleep ebx
69 [0x45]:          ret

wait(std#time_unit, std#long): nil
address: 262
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 124 - 0pushl 1
1 [0x1]:           movg @std#time
2 [0x2]:           movn #0
4 [0x4]:           pushobj
5 [0x5]:           call @311 // std#number<_int64, std#long>.operator!=
6 [0x6]:           popobj2 
7 [0x7]:           movn #0
9 [0x9]:           iload cmt
10 [0xa]:           jne 70
11 [0xb]: line: 125 - 11pushl 1
12 [0xc]:           istore 0
14 [0xe]:           call @319 // std#number<_int64, std#long>.operator<
15 [0xf]:           popobj2 
16 [0x10]:           movn #0
18 [0x12]:           iload cmt
19 [0x13]:           jne 32
20 [0x14]: line: 126 - 20new_class @std#error
22 [0x16]:           dup 
23 [0x17]:           new_class @std#string
25 [0x19]:           dup 
26 [0x1a]:           newstr @79 (cannot sleep for negative time: )
27 [0x1b]:           call @130 // std#string.string
28 [0x1c]:           pushl 1
29 [0x1d]:           call @145 // std#string.operator+
30 [0x1e]:           call @255 // std#error.error
31 [0x1f]:           throw 
32 [0x20]: line: 128 - 32movg @std#time_unit
33 [0x21]:           movn #0
35 [0x23]:           pushobj
36 [0x24]:           pushl 0
37 [0x25]:           itest cmt
38 [0x26]:           jne 45
39 [0x27]: line: 129 - 39pushl 1
40 [0x28]:           istore 1000
42 [0x2a]:           call @322 // std#number<_int64, std#long>.operator*=
43 [0x2b]:           pop
44 [0x2c]:           jmp @70
45 [0x2d]:           movg @std#time_unit
46 [0x2e]:           movn #2
48 [0x30]:           pushobj
49 [0x31]:           pushl 0
50 [0x32]:           itest cmt
51 [0x33]:           jne 58
52 [0x34]: line: 131 - 52pushl 1
53 [0x35]:           istore 1000
55 [0x37]:           call @323 // std#number<_int64, std#long>.operator/=
56 [0x38]:           pop
57 [0x39]:           jmp @70
58 [0x3a]:           movg @std#time_unit
59 [0x3b]:           movn #3
61 [0x3d]:           pushobj
62 [0x3e]:           pushl 0
63 [0x3f]:           itest cmt
64 [0x40]:           jne 70
65 [0x41]: line: 133 - 65pushl 1
66 [0x42]:           istore 1000000
68 [0x44]:           call @323 // std#number<_int64, std#long>.operator/=
69 [0x45]:           pop
70 [0x46]:           ret

static_init<time_request>(): nil
address: 263
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time_request
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#time_request
1 [0x1]:         movn #9
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#time_request
9 [0x9]:         movn #9
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<time_request>(): nil
address: 264
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time_request
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

time_request(): nil
address: 265
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time_request
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

static_init<time_unit>(): nil
address: 266
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time_unit
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#time_unit
1 [0x1]:         movn #4
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#time_unit
9 [0x9]:         movn #4
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<time_unit>(): nil
address: 267
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time_unit
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

time_unit(): nil
address: 268
file: /usr/include/sharp/0.3.0/std/time.sharp
owner: std#time_unit
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

static_init<_enum_>(): nil
address: 269
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#_enum_
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#_enum_
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<_enum_>(): nil
address: 270
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_name(_int8[]?): nil
address: 271
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 18 - 0pushl 1
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          popobj
5 [0x5]:          ret

set_ordinal(var): nil
address: 272
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 20 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movn #1
4 [0x4]:          loadval egx
5 [0x5]:          imov egx
6 [0x6]:          ret

_enum_(_int8[], var): nil
address: 273
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 2
spOffset: 3
stackSize: 3
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#_enum_
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @269 // std#_enum_.static_init<_enum_>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @270 // std#_enum_.init<_enum_>
12 [0xc]: line: 23 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #2
15 [0xf]:          call @272 // std#_enum_.set_ordinal
16 [0x10]: line: 24 - 16movl 0
17 [0x11]:          pushobj
18 [0x12]:          pushl 1
19 [0x13]:          call @271 // std#_enum_.set_name
20 [0x14]:          ret

_enum_(std#_enum_): nil
address: 274
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#_enum_
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @269 // std#_enum_.static_init<_enum_>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @270 // std#_enum_.init<_enum_>
12 [0xc]: line: 28 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          movl 1
15 [0xf]:          movn #1
17 [0x11]:          iload egx
18 [0x12]:          rstore egx
19 [0x13]:          call @272 // std#_enum_.set_ordinal
20 [0x14]: line: 29 - 20movl 0
21 [0x15]:          pushobj
22 [0x16]:          movl 1
23 [0x17]:          movn #0
25 [0x19]:          pushobj
26 [0x1a]:          istore 0
28 [0x1c]:          movl 1
29 [0x1d]:          movn #0
31 [0x1f]:          sizeof ebx
32 [0x20]:          rstore ebx
33 [0x21]:          call @1093 // std.io#__srt_global.copy
34 [0x22]:          call @271 // std#_enum_.set_name
35 [0x23]:          ret

operator!=(std#_enum_): std#bool
address: 275
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 34 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #1
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #1
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#int): std#bool
address: 276
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 38 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #1
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#_enum_): std#bool
address: 277
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 42 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #1
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #1
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#int): std#bool
address: 278
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 46 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #1
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

to_string(): std#string
address: 279
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 50 - 0new_class @std#string
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          pushobj
7 [0x7]:          call @130 // std#string.string
8 [0x8]:          popobj2 
9 [0x9]:          returnobj
10 [0xa]:          ret

_enum_(): nil
address: 280
file: /usr/include/sharp/0.3.0/std/enum.sharp
owner: std#_enum_
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#_enum_
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @269 // std#_enum_.static_init<_enum_>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @270 // std#_enum_.init<_enum_>
12 [0xc]:         ret

static_init<char_array>(): nil
address: 281
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#char_array
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#char_array
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<char_array>(): nil
address: 282
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         pushnull 
1 [0x1]:         movl 0
2 [0x2]:         movn #0
4 [0x4]:         popobj
5 [0x5]:         ret

set_data(_int8[]?): nil
address: 283
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 6 - 0pushl 1
1 [0x1]:         movl 0
2 [0x2]:         movn #0
4 [0x4]:         popobj
5 [0x5]:         ret

char_array(_int8[]?): nil
address: 284
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#char_array
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @281 // std#char_array.static_init<char_array>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @282 // std#char_array.init<char_array>
12 [0xc]: line: 10 - 12movl 0
13 [0xd]:          movl 0
14 [0xe]:          pushobj
15 [0xf]:          pushl 1
16 [0x10]:          call @283 // std#char_array.set_data
17 [0x11]:          ret

char_array(var[]?): nil
address: 285
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#char_array
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @281 // std#char_array.static_init<char_array>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @282 // std#char_array.init<char_array>
12 [0xc]: line: 14 - 12movl 0
13 [0xd]:          movl 0
14 [0xe]:          pushobj
15 [0xf]:          movl 1
16 [0x10]:          sizeof ebx
17 [0x11]:          movr adx, ebx
18 [0x12]:          newarry adx: 0
19 [0x13]:          call @283 // std#char_array.set_data
20 [0x14]: line: 15 - 20new_class @std#int
22 [0x16]:          dup 
23 [0x17]:          istore 0
25 [0x19]:          call @79 // std#int.init<int>
26 [0x1a]:          popl 2
27 [0x1b]:          pushl 2
28 [0x1c]:          movl 1
29 [0x1d]:          sizeof ebx
30 [0x1e]:          rstore ebx
31 [0x1f]:          call @502 // std#number<_int32, std#int>.operator<
32 [0x20]:          popobj2 
33 [0x21]:          movn #0
35 [0x23]:          iload cmt
36 [0x24]:          jne 65
37 [0x25]: line: 16 - 37pushl 1
38 [0x26]:          movl 2
39 [0x27]:          movn #0
41 [0x29]:          iload adx
42 [0x2a]:          popobj2 
43 [0x2b]:          chklen adx
44 [0x2c]:          iaload ebx, adx
45 [0x2d]:          rstore ebx
46 [0x2e]:          movl 0
47 [0x2f]:          movl 0
48 [0x30]:          movn #0
50 [0x32]:          pushobj
51 [0x33]:          movl 2
52 [0x34]:          movn #0
54 [0x36]:          iload adx
55 [0x37]:          popobj2 
56 [0x38]:          chklen adx
57 [0x39]:          loadval ebx
58 [0x3a]:          rmov adx, ebx
59 [0x3b]:          pushl 2
60 [0x3c]:          istore 1
62 [0x3e]:          call @739 // std#number<_int32, std#int>.operator++
63 [0x3f]:          pop
64 [0x40]:          jmp @27
65 [0x41]:          ret

char_array(_int16[]?): nil
address: 286
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#char_array
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @281 // std#char_array.static_init<char_array>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @282 // std#char_array.init<char_array>
12 [0xc]: line: 21 - 12movl 0
13 [0xd]:          movl 0
14 [0xe]:          pushobj
15 [0xf]:          movl 1
16 [0x10]:          sizeof ebx
17 [0x11]:          movr adx, ebx
18 [0x12]:          newarry adx: 0
19 [0x13]:          call @283 // std#char_array.set_data
20 [0x14]: line: 22 - 20new_class @std#int
22 [0x16]:          dup 
23 [0x17]:          istore 0
25 [0x19]:          call @79 // std#int.init<int>
26 [0x1a]:          popl 2
27 [0x1b]:          pushl 2
28 [0x1c]:          movl 1
29 [0x1d]:          sizeof ebx
30 [0x1e]:          rstore ebx
31 [0x1f]:          call @502 // std#number<_int32, std#int>.operator<
32 [0x20]:          popobj2 
33 [0x21]:          movn #0
35 [0x23]:          iload cmt
36 [0x24]:          jne 65
37 [0x25]: line: 23 - 37pushl 1
38 [0x26]:          movl 2
39 [0x27]:          movn #0
41 [0x29]:          iload adx
42 [0x2a]:          popobj2 
43 [0x2b]:          chklen adx
44 [0x2c]:          iaload ebx, adx
45 [0x2d]:          rstore ebx
46 [0x2e]:          movl 0
47 [0x2f]:          movl 0
48 [0x30]:          movn #0
50 [0x32]:          pushobj
51 [0x33]:          movl 2
52 [0x34]:          movn #0
54 [0x36]:          iload adx
55 [0x37]:          popobj2 
56 [0x38]:          chklen adx
57 [0x39]:          loadval ebx
58 [0x3a]:          rmov adx, ebx
59 [0x3b]:          pushl 2
60 [0x3c]:          istore 1
62 [0x3e]:          call @739 // std#number<_int32, std#int>.operator++
63 [0x3f]:          pop
64 [0x40]:          jmp @27
65 [0x41]:          ret

char_array(std#char[]?): nil
address: 287
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#char_array
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @281 // std#char_array.static_init<char_array>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @282 // std#char_array.init<char_array>
12 [0xc]: line: 28 - 12movl 0
13 [0xd]:          movl 0
14 [0xe]:          pushobj
15 [0xf]:          movl 1
16 [0x10]:          sizeof ebx
17 [0x11]:          movr adx, ebx
18 [0x12]:          newarry adx: 0
19 [0x13]:          call @283 // std#char_array.set_data
20 [0x14]: line: 29 - 20new_class @std#int
22 [0x16]:          dup 
23 [0x17]:          istore 0
25 [0x19]:          call @79 // std#int.init<int>
26 [0x1a]:          popl 2
27 [0x1b]:          pushl 2
28 [0x1c]:          movl 1
29 [0x1d]:          sizeof ebx
30 [0x1e]:          rstore ebx
31 [0x1f]:          call @502 // std#number<_int32, std#int>.operator<
32 [0x20]:          popobj2 
33 [0x21]:          movn #0
35 [0x23]:          iload cmt
36 [0x24]:          jne 68
37 [0x25]: line: 30 - 37pushl 1
38 [0x26]:          movl 2
39 [0x27]:          movn #0
41 [0x29]:          iload adx
42 [0x2a]:          popobj2 
43 [0x2b]:          chklen adx
44 [0x2c]:          movnd adx
45 [0x2d]:          movn #0
47 [0x2f]:          iload egx
48 [0x30]:          rstore egx
49 [0x31]:          movl 0
50 [0x32]:          movl 0
51 [0x33]:          movn #0
53 [0x35]:          pushobj
54 [0x36]:          movl 2
55 [0x37]:          movn #0
57 [0x39]:          iload adx
58 [0x3a]:          popobj2 
59 [0x3b]:          chklen adx
60 [0x3c]:          loadval ebx
61 [0x3d]:          rmov adx, ebx
62 [0x3e]:          pushl 2
63 [0x3f]:          istore 1
65 [0x41]:          call @739 // std#number<_int32, std#int>.operator++
66 [0x42]:          pop
67 [0x43]:          jmp @27
68 [0x44]:          ret

char_array(std#uchar[]?): nil
address: 288
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#char_array
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @281 // std#char_array.static_init<char_array>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @282 // std#char_array.init<char_array>
12 [0xc]: line: 35 - 12movl 0
13 [0xd]:          movl 0
14 [0xe]:          pushobj
15 [0xf]:          movl 1
16 [0x10]:          sizeof ebx
17 [0x11]:          movr adx, ebx
18 [0x12]:          newarry adx: 0
19 [0x13]:          call @283 // std#char_array.set_data
20 [0x14]: line: 36 - 20new_class @std#int
22 [0x16]:          dup 
23 [0x17]:          istore 0
25 [0x19]:          call @79 // std#int.init<int>
26 [0x1a]:          popl 2
27 [0x1b]:          pushl 2
28 [0x1c]:          movl 1
29 [0x1d]:          sizeof ebx
30 [0x1e]:          rstore ebx
31 [0x1f]:          call @502 // std#number<_int32, std#int>.operator<
32 [0x20]:          popobj2 
33 [0x21]:          movn #0
35 [0x23]:          iload cmt
36 [0x24]:          jne 68
37 [0x25]: line: 37 - 37pushl 1
38 [0x26]:          movl 2
39 [0x27]:          movn #0
41 [0x29]:          iload adx
42 [0x2a]:          popobj2 
43 [0x2b]:          chklen adx
44 [0x2c]:          movnd adx
45 [0x2d]:          movn #0
47 [0x2f]:          iload egx
48 [0x30]:          rstore egx
49 [0x31]:          movl 0
50 [0x32]:          movl 0
51 [0x33]:          movn #0
53 [0x35]:          pushobj
54 [0x36]:          movl 2
55 [0x37]:          movn #0
57 [0x39]:          iload adx
58 [0x3a]:          popobj2 
59 [0x3b]:          chklen adx
60 [0x3c]:          loadval ebx
61 [0x3d]:          rmov adx, ebx
62 [0x3e]:          pushl 2
63 [0x3f]:          istore 1
65 [0x41]:          call @739 // std#number<_int32, std#int>.operator++
66 [0x42]:          pop
67 [0x43]:          jmp @27
68 [0x44]:          ret

char_array(std#char_array?): nil
address: 289
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#char_array
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @281 // std#char_array.static_init<char_array>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @282 // std#char_array.init<char_array>
12 [0xc]: line: 42 - 12movl 0
13 [0xd]:          movl 0
14 [0xe]:          pushobj
15 [0xf]:          movl 1
16 [0x10]:          checknull
17 [0x11]:          je 20
18 [0x12]:          movn #0
20 [0x14]:          pushobj
21 [0x15]:          call @283 // std#char_array.set_data
22 [0x16]:          ret

char_array(std#string?): nil
address: 290
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#char_array
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @281 // std#char_array.static_init<char_array>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @282 // std#char_array.init<char_array>
12 [0xc]: line: 46 - 12movl 0
13 [0xd]:          movl 0
14 [0xe]:          pushobj
15 [0xf]:          movl 1
16 [0x10]:          checknull
17 [0x11]:          je 20
18 [0x12]:          pushobj
19 [0x13]:          call @155 // std#string.get_elements
20 [0x14]:          call @283 // std#char_array.set_data
21 [0x15]:          ret

get_elements(): _int8[]?
address: 291
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 49 - 0movl 0
1 [0x1]:          movn #0
3 [0x3]:          returnobj
4 [0x4]:          ret

to_string(): std#string
address: 292
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 51 - 0new_class @std#string
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          pushobj
7 [0x7]:          call @130 // std#string.string
8 [0x8]:          popobj2 
9 [0x9]:          returnobj
10 [0xa]:          ret

char_array(): nil
address: 293
file: /usr/include/sharp/0.3.0/std/char_array.sharp
owner: std#char_array
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#char_array
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @281 // std#char_array.static_init<char_array>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @282 // std#char_array.init<char_array>
12 [0xc]:         ret

to_string(): std#string?
address: 294
file: /usr/include/sharp/0.3.0/std/printable.sharp
owner: std#printable
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


to_string(): std#string?
address: 295
file: /usr/include/sharp/0.3.0/std/nil.sharp
owner: std#_nil
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 13 - 0new_class @std#string
2 [0x2]:          dup 
3 [0x3]:          newstr @80 (nil)
4 [0x4]:          call @130 // std#string.string
5 [0x5]:          popobj2 
6 [0x6]:          returnobj
7 [0x7]:          ret

hash(): std#int
address: 296
file: /usr/include/sharp/0.3.0/std/unique.sharp
owner: std#unique
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


static_init<number<_uint64, std#ulong>>(): nil
address: 297
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint64, std#ulong>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<_uint64, std#ulong>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<_uint64, std#ulong>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<_uint64, std#ulong>>(): nil
address: 298
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint64, std#ulong>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(_uint64): nil
address: 299
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint64, std#ulong>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          movu64 egx, egx
7 [0x7]:          imov egx
8 [0x8]:          ret

number(_int32): nil
address: 300
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint64, std#ulong>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @993 // std#base_number<std#ulong>.base_number<std#ulong>
3 [0x3]:         movg @std#number<_uint64, std#ulong>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @297 // std#number<_uint64, std#ulong>.static_init<number<_uint64, std#ulong>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @298 // std#number<_uint64, std#ulong>.init<number<_uint64, std#ulong>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @299 // std#number<_uint64, std#ulong>.set_value
16 [0x10]:          ret

number(_uint64): nil
address: 301
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint64, std#ulong>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @993 // std#base_number<std#ulong>.base_number<std#ulong>
3 [0x3]:         movg @std#number<_uint64, std#ulong>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @297 // std#number<_uint64, std#ulong>.static_init<number<_uint64, std#ulong>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @298 // std#number<_uint64, std#ulong>.init<number<_uint64, std#ulong>>
12 [0xc]: line: 42 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @299 // std#number<_uint64, std#ulong>.set_value
16 [0x10]:          ret

hash(): std#int
address: 302
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint64, std#ulong>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @75 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

to_string(): std#string?
address: 303
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint64, std#ulong>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @124 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

static_init<number<_int64, std#long>>(): nil
address: 304
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<_int64, std#long>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<_int64, std#long>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<_int64, std#long>>(): nil
address: 305
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(_int64): nil
address: 306
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          mov64 egx, egx
7 [0x7]:          imov egx
8 [0x8]:          ret

number(var): nil
address: 307
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @996 // std#base_number<std#long>.base_number<std#long>
3 [0x3]:         movg @std#number<_int64, std#long>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @304 // std#number<_int64, std#long>.static_init<number<_int64, std#long>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @305 // std#number<_int64, std#long>.init<number<_int64, std#long>>
12 [0xc]: line: 18 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @306 // std#number<_int64, std#long>.set_value
16 [0x10]:          ret

number(_int32): nil
address: 308
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @996 // std#base_number<std#long>.base_number<std#long>
3 [0x3]:         movg @std#number<_int64, std#long>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @304 // std#number<_int64, std#long>.static_init<number<_int64, std#long>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @305 // std#number<_int64, std#long>.init<number<_int64, std#long>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @306 // std#number<_int64, std#long>.set_value
16 [0x10]:          ret

number(_int64): nil
address: 309
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @996 // std#base_number<std#long>.base_number<std#long>
3 [0x3]:         movg @std#number<_int64, std#long>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @304 // std#number<_int64, std#long>.static_init<number<_int64, std#long>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @305 // std#number<_int64, std#long>.init<number<_int64, std#long>>
12 [0xc]: line: 39 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @306 // std#number<_int64, std#long>.set_value
16 [0x10]:          ret

hash(): std#int
address: 310
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @74 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

operator!=(std#int): std#bool
address: 311
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 55 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(_int32): std#bool
address: 312
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 76 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator+(std#long): std#long
address: 313
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 90 - 0new_class @std#long
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @56 // std#long.long
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(_int32): std#long
address: 314
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 103 - 0new_class @std#long
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @56 // std#long.long
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(std#long): std#long
address: 315
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 111 - 0new_class @std#long
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @56 // std#long.long
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(_int64): std#long
address: 316
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 125 - 0new_class @std#long
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @56 // std#long.long
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*(_int32): std#long
address: 317
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 147 - 0new_class @std#long
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @56 // std#long.long
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(_int32): std#long
address: 318
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 168 - 0new_class @std#long
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @56 // std#long.long
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(_int32): std#bool
address: 319
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 210 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(_int32): std#bool
address: 320
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 231 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(_int32): std#long
address: 321
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 378 - 0new_class @std#long
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @56 // std#long.long
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(_int32): std#long
address: 322
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 520 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov64 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 7 // std#long
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(_int32): std#long
address: 323
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 541 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov64 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 7 // std#long
10 [0xa]:           returnobj
11 [0xb]:           ret

to_string(): std#string?
address: 324
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @123 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

to_int(): std#int
address: 325
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 669 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @74 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_double(): std#double
address: 326
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 676 - 0new_class @std#double
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @123 // std#double.double
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

number<_int64, std#long>(): nil
address: 327
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int64, std#long>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @996 // std#base_number<std#long>.base_number<std#long>
3 [0x3]:         movg @std#number<_int64, std#long>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @304 // std#number<_int64, std#long>.static_init<number<_int64, std#long>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @305 // std#number<_int64, std#long>.init<number<_int64, std#long>>
12 [0xc]:         ret

static_init<number<_uint32, std#uint>>(): nil
address: 328
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint32, std#uint>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<_uint32, std#uint>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<_uint32, std#uint>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<_uint32, std#uint>>(): nil
address: 329
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint32, std#uint>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(_uint32): nil
address: 330
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint32, std#uint>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          movu32 egx, egx
7 [0x7]:          imov egx
8 [0x8]:          ret

number(_int32): nil
address: 331
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint32, std#uint>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @999 // std#base_number<std#uint>.base_number<std#uint>
3 [0x3]:         movg @std#number<_uint32, std#uint>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @328 // std#number<_uint32, std#uint>.static_init<number<_uint32, std#uint>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @329 // std#number<_uint32, std#uint>.init<number<_uint32, std#uint>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @330 // std#number<_uint32, std#uint>.set_value
16 [0x10]:          ret

number(_uint32): nil
address: 332
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint32, std#uint>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @999 // std#base_number<std#uint>.base_number<std#uint>
3 [0x3]:         movg @std#number<_uint32, std#uint>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @328 // std#number<_uint32, std#uint>.static_init<number<_uint32, std#uint>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @329 // std#number<_uint32, std#uint>.init<number<_uint32, std#uint>>
12 [0xc]: line: 36 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @330 // std#number<_uint32, std#uint>.set_value
16 [0x10]:          ret

hash(): std#int
address: 333
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint32, std#uint>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @73 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

to_string(): std#string?
address: 334
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint32, std#uint>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @122 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

static_init<number<_int32, std#int>>(): nil
address: 335
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<_int32, std#int>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<_int32, std#int>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<_int32, std#int>>(): nil
address: 336
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(_int32): nil
address: 337
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          mov32 egx, egx
7 [0x7]:          imov egx
8 [0x8]:          ret

number(var): nil
address: 338
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]: line: 18 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @337 // std#number<_int32, std#int>.set_value
16 [0x10]:          ret

number(_int8): nil
address: 339
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]: line: 21 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @337 // std#number<_int32, std#int>.set_value
16 [0x10]:          ret

number(_uint8): nil
address: 340
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]: line: 24 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @337 // std#number<_int32, std#int>.set_value
16 [0x10]:          ret

number(_int16): nil
address: 341
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]: line: 27 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @337 // std#number<_int32, std#int>.set_value
16 [0x10]:          ret

number(_uint16): nil
address: 342
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]: line: 30 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @337 // std#number<_int32, std#int>.set_value
16 [0x10]:          ret

number(_int32): nil
address: 343
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @337 // std#number<_int32, std#int>.set_value
16 [0x10]:          ret

number(_uint32): nil
address: 344
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]: line: 36 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @337 // std#number<_int32, std#int>.set_value
16 [0x10]:          ret

number(_int64): nil
address: 345
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]: line: 39 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @337 // std#number<_int32, std#int>.set_value
16 [0x10]:          ret

number(_uint64): nil
address: 346
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]: line: 42 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @337 // std#number<_int32, std#int>.set_value
16 [0x10]:          ret

hash(): std#int
address: 347
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @72 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

operator!=(std#ulong): std#bool
address: 348
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 49 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#ulong): std#bool
address: 349
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 50 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#long): std#bool
address: 350
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 51 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#long): std#bool
address: 351
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 52 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#uint): std#bool
address: 352
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 53 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#uint): std#bool
address: 353
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 54 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#int): std#bool
address: 354
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 55 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#int): std#bool
address: 355
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 56 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#ushort): std#bool
address: 356
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 57 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#ushort): std#bool
address: 357
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 58 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#short): std#bool
address: 358
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 59 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#short): std#bool
address: 359
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 60 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#uchar): std#bool
address: 360
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 61 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#uchar): std#bool
address: 361
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 62 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#char): std#bool
address: 362
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 63 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#char): std#bool
address: 363
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 64 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#byte): std#bool
address: 364
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 65 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#byte): std#bool
address: 365
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 66 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(std#bool): std#bool
address: 366
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 67 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          tne cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#bool): std#bool
address: 367
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 68 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator==(std#double): std#bool
address: 368
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 69 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          test cx, ecx
14 [0xe]:          rstore bmr
15 [0xf]:          call @111 // std#bool.bool
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator!=(var): std#bool
address: 369
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 70 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator==(var): std#bool
address: 370
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 71 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator!=(_int8): std#bool
address: 371
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 72 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator==(_int8): std#bool
address: 372
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 73 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator!=(_int16): std#bool
address: 373
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 74 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator==(_int16): std#bool
address: 374
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 75 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator!=(_int32): std#bool
address: 375
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 76 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator==(_int32): std#bool
address: 376
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 77 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator!=(_int64): std#bool
address: 377
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 78 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator==(_int64): std#bool
address: 378
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 79 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator!=(_uint8): std#bool
address: 379
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 80 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator==(_uint8): std#bool
address: 380
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 81 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator!=(_uint16): std#bool
address: 381
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 82 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator==(_uint16): std#bool
address: 382
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 83 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator!=(_uint32): std#bool
address: 383
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 84 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator==(_uint32): std#bool
address: 384
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 85 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator!=(_uint64): std#bool
address: 385
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 86 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          tne cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator==(_uint64): std#bool
address: 386
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 87 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator+(std#ulong): std#int
address: 387
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 89 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#long): std#int
address: 388
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 90 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#uint): std#int
address: 389
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 91 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#int): std#int
address: 390
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 92 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#ushort): std#int
address: 391
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 93 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#short): std#int
address: 392
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 94 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#uchar): std#int
address: 393
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 95 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#char): std#int
address: 394
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 96 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#byte): std#int
address: 395
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 97 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#bool): std#int
address: 396
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 98 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(std#double): std#int
address: 397
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 99 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 1
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          iload cx
12 [0xc]:          loadval ecx
13 [0xd]:          add cx, ecx -> bmr
14 [0xe]:          rstore bmr
15 [0xf]:          call @72 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

operator+(var): std#int
address: 398
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 100 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+(_int8): std#int
address: 399
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 101 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+(_int16): std#int
address: 400
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 102 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+(_int32): std#int
address: 401
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 103 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+(_int64): std#int
address: 402
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 104 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+(_uint8): std#int
address: 403
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 105 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+(_uint16): std#int
address: 404
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 106 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+(_uint32): std#int
address: 405
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 107 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+(_uint64): std#int
address: 406
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 108 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           add cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(std#ulong): std#int
address: 407
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 110 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#long): std#int
address: 408
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 111 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#uint): std#int
address: 409
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 112 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#int): std#int
address: 410
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 113 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#ushort): std#int
address: 411
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 114 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#short): std#int
address: 412
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 115 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#uchar): std#int
address: 413
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 116 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#char): std#int
address: 414
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 117 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#byte): std#int
address: 415
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 118 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#bool): std#int
address: 416
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 119 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(std#double): std#int
address: 417
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 120 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           sub cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator-(var): std#int
address: 418
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 121 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(_int8): std#int
address: 419
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 122 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(_int16): std#int
address: 420
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 123 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(_int32): std#int
address: 421
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 124 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(_int64): std#int
address: 422
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 125 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(_uint8): std#int
address: 423
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 126 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(_uint16): std#int
address: 424
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 127 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(_uint32): std#int
address: 425
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 128 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(_uint64): std#int
address: 426
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 129 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-(): std#int
address: 427
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 131 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload ebx
7 [0x7]:           neg ebx, ebx
8 [0x8]:           rstore ebx
9 [0x9]:           call @72 // std#int.int
10 [0xa]:           popobj2 
11 [0xb]:           returnobj
12 [0xc]:           ret

operator*(std#ulong): std#int
address: 428
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 133 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#long): std#int
address: 429
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 134 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#uint): std#int
address: 430
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 135 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#int): std#int
address: 431
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 136 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#ushort): std#int
address: 432
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 137 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#short): std#int
address: 433
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 138 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#uchar): std#int
address: 434
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 139 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#char): std#int
address: 435
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 140 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#byte): std#int
address: 436
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 141 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#bool): std#int
address: 437
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 142 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(std#double): std#int
address: 438
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 143 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mul cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator*(var): std#int
address: 439
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 144 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*(_int8): std#int
address: 440
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 145 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*(_int16): std#int
address: 441
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 146 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*(_int32): std#int
address: 442
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 147 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*(_int64): std#int
address: 443
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 148 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*(_uint8): std#int
address: 444
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 149 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*(_uint16): std#int
address: 445
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 150 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*(_uint32): std#int
address: 446
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 151 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*(_uint64): std#int
address: 447
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 152 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mul cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(std#ulong): std#int
address: 448
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 154 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#long): std#int
address: 449
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 155 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#uint): std#int
address: 450
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 156 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#int): std#int
address: 451
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 157 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#ushort): std#int
address: 452
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 158 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#short): std#int
address: 453
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 159 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#uchar): std#int
address: 454
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 160 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#char): std#int
address: 455
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 161 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#byte): std#int
address: 456
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 162 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#bool): std#int
address: 457
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 163 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(std#double): std#int
address: 458
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 164 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           div cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator/(var): std#int
address: 459
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 165 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(_int8): std#int
address: 460
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 166 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(_int16): std#int
address: 461
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 167 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(_int32): std#int
address: 462
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 168 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(_int64): std#int
address: 463
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 169 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(_uint8): std#int
address: 464
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 170 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(_uint16): std#int
address: 465
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 171 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(_uint32): std#int
address: 466
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 172 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/(_uint64): std#int
address: 467
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 173 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           div cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%(std#ulong): std#int
address: 468
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 175 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#long): std#int
address: 469
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 176 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#uint): std#int
address: 470
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 177 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#int): std#int
address: 471
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 178 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#ushort): std#int
address: 472
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 179 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#short): std#int
address: 473
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 180 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#uchar): std#int
address: 474
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 181 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#char): std#int
address: 475
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 182 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#byte): std#int
address: 476
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 183 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#bool): std#int
address: 477
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 184 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(std#double): std#int
address: 478
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 185 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           mod cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator%(var): std#int
address: 479
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 186 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mod cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%(_int8): std#int
address: 480
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 187 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mod cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%(_int16): std#int
address: 481
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 188 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mod cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%(_int32): std#int
address: 482
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 189 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mod cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%(_int64): std#int
address: 483
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 190 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mod cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%(_uint8): std#int
address: 484
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 191 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mod cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%(_uint16): std#int
address: 485
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 192 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mod cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%(_uint32): std#int
address: 486
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 193 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mod cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%(_uint64): std#int
address: 487
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 194 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           mod cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(std#ulong): std#bool
address: 488
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 196 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#long): std#bool
address: 489
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 197 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#uint): std#bool
address: 490
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 198 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#int): std#bool
address: 491
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 199 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#ushort): std#bool
address: 492
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 200 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#short): std#bool
address: 493
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 201 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#uchar): std#bool
address: 494
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 202 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#char): std#bool
address: 495
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 203 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#byte): std#bool
address: 496
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 204 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#bool): std#bool
address: 497
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 205 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(std#double): std#bool
address: 498
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 206 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<(var): std#bool
address: 499
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 207 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(_int8): std#bool
address: 500
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 208 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(_int16): std#bool
address: 501
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 209 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(_int32): std#bool
address: 502
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 210 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(_int64): std#bool
address: 503
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 211 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(_uint8): std#bool
address: 504
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 212 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(_uint16): std#bool
address: 505
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 213 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(_uint32): std#bool
address: 506
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 214 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<(_uint64): std#bool
address: 507
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 215 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(std#ulong): std#bool
address: 508
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 217 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#long): std#bool
address: 509
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 218 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#uint): std#bool
address: 510
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 219 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#int): std#bool
address: 511
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 220 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#ushort): std#bool
address: 512
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 221 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#short): std#bool
address: 513
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 222 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#uchar): std#bool
address: 514
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 223 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#char): std#bool
address: 515
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 224 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#byte): std#bool
address: 516
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 225 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#bool): std#bool
address: 517
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 226 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(std#double): std#bool
address: 518
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 227 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gt cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>(var): std#bool
address: 519
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 228 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(_int8): std#bool
address: 520
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 229 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(_int16): std#bool
address: 521
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 230 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(_int32): std#bool
address: 522
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 231 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(_int64): std#bool
address: 523
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 232 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(_uint8): std#bool
address: 524
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 233 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(_uint16): std#bool
address: 525
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 234 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(_uint32): std#bool
address: 526
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 235 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>(_uint64): std#bool
address: 527
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 236 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<=(std#ulong): std#bool
address: 528
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 238 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#long): std#bool
address: 529
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 239 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#uint): std#bool
address: 530
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 240 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#int): std#bool
address: 531
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 241 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#ushort): std#bool
address: 532
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 242 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#short): std#bool
address: 533
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 243 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#uchar): std#bool
address: 534
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 244 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#char): std#bool
address: 535
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 245 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#byte): std#bool
address: 536
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 246 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#bool): std#bool
address: 537
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 247 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(std#double): std#bool
address: 538
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 248 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           lte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<=(var): std#bool
address: 539
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 249 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<=(_int8): std#bool
address: 540
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 250 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<=(_int16): std#bool
address: 541
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 251 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<=(_int32): std#bool
address: 542
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 252 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<=(_int64): std#bool
address: 543
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 253 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<=(_uint8): std#bool
address: 544
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 254 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<=(_uint16): std#bool
address: 545
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 255 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<=(_uint32): std#bool
address: 546
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 256 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<=(_uint64): std#bool
address: 547
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 257 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           lte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>=(std#ulong): std#bool
address: 548
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 259 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#long): std#bool
address: 549
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 260 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#uint): std#bool
address: 550
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 261 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#int): std#bool
address: 551
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 262 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#ushort): std#bool
address: 552
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 263 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#short): std#bool
address: 553
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 264 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#uchar): std#bool
address: 554
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 265 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#char): std#bool
address: 555
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 266 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#byte): std#bool
address: 556
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 267 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#bool): std#bool
address: 557
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 268 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(std#double): std#bool
address: 558
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 269 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           gte cx, ecx
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>=(var): std#bool
address: 559
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 270 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>=(_int8): std#bool
address: 560
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 271 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>=(_int16): std#bool
address: 561
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 272 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>=(_int32): std#bool
address: 562
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 273 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>=(_int64): std#bool
address: 563
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 274 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>=(_uint8): std#bool
address: 564
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 275 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>=(_uint16): std#bool
address: 565
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 276 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>=(_uint32): std#bool
address: 566
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 277 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>=(_uint64): std#bool
address: 567
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 278 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator**(std#ulong): std#int
address: 568
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 280 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#long): std#int
address: 569
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 281 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#uint): std#int
address: 570
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 282 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#int): std#int
address: 571
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 283 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#ushort): std#int
address: 572
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 284 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#short): std#int
address: 573
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 285 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#uchar): std#int
address: 574
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 286 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#char): std#int
address: 575
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 287 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#byte): std#int
address: 576
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 288 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#bool): std#int
address: 577
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 289 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(std#double): std#int
address: 578
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 290 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           exp cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator**(var): std#int
address: 579
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 291 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           exp cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator**(_int8): std#int
address: 580
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 292 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           exp cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator**(_int16): std#int
address: 581
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 293 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           exp cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator**(_int32): std#int
address: 582
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 294 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           exp cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator**(_int64): std#int
address: 583
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 295 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           exp cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator**(_uint8): std#int
address: 584
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 296 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           exp cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator**(_uint16): std#int
address: 585
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 297 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           exp cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator**(_uint32): std#int
address: 586
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 298 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           exp cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator**(_uint64): std#int
address: 587
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 299 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           exp cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&&(std#ulong): std#bool
address: 588
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 301 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#long): std#bool
address: 589
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 302 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#uint): std#bool
address: 590
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 303 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#int): std#bool
address: 591
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 304 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#ushort): std#bool
address: 592
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 305 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#short): std#bool
address: 593
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 306 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#uchar): std#bool
address: 594
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 307 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#char): std#bool
address: 595
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 308 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#byte): std#bool
address: 596
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 309 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#bool): std#bool
address: 597
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 310 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(std#double): std#bool
address: 598
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 311 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&&(var): std#bool
address: 599
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 312 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           jne 11
10 [0xa]:           ldc cmt @ 5 (1)
11 [0xb]:           rstore cmt
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

operator&&(_int8): std#bool
address: 600
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 313 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           jne 11
10 [0xa]:           ldc cmt @ 5 (1)
11 [0xb]:           rstore cmt
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

operator&&(_int16): std#bool
address: 601
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 314 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           jne 11
10 [0xa]:           ldc cmt @ 5 (1)
11 [0xb]:           rstore cmt
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

operator&&(_int32): std#bool
address: 602
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 315 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           jne 11
10 [0xa]:           ldc cmt @ 5 (1)
11 [0xb]:           rstore cmt
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

operator&&(_int64): std#bool
address: 603
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 316 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           jne 11
10 [0xa]:           ldc cmt @ 5 (1)
11 [0xb]:           rstore cmt
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

operator&&(_uint8): std#bool
address: 604
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 317 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           jne 11
10 [0xa]:           ldc cmt @ 5 (1)
11 [0xb]:           rstore cmt
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

operator&&(_uint16): std#bool
address: 605
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 318 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           jne 11
10 [0xa]:           ldc cmt @ 5 (1)
11 [0xb]:           rstore cmt
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

operator&&(_uint32): std#bool
address: 606
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 319 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           jne 11
10 [0xa]:           ldc cmt @ 5 (1)
11 [0xb]:           rstore cmt
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

operator&&(_uint64): std#bool
address: 607
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 320 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 11
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           jne 11
10 [0xa]:           ldc cmt @ 5 (1)
11 [0xb]:           rstore cmt
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

operator||(std#ulong): std#bool
address: 608
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 322 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#long): std#bool
address: 609
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 323 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#uint): std#bool
address: 610
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 324 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#int): std#bool
address: 611
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 325 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#ushort): std#bool
address: 612
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 326 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#short): std#bool
address: 613
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 327 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#uchar): std#bool
address: 614
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 328 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#char): std#bool
address: 615
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 329 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#byte): std#bool
address: 616
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 330 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#bool): std#bool
address: 617
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 331 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(std#double): std#bool
address: 618
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 332 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator||(var): std#bool
address: 619
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 333 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 9
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           rstore cmt
10 [0xa]:           call @111 // std#bool.bool
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator||(_int8): std#bool
address: 620
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 334 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 9
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           rstore cmt
10 [0xa]:           call @111 // std#bool.bool
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator||(_int16): std#bool
address: 621
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 335 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 9
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           rstore cmt
10 [0xa]:           call @111 // std#bool.bool
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator||(_int32): std#bool
address: 622
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 336 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 9
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           rstore cmt
10 [0xa]:           call @111 // std#bool.bool
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator||(_int64): std#bool
address: 623
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 337 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 9
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           rstore cmt
10 [0xa]:           call @111 // std#bool.bool
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator||(_uint8): std#bool
address: 624
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 338 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 9
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           rstore cmt
10 [0xa]:           call @111 // std#bool.bool
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator||(_uint16): std#bool
address: 625
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 339 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 9
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           rstore cmt
10 [0xa]:           call @111 // std#bool.bool
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator||(_uint32): std#bool
address: 626
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 340 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 9
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           rstore cmt
10 [0xa]:           call @111 // std#bool.bool
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator||(_uint64): std#bool
address: 627
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 341 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 9
8 [0x8]:           loadl cmt, fp+1
9 [0x9]:           rstore cmt
10 [0xa]:           call @111 // std#bool.bool
11 [0xb]:           popobj2 
12 [0xc]:           returnobj
13 [0xd]:           ret

operator<<(std#ulong): std#int
address: 628
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 343 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#long): std#int
address: 629
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 344 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#uint): std#int
address: 630
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 345 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#int): std#int
address: 631
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 346 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#ushort): std#int
address: 632
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 347 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#short): std#int
address: 633
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 348 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#uchar): std#int
address: 634
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 349 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#char): std#int
address: 635
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 350 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#byte): std#int
address: 636
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 351 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#bool): std#int
address: 637
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 352 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(std#double): std#int
address: 638
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 353 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shl cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator<<(var): std#int
address: 639
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 354 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shl cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<<(_int8): std#int
address: 640
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 355 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shl cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<<(_int16): std#int
address: 641
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 356 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shl cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<<(_int32): std#int
address: 642
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 357 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shl cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<<(_int64): std#int
address: 643
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 358 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shl cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<<(_uint8): std#int
address: 644
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 359 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shl cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<<(_uint16): std#int
address: 645
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 360 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shl cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<<(_uint32): std#int
address: 646
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 361 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shl cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator<<(_uint64): std#int
address: 647
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 362 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shl cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(std#ulong): std#int
address: 648
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 364 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#long): std#int
address: 649
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 365 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#uint): std#int
address: 650
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 366 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#int): std#int
address: 651
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 367 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#ushort): std#int
address: 652
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 368 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#short): std#int
address: 653
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 369 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#uchar): std#int
address: 654
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 370 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#char): std#int
address: 655
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 371 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#byte): std#int
address: 656
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 372 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#bool): std#int
address: 657
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 373 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(std#double): std#int
address: 658
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 374 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           shr cx, ecx -> bmr
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator>>(var): std#int
address: 659
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 375 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(_int8): std#int
address: 660
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 376 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(_int16): std#int
address: 661
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 377 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(_int32): std#int
address: 662
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 378 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(_int64): std#int
address: 663
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 379 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(_uint8): std#int
address: 664
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 380 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(_uint16): std#int
address: 665
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 381 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(_uint32): std#int
address: 666
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 382 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator>>(_uint64): std#int
address: 667
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 383 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           shr cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^(std#ulong): std#int
address: 668
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 385 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#long): std#int
address: 669
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 386 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#uint): std#int
address: 670
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 387 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#int): std#int
address: 671
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 388 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#ushort): std#int
address: 672
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 389 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#short): std#int
address: 673
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 390 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#uchar): std#int
address: 674
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 391 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#char): std#int
address: 675
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 392 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#byte): std#int
address: 676
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 393 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#bool): std#int
address: 677
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 394 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(std#double): std#int
address: 678
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 395 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           xor cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator^(var): std#int
address: 679
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 396 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           xor cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^(_int8): std#int
address: 680
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 397 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           xor cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^(_int16): std#int
address: 681
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 398 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           xor cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^(_int32): std#int
address: 682
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 399 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           xor cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^(_int64): std#int
address: 683
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 400 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           xor cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^(_uint8): std#int
address: 684
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 401 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           xor cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^(_uint16): std#int
address: 685
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 402 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           xor cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^(_uint32): std#int
address: 686
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 403 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           xor cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^(_uint64): std#int
address: 687
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 404 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           xor cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&(std#ulong): std#int
address: 688
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 406 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#long): std#int
address: 689
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 407 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#uint): std#int
address: 690
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 408 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#int): std#int
address: 691
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 409 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#ushort): std#int
address: 692
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 410 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#short): std#int
address: 693
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 411 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#uchar): std#int
address: 694
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 412 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#char): std#int
address: 695
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 413 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#byte): std#int
address: 696
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 414 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#bool): std#int
address: 697
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 415 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(std#double): std#int
address: 698
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 416 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           uand cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator&(var): std#int
address: 699
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 417 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           uand cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&(_int8): std#int
address: 700
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 418 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           uand cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&(_int16): std#int
address: 701
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 419 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           uand cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&(_int32): std#int
address: 702
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 420 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           uand cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&(_int64): std#int
address: 703
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 421 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           uand cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&(_uint8): std#int
address: 704
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 422 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           uand cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&(_uint16): std#int
address: 705
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 423 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           uand cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&(_uint32): std#int
address: 706
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 424 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           uand cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&(_uint64): std#int
address: 707
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 425 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           uand cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|(std#ulong): std#int
address: 708
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 427 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#long): std#int
address: 709
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 428 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#uint): std#int
address: 710
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 429 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#int): std#int
address: 711
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 430 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#ushort): std#int
address: 712
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 431 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#short): std#int
address: 713
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 432 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#uchar): std#int
address: 714
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 433 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#char): std#int
address: 715
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 434 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#byte): std#int
address: 716
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 435 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#bool): std#int
address: 717
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 436 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(std#double): std#int
address: 718
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 437 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #0
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           or cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @72 // std#int.int
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator|(var): std#int
address: 719
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 438 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           or cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|(_int8): std#int
address: 720
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 439 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           or cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|(_int16): std#int
address: 721
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 440 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           or cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|(_int32): std#int
address: 722
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 441 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           or cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|(_int64): std#int
address: 723
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 442 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           or cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|(_uint8): std#int
address: 724
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 443 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           or cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|(_uint16): std#int
address: 725
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 444 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           or cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|(_uint32): std#int
address: 726
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 445 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           or cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|(_uint64): std#int
address: 727
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 446 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           or cx, ecx
10 [0xa]:           rstore bmr
11 [0xb]:           call @72 // std#int.int
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator=(var): std#int
address: 728
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 448 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @337 // std#number<_int32, std#int>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 9 // std#int
6 [0x6]:           returnobj
7 [0x7]:           ret

operator=(_int8): std#int
address: 729
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 449 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @337 // std#number<_int32, std#int>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 9 // std#int
6 [0x6]:           returnobj
7 [0x7]:           ret

operator=(_int16): std#int
address: 730
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 450 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @337 // std#number<_int32, std#int>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 9 // std#int
6 [0x6]:           returnobj
7 [0x7]:           ret

operator=(_int32): std#int
address: 731
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 451 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @337 // std#number<_int32, std#int>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 9 // std#int
6 [0x6]:           returnobj
7 [0x7]:           ret

operator=(_int64): std#int
address: 732
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 452 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @337 // std#number<_int32, std#int>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 9 // std#int
6 [0x6]:           returnobj
7 [0x7]:           ret

operator=(_uint8): std#int
address: 733
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 453 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @337 // std#number<_int32, std#int>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 9 // std#int
6 [0x6]:           returnobj
7 [0x7]:           ret

operator=(_uint16): std#int
address: 734
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 454 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @337 // std#number<_int32, std#int>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 9 // std#int
6 [0x6]:           returnobj
7 [0x7]:           ret

operator=(_uint32): std#int
address: 735
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 455 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @337 // std#number<_int32, std#int>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 9 // std#int
6 [0x6]:           returnobj
7 [0x7]:           ret

operator=(_uint64): std#int
address: 736
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 456 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @337 // std#number<_int32, std#int>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 9 // std#int
6 [0x6]:           returnobj
7 [0x7]:           ret

operator!(): std#bool
address: 737
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 458 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload ebx
7 [0x7]:           not ebx, ebx
8 [0x8]:           rstore ebx
9 [0x9]:           call @111 // std#bool.bool
10 [0xa]:           popobj2 
11 [0xb]:           returnobj
12 [0xc]:           ret

operator++(): std#int
address: 738
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 459 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           iload egx
4 [0x4]:           inc egx
5 [0x5]:           mov32 egx, egx
6 [0x6]:           imov egx
7 [0x7]:           movl 0
8 [0x8]:           cast 9 // std#int
9 [0x9]:           returnobj
10 [0xa]:           ret

operator++(var): std#int
address: 739
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 460 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           iload egx
9 [0x9]:           inc egx
10 [0xa]:           mov32 egx, egx
11 [0xb]:           imov egx
12 [0xc]:           loadval ebx
13 [0xd]:           rstore ebx
14 [0xe]:           call @72 // std#int.int
15 [0xf]:           popobj2 
16 [0x10]:           returnobj
17 [0x11]:           ret

operator--(): std#int
address: 740
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 461 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           iload egx
4 [0x4]:           dec egx
5 [0x5]:           mov32 egx, egx
6 [0x6]:           imov egx
7 [0x7]:           movl 0
8 [0x8]:           cast 9 // std#int
9 [0x9]:           returnobj
10 [0xa]:           ret

operator--(var): std#int
address: 741
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 462 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           iload egx
9 [0x9]:           dec egx
10 [0xa]:           mov32 egx, egx
11 [0xb]:           imov egx
12 [0xc]:           loadval ebx
13 [0xd]:           rstore ebx
14 [0xe]:           call @72 // std#int.int
15 [0xf]:           popobj2 
16 [0x10]:           returnobj
17 [0x11]:           ret

operator+=(std#ulong): std#int
address: 742
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 464 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#long): std#int
address: 743
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 465 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#uint): std#int
address: 744
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 466 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#int): std#int
address: 745
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 467 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#ushort): std#int
address: 746
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 468 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#short): std#int
address: 747
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 469 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#uchar): std#int
address: 748
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 470 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#char): std#int
address: 749
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 471 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#byte): std#int
address: 750
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 472 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#bool): std#int
address: 751
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 473 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(std#double): std#int
address: 752
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 474 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           add cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator+=(var): std#int
address: 753
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 475 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           add cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator+=(_int8): std#int
address: 754
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 476 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           add cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator+=(_int16): std#int
address: 755
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 477 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           add cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator+=(_int32): std#int
address: 756
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 478 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           add cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator+=(_int64): std#int
address: 757
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 479 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           add cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator+=(_uint8): std#int
address: 758
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 480 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           add cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator+=(_uint16): std#int
address: 759
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 481 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           add cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator+=(_uint32): std#int
address: 760
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 482 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           add cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator+=(_uint64): std#int
address: 761
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 483 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           add cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator-=(std#ulong): std#int
address: 762
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 485 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#long): std#int
address: 763
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 486 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#uint): std#int
address: 764
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 487 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#int): std#int
address: 765
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 488 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#ushort): std#int
address: 766
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 489 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#short): std#int
address: 767
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 490 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#uchar): std#int
address: 768
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 491 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#char): std#int
address: 769
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 492 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#byte): std#int
address: 770
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 493 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#bool): std#int
address: 771
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 494 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#double): std#int
address: 772
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 495 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(var): std#int
address: 773
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 496 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           sub cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator-=(_int8): std#int
address: 774
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 497 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           sub cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator-=(_int16): std#int
address: 775
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 498 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           sub cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator-=(_int32): std#int
address: 776
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 499 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           sub cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator-=(_int64): std#int
address: 777
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 500 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           sub cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator-=(_uint8): std#int
address: 778
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 501 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           sub cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator-=(_uint16): std#int
address: 779
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 502 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           sub cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator-=(_uint32): std#int
address: 780
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 503 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           sub cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator-=(_uint64): std#int
address: 781
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 504 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           sub cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator*=(std#ulong): std#int
address: 782
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 506 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#long): std#int
address: 783
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 507 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#uint): std#int
address: 784
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 508 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#int): std#int
address: 785
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 509 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#ushort): std#int
address: 786
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 510 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#short): std#int
address: 787
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 511 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#uchar): std#int
address: 788
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 512 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#char): std#int
address: 789
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 513 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#byte): std#int
address: 790
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 514 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#bool): std#int
address: 791
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 515 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(std#double): std#int
address: 792
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 516 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mul cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator*=(var): std#int
address: 793
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 517 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator*=(_int8): std#int
address: 794
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 518 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator*=(_int16): std#int
address: 795
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 519 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator*=(_int32): std#int
address: 796
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 520 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator*=(_int64): std#int
address: 797
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 521 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator*=(_uint8): std#int
address: 798
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 522 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator*=(_uint16): std#int
address: 799
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 523 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator*=(_uint32): std#int
address: 800
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 524 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator*=(_uint64): std#int
address: 801
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 525 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mul cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(std#ulong): std#int
address: 802
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 527 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#long): std#int
address: 803
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 528 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#uint): std#int
address: 804
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 529 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#int): std#int
address: 805
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 530 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#ushort): std#int
address: 806
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 531 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#short): std#int
address: 807
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 532 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#uchar): std#int
address: 808
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 533 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#char): std#int
address: 809
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 534 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#byte): std#int
address: 810
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 535 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#bool): std#int
address: 811
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 536 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(std#double): std#int
address: 812
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 537 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           div cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator/=(var): std#int
address: 813
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 538 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(_int8): std#int
address: 814
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 539 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(_int16): std#int
address: 815
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 540 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(_int32): std#int
address: 816
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 541 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(_int64): std#int
address: 817
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 542 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(_uint8): std#int
address: 818
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 543 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(_uint16): std#int
address: 819
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 544 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(_uint32): std#int
address: 820
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 545 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator/=(_uint64): std#int
address: 821
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 546 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           div cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator%=(std#ulong): std#int
address: 822
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 548 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#long): std#int
address: 823
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 549 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#uint): std#int
address: 824
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 550 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#int): std#int
address: 825
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 551 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#ushort): std#int
address: 826
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 552 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#short): std#int
address: 827
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 553 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#uchar): std#int
address: 828
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 554 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#char): std#int
address: 829
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 555 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#byte): std#int
address: 830
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 556 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#bool): std#int
address: 831
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 557 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(std#double): std#int
address: 832
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 558 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           mod cx, ecx -> bmr
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator%=(var): std#int
address: 833
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 559 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mod cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator%=(_int8): std#int
address: 834
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 560 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mod cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator%=(_int16): std#int
address: 835
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 561 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mod cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator%=(_int32): std#int
address: 836
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 562 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mod cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator%=(_int64): std#int
address: 837
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 563 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mod cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator%=(_uint8): std#int
address: 838
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 564 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mod cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator%=(_uint16): std#int
address: 839
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 565 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mod cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator%=(_uint32): std#int
address: 840
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 566 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mod cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator%=(_uint64): std#int
address: 841
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 567 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           mod cx, ecx -> bmr
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator&=(std#ulong): std#int
address: 842
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 569 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#long): std#int
address: 843
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 570 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#uint): std#int
address: 844
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 571 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#int): std#int
address: 845
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 572 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#ushort): std#int
address: 846
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 573 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#short): std#int
address: 847
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 574 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#uchar): std#int
address: 848
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 575 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#char): std#int
address: 849
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 576 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#byte): std#int
address: 850
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 577 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#bool): std#int
address: 851
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 578 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(std#double): std#int
address: 852
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 579 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           uand cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator&=(var): std#int
address: 853
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 580 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           uand cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator&=(_int8): std#int
address: 854
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 581 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           uand cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator&=(_int16): std#int
address: 855
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 582 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           uand cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator&=(_int32): std#int
address: 856
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 583 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           uand cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator&=(_int64): std#int
address: 857
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 584 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           uand cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator&=(_uint8): std#int
address: 858
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 585 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           uand cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator&=(_uint16): std#int
address: 859
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 586 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           uand cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator&=(_uint32): std#int
address: 860
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 587 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           uand cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator&=(_uint64): std#int
address: 861
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 588 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           uand cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator|=(std#ulong): std#int
address: 862
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 590 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#long): std#int
address: 863
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 591 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#uint): std#int
address: 864
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 592 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#int): std#int
address: 865
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 593 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#ushort): std#int
address: 866
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 594 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#short): std#int
address: 867
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 595 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#uchar): std#int
address: 868
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 596 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#char): std#int
address: 869
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 597 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#byte): std#int
address: 870
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 598 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#bool): std#int
address: 871
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 599 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(std#double): std#int
address: 872
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 600 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           or cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator|=(var): std#int
address: 873
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 601 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           or cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator|=(_int8): std#int
address: 874
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 602 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           or cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator|=(_int16): std#int
address: 875
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 603 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           or cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator|=(_int32): std#int
address: 876
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 604 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           or cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator|=(_int64): std#int
address: 877
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 605 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           or cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator|=(_uint8): std#int
address: 878
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 606 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           or cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator|=(_uint16): std#int
address: 879
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 607 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           or cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator|=(_uint32): std#int
address: 880
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 608 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           or cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator|=(_uint64): std#int
address: 881
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 609 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           or cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator^=(std#ulong): std#int
address: 882
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 611 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#long): std#int
address: 883
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 612 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#uint): std#int
address: 884
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 613 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#int): std#int
address: 885
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 614 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#ushort): std#int
address: 886
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 615 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#short): std#int
address: 887
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 616 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#uchar): std#int
address: 888
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 617 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#char): std#int
address: 889
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 618 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#byte): std#int
address: 890
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 619 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#bool): std#int
address: 891
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 620 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(std#double): std#int
address: 892
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 621 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           xor cx, ecx
9 [0x9]:           mov32 bmr, bmr
10 [0xa]:           imov bmr
11 [0xb]:           movl 0
12 [0xc]:           cast 9 // std#int
13 [0xd]:           returnobj
14 [0xe]:           ret

operator^=(var): std#int
address: 893
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 622 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           xor cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator^=(_int8): std#int
address: 894
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 623 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           xor cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator^=(_int16): std#int
address: 895
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 624 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           xor cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator^=(_int32): std#int
address: 896
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 625 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           xor cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator^=(_int64): std#int
address: 897
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 626 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           xor cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator^=(_uint8): std#int
address: 898
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 627 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           xor cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator^=(_uint16): std#int
address: 899
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 628 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           xor cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator^=(_uint32): std#int
address: 900
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 629 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           xor cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

operator^=(_uint64): std#int
address: 901
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 630 - 0loadl ecx, fp+1
1 [0x1]:           movl 0
2 [0x2]:           movn #0
4 [0x4]:           iload cx
5 [0x5]:           xor cx, ecx
6 [0x6]:           mov32 bmr, bmr
7 [0x7]:           imov bmr
8 [0x8]:           movl 0
9 [0x9]:           cast 9 // std#int
10 [0xa]:           returnobj
11 [0xb]:           ret

to_string(): std#string?
address: 902
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @121 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

parse(std#string): std#int
address: 903
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 4
fpOffset: 0
spOffset: 0
stackSize: 5
code:

0 [0x0]: line: 637 - 0istore 0
2 [0x2]:           loadval egx
3 [0x3]:           mov32 egx, egx
4 [0x4]:           smovr_2 egx, fp+1
5 [0x5]: line: 639 - 5ldc cmt @ 5 (1)
6 [0x6]:           jne 22
7 [0x7]: line: 640 - 7new_class @std#int
9 [0x9]:           dup 
10 [0xa]:           pushl 0
11 [0xb]:           call @38 // std#__srt_global.strtod
12 [0xc]:           popobj2 
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           call @67 // std#int.int
18 [0x12]:           popobj2 
19 [0x13]:           returnobj
20 [0x14]:           ret
21 [0x15]:           jmp @146
22 [0x16]: line: 642 - 22new_class @std#int
24 [0x18]:           dup 
25 [0x19]:           istore 0
27 [0x1b]:           call @79 // std#int.init<int>
28 [0x1c]:           popl 2
29 [0x1d]: line: 643 - 29new_class @std#bool
31 [0x1f]:           dup 
32 [0x20]:           istore 0
34 [0x22]:           call @112 // std#bool.init<bool>
35 [0x23]:           popl 3
36 [0x24]: line: 644 - 36pushl 0
37 [0x25]:           call @169 // std#string.size
38 [0x26]:           popobj2 
39 [0x27]:           movn #0
41 [0x29]:           iload egx
42 [0x2a]:           rstore egx
43 [0x2b]:           loadval egx
44 [0x2c]:           mov32 egx, egx
45 [0x2d]:           smovr_2 egx, fp+4
46 [0x2e]: line: 646 - 46pushl 0
47 [0x2f]:           new_class @std#int
49 [0x31]:           dup 
50 [0x32]:           istore 0
52 [0x34]:           call @72 // std#int.int
53 [0x35]:           call @153 // std#string.at
54 [0x36]:           istore 45
56 [0x38]:           call @945 // std#number<_int8, std#char>.operator==
57 [0x39]:           popobj2 
58 [0x3a]:           movn #0
60 [0x3c]:           iload cmt
61 [0x3d]:           jne 72
62 [0x3e]: line: 647 - 62pushl 3
63 [0x3f]:           istore 1
65 [0x41]:           call @956 // std#number<_int8, std#bool>.operator=
66 [0x42]:           pop
67 [0x43]: line: 648 - 67pushl 2
68 [0x44]:           istore 1
70 [0x46]:           call @732 // std#number<_int32, std#int>.operator=
71 [0x47]:           pop
72 [0x48]: line: 651 - 72pushl 2
73 [0x49]:           ipushl #4
74 [0x4a]:           call @502 // std#number<_int32, std#int>.operator<
75 [0x4b]:           popobj2 
76 [0x4c]:           movn #0
78 [0x4e]:           iload cmt
79 [0x4f]:           jne 127
80 [0x50]: line: 652 - 80pushl 0
81 [0x51]:           pushl 2
82 [0x52]:           call @153 // std#string.at
83 [0x53]:           call @103 // std#char.is_digit
84 [0x54]:           call @957 // std#number<_int8, std#bool>.operator!
85 [0x55]:           popobj2 
86 [0x56]:           movn #0
88 [0x58]:           iload cmt
89 [0x59]:           jne 104
90 [0x5a]: line: 653 - 90new_class @std#illegal_argument_exception
92 [0x5c]:           dup 
93 [0x5d]:           new_class @std#string
95 [0x5f]:           dup 
96 [0x60]:           newstr @81 (illegal char in string: )
97 [0x61]:           call @130 // std#string.string
98 [0x62]:           pushl 0
99 [0x63]:           pushl 2
100 [0x64]:           call @153 // std#string.at
101 [0x65]:           call @145 // std#string.operator+
102 [0x66]:           call @203 // std#illegal_argument_exception.illegal_argument_exception
103 [0x67]:           throw 
104 [0x68]: line: 657 - 104ldc ecx @ 14 (10)
105 [0x69]:           loadl cx, fp+1
106 [0x6a]:           mul cx, ecx -> bmr
107 [0x6b]:           mov32 bmr, bmr
108 [0x6c]:           smovr_2 bmr, fp+1
109 [0x6d]: line: 658 - 109pushl 0
110 [0x6e]:           pushl 2
111 [0x6f]:           istore 1
113 [0x71]:           call @739 // std#number<_int32, std#int>.operator++
114 [0x72]:           call @153 // std#string.at
115 [0x73]:           istore 48
117 [0x75]:           call @946 // std#number<_int8, std#char>.operator-
118 [0x76]:           popobj2 
119 [0x77]:           movn #0
121 [0x79]:           iload ecx
122 [0x7a]:           loadl cx, fp+1
123 [0x7b]:           add cx, ecx -> bmr
124 [0x7c]:           mov32 bmr, bmr
125 [0x7d]:           smovr_2 bmr, fp+1
126 [0x7e]:           jmp @72
127 [0x7f]: line: 660 - 127movl 3
128 [0x80]:           movn #0
130 [0x82]:           iload cmt
131 [0x83]:           jne 138
132 [0x84]: line: 661 - 132loadl ebx, fp+1
133 [0x85]:           neg ebx, ebx
134 [0x86]:           rstore ebx
135 [0x87]:           loadval egx
136 [0x88]:           mov32 egx, egx
137 [0x89]:           smovr_2 egx, fp+1
138 [0x8a]: line: 662 - 138new_class @std#int
140 [0x8c]:           dup 
141 [0x8d]:           ipushl #1
142 [0x8e]:           call @72 // std#int.int
143 [0x8f]:           popobj2 
144 [0x90]:           returnobj
145 [0x91]:           ret

to_ulong(): std#ulong
address: 904
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 666 - 0new_class @std#ulong
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @50 // std#ulong.ulong
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_long(): std#long
address: 905
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 667 - 0new_class @std#long
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @56 // std#long.long
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_uint(): std#uint
address: 906
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 668 - 0new_class @std#uint
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @62 // std#uint.uint
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_int(): std#int
address: 907
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 669 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @72 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_ushort(): std#ushort
address: 908
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 670 - 0new_class @std#ushort
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @89 // std#ushort.ushort
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_short(): std#short
address: 909
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 671 - 0new_class @std#short
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @93 // std#short.short
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_uchar(): std#uchar
address: 910
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 672 - 0new_class @std#uchar
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @96 // std#uchar.uchar
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_char(): std#char
address: 911
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 673 - 0new_class @std#char
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @101 // std#char.char
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_byte(): std#byte
address: 912
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 674 - 0new_class @std#byte
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @106 // std#byte.byte
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_bool(): std#bool
address: 913
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 675 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @111 // std#bool.bool
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_double(): std#double
address: 914
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 676 - 0new_class @std#double
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @121 // std#double.double
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

number<_int32, std#int>(): nil
address: 915
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int32, std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1002 // std#base_number<std#int>.base_number<std#int>
3 [0x3]:         movg @std#number<_int32, std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @335 // std#number<_int32, std#int>.static_init<number<_int32, std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @336 // std#number<_int32, std#int>.init<number<_int32, std#int>>
12 [0xc]:         ret

static_init<number<_uint16, std#ushort>>(): nil
address: 916
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint16, std#ushort>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<_uint16, std#ushort>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<_uint16, std#ushort>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<_uint16, std#ushort>>(): nil
address: 917
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint16, std#ushort>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(_uint16): nil
address: 918
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint16, std#ushort>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          movu16 egx, egx
7 [0x7]:          imov egx
8 [0x8]:          ret

number(_uint16): nil
address: 919
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint16, std#ushort>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1005 // std#base_number<std#ushort>.base_number<std#ushort>
3 [0x3]:         movg @std#number<_uint16, std#ushort>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @916 // std#number<_uint16, std#ushort>.static_init<number<_uint16, std#ushort>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @917 // std#number<_uint16, std#ushort>.init<number<_uint16, std#ushort>>
12 [0xc]: line: 30 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @918 // std#number<_uint16, std#ushort>.set_value
16 [0x10]:          ret

number(_int32): nil
address: 920
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint16, std#ushort>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1005 // std#base_number<std#ushort>.base_number<std#ushort>
3 [0x3]:         movg @std#number<_uint16, std#ushort>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @916 // std#number<_uint16, std#ushort>.static_init<number<_uint16, std#ushort>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @917 // std#number<_uint16, std#ushort>.init<number<_uint16, std#ushort>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @918 // std#number<_uint16, std#ushort>.set_value
16 [0x10]:          ret

hash(): std#int
address: 921
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint16, std#ushort>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @71 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

to_string(): std#string?
address: 922
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint16, std#ushort>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @120 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

static_init<number<_int16, std#short>>(): nil
address: 923
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int16, std#short>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<_int16, std#short>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<_int16, std#short>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<_int16, std#short>>(): nil
address: 924
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int16, std#short>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(_int16): nil
address: 925
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int16, std#short>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          mov16 egx, egx
7 [0x7]:          imov egx
8 [0x8]:          ret

number(_int16): nil
address: 926
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int16, std#short>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1027 // std#base_number<std#short>.base_number<std#short>
3 [0x3]:         movg @std#number<_int16, std#short>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @923 // std#number<_int16, std#short>.static_init<number<_int16, std#short>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @924 // std#number<_int16, std#short>.init<number<_int16, std#short>>
12 [0xc]: line: 27 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @925 // std#number<_int16, std#short>.set_value
16 [0x10]:          ret

number(_int32): nil
address: 927
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int16, std#short>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1027 // std#base_number<std#short>.base_number<std#short>
3 [0x3]:         movg @std#number<_int16, std#short>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @923 // std#number<_int16, std#short>.static_init<number<_int16, std#short>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @924 // std#number<_int16, std#short>.init<number<_int16, std#short>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @925 // std#number<_int16, std#short>.set_value
16 [0x10]:          ret

hash(): std#int
address: 928
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int16, std#short>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @70 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

to_string(): std#string?
address: 929
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int16, std#short>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @119 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

init<list<std#string>>(): nil
address: 930
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#string>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#string
2 [0x2]:         dup 
3 [0x3]:         call @176 // std#string.string
4 [0x4]:         movl 0
5 [0x5]:         movn #1
7 [0x7]:         popobj
8 [0x8]:         ret

to_string(): std#string?
address: 931
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#string>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 234 - 0new_class @std#string_builder
2 [0x2]:           dup 
3 [0x3]:           call @189 // std#string_builder.string_builder
4 [0x4]:           popl 1
5 [0x5]: line: 236 - 5pushl 1
6 [0x6]:           newstr @82 ([ )
7 [0x7]:           call @187 // std#string_builder.operator+=
8 [0x8]:           pop
9 [0x9]: line: 237 - 9istore 0
11 [0xb]:           ipopl 2
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           loadl cx, fp+2
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 55
21 [0x15]: line: 238 - 21pushl 1
22 [0x16]:           movl 0
23 [0x17]:           movn #1
25 [0x19]:           pushobj
26 [0x1a]:           loadl adx, fp+2
27 [0x1b]:           popobj2 
28 [0x1c]:           chklen adx
29 [0x1d]:           movnd adx
30 [0x1e]:           pushobj
31 [0x1f]:           call @186 // std#string_builder.operator+=
32 [0x20]:           pop
33 [0x21]: line: 240 - 33movl 0
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           istore 1
40 [0x28]:           loadl ecx, fp+2
41 [0x29]:           loadval ecf
42 [0x2a]:           add ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           lt bmr, cx
45 [0x2d]:           jne 50
46 [0x2e]: line: 241 - 46pushl 1
47 [0x2f]:           newstr @83 (, )
48 [0x30]:           call @187 // std#string_builder.operator+=
49 [0x31]:           pop
50 [0x32]:           ipushl #2
51 [0x33]:           iaddl 1, fp@2
53 [0x35]:           loadval ebx
54 [0x36]:           jmp @12
55 [0x37]: line: 245 - 55pushl 1
56 [0x38]:           newstr @84 ( ])
57 [0x39]:           call @187 // std#string_builder.operator+=
58 [0x3a]:           pop
59 [0x3b]: line: 246 - 59pushl 1
60 [0x3c]:           call @184 // std#string_builder.to_string
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret

hash(): std#int
address: 932
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#string>
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 250 - 0istore 0
2 [0x2]:           ipopl 1
3 [0x3]: line: 251 - 3new_class @std#int
5 [0x5]:           dup 
6 [0x6]:           istore 0
8 [0x8]:           call @79 // std#int.init<int>
9 [0x9]:           popl 2
10 [0xa]: line: 252 - 10istore 0
12 [0xc]:           ipopl 3
13 [0xd]: line: 253 - 13new_class @std#double
15 [0xf]:           dup 
16 [0x10]:           istore 1000000009
18 [0x12]:           call @125 // std#double.init<double>
19 [0x13]:           popl 4
20 [0x14]: line: 255 - 20istore 4294967295
22 [0x16]:           ipopl 6
23 [0x17]:           movl 0
24 [0x18]:           movn #1
26 [0x1a]:           pushobj
27 [0x1b]:           popl 7
28 [0x1c]:           iaddl 1, fp@6
30 [0x1e]:           loadl cx, fp+6
31 [0x1f]:           movl 7
32 [0x20]:           sizeof ebx
33 [0x21]:           movr ecx, ebx
34 [0x22]:           lt cx, ecx
35 [0x23]:           jne 69
36 [0x24]:           pushl 7
37 [0x25]:           loadl adx, fp+6
38 [0x26]:           popobj2 
39 [0x27]:           chklen adx
40 [0x28]:           movnd adx
41 [0x29]:           pushobj
42 [0x2a]:           popl 5
43 [0x2b]: line: 256 - 43pushl 2
44 [0x2c]:           pushl 5
45 [0x2d]:           call @175 // std#string.hash
46 [0x2e]:           popobj2 
47 [0x2f]:           movn #0
49 [0x31]:           iload egx
50 [0x32]:           rstore egx
51 [0x33]:           call @401 // std#number<_int32, std#int>.operator+
52 [0x34]:           ipushl #3
53 [0x35]:           call @398 // std#number<_int32, std#int>.operator+
54 [0x36]:           pushl 4
55 [0x37]:           call @478 // std#number<_int32, std#int>.operator%
56 [0x38]:           popl 2
57 [0x39]: line: 257 - 57istore 10
59 [0x3b]:           loadl ecf, fp+1
60 [0x3c]:           loadval edf
61 [0x3d]:           mod ecf, edf -> bmr
62 [0x3e]:           rstore bmr
63 [0x3f]:           loadl cx, fp+1
64 [0x40]:           loadval ecx
65 [0x41]:           mul cx, ecx -> bmr
66 [0x42]:           rstore bmr
67 [0x43]:           ipopl 3
68 [0x44]:           jmp @28
69 [0x45]: line: 260 - 69movl 2
70 [0x46]:           returnobj
71 [0x47]:           ret

static_init<number<_uint8, std#uchar>>(): nil
address: 933
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint8, std#uchar>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<_uint8, std#uchar>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<_uint8, std#uchar>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<_uint8, std#uchar>>(): nil
address: 934
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint8, std#uchar>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(_uint8): nil
address: 935
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint8, std#uchar>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          movu8 egx, egx
7 [0x7]:          imov egx
8 [0x8]:          ret

number(_int32): nil
address: 936
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint8, std#uchar>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1052 // std#base_number<std#uchar>.base_number<std#uchar>
3 [0x3]:         movg @std#number<_uint8, std#uchar>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @933 // std#number<_uint8, std#uchar>.static_init<number<_uint8, std#uchar>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @934 // std#number<_uint8, std#uchar>.init<number<_uint8, std#uchar>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @935 // std#number<_uint8, std#uchar>.set_value
16 [0x10]:          ret

hash(): std#int
address: 937
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint8, std#uchar>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @69 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

to_string(): std#string?
address: 938
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_uint8, std#uchar>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @118 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

static_init<number<_int8, std#char>>(): nil
address: 939
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#char>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<_int8, std#char>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<_int8, std#char>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<_int8, std#char>>(): nil
address: 940
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#char>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(_int8): nil
address: 941
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#char>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          mov8 egx, egx
7 [0x7]:          imov egx
8 [0x8]:          ret

number(_int8): nil
address: 942
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#char>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1055 // std#base_number<std#char>.base_number<std#char>
3 [0x3]:         movg @std#number<_int8, std#char>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @939 // std#number<_int8, std#char>.static_init<number<_int8, std#char>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @940 // std#number<_int8, std#char>.init<number<_int8, std#char>>
12 [0xc]: line: 21 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @941 // std#number<_int8, std#char>.set_value
16 [0x10]:          ret

number(_int32): nil
address: 943
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#char>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1055 // std#base_number<std#char>.base_number<std#char>
3 [0x3]:         movg @std#number<_int8, std#char>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @939 // std#number<_int8, std#char>.static_init<number<_int8, std#char>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @940 // std#number<_int8, std#char>.init<number<_int8, std#char>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @941 // std#number<_int8, std#char>.set_value
16 [0x10]:          ret

hash(): std#int
address: 944
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#char>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @68 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

operator==(_int8): std#bool
address: 945
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#char>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 73 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator-(_int8): std#char
address: 946
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#char>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 122 - 0new_class @std#char
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           sub cx, ecx -> bmr
10 [0xa]:           rstore bmr
11 [0xb]:           call @101 // std#char.char
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

to_string(): std#string?
address: 947
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#char>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @117 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

static_init<number<_int8, std#bool>>(): nil
address: 948
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<_int8, std#bool>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<_int8, std#bool>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<_int8, std#bool>>(): nil
address: 949
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(_int8): nil
address: 950
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          mov8 egx, egx
7 [0x7]:          imov egx
8 [0x8]:          ret

number(_int32): nil
address: 951
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1058 // std#base_number<std#bool>.base_number<std#bool>
3 [0x3]:         movg @std#number<_int8, std#bool>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @948 // std#number<_int8, std#bool>.static_init<number<_int8, std#bool>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @949 // std#number<_int8, std#bool>.init<number<_int8, std#bool>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @950 // std#number<_int8, std#bool>.set_value
16 [0x10]:          ret

hash(): std#int
address: 952
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @68 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

operator==(_int32): std#bool
address: 953
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 77 - 0new_class @std#bool
2 [0x2]:          dup 
3 [0x3]:          ipushl #1
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          rstore bmr
11 [0xb]:          call @111 // std#bool.bool
12 [0xc]:          popobj2 
13 [0xd]:          returnobj
14 [0xe]:          ret

operator&&(std#bool): std#bool
address: 954
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 310 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           jne 14
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           jne 14
13 [0xd]:           ldc cmt @ 5 (1)
14 [0xe]:           rstore cmt
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

operator||(std#bool): std#bool
address: 955
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 331 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload cmt
7 [0x7]:           je 12
8 [0x8]:           movl 1
9 [0x9]:           movn #0
11 [0xb]:           iload cmt
12 [0xc]:           rstore cmt
13 [0xd]:           call @111 // std#bool.bool
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

operator=(_int8): std#bool
address: 956
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 449 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           ipushl #1
3 [0x3]:           call @950 // std#number<_int8, std#bool>.set_value
4 [0x4]:           movl 0
5 [0x5]:           cast 15 // std#bool
6 [0x6]:           returnobj
7 [0x7]:           ret

operator!(): std#bool
address: 957
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 458 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload ebx
7 [0x7]:           not ebx, ebx
8 [0x8]:           rstore ebx
9 [0x9]:           call @110 // std#bool.bool
10 [0xa]:           popobj2 
11 [0xb]:           returnobj
12 [0xc]:           ret

to_string(): std#string?
address: 958
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<_int8, std#bool>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @117 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

static_init<number<var, std#double>>(): nil
address: 959
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#number<var, std#double>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#number<var, std#double>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<number<var, std#double>>(): nil
address: 960
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

set_value(var): nil
address: 961
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 15 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          loadval egx
6 [0x6]:          imov egx
7 [0x7]:          ret

number(var): nil
address: 962
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1061 // std#base_number<std#double>.base_number<std#double>
3 [0x3]:         movg @std#number<var, std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @960 // std#number<var, std#double>.init<number<var, std#double>>
12 [0xc]: line: 18 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @961 // std#number<var, std#double>.set_value
16 [0x10]:          ret

number(_int8): nil
address: 963
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1061 // std#base_number<std#double>.base_number<std#double>
3 [0x3]:         movg @std#number<var, std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @960 // std#number<var, std#double>.init<number<var, std#double>>
12 [0xc]: line: 21 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @961 // std#number<var, std#double>.set_value
16 [0x10]:          ret

number(_uint8): nil
address: 964
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1061 // std#base_number<std#double>.base_number<std#double>
3 [0x3]:         movg @std#number<var, std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @960 // std#number<var, std#double>.init<number<var, std#double>>
12 [0xc]: line: 24 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @961 // std#number<var, std#double>.set_value
16 [0x10]:          ret

number(_int16): nil
address: 965
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1061 // std#base_number<std#double>.base_number<std#double>
3 [0x3]:         movg @std#number<var, std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @960 // std#number<var, std#double>.init<number<var, std#double>>
12 [0xc]: line: 27 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @961 // std#number<var, std#double>.set_value
16 [0x10]:          ret

number(_uint16): nil
address: 966
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1061 // std#base_number<std#double>.base_number<std#double>
3 [0x3]:         movg @std#number<var, std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @960 // std#number<var, std#double>.init<number<var, std#double>>
12 [0xc]: line: 30 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @961 // std#number<var, std#double>.set_value
16 [0x10]:          ret

number(_int32): nil
address: 967
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1061 // std#base_number<std#double>.base_number<std#double>
3 [0x3]:         movg @std#number<var, std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @960 // std#number<var, std#double>.init<number<var, std#double>>
12 [0xc]: line: 33 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @961 // std#number<var, std#double>.set_value
16 [0x10]:          ret

number(_uint32): nil
address: 968
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1061 // std#base_number<std#double>.base_number<std#double>
3 [0x3]:         movg @std#number<var, std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @960 // std#number<var, std#double>.init<number<var, std#double>>
12 [0xc]: line: 36 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @961 // std#number<var, std#double>.set_value
16 [0x10]:          ret

number(_int64): nil
address: 969
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1061 // std#base_number<std#double>.base_number<std#double>
3 [0x3]:         movg @std#number<var, std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @960 // std#number<var, std#double>.init<number<var, std#double>>
12 [0xc]: line: 39 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @961 // std#number<var, std#double>.set_value
16 [0x10]:          ret

number(_uint64): nil
address: 970
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @1061 // std#base_number<std#double>.base_number<std#double>
3 [0x3]:         movg @std#number<var, std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @959 // std#number<var, std#double>.static_init<number<var, std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @960 // std#number<var, std#double>.init<number<var, std#double>>
12 [0xc]: line: 42 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          ipushl #1
15 [0xf]:          call @961 // std#number<var, std#double>.set_value
16 [0x10]:          ret

hash(): std#int
address: 971
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 46 - 0new_class @std#int
2 [0x2]:          dup 
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @67 // std#int.int
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

operator>=(var): std#bool
address: 972
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 270 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           ipushl #1
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gte cx, ecx
10 [0xa]:           rstore cmt
11 [0xb]:           call @111 // std#bool.bool
12 [0xc]:           popobj2 
13 [0xd]:           returnobj
14 [0xe]:           ret

operator-=(std#long): std#double
address: 973
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 486 - 0movl 1
1 [0x1]:           movn #0
3 [0x3]:           iload ecx
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           sub cx, ecx -> bmr
9 [0x9]:           imov bmr
10 [0xa]:           movl 0
11 [0xb]:           cast 16 // std#double
12 [0xc]:           returnobj
13 [0xd]:           ret

to_string(): std#string?
address: 974
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 633 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           istore 108
5 [0x5]:           call @68 // std#int.int
6 [0x6]:           new_class @std#double
8 [0x8]:           dup 
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @116 // std#double.double
15 [0xf]:           new_class @std#int
17 [0x11]:           dup 
18 [0x12]:           istore 0
20 [0x14]:           call @72 // std#int.int
21 [0x15]:           call @39 // std#__srt_global.snprintf
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret

to_long(): std#long
address: 975
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#number<var, std#double>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 667 - 0new_class @std#long
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @55 // std#long.long
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_string(): std#string?
address: 976
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<main#bank_account>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 234 - 0new_class @std#string_builder
2 [0x2]:           dup 
3 [0x3]:           call @189 // std#string_builder.string_builder
4 [0x4]:           popl 1
5 [0x5]: line: 236 - 5pushl 1
6 [0x6]:           newstr @82 ([ )
7 [0x7]:           call @187 // std#string_builder.operator+=
8 [0x8]:           pop
9 [0x9]: line: 237 - 9istore 0
11 [0xb]:           ipopl 2
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           loadl cx, fp+2
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 55
21 [0x15]: line: 238 - 21pushl 1
22 [0x16]:           movl 0
23 [0x17]:           movn #1
25 [0x19]:           pushobj
26 [0x1a]:           loadl adx, fp+2
27 [0x1b]:           popobj2 
28 [0x1c]:           chklen adx
29 [0x1d]:           movnd adx
30 [0x1e]:           pushobj
31 [0x1f]:           call @185 // std#string_builder.operator+=
32 [0x20]:           pop
33 [0x21]: line: 240 - 33movl 0
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           istore 1
40 [0x28]:           loadl ecx, fp+2
41 [0x29]:           loadval ecf
42 [0x2a]:           add ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           lt bmr, cx
45 [0x2d]:           jne 50
46 [0x2e]: line: 241 - 46pushl 1
47 [0x2f]:           newstr @83 (, )
48 [0x30]:           call @187 // std#string_builder.operator+=
49 [0x31]:           pop
50 [0x32]:           ipushl #2
51 [0x33]:           iaddl 1, fp@2
53 [0x35]:           loadval ebx
54 [0x36]:           jmp @12
55 [0x37]: line: 245 - 55pushl 1
56 [0x38]:           newstr @84 ( ])
57 [0x39]:           call @187 // std#string_builder.operator+=
58 [0x3a]:           pop
59 [0x3b]: line: 246 - 59pushl 1
60 [0x3c]:           call @184 // std#string_builder.to_string
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret

hash(): std#int
address: 977
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<main#bank_account>
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 250 - 0istore 0
2 [0x2]:           ipopl 1
3 [0x3]: line: 251 - 3new_class @std#int
5 [0x5]:           dup 
6 [0x6]:           istore 0
8 [0x8]:           call @79 // std#int.init<int>
9 [0x9]:           popl 2
10 [0xa]: line: 252 - 10istore 0
12 [0xc]:           ipopl 3
13 [0xd]: line: 253 - 13new_class @std#double
15 [0xf]:           dup 
16 [0x10]:           istore 1000000009
18 [0x12]:           call @125 // std#double.init<double>
19 [0x13]:           popl 4
20 [0x14]: line: 255 - 20istore 4294967295
22 [0x16]:           ipopl 6
23 [0x17]:           movl 0
24 [0x18]:           movn #1
26 [0x1a]:           pushobj
27 [0x1b]:           popl 7
28 [0x1c]:           iaddl 1, fp@6
30 [0x1e]:           loadl cx, fp+6
31 [0x1f]:           movl 7
32 [0x20]:           sizeof ebx
33 [0x21]:           movr ecx, ebx
34 [0x22]:           lt cx, ecx
35 [0x23]:           jne 69
36 [0x24]:           pushl 7
37 [0x25]:           loadl adx, fp+6
38 [0x26]:           popobj2 
39 [0x27]:           chklen adx
40 [0x28]:           movnd adx
41 [0x29]:           pushobj
42 [0x2a]:           popl 5
43 [0x2b]: line: 256 - 43pushl 2
44 [0x2c]:           pushl 5
45 [0x2d]:           call @36 // std#_object_.hash
46 [0x2e]:           popobj2 
47 [0x2f]:           movn #0
49 [0x31]:           iload egx
50 [0x32]:           rstore egx
51 [0x33]:           call @401 // std#number<_int32, std#int>.operator+
52 [0x34]:           ipushl #3
53 [0x35]:           call @398 // std#number<_int32, std#int>.operator+
54 [0x36]:           pushl 4
55 [0x37]:           call @478 // std#number<_int32, std#int>.operator%
56 [0x38]:           popl 2
57 [0x39]: line: 257 - 57istore 10
59 [0x3b]:           loadl ecf, fp+1
60 [0x3c]:           loadval edf
61 [0x3d]:           mod ecf, edf -> bmr
62 [0x3e]:           rstore bmr
63 [0x3f]:           loadl cx, fp+1
64 [0x40]:           loadval ecx
65 [0x41]:           mul cx, ecx -> bmr
66 [0x42]:           rstore bmr
67 [0x43]:           ipopl 3
68 [0x44]:           jmp @28
69 [0x45]: line: 260 - 69movl 2
70 [0x46]:           returnobj
71 [0x47]:           ret

get_elements(): _int8[]?
address: 978
file: /usr/include/sharp/0.3.0/std/loopable.sharp
owner: std#loopable<_int8>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


static_init<synced_list<std.io.coroutines#job>>(): nil
address: 979
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#synced_list<std.io.coroutines#job>
1 [0x1]:         movn #2
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#synced_list<std.io.coroutines#job>
9 [0x9]:         movn #2
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#int
15 [0xf]:         dup 
16 [0x10]:         istore 10
18 [0x12]:         call @79 // std#int.init<int>
19 [0x13]:         movg @std#synced_list<std.io.coroutines#job>
20 [0x14]:         movn #0
22 [0x16]:         popobj
23 [0x17]:         new_class @std#int
25 [0x19]:         dup 
26 [0x1a]:         istore 128
28 [0x1c]:         call @79 // std#int.init<int>
29 [0x1d]:         movg @std#synced_list<std.io.coroutines#job>
30 [0x1e]:         movn #1
32 [0x20]:         popobj
33 [0x21]:         ret

init<synced_list<std.io.coroutines#job>>(): nil
address: 980
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

synced_list(): nil
address: 981
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#synced_list<std.io.coroutines#job>
4 [0x4]:         movn #2
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @979 // std#synced_list<std.io.coroutines#job>.static_init<synced_list<std.io.coroutines#job>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @980 // std#synced_list<std.io.coroutines#job>.init<synced_list<std.io.coroutines#job>>
12 [0xc]: line: 24 - 12movg @std#synced_list<std.io.coroutines#job>
13 [0xd]:          movn #0
15 [0xf]:          movn #0
17 [0x11]:          iload adx
18 [0x12]:          new_classarray adx @ std.io.coroutines#job
20 [0x14]:          movl 0
21 [0x15]:          movn #1
23 [0x17]:          popobj
24 [0x18]:          ret

get_elements(): std.io.coroutines#job[]?
address: 982
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 38 - 0movl 0
1 [0x1]:          _lck 
2 [0x2]: line: 39 - 2istore 0
4 [0x4]:          movl 0
5 [0x5]:          movn #0
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          movr cmt, bmr
11 [0xb]:          jne 22
12 [0xc]:          pushnull 
13 [0xd]:          popl 1
14 [0xe]:          movl 0
15 [0xf]:          _ulck
16 [0x10]:          movl 0
17 [0x11]:          _ulck
18 [0x12]:          movl 1
19 [0x13]:          returnobj
20 [0x14]:          ret
21 [0x15]:          jmp @45
22 [0x16]: line: 40 - 22movl 0
23 [0x17]:          movn #1
25 [0x19]:          pushobj
26 [0x1a]:          istore 0
28 [0x1c]:          movl 0
29 [0x1d]:          movn #0
31 [0x1f]:          iload egx
32 [0x20]:          rstore egx
33 [0x21]:          call @1092 // std.io#__srt_global.copy
34 [0x22]:          popobj2 
35 [0x23]:          cast 112 // std.io.coroutines#job
36 [0x24]:          pushobj
37 [0x25]:          popl 2
38 [0x26]:          movl 0
39 [0x27]:          _ulck
40 [0x28]:          movl 0
41 [0x29]:          _ulck
42 [0x2a]:          movl 2
43 [0x2b]:          returnobj
44 [0x2c]:          ret
45 [0x2d]:          movl 0
46 [0x2e]:          _ulck

expand(): nil
address: 983
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 76 - 0movl 0
1 [0x1]:          movn #2
3 [0x3]:          iload cmt
4 [0x4]:          jne 26
5 [0x5]: line: 77 - 5movl 0
6 [0x6]:          movn #1
8 [0x8]:          pushobj
9 [0x9]:          movg @std#synced_list<std.io.coroutines#job>
10 [0xa]:          movn #1
12 [0xc]:          movn #0
14 [0xe]:          iload egx
15 [0xf]:          rstore egx
16 [0x10]:          movl 0
17 [0x11]:          movn #1
19 [0x13]:          sizeof ebx
20 [0x14]:          movr cx, ebx
21 [0x15]:          loadval ecx
22 [0x16]:          add cx, ecx -> bmr
23 [0x17]:          rstore bmr
24 [0x18]:          call @1088 // std.io#__srt_global.realloc
25 [0x19]:          jmp @58
26 [0x1a]: line: 79 - 26movl 0
27 [0x1b]:          movn #1
29 [0x1d]:          pushobj
30 [0x1e]:          movg @std#synced_list<std.io.coroutines#job>
31 [0x1f]:          movn #1
33 [0x21]:          movn #0
35 [0x23]:          iload egx
36 [0x24]:          rstore egx
37 [0x25]:          istore 4
39 [0x27]:          movl 0
40 [0x28]:          movn #1
42 [0x2a]:          sizeof ebx
43 [0x2b]:          movr edf, ebx
44 [0x2c]:          loadval ehf
45 [0x2d]:          shr edf, ehf -> bmr
46 [0x2e]:          rstore bmr
47 [0x2f]:          movl 0
48 [0x30]:          movn #1
50 [0x32]:          sizeof ebx
51 [0x33]:          movr ecx, ebx
52 [0x34]:          loadval ecf
53 [0x35]:          add ecx, ecf -> bmr
54 [0x36]:          loadval cx
55 [0x37]:          add bmr, cx -> bmr
56 [0x38]:          rstore bmr
57 [0x39]:          call @1088 // std.io#__srt_global.realloc
58 [0x3a]:          ret

add(std.io.coroutines#job): nil
address: 984
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 119 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]: line: 120 - 2movl 0
3 [0x3]:           movn #1
5 [0x5]:           sizeof ebx
6 [0x6]:           rstore ebx
7 [0x7]:           movl 0
8 [0x8]:           movn #0
10 [0xa]:           iload cx
11 [0xb]:           loadval ecx
12 [0xc]:           gte cx, ecx
13 [0xd]:           jne 17
14 [0xe]: line: 121 - 14movl 0
15 [0xf]:           pushobj
16 [0x10]:           call @983 // std#synced_list<std.io.coroutines#job>.expand
17 [0x11]: line: 122 - 17pushl 1
18 [0x12]:           movl 0
19 [0x13]:           movn #1
21 [0x15]:           pushobj
22 [0x16]:           movl 0
23 [0x17]:           movn #0
25 [0x19]:           iload egx
26 [0x1a]:           rstore egx
27 [0x1b]:           iload egx
28 [0x1c]:           inc egx
29 [0x1d]:           imov egx
30 [0x1e]:           loadval ebx
31 [0x1f]:           movr adx, ebx
32 [0x20]:           popobj2 
33 [0x21]:           chklen adx
34 [0x22]:           movnd adx
35 [0x23]:           popobj
36 [0x24]:           movl 0
37 [0x25]:           _ulck
38 [0x26]:           ret

pop_back(): nil
address: 985
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 1
fpOffset: 0
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 139 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]: line: 140 - 2istore 0
4 [0x4]:           movl 0
5 [0x5]:           movn #0
7 [0x7]:           iload cx
8 [0x8]:           loadval ecx
9 [0x9]:           gt cx, ecx
10 [0xa]:           jne 29
11 [0xb]: line: 141 - 11pushnull 
12 [0xc]:           popl 1
13 [0xd]: line: 142 - 13pushl 1
14 [0xe]:           movl 0
15 [0xf]:           movn #1
17 [0x11]:           pushobj
18 [0x12]:           movl 0
19 [0x13]:           movn #0
21 [0x15]:           iload egx
22 [0x16]:           dec egx
23 [0x17]:           imov egx
24 [0x18]:           movr adx, egx
25 [0x19]:           popobj2 
26 [0x1a]:           chklen adx
27 [0x1b]:           movnd adx
28 [0x1c]:           popobj
29 [0x1d]:           movl 0
30 [0x1e]:           _ulck
31 [0x1f]:           ret

remove(std.io.coroutines#job): nil
address: 986
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 179 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]: line: 180 - 2istore 0
4 [0x4]:           ipopl 2
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           iload egx
9 [0x9]:           rstore egx
10 [0xa]:           loadl cx, fp+2
11 [0xb]:           loadval ecx
12 [0xc]:           lt cx, ecx
13 [0xd]:           jne 48
14 [0xe]: line: 181 - 14movl 0
15 [0xf]:           movn #1
17 [0x11]:           pushobj
18 [0x12]:           loadl adx, fp+2
19 [0x13]:           popobj2 
20 [0x14]:           chklen adx
21 [0x15]:           movnd adx
22 [0x16]:           pushobj
23 [0x17]:           pushl 1
24 [0x18]:           itest cmt
25 [0x19]:           jne 43
26 [0x1a]: line: 182 - 26movl 0
27 [0x1b]:           pushobj
28 [0x1c]:           new_class @std#int
30 [0x1e]:           dup 
31 [0x1f]:           ipushl #2
32 [0x20]:           call @67 // std#int.int
33 [0x21]:           call @987 // std#synced_list<std.io.coroutines#job>.remove_at
34 [0x22]: line: 183 - 34movl 0
35 [0x23]:           _ulck
36 [0x24]:           movl 0
37 [0x25]:           _ulck
38 [0x26]:           movl 0
39 [0x27]:           _ulck
40 [0x28]:           movl 0
41 [0x29]:           _ulck
42 [0x2a]:           ret
43 [0x2b]:           ipushl #2
44 [0x2c]:           iaddl 1, fp@2
46 [0x2e]:           loadval ebx
47 [0x2f]:           jmp @5
48 [0x30]:           movl 0
49 [0x31]:           _ulck
50 [0x32]:           ret

remove_at(std#int): nil
address: 987
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 201 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]: line: 202 - 2movl 0
3 [0x3]:           movn #0
5 [0x5]:           iload egx
6 [0x6]:           rstore egx
7 [0x7]:           movl 1
8 [0x8]:           movn #0
10 [0xa]:           iload cx
11 [0xb]:           loadval ecx
12 [0xc]:           gte cx, ecx
13 [0xd]:           je 22
14 [0xe]:           istore 0
16 [0x10]:           movl 1
17 [0x11]:           movn #0
19 [0x13]:           iload cx
20 [0x14]:           loadval ecx
21 [0x15]:           lt cx, ecx
22 [0x16]:           jne 32
23 [0x17]: line: 203 - 23new_class @std#out_of_bounds_exception
25 [0x19]:           dup 
26 [0x1a]:           movl 0
27 [0x1b]:           pushobj
28 [0x1c]:           pushl 1
29 [0x1d]:           call @990 // std#synced_list<std.io.coroutines#job>.out_of_bounds_msg
30 [0x1e]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
31 [0x1f]:           throw 
32 [0x20]: line: 205 - 32istore 1
34 [0x22]:           movl 1
35 [0x23]:           movn #0
37 [0x25]:           iload egx
38 [0x26]:           rstore egx
39 [0x27]:           movl 0
40 [0x28]:           movn #0
42 [0x2a]:           iload ecx
43 [0x2b]:           loadval ecf
44 [0x2c]:           sub ecx, ecf -> bmr
45 [0x2d]:           loadval cx
46 [0x2e]:           sub bmr, cx -> bmr
47 [0x2f]:           rstore bmr
48 [0x30]:           loadval egx
49 [0x31]:           mov32 egx, egx
50 [0x32]:           smovr_2 egx, fp+2
51 [0x33]: line: 206 - 51istore 0
53 [0x35]:           loadl cx, fp+2
54 [0x36]:           loadval ecx
55 [0x37]:           gt cx, ecx
56 [0x38]:           jne 85
57 [0x39]: line: 207 - 57movl 0
58 [0x3a]:           movn #1
60 [0x3c]:           pushobj
61 [0x3d]:           movl 0
62 [0x3e]:           movn #1
64 [0x40]:           pushobj
65 [0x41]:           movl 1
66 [0x42]:           movn #0
68 [0x44]:           iload egx
69 [0x45]:           rstore egx
70 [0x46]:           istore 1
72 [0x48]:           movl 1
73 [0x49]:           movn #0
75 [0x4b]:           iload cx
76 [0x4c]:           loadval ecx
77 [0x4d]:           add cx, ecx -> bmr
78 [0x4e]:           rstore bmr
79 [0x4f]:           movl 0
80 [0x50]:           movn #0
82 [0x52]:           iload egx
83 [0x53]:           rstore egx
84 [0x54]:           call @1090 // std.io#__srt_global.memcopy
85 [0x55]: line: 209 - 85movl 0
86 [0x56]:           pushobj
87 [0x57]:           call @985 // std#synced_list<std.io.coroutines#job>.pop_back
88 [0x58]:           movl 0
89 [0x59]:           _ulck
90 [0x5a]:           ret

to_string(): std#string?
address: 988
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 3
fpOffset: 0
spOffset: 0
stackSize: 4
code:

0 [0x0]: line: 269 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]: line: 270 - 2new_class @std#string_builder
4 [0x4]:           dup 
5 [0x5]:           call @189 // std#string_builder.string_builder
6 [0x6]:           popl 1
7 [0x7]: line: 272 - 7pushl 1
8 [0x8]:           newstr @82 ([ )
9 [0x9]:           call @187 // std#string_builder.operator+=
10 [0xa]:           pop
11 [0xb]: line: 273 - 11new_class @std#int
13 [0xd]:           dup 
14 [0xe]:           istore 0
16 [0x10]:           call @79 // std#int.init<int>
17 [0x11]:           popl 2
18 [0x12]:           pushl 2
19 [0x13]:           movl 0
20 [0x14]:           movn #0
22 [0x16]:           iload egx
23 [0x17]:           rstore egx
24 [0x18]:           call @499 // std#number<_int32, std#int>.operator<
25 [0x19]:           popobj2 
26 [0x1a]:           movn #0
28 [0x1c]:           iload cmt
29 [0x1d]:           jne 70
30 [0x1e]: line: 274 - 30pushl 1
31 [0x1f]:           movl 0
32 [0x20]:           movn #1
34 [0x22]:           pushobj
35 [0x23]:           movl 2
36 [0x24]:           movn #0
38 [0x26]:           iload adx
39 [0x27]:           popobj2 
40 [0x28]:           chklen adx
41 [0x29]:           movnd adx
42 [0x2a]:           pushobj
43 [0x2b]:           call @185 // std#string_builder.operator+=
44 [0x2c]:           pop
45 [0x2d]: line: 276 - 45pushl 2
46 [0x2e]:           istore 1
48 [0x30]:           call @401 // std#number<_int32, std#int>.operator+
49 [0x31]:           movl 0
50 [0x32]:           movn #0
52 [0x34]:           iload egx
53 [0x35]:           rstore egx
54 [0x36]:           call @499 // std#number<_int32, std#int>.operator<
55 [0x37]:           popobj2 
56 [0x38]:           movn #0
58 [0x3a]:           iload cmt
59 [0x3b]:           jne 64
60 [0x3c]: line: 277 - 60pushl 1
61 [0x3d]:           newstr @83 (, )
62 [0x3e]:           call @187 // std#string_builder.operator+=
63 [0x3f]:           pop
64 [0x40]:           pushl 2
65 [0x41]:           istore 1
67 [0x43]:           call @739 // std#number<_int32, std#int>.operator++
68 [0x44]:           pop
69 [0x45]:           jmp @18
70 [0x46]: line: 281 - 70pushl 1
71 [0x47]:           newstr @84 ( ])
72 [0x48]:           call @187 // std#string_builder.operator+=
73 [0x49]:           pop
74 [0x4a]: line: 282 - 74pushl 1
75 [0x4b]:           call @184 // std#string_builder.to_string
76 [0x4c]:           popl 3
77 [0x4d]:           movl 0
78 [0x4e]:           _ulck
79 [0x4f]:           movl 3
80 [0x50]:           returnobj
81 [0x51]:           ret
82 [0x52]:           movl 0
83 [0x53]:           _ulck

hash(): std#int
address: 989
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 8
fpOffset: 0
spOffset: 0
stackSize: 9
code:

0 [0x0]: line: 287 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]: line: 288 - 2istore 0
4 [0x4]:           ipopl 1
5 [0x5]: line: 289 - 5new_class @std#int
7 [0x7]:           dup 
8 [0x8]:           istore 0
10 [0xa]:           call @79 // std#int.init<int>
11 [0xb]:           popl 2
12 [0xc]: line: 290 - 12new_class @std#int
14 [0xe]:           dup 
15 [0xf]:           istore 0
17 [0x11]:           call @79 // std#int.init<int>
18 [0x12]:           popl 3
19 [0x13]: line: 291 - 19new_class @std#double
21 [0x15]:           dup 
22 [0x16]:           istore 1000000009
24 [0x18]:           call @125 // std#double.init<double>
25 [0x19]:           popl 4
26 [0x1a]: line: 293 - 26istore 4294967295
28 [0x1c]:           ipopl 6
29 [0x1d]:           movl 0
30 [0x1e]:           movn #1
32 [0x20]:           pushobj
33 [0x21]:           popl 7
34 [0x22]:           iaddl 1, fp@6
36 [0x24]:           loadl cx, fp+6
37 [0x25]:           movl 7
38 [0x26]:           sizeof ebx
39 [0x27]:           movr ecx, ebx
40 [0x28]:           lt cx, ecx
41 [0x29]:           jne 77
42 [0x2a]:           pushl 7
43 [0x2b]:           loadl adx, fp+6
44 [0x2c]:           popobj2 
45 [0x2d]:           chklen adx
46 [0x2e]:           movnd adx
47 [0x2f]:           pushobj
48 [0x30]:           popl 5
49 [0x31]: line: 294 - 49pushl 2
50 [0x32]:           pushl 5
51 [0x33]:           call @36 // std#_object_.hash
52 [0x34]:           popobj2 
53 [0x35]:           movn #0
55 [0x37]:           iload egx
56 [0x38]:           rstore egx
57 [0x39]:           call @401 // std#number<_int32, std#int>.operator+
58 [0x3a]:           pushl 3
59 [0x3b]:           call @390 // std#number<_int32, std#int>.operator+
60 [0x3c]:           pushl 4
61 [0x3d]:           call @478 // std#number<_int32, std#int>.operator%
62 [0x3e]:           popl 2
63 [0x3f]: line: 295 - 63pushl 3
64 [0x40]:           istore 10
66 [0x42]:           loadl ecf, fp+1
67 [0x43]:           loadval edf
68 [0x44]:           mod ecf, edf -> bmr
69 [0x45]:           rstore bmr
70 [0x46]:           loadl cx, fp+1
71 [0x47]:           loadval ecx
72 [0x48]:           mul cx, ecx -> bmr
73 [0x49]:           rstore bmr
74 [0x4a]:           call @731 // std#number<_int32, std#int>.operator=
75 [0x4b]:           pop
76 [0x4c]:           jmp @34
77 [0x4d]: line: 298 - 77pushl 2
78 [0x4e]:           popl 8
79 [0x4f]:           movl 0
80 [0x50]:           _ulck
81 [0x51]:           movl 8
82 [0x52]:           returnobj
83 [0x53]:           ret
84 [0x54]:           movl 0
85 [0x55]:           _ulck

out_of_bounds_msg(std#int): std#string
address: 990
file: /usr/include/sharp/0.3.0/std/synced_list.sharp
owner: std#synced_list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 303 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           newstr @85 (Index: )
4 [0x4]:           call @130 // std#string.string
5 [0x5]:           pushl 1
6 [0x6]:           call @145 // std#string.operator+
7 [0x7]:           newstr @86 (, size: )
8 [0x8]:           call @143 // std#string.operator+
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @161 // std#string.operator+
15 [0xf]:           popobj2 
16 [0x10]:           returnobj
17 [0x11]:           ret

static_init<base_number<std#ulong>>(): nil
address: 991
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#ulong>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#ulong>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#ulong>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#ulong>>(): nil
address: 992
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#ulong>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#ulong>(): nil
address: 993
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#ulong>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#ulong>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @991 // std#base_number<std#ulong>.static_init<base_number<std#ulong>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @992 // std#base_number<std#ulong>.init<base_number<std#ulong>>
12 [0xc]:         ret

static_init<base_number<std#long>>(): nil
address: 994
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#long>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#long>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#long>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#long>>(): nil
address: 995
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#long>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#long>(): nil
address: 996
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#long>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#long>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @994 // std#base_number<std#long>.static_init<base_number<std#long>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @995 // std#base_number<std#long>.init<base_number<std#long>>
12 [0xc]:         ret

static_init<base_number<std#uint>>(): nil
address: 997
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#uint>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#uint>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#uint>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#uint>>(): nil
address: 998
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#uint>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#uint>(): nil
address: 999
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#uint>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#uint>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @997 // std#base_number<std#uint>.static_init<base_number<std#uint>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @998 // std#base_number<std#uint>.init<base_number<std#uint>>
12 [0xc]:         ret

static_init<base_number<std#int>>(): nil
address: 1000
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#int>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#int>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#int>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#int>>(): nil
address: 1001
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#int>(): nil
address: 1002
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1000 // std#base_number<std#int>.static_init<base_number<std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1001 // std#base_number<std#int>.init<base_number<std#int>>
12 [0xc]:         ret

static_init<base_number<std#ushort>>(): nil
address: 1003
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#ushort>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#ushort>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#ushort>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#ushort>>(): nil
address: 1004
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#ushort>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#ushort>(): nil
address: 1005
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#ushort>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#ushort>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1003 // std#base_number<std#ushort>.static_init<base_number<std#ushort>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1004 // std#base_number<std#ushort>.init<base_number<std#ushort>>
12 [0xc]:         ret

static_init<list<std.io.coroutines#job>>(): nil
address: 1006
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#list<std.io.coroutines#job>
1 [0x1]:         movn #2
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#list<std.io.coroutines#job>
9 [0x9]:         movn #2
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#int
15 [0xf]:         dup 
16 [0x10]:         istore 10
18 [0x12]:         call @79 // std#int.init<int>
19 [0x13]:         movg @std#list<std.io.coroutines#job>
20 [0x14]:         movn #0
22 [0x16]:         popobj
23 [0x17]:         new_class @std#int
25 [0x19]:         dup 
26 [0x1a]:         istore 128
28 [0x1c]:         call @79 // std#int.init<int>
29 [0x1d]:         movg @std#list<std.io.coroutines#job>
30 [0x1e]:         movn #1
32 [0x20]:         popobj
33 [0x21]:         ret

init<list<std.io.coroutines#job>>(): nil
address: 1007
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

list(): nil
address: 1008
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#list<std.io.coroutines#job>
4 [0x4]:         movn #2
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1006 // std#list<std.io.coroutines#job>.static_init<list<std.io.coroutines#job>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1007 // std#list<std.io.coroutines#job>.init<list<std.io.coroutines#job>>
12 [0xc]: line: 24 - 12movg @std#list<std.io.coroutines#job>
13 [0xd]:          movn #0
15 [0xf]:          movn #0
17 [0x11]:          iload adx
18 [0x12]:          new_classarray adx @ std.io.coroutines#job
20 [0x14]:          movl 0
21 [0x15]:          movn #1
23 [0x17]:          popobj
24 [0x18]:          ret

get_elements(): std.io.coroutines#job[]?
address: 1009
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 41 - 0istore 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          iload cx
6 [0x6]:          loadval ecx
7 [0x7]:          test cx, ecx
8 [0x8]:          movr cmt, bmr
9 [0x9]:          jne 15
10 [0xa]:          pushnull 
11 [0xb]:          popobj2 
12 [0xc]:          returnobj
13 [0xd]:          ret
14 [0xe]:          jmp @31
15 [0xf]: line: 42 - 15movl 0
16 [0x10]:          movn #1
18 [0x12]:          pushobj
19 [0x13]:          istore 0
21 [0x15]:          movl 0
22 [0x16]:          movn #0
24 [0x18]:          iload egx
25 [0x19]:          rstore egx
26 [0x1a]:          call @1092 // std.io#__srt_global.copy
27 [0x1b]:          popobj2 
28 [0x1c]:          cast 112 // std.io.coroutines#job
29 [0x1d]:          returnobj
30 [0x1e]:          ret

expand(): nil
address: 1010
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 75 - 0movl 0
1 [0x1]:          movn #2
3 [0x3]:          iload cmt
4 [0x4]:          jne 26
5 [0x5]: line: 76 - 5movl 0
6 [0x6]:          movn #1
8 [0x8]:          pushobj
9 [0x9]:          movg @std#list<std.io.coroutines#job>
10 [0xa]:          movn #1
12 [0xc]:          movn #0
14 [0xe]:          iload egx
15 [0xf]:          rstore egx
16 [0x10]:          movl 0
17 [0x11]:          movn #1
19 [0x13]:          sizeof ebx
20 [0x14]:          movr cx, ebx
21 [0x15]:          loadval ecx
22 [0x16]:          add cx, ecx -> bmr
23 [0x17]:          rstore bmr
24 [0x18]:          call @1088 // std.io#__srt_global.realloc
25 [0x19]:          jmp @58
26 [0x1a]: line: 78 - 26movl 0
27 [0x1b]:          movn #1
29 [0x1d]:          pushobj
30 [0x1e]:          movg @std#list<std.io.coroutines#job>
31 [0x1f]:          movn #1
33 [0x21]:          movn #0
35 [0x23]:          iload egx
36 [0x24]:          rstore egx
37 [0x25]:          istore 4
39 [0x27]:          movl 0
40 [0x28]:          movn #1
42 [0x2a]:          sizeof ebx
43 [0x2b]:          movr edf, ebx
44 [0x2c]:          loadval ehf
45 [0x2d]:          shr edf, ehf -> bmr
46 [0x2e]:          rstore bmr
47 [0x2f]:          movl 0
48 [0x30]:          movn #1
50 [0x32]:          sizeof ebx
51 [0x33]:          movr ecx, ebx
52 [0x34]:          loadval ecf
53 [0x35]:          add ecx, ecf -> bmr
54 [0x36]:          loadval cx
55 [0x37]:          add bmr, cx -> bmr
56 [0x38]:          rstore bmr
57 [0x39]:          call @1088 // std.io#__srt_global.realloc
58 [0x3a]:          ret

add(std.io.coroutines#job): nil
address: 1011
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 110 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           sizeof ebx
4 [0x4]:           rstore ebx
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gte cx, ecx
11 [0xb]:           jne 15
12 [0xc]: line: 111 - 12movl 0
13 [0xd]:           pushobj
14 [0xe]:           call @1010 // std#list<std.io.coroutines#job>.expand
15 [0xf]: line: 112 - 15pushl 1
16 [0x10]:           movl 0
17 [0x11]:           movn #1
19 [0x13]:           pushobj
20 [0x14]:           movl 0
21 [0x15]:           movn #0
23 [0x17]:           iload egx
24 [0x18]:           rstore egx
25 [0x19]:           iload egx
26 [0x1a]:           inc egx
27 [0x1b]:           imov egx
28 [0x1c]:           loadval ebx
29 [0x1d]:           movr adx, ebx
30 [0x1e]:           popobj2 
31 [0x1f]:           chklen adx
32 [0x20]:           movnd adx
33 [0x21]:           popobj
34 [0x22]:           ret

to_string(): std#string?
address: 1012
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io.coroutines#job>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 234 - 0new_class @std#string_builder
2 [0x2]:           dup 
3 [0x3]:           call @189 // std#string_builder.string_builder
4 [0x4]:           popl 1
5 [0x5]: line: 236 - 5pushl 1
6 [0x6]:           newstr @82 ([ )
7 [0x7]:           call @187 // std#string_builder.operator+=
8 [0x8]:           pop
9 [0x9]: line: 237 - 9istore 0
11 [0xb]:           ipopl 2
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           loadl cx, fp+2
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 55
21 [0x15]: line: 238 - 21pushl 1
22 [0x16]:           movl 0
23 [0x17]:           movn #1
25 [0x19]:           pushobj
26 [0x1a]:           loadl adx, fp+2
27 [0x1b]:           popobj2 
28 [0x1c]:           chklen adx
29 [0x1d]:           movnd adx
30 [0x1e]:           pushobj
31 [0x1f]:           call @185 // std#string_builder.operator+=
32 [0x20]:           pop
33 [0x21]: line: 240 - 33movl 0
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           istore 1
40 [0x28]:           loadl ecx, fp+2
41 [0x29]:           loadval ecf
42 [0x2a]:           add ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           lt bmr, cx
45 [0x2d]:           jne 50
46 [0x2e]: line: 241 - 46pushl 1
47 [0x2f]:           newstr @83 (, )
48 [0x30]:           call @187 // std#string_builder.operator+=
49 [0x31]:           pop
50 [0x32]:           ipushl #2
51 [0x33]:           iaddl 1, fp@2
53 [0x35]:           loadval ebx
54 [0x36]:           jmp @12
55 [0x37]: line: 245 - 55pushl 1
56 [0x38]:           newstr @84 ( ])
57 [0x39]:           call @187 // std#string_builder.operator+=
58 [0x3a]:           pop
59 [0x3b]: line: 246 - 59pushl 1
60 [0x3c]:           call @184 // std#string_builder.to_string
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret

hash(): std#int
address: 1013
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io.coroutines#job>
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 250 - 0istore 0
2 [0x2]:           ipopl 1
3 [0x3]: line: 251 - 3new_class @std#int
5 [0x5]:           dup 
6 [0x6]:           istore 0
8 [0x8]:           call @79 // std#int.init<int>
9 [0x9]:           popl 2
10 [0xa]: line: 252 - 10istore 0
12 [0xc]:           ipopl 3
13 [0xd]: line: 253 - 13new_class @std#double
15 [0xf]:           dup 
16 [0x10]:           istore 1000000009
18 [0x12]:           call @125 // std#double.init<double>
19 [0x13]:           popl 4
20 [0x14]: line: 255 - 20istore 4294967295
22 [0x16]:           ipopl 6
23 [0x17]:           movl 0
24 [0x18]:           movn #1
26 [0x1a]:           pushobj
27 [0x1b]:           popl 7
28 [0x1c]:           iaddl 1, fp@6
30 [0x1e]:           loadl cx, fp+6
31 [0x1f]:           movl 7
32 [0x20]:           sizeof ebx
33 [0x21]:           movr ecx, ebx
34 [0x22]:           lt cx, ecx
35 [0x23]:           jne 69
36 [0x24]:           pushl 7
37 [0x25]:           loadl adx, fp+6
38 [0x26]:           popobj2 
39 [0x27]:           chklen adx
40 [0x28]:           movnd adx
41 [0x29]:           pushobj
42 [0x2a]:           popl 5
43 [0x2b]: line: 256 - 43pushl 2
44 [0x2c]:           pushl 5
45 [0x2d]:           call @36 // std#_object_.hash
46 [0x2e]:           popobj2 
47 [0x2f]:           movn #0
49 [0x31]:           iload egx
50 [0x32]:           rstore egx
51 [0x33]:           call @401 // std#number<_int32, std#int>.operator+
52 [0x34]:           ipushl #3
53 [0x35]:           call @398 // std#number<_int32, std#int>.operator+
54 [0x36]:           pushl 4
55 [0x37]:           call @478 // std#number<_int32, std#int>.operator%
56 [0x38]:           popl 2
57 [0x39]: line: 257 - 57istore 10
59 [0x3b]:           loadl ecf, fp+1
60 [0x3c]:           loadval edf
61 [0x3d]:           mod ecf, edf -> bmr
62 [0x3e]:           rstore bmr
63 [0x3f]:           loadl cx, fp+1
64 [0x40]:           loadval ecx
65 [0x41]:           mul cx, ecx -> bmr
66 [0x42]:           rstore bmr
67 [0x43]:           ipopl 3
68 [0x44]:           jmp @28
69 [0x45]: line: 260 - 69movl 2
70 [0x46]:           returnobj
71 [0x47]:           ret

get_elements(): std.io.coroutines#job[]?
address: 1014
file: /usr/include/sharp/0.3.0/std/loopable.sharp
owner: std#loopable<std.io.coroutines#job>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


static_init<list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>>(): nil
address: 1015
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
1 [0x1]:         movn #1
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
9 [0x9]:         movn #1
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#int
15 [0xf]:         dup 
16 [0x10]:         istore 128
18 [0x12]:         call @79 // std#int.init<int>
19 [0x13]:         movg @std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
20 [0x14]:         movn #0
22 [0x16]:         popobj
23 [0x17]:         ret

init<list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>>(): nil
address: 1016
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

list(std#int): nil
address: 1017
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1015 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.static_init<list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1016 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.init<list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>>
12 [0xc]: line: 33 - 12movl 1
13 [0xd]:          movn #0
15 [0xf]:          iload adx
16 [0x10]:          new_classarray adx @ std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
18 [0x12]:          movl 0
19 [0x13]:          movn #1
21 [0x15]:          popobj
22 [0x16]:          ret

operator[(std#int): std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
address: 1018
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 46 - 0movl 0
1 [0x1]:          movn #0
3 [0x3]:          iload egx
4 [0x4]:          rstore egx
5 [0x5]:          movl 1
6 [0x6]:          movn #0
8 [0x8]:          iload cx
9 [0x9]:          loadval ecx
10 [0xa]:          gte cx, ecx
11 [0xb]:          je 20
12 [0xc]:          istore 0
14 [0xe]:          movl 1
15 [0xf]:          movn #0
17 [0x11]:          iload cx
18 [0x12]:          loadval ecx
19 [0x13]:          lt cx, ecx
20 [0x14]:          jne 30
21 [0x15]: line: 47 - 21new_class @std#out_of_bounds_exception
23 [0x17]:          dup 
24 [0x18]:          movl 0
25 [0x19]:          pushobj
26 [0x1a]:          pushl 1
27 [0x1b]:          call @1024 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.out_of_bounds_msg
28 [0x1c]:          call @211 // std#out_of_bounds_exception.out_of_bounds_exception
29 [0x1d]:          throw 
30 [0x1e]: line: 48 - 30movl 0
31 [0x1f]:          movn #1
33 [0x21]:          pushobj
34 [0x22]:          movl 1
35 [0x23]:          movn #0
37 [0x25]:          iload adx
38 [0x26]:          popobj2 
39 [0x27]:          chklen adx
40 [0x28]:          movnd adx
41 [0x29]:          returnobj
42 [0x2a]:          ret

expand(): nil
address: 1019
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 75 - 0movl 0
1 [0x1]:          movn #2
3 [0x3]:          iload cmt
4 [0x4]:          jne 26
5 [0x5]: line: 76 - 5movl 0
6 [0x6]:          movn #1
8 [0x8]:          pushobj
9 [0x9]:          movg @std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
10 [0xa]:          movn #0
12 [0xc]:          movn #0
14 [0xe]:          iload egx
15 [0xf]:          rstore egx
16 [0x10]:          movl 0
17 [0x11]:          movn #1
19 [0x13]:          sizeof ebx
20 [0x14]:          movr cx, ebx
21 [0x15]:          loadval ecx
22 [0x16]:          add cx, ecx -> bmr
23 [0x17]:          rstore bmr
24 [0x18]:          call @1088 // std.io#__srt_global.realloc
25 [0x19]:          jmp @58
26 [0x1a]: line: 78 - 26movl 0
27 [0x1b]:          movn #1
29 [0x1d]:          pushobj
30 [0x1e]:          movg @std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
31 [0x1f]:          movn #0
33 [0x21]:          movn #0
35 [0x23]:          iload egx
36 [0x24]:          rstore egx
37 [0x25]:          istore 4
39 [0x27]:          movl 0
40 [0x28]:          movn #1
42 [0x2a]:          sizeof ebx
43 [0x2b]:          movr edf, ebx
44 [0x2c]:          loadval ehf
45 [0x2d]:          shr edf, ehf -> bmr
46 [0x2e]:          rstore bmr
47 [0x2f]:          movl 0
48 [0x30]:          movn #1
50 [0x32]:          sizeof ebx
51 [0x33]:          movr ecx, ebx
52 [0x34]:          loadval ecf
53 [0x35]:          add ecx, ecf -> bmr
54 [0x36]:          loadval cx
55 [0x37]:          add bmr, cx -> bmr
56 [0x38]:          rstore bmr
57 [0x39]:          call @1088 // std.io#__srt_global.realloc
58 [0x3a]:          ret

add(std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>): nil
address: 1020
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 110 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           sizeof ebx
4 [0x4]:           rstore ebx
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gte cx, ecx
11 [0xb]:           jne 15
12 [0xc]: line: 111 - 12movl 0
13 [0xd]:           pushobj
14 [0xe]:           call @1019 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.expand
15 [0xf]: line: 112 - 15pushl 1
16 [0x10]:           movl 0
17 [0x11]:           movn #1
19 [0x13]:           pushobj
20 [0x14]:           movl 0
21 [0x15]:           movn #0
23 [0x17]:           iload egx
24 [0x18]:           rstore egx
25 [0x19]:           iload egx
26 [0x1a]:           inc egx
27 [0x1b]:           imov egx
28 [0x1c]:           loadval ebx
29 [0x1d]:           movr adx, ebx
30 [0x1e]:           popobj2 
31 [0x1f]:           chklen adx
32 [0x20]:           movnd adx
33 [0x21]:           popobj
34 [0x22]:           ret

size(): std#int
address: 1021
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 133 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @67 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_string(): std#string?
address: 1022
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 234 - 0new_class @std#string_builder
2 [0x2]:           dup 
3 [0x3]:           call @189 // std#string_builder.string_builder
4 [0x4]:           popl 1
5 [0x5]: line: 236 - 5pushl 1
6 [0x6]:           newstr @82 ([ )
7 [0x7]:           call @187 // std#string_builder.operator+=
8 [0x8]:           pop
9 [0x9]: line: 237 - 9istore 0
11 [0xb]:           ipopl 2
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           loadl cx, fp+2
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 55
21 [0x15]: line: 238 - 21pushl 1
22 [0x16]:           movl 0
23 [0x17]:           movn #1
25 [0x19]:           pushobj
26 [0x1a]:           loadl adx, fp+2
27 [0x1b]:           popobj2 
28 [0x1c]:           chklen adx
29 [0x1d]:           movnd adx
30 [0x1e]:           pushobj
31 [0x1f]:           call @185 // std#string_builder.operator+=
32 [0x20]:           pop
33 [0x21]: line: 240 - 33movl 0
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           istore 1
40 [0x28]:           loadl ecx, fp+2
41 [0x29]:           loadval ecf
42 [0x2a]:           add ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           lt bmr, cx
45 [0x2d]:           jne 50
46 [0x2e]: line: 241 - 46pushl 1
47 [0x2f]:           newstr @83 (, )
48 [0x30]:           call @187 // std#string_builder.operator+=
49 [0x31]:           pop
50 [0x32]:           ipushl #2
51 [0x33]:           iaddl 1, fp@2
53 [0x35]:           loadval ebx
54 [0x36]:           jmp @12
55 [0x37]: line: 245 - 55pushl 1
56 [0x38]:           newstr @84 ( ])
57 [0x39]:           call @187 // std#string_builder.operator+=
58 [0x3a]:           pop
59 [0x3b]: line: 246 - 59pushl 1
60 [0x3c]:           call @184 // std#string_builder.to_string
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret

hash(): std#int
address: 1023
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 250 - 0istore 0
2 [0x2]:           ipopl 1
3 [0x3]: line: 251 - 3new_class @std#int
5 [0x5]:           dup 
6 [0x6]:           istore 0
8 [0x8]:           call @79 // std#int.init<int>
9 [0x9]:           popl 2
10 [0xa]: line: 252 - 10istore 0
12 [0xc]:           ipopl 3
13 [0xd]: line: 253 - 13new_class @std#double
15 [0xf]:           dup 
16 [0x10]:           istore 1000000009
18 [0x12]:           call @125 // std#double.init<double>
19 [0x13]:           popl 4
20 [0x14]: line: 255 - 20istore 4294967295
22 [0x16]:           ipopl 6
23 [0x17]:           movl 0
24 [0x18]:           movn #1
26 [0x1a]:           pushobj
27 [0x1b]:           popl 7
28 [0x1c]:           iaddl 1, fp@6
30 [0x1e]:           loadl cx, fp+6
31 [0x1f]:           movl 7
32 [0x20]:           sizeof ebx
33 [0x21]:           movr ecx, ebx
34 [0x22]:           lt cx, ecx
35 [0x23]:           jne 69
36 [0x24]:           pushl 7
37 [0x25]:           loadl adx, fp+6
38 [0x26]:           popobj2 
39 [0x27]:           chklen adx
40 [0x28]:           movnd adx
41 [0x29]:           pushobj
42 [0x2a]:           popl 5
43 [0x2b]: line: 256 - 43pushl 2
44 [0x2c]:           pushl 5
45 [0x2d]:           call @36 // std#_object_.hash
46 [0x2e]:           popobj2 
47 [0x2f]:           movn #0
49 [0x31]:           iload egx
50 [0x32]:           rstore egx
51 [0x33]:           call @401 // std#number<_int32, std#int>.operator+
52 [0x34]:           ipushl #3
53 [0x35]:           call @398 // std#number<_int32, std#int>.operator+
54 [0x36]:           pushl 4
55 [0x37]:           call @478 // std#number<_int32, std#int>.operator%
56 [0x38]:           popl 2
57 [0x39]: line: 257 - 57istore 10
59 [0x3b]:           loadl ecf, fp+1
60 [0x3c]:           loadval edf
61 [0x3d]:           mod ecf, edf -> bmr
62 [0x3e]:           rstore bmr
63 [0x3f]:           loadl cx, fp+1
64 [0x40]:           loadval ecx
65 [0x41]:           mul cx, ecx -> bmr
66 [0x42]:           rstore bmr
67 [0x43]:           ipopl 3
68 [0x44]:           jmp @28
69 [0x45]: line: 260 - 69movl 2
70 [0x46]:           returnobj
71 [0x47]:           ret

out_of_bounds_msg(std#int): std#string
address: 1024
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 264 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           newstr @85 (Index: )
4 [0x4]:           call @130 // std#string.string
5 [0x5]:           pushl 1
6 [0x6]:           call @145 // std#string.operator+
7 [0x7]:           newstr @86 (, size: )
8 [0x8]:           call @143 // std#string.operator+
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @161 // std#string.operator+
15 [0xf]:           popobj2 
16 [0x10]:           returnobj
17 [0x11]:           ret

static_init<base_number<std#short>>(): nil
address: 1025
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#short>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#short>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#short>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#short>>(): nil
address: 1026
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#short>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#short>(): nil
address: 1027
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#short>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#short>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1025 // std#base_number<std#short>.static_init<base_number<std#short>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1026 // std#base_number<std#short>.init<base_number<std#short>>
12 [0xc]:         ret

static_init<list<std#int>>(): nil
address: 1028
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#list<std#int>
1 [0x1]:         movn #2
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#list<std#int>
9 [0x9]:         movn #2
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#int
15 [0xf]:         dup 
16 [0x10]:         istore 10
18 [0x12]:         call @79 // std#int.init<int>
19 [0x13]:         movg @std#list<std#int>
20 [0x14]:         movn #0
22 [0x16]:         popobj
23 [0x17]:         new_class @std#int
25 [0x19]:         dup 
26 [0x1a]:         istore 128
28 [0x1c]:         call @79 // std#int.init<int>
29 [0x1d]:         movg @std#list<std#int>
30 [0x1e]:         movn #1
32 [0x20]:         popobj
33 [0x21]:         ret

init<list<std#int>>(): nil
address: 1029
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#int
2 [0x2]:         dup 
3 [0x3]:         call @85 // std#int.int
4 [0x4]:         movl 0
5 [0x5]:         movn #1
7 [0x7]:         popobj
8 [0x8]:         ret

list(): nil
address: 1030
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#list<std#int>
4 [0x4]:         movn #2
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1028 // std#list<std#int>.static_init<list<std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1029 // std#list<std#int>.init<list<std#int>>
12 [0xc]: line: 24 - 12movg @std#list<std#int>
13 [0xd]:          movn #0
15 [0xf]:          movn #0
17 [0x11]:          iload adx
18 [0x12]:          new_classarray adx @ std#int
20 [0x14]:          movl 0
21 [0x15]:          movn #1
23 [0x17]:          popobj
24 [0x18]:          ret

get_elements(): std#int[]?
address: 1031
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 41 - 0istore 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          iload cx
6 [0x6]:          loadval ecx
7 [0x7]:          test cx, ecx
8 [0x8]:          movr cmt, bmr
9 [0x9]:          jne 15
10 [0xa]:          pushnull 
11 [0xb]:          popobj2 
12 [0xc]:          returnobj
13 [0xd]:          ret
14 [0xe]:          jmp @31
15 [0xf]: line: 42 - 15movl 0
16 [0x10]:          movn #1
18 [0x12]:          pushobj
19 [0x13]:          istore 0
21 [0x15]:          movl 0
22 [0x16]:          movn #0
24 [0x18]:          iload egx
25 [0x19]:          rstore egx
26 [0x1a]:          call @1092 // std.io#__srt_global.copy
27 [0x1b]:          popobj2 
28 [0x1c]:          cast 9 // std#int
29 [0x1d]:          returnobj
30 [0x1e]:          ret

expand(): nil
address: 1032
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 75 - 0movl 0
1 [0x1]:          movn #2
3 [0x3]:          iload cmt
4 [0x4]:          jne 26
5 [0x5]: line: 76 - 5movl 0
6 [0x6]:          movn #1
8 [0x8]:          pushobj
9 [0x9]:          movg @std#list<std#int>
10 [0xa]:          movn #1
12 [0xc]:          movn #0
14 [0xe]:          iload egx
15 [0xf]:          rstore egx
16 [0x10]:          movl 0
17 [0x11]:          movn #1
19 [0x13]:          sizeof ebx
20 [0x14]:          movr cx, ebx
21 [0x15]:          loadval ecx
22 [0x16]:          add cx, ecx -> bmr
23 [0x17]:          rstore bmr
24 [0x18]:          call @1088 // std.io#__srt_global.realloc
25 [0x19]:          jmp @58
26 [0x1a]: line: 78 - 26movl 0
27 [0x1b]:          movn #1
29 [0x1d]:          pushobj
30 [0x1e]:          movg @std#list<std#int>
31 [0x1f]:          movn #1
33 [0x21]:          movn #0
35 [0x23]:          iload egx
36 [0x24]:          rstore egx
37 [0x25]:          istore 4
39 [0x27]:          movl 0
40 [0x28]:          movn #1
42 [0x2a]:          sizeof ebx
43 [0x2b]:          movr edf, ebx
44 [0x2c]:          loadval ehf
45 [0x2d]:          shr edf, ehf -> bmr
46 [0x2e]:          rstore bmr
47 [0x2f]:          movl 0
48 [0x30]:          movn #1
50 [0x32]:          sizeof ebx
51 [0x33]:          movr ecx, ebx
52 [0x34]:          loadval ecf
53 [0x35]:          add ecx, ecf -> bmr
54 [0x36]:          loadval cx
55 [0x37]:          add bmr, cx -> bmr
56 [0x38]:          rstore bmr
57 [0x39]:          call @1088 // std.io#__srt_global.realloc
58 [0x3a]:          ret

clear(): nil
address: 1033
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 82 - 0istore 0
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          iload cx
6 [0x6]:          loadval ecx
7 [0x7]:          gt cx, ecx
8 [0x8]:          jne 28
9 [0x9]: line: 83 - 9movg @std#list<std#int>
10 [0xa]:          movn #0
12 [0xc]:          movn #0
14 [0xe]:          iload adx
15 [0xf]:          new_classarray adx @ std#int
17 [0x11]:          movl 0
18 [0x12]:          movn #1
20 [0x14]:          popobj
21 [0x15]: line: 84 - 21istore 0
23 [0x17]:          movl 0
24 [0x18]:          movn #0
26 [0x1a]:          loadval egx
27 [0x1b]:          imov egx
28 [0x1c]:          ret

add(std#int): nil
address: 1034
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 110 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           sizeof ebx
4 [0x4]:           rstore ebx
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gte cx, ecx
11 [0xb]:           jne 15
12 [0xc]: line: 111 - 12movl 0
13 [0xd]:           pushobj
14 [0xe]:           call @1032 // std#list<std#int>.expand
15 [0xf]: line: 112 - 15pushl 1
16 [0x10]:           movl 0
17 [0x11]:           movn #1
19 [0x13]:           pushobj
20 [0x14]:           movl 0
21 [0x15]:           movn #0
23 [0x17]:           iload egx
24 [0x18]:           rstore egx
25 [0x19]:           iload egx
26 [0x1a]:           inc egx
27 [0x1b]:           imov egx
28 [0x1c]:           loadval ebx
29 [0x1d]:           movr adx, ebx
30 [0x1e]:           popobj2 
31 [0x1f]:           chklen adx
32 [0x20]:           movnd adx
33 [0x21]:           popobj
34 [0x22]:           ret

empty(): std#bool
address: 1035
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 137 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           istore 0
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           test cx, ecx
11 [0xb]:           rstore bmr
12 [0xc]:           call @111 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret

find(std#int, *(std#int, std#int)(std#bool)): std#int?
address: 1036
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 1
fpOffset: 2
spOffset: 2
stackSize: 4
code:

0 [0x0]: line: 213 - 0istore 0
2 [0x2]:           ipopl 3
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           loadl cx, fp+3
9 [0x9]:           loadval ecx
10 [0xa]:           lt cx, ecx
11 [0xb]:           jne 45
12 [0xc]: line: 214 - 12loadl cx, fp+2
13 [0xd]:           movl 0
14 [0xe]:           movn #1
16 [0x10]:           pushobj
17 [0x11]:           loadl adx, fp+3
18 [0x12]:           popobj2 
19 [0x13]:           chklen adx
20 [0x14]:           movnd adx
21 [0x15]:           pushobj
22 [0x16]:           pushl 1
23 [0x17]:           movr egx, cx
24 [0x18]:           calld egx
25 [0x19]:           popobj2 
26 [0x1a]:           movn #0
28 [0x1c]:           iload cmt
29 [0x1d]:           jne 40
30 [0x1e]: line: 215 - 30movl 0
31 [0x1f]:           movn #1
33 [0x21]:           pushobj
34 [0x22]:           loadl adx, fp+3
35 [0x23]:           popobj2 
36 [0x24]:           chklen adx
37 [0x25]:           movnd adx
38 [0x26]:           returnobj
39 [0x27]:           ret
40 [0x28]:           ipushl #3
41 [0x29]:           iaddl 1, fp@3
43 [0x2b]:           loadval ebx
44 [0x2c]:           jmp @3
45 [0x2d]: line: 219 - 45pushnull 
46 [0x2e]:           popobj2 
47 [0x2f]:           returnobj
48 [0x30]:           ret

to_string(): std#string?
address: 1037
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 234 - 0new_class @std#string_builder
2 [0x2]:           dup 
3 [0x3]:           call @189 // std#string_builder.string_builder
4 [0x4]:           popl 1
5 [0x5]: line: 236 - 5pushl 1
6 [0x6]:           newstr @82 ([ )
7 [0x7]:           call @187 // std#string_builder.operator+=
8 [0x8]:           pop
9 [0x9]: line: 237 - 9istore 0
11 [0xb]:           ipopl 2
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           loadl cx, fp+2
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 55
21 [0x15]: line: 238 - 21pushl 1
22 [0x16]:           movl 0
23 [0x17]:           movn #1
25 [0x19]:           pushobj
26 [0x1a]:           loadl adx, fp+2
27 [0x1b]:           popobj2 
28 [0x1c]:           chklen adx
29 [0x1d]:           movnd adx
30 [0x1e]:           pushobj
31 [0x1f]:           call @185 // std#string_builder.operator+=
32 [0x20]:           pop
33 [0x21]: line: 240 - 33movl 0
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           istore 1
40 [0x28]:           loadl ecx, fp+2
41 [0x29]:           loadval ecf
42 [0x2a]:           add ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           lt bmr, cx
45 [0x2d]:           jne 50
46 [0x2e]: line: 241 - 46pushl 1
47 [0x2f]:           newstr @83 (, )
48 [0x30]:           call @187 // std#string_builder.operator+=
49 [0x31]:           pop
50 [0x32]:           ipushl #2
51 [0x33]:           iaddl 1, fp@2
53 [0x35]:           loadval ebx
54 [0x36]:           jmp @12
55 [0x37]: line: 245 - 55pushl 1
56 [0x38]:           newstr @84 ( ])
57 [0x39]:           call @187 // std#string_builder.operator+=
58 [0x3a]:           pop
59 [0x3b]: line: 246 - 59pushl 1
60 [0x3c]:           call @184 // std#string_builder.to_string
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret

hash(): std#int
address: 1038
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std#int>
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 250 - 0istore 0
2 [0x2]:           ipopl 1
3 [0x3]: line: 251 - 3new_class @std#int
5 [0x5]:           dup 
6 [0x6]:           istore 0
8 [0x8]:           call @79 // std#int.init<int>
9 [0x9]:           popl 2
10 [0xa]: line: 252 - 10istore 0
12 [0xc]:           ipopl 3
13 [0xd]: line: 253 - 13new_class @std#double
15 [0xf]:           dup 
16 [0x10]:           istore 1000000009
18 [0x12]:           call @125 // std#double.init<double>
19 [0x13]:           popl 4
20 [0x14]: line: 255 - 20istore 4294967295
22 [0x16]:           ipopl 6
23 [0x17]:           movl 0
24 [0x18]:           movn #1
26 [0x1a]:           pushobj
27 [0x1b]:           popl 7
28 [0x1c]:           iaddl 1, fp@6
30 [0x1e]:           loadl cx, fp+6
31 [0x1f]:           movl 7
32 [0x20]:           sizeof ebx
33 [0x21]:           movr ecx, ebx
34 [0x22]:           lt cx, ecx
35 [0x23]:           jne 69
36 [0x24]:           pushl 7
37 [0x25]:           loadl adx, fp+6
38 [0x26]:           popobj2 
39 [0x27]:           chklen adx
40 [0x28]:           movnd adx
41 [0x29]:           pushobj
42 [0x2a]:           popl 5
43 [0x2b]: line: 256 - 43pushl 2
44 [0x2c]:           pushl 5
45 [0x2d]:           call @347 // std#number<_int32, std#int>.hash
46 [0x2e]:           popobj2 
47 [0x2f]:           movn #0
49 [0x31]:           iload egx
50 [0x32]:           rstore egx
51 [0x33]:           call @401 // std#number<_int32, std#int>.operator+
52 [0x34]:           ipushl #3
53 [0x35]:           call @398 // std#number<_int32, std#int>.operator+
54 [0x36]:           pushl 4
55 [0x37]:           call @478 // std#number<_int32, std#int>.operator%
56 [0x38]:           popl 2
57 [0x39]: line: 257 - 57istore 10
59 [0x3b]:           loadl ecf, fp+1
60 [0x3c]:           loadval edf
61 [0x3d]:           mod ecf, edf -> bmr
62 [0x3e]:           rstore bmr
63 [0x3f]:           loadl cx, fp+1
64 [0x40]:           loadval ecx
65 [0x41]:           mul cx, ecx -> bmr
66 [0x42]:           rstore bmr
67 [0x43]:           ipopl 3
68 [0x44]:           jmp @28
69 [0x45]: line: 260 - 69movl 2
70 [0x46]:           returnobj
71 [0x47]:           ret

get_elements(): std#int[]?
address: 1039
file: /usr/include/sharp/0.3.0/std/loopable.sharp
owner: std#loopable<std#int>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


static_init<list<std.io#channel<std#int>.filter<std#int>>>(): nil
address: 1040
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#list<std.io#channel<std#int>.filter<std#int>>
1 [0x1]:         movn #1
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#list<std.io#channel<std#int>.filter<std#int>>
9 [0x9]:         movn #1
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#int
15 [0xf]:         dup 
16 [0x10]:         istore 128
18 [0x12]:         call @79 // std#int.init<int>
19 [0x13]:         movg @std#list<std.io#channel<std#int>.filter<std#int>>
20 [0x14]:         movn #0
22 [0x16]:         popobj
23 [0x17]:         ret

init<list<std.io#channel<std#int>.filter<std#int>>>(): nil
address: 1041
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

list(std#int): nil
address: 1042
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#list<std.io#channel<std#int>.filter<std#int>>
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1040 // std#list<std.io#channel<std#int>.filter<std#int>>.static_init<list<std.io#channel<std#int>.filter<std#int>>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1041 // std#list<std.io#channel<std#int>.filter<std#int>>.init<list<std.io#channel<std#int>.filter<std#int>>>
12 [0xc]: line: 33 - 12movl 1
13 [0xd]:          movn #0
15 [0xf]:          iload adx
16 [0x10]:          new_classarray adx @ std.io#channel<std#int>.filter<std#int>
18 [0x12]:          movl 0
19 [0x13]:          movn #1
21 [0x15]:          popobj
22 [0x16]:          ret

operator[(std#int): std.io#channel<std#int>.filter<std#int>
address: 1043
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 46 - 0movl 0
1 [0x1]:          movn #0
3 [0x3]:          iload egx
4 [0x4]:          rstore egx
5 [0x5]:          movl 1
6 [0x6]:          movn #0
8 [0x8]:          iload cx
9 [0x9]:          loadval ecx
10 [0xa]:          gte cx, ecx
11 [0xb]:          je 20
12 [0xc]:          istore 0
14 [0xe]:          movl 1
15 [0xf]:          movn #0
17 [0x11]:          iload cx
18 [0x12]:          loadval ecx
19 [0x13]:          lt cx, ecx
20 [0x14]:          jne 30
21 [0x15]: line: 47 - 21new_class @std#out_of_bounds_exception
23 [0x17]:          dup 
24 [0x18]:          movl 0
25 [0x19]:          pushobj
26 [0x1a]:          pushl 1
27 [0x1b]:          call @1049 // std#list<std.io#channel<std#int>.filter<std#int>>.out_of_bounds_msg
28 [0x1c]:          call @211 // std#out_of_bounds_exception.out_of_bounds_exception
29 [0x1d]:          throw 
30 [0x1e]: line: 48 - 30movl 0
31 [0x1f]:          movn #1
33 [0x21]:          pushobj
34 [0x22]:          movl 1
35 [0x23]:          movn #0
37 [0x25]:          iload adx
38 [0x26]:          popobj2 
39 [0x27]:          chklen adx
40 [0x28]:          movnd adx
41 [0x29]:          returnobj
42 [0x2a]:          ret

expand(): nil
address: 1044
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 75 - 0movl 0
1 [0x1]:          movn #2
3 [0x3]:          iload cmt
4 [0x4]:          jne 26
5 [0x5]: line: 76 - 5movl 0
6 [0x6]:          movn #1
8 [0x8]:          pushobj
9 [0x9]:          movg @std#list<std.io#channel<std#int>.filter<std#int>>
10 [0xa]:          movn #0
12 [0xc]:          movn #0
14 [0xe]:          iload egx
15 [0xf]:          rstore egx
16 [0x10]:          movl 0
17 [0x11]:          movn #1
19 [0x13]:          sizeof ebx
20 [0x14]:          movr cx, ebx
21 [0x15]:          loadval ecx
22 [0x16]:          add cx, ecx -> bmr
23 [0x17]:          rstore bmr
24 [0x18]:          call @1088 // std.io#__srt_global.realloc
25 [0x19]:          jmp @58
26 [0x1a]: line: 78 - 26movl 0
27 [0x1b]:          movn #1
29 [0x1d]:          pushobj
30 [0x1e]:          movg @std#list<std.io#channel<std#int>.filter<std#int>>
31 [0x1f]:          movn #0
33 [0x21]:          movn #0
35 [0x23]:          iload egx
36 [0x24]:          rstore egx
37 [0x25]:          istore 4
39 [0x27]:          movl 0
40 [0x28]:          movn #1
42 [0x2a]:          sizeof ebx
43 [0x2b]:          movr edf, ebx
44 [0x2c]:          loadval ehf
45 [0x2d]:          shr edf, ehf -> bmr
46 [0x2e]:          rstore bmr
47 [0x2f]:          movl 0
48 [0x30]:          movn #1
50 [0x32]:          sizeof ebx
51 [0x33]:          movr ecx, ebx
52 [0x34]:          loadval ecf
53 [0x35]:          add ecx, ecf -> bmr
54 [0x36]:          loadval cx
55 [0x37]:          add bmr, cx -> bmr
56 [0x38]:          rstore bmr
57 [0x39]:          call @1088 // std.io#__srt_global.realloc
58 [0x3a]:          ret

add(std.io#channel<std#int>.filter<std#int>): nil
address: 1045
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 110 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           sizeof ebx
4 [0x4]:           rstore ebx
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gte cx, ecx
11 [0xb]:           jne 15
12 [0xc]: line: 111 - 12movl 0
13 [0xd]:           pushobj
14 [0xe]:           call @1044 // std#list<std.io#channel<std#int>.filter<std#int>>.expand
15 [0xf]: line: 112 - 15pushl 1
16 [0x10]:           movl 0
17 [0x11]:           movn #1
19 [0x13]:           pushobj
20 [0x14]:           movl 0
21 [0x15]:           movn #0
23 [0x17]:           iload egx
24 [0x18]:           rstore egx
25 [0x19]:           iload egx
26 [0x1a]:           inc egx
27 [0x1b]:           imov egx
28 [0x1c]:           loadval ebx
29 [0x1d]:           movr adx, ebx
30 [0x1e]:           popobj2 
31 [0x1f]:           chklen adx
32 [0x20]:           movnd adx
33 [0x21]:           popobj
34 [0x22]:           ret

size(): std#int
address: 1046
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 133 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @67 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

to_string(): std#string?
address: 1047
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 234 - 0new_class @std#string_builder
2 [0x2]:           dup 
3 [0x3]:           call @189 // std#string_builder.string_builder
4 [0x4]:           popl 1
5 [0x5]: line: 236 - 5pushl 1
6 [0x6]:           newstr @82 ([ )
7 [0x7]:           call @187 // std#string_builder.operator+=
8 [0x8]:           pop
9 [0x9]: line: 237 - 9istore 0
11 [0xb]:           ipopl 2
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           loadl cx, fp+2
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 55
21 [0x15]: line: 238 - 21pushl 1
22 [0x16]:           movl 0
23 [0x17]:           movn #1
25 [0x19]:           pushobj
26 [0x1a]:           loadl adx, fp+2
27 [0x1b]:           popobj2 
28 [0x1c]:           chklen adx
29 [0x1d]:           movnd adx
30 [0x1e]:           pushobj
31 [0x1f]:           call @185 // std#string_builder.operator+=
32 [0x20]:           pop
33 [0x21]: line: 240 - 33movl 0
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           istore 1
40 [0x28]:           loadl ecx, fp+2
41 [0x29]:           loadval ecf
42 [0x2a]:           add ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           lt bmr, cx
45 [0x2d]:           jne 50
46 [0x2e]: line: 241 - 46pushl 1
47 [0x2f]:           newstr @83 (, )
48 [0x30]:           call @187 // std#string_builder.operator+=
49 [0x31]:           pop
50 [0x32]:           ipushl #2
51 [0x33]:           iaddl 1, fp@2
53 [0x35]:           loadval ebx
54 [0x36]:           jmp @12
55 [0x37]: line: 245 - 55pushl 1
56 [0x38]:           newstr @84 ( ])
57 [0x39]:           call @187 // std#string_builder.operator+=
58 [0x3a]:           pop
59 [0x3b]: line: 246 - 59pushl 1
60 [0x3c]:           call @184 // std#string_builder.to_string
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret

hash(): std#int
address: 1048
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 250 - 0istore 0
2 [0x2]:           ipopl 1
3 [0x3]: line: 251 - 3new_class @std#int
5 [0x5]:           dup 
6 [0x6]:           istore 0
8 [0x8]:           call @79 // std#int.init<int>
9 [0x9]:           popl 2
10 [0xa]: line: 252 - 10istore 0
12 [0xc]:           ipopl 3
13 [0xd]: line: 253 - 13new_class @std#double
15 [0xf]:           dup 
16 [0x10]:           istore 1000000009
18 [0x12]:           call @125 // std#double.init<double>
19 [0x13]:           popl 4
20 [0x14]: line: 255 - 20istore 4294967295
22 [0x16]:           ipopl 6
23 [0x17]:           movl 0
24 [0x18]:           movn #1
26 [0x1a]:           pushobj
27 [0x1b]:           popl 7
28 [0x1c]:           iaddl 1, fp@6
30 [0x1e]:           loadl cx, fp+6
31 [0x1f]:           movl 7
32 [0x20]:           sizeof ebx
33 [0x21]:           movr ecx, ebx
34 [0x22]:           lt cx, ecx
35 [0x23]:           jne 69
36 [0x24]:           pushl 7
37 [0x25]:           loadl adx, fp+6
38 [0x26]:           popobj2 
39 [0x27]:           chklen adx
40 [0x28]:           movnd adx
41 [0x29]:           pushobj
42 [0x2a]:           popl 5
43 [0x2b]: line: 256 - 43pushl 2
44 [0x2c]:           pushl 5
45 [0x2d]:           call @36 // std#_object_.hash
46 [0x2e]:           popobj2 
47 [0x2f]:           movn #0
49 [0x31]:           iload egx
50 [0x32]:           rstore egx
51 [0x33]:           call @401 // std#number<_int32, std#int>.operator+
52 [0x34]:           ipushl #3
53 [0x35]:           call @398 // std#number<_int32, std#int>.operator+
54 [0x36]:           pushl 4
55 [0x37]:           call @478 // std#number<_int32, std#int>.operator%
56 [0x38]:           popl 2
57 [0x39]: line: 257 - 57istore 10
59 [0x3b]:           loadl ecf, fp+1
60 [0x3c]:           loadval edf
61 [0x3d]:           mod ecf, edf -> bmr
62 [0x3e]:           rstore bmr
63 [0x3f]:           loadl cx, fp+1
64 [0x40]:           loadval ecx
65 [0x41]:           mul cx, ecx -> bmr
66 [0x42]:           rstore bmr
67 [0x43]:           ipopl 3
68 [0x44]:           jmp @28
69 [0x45]: line: 260 - 69movl 2
70 [0x46]:           returnobj
71 [0x47]:           ret

out_of_bounds_msg(std#int): std#string
address: 1049
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#channel<std#int>.filter<std#int>>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 264 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           newstr @85 (Index: )
4 [0x4]:           call @130 // std#string.string
5 [0x5]:           pushl 1
6 [0x6]:           call @145 // std#string.operator+
7 [0x7]:           newstr @86 (, size: )
8 [0x8]:           call @143 // std#string.operator+
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @161 // std#string.operator+
15 [0xf]:           popobj2 
16 [0x10]:           returnobj
17 [0x11]:           ret

static_init<base_number<std#uchar>>(): nil
address: 1050
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#uchar>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#uchar>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#uchar>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#uchar>>(): nil
address: 1051
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#uchar>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#uchar>(): nil
address: 1052
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#uchar>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#uchar>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1050 // std#base_number<std#uchar>.static_init<base_number<std#uchar>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1051 // std#base_number<std#uchar>.init<base_number<std#uchar>>
12 [0xc]:         ret

static_init<base_number<std#char>>(): nil
address: 1053
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#char>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#char>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#char>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#char>>(): nil
address: 1054
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#char>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#char>(): nil
address: 1055
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#char>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#char>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1053 // std#base_number<std#char>.static_init<base_number<std#char>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1054 // std#base_number<std#char>.init<base_number<std#char>>
12 [0xc]:         ret

static_init<base_number<std#bool>>(): nil
address: 1056
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#bool>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#bool>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#bool>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#bool>>(): nil
address: 1057
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#bool>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#bool>(): nil
address: 1058
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#bool>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#bool>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1056 // std#base_number<std#bool>.static_init<base_number<std#bool>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1057 // std#base_number<std#bool>.init<base_number<std#bool>>
12 [0xc]:         ret

static_init<base_number<std#double>>(): nil
address: 1059
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#double>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#base_number<std#double>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#base_number<std#double>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<base_number<std#double>>(): nil
address: 1060
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#double>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

base_number<std#double>(): nil
address: 1061
file: /usr/include/sharp/0.3.0/std/primatives.sharp
owner: std#base_number<std#double>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#base_number<std#double>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1059 // std#base_number<std#double>.static_init<base_number<std#double>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1060 // std#base_number<std#double>.init<base_number<std#double>>
12 [0xc]:         ret

static_init<list<std.io#thread>>(): nil
address: 1062
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std#list<std.io#thread>
1 [0x1]:         movn #2
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std#list<std.io#thread>
9 [0x9]:         movn #2
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#int
15 [0xf]:         dup 
16 [0x10]:         istore 10
18 [0x12]:         call @79 // std#int.init<int>
19 [0x13]:         movg @std#list<std.io#thread>
20 [0x14]:         movn #0
22 [0x16]:         popobj
23 [0x17]:         new_class @std#int
25 [0x19]:         dup 
26 [0x1a]:         istore 128
28 [0x1c]:         call @79 // std#int.init<int>
29 [0x1d]:         movg @std#list<std.io#thread>
30 [0x1e]:         movn #1
32 [0x20]:         popobj
33 [0x21]:         ret

init<list<std.io#thread>>(): nil
address: 1063
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

list(): nil
address: 1064
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std#list<std.io#thread>
4 [0x4]:         movn #2
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1062 // std#list<std.io#thread>.static_init<list<std.io#thread>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1063 // std#list<std.io#thread>.init<list<std.io#thread>>
12 [0xc]: line: 24 - 12movg @std#list<std.io#thread>
13 [0xd]:          movn #0
15 [0xf]:          movn #0
17 [0x11]:          iload adx
18 [0x12]:          new_classarray adx @ std.io#thread
20 [0x14]:          movl 0
21 [0x15]:          movn #1
23 [0x17]:          popobj
24 [0x18]:          ret

operator[(std#int): std.io#thread
address: 1065
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 46 - 0movl 0
1 [0x1]:          movn #0
3 [0x3]:          iload egx
4 [0x4]:          rstore egx
5 [0x5]:          movl 1
6 [0x6]:          movn #0
8 [0x8]:          iload cx
9 [0x9]:          loadval ecx
10 [0xa]:          gte cx, ecx
11 [0xb]:          je 20
12 [0xc]:          istore 0
14 [0xe]:          movl 1
15 [0xf]:          movn #0
17 [0x11]:          iload cx
18 [0x12]:          loadval ecx
19 [0x13]:          lt cx, ecx
20 [0x14]:          jne 30
21 [0x15]: line: 47 - 21new_class @std#out_of_bounds_exception
23 [0x17]:          dup 
24 [0x18]:          movl 0
25 [0x19]:          pushobj
26 [0x1a]:          pushl 1
27 [0x1b]:          call @1077 // std#list<std.io#thread>.out_of_bounds_msg
28 [0x1c]:          call @211 // std#out_of_bounds_exception.out_of_bounds_exception
29 [0x1d]:          throw 
30 [0x1e]: line: 48 - 30movl 0
31 [0x1f]:          movn #1
33 [0x21]:          pushobj
34 [0x22]:          movl 1
35 [0x23]:          movn #0
37 [0x25]:          iload adx
38 [0x26]:          popobj2 
39 [0x27]:          chklen adx
40 [0x28]:          movnd adx
41 [0x29]:          returnobj
42 [0x2a]:          ret

at(std#int): std.io#thread
address: 1066
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 52 - 0movl 0
1 [0x1]:          movn #0
3 [0x3]:          iload egx
4 [0x4]:          rstore egx
5 [0x5]:          movl 1
6 [0x6]:          movn #0
8 [0x8]:          iload cx
9 [0x9]:          loadval ecx
10 [0xa]:          gte cx, ecx
11 [0xb]:          je 20
12 [0xc]:          istore 0
14 [0xe]:          movl 1
15 [0xf]:          movn #0
17 [0x11]:          iload cx
18 [0x12]:          loadval ecx
19 [0x13]:          lt cx, ecx
20 [0x14]:          jne 30
21 [0x15]: line: 53 - 21new_class @std#out_of_bounds_exception
23 [0x17]:          dup 
24 [0x18]:          movl 0
25 [0x19]:          pushobj
26 [0x1a]:          pushl 1
27 [0x1b]:          call @1077 // std#list<std.io#thread>.out_of_bounds_msg
28 [0x1c]:          call @211 // std#out_of_bounds_exception.out_of_bounds_exception
29 [0x1d]:          throw 
30 [0x1e]: line: 54 - 30movl 0
31 [0x1f]:          movn #1
33 [0x21]:          pushobj
34 [0x22]:          movl 1
35 [0x23]:          movn #0
37 [0x25]:          iload adx
38 [0x26]:          popobj2 
39 [0x27]:          chklen adx
40 [0x28]:          movnd adx
41 [0x29]:          returnobj
42 [0x2a]:          ret

put(std#int, std.io#thread): std.io#thread
address: 1067
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 1
fpOffset: 2
spOffset: 2
stackSize: 4
code:

0 [0x0]: line: 66 - 0movl 0
1 [0x1]:          movn #0
3 [0x3]:          iload egx
4 [0x4]:          rstore egx
5 [0x5]:          movl 1
6 [0x6]:          movn #0
8 [0x8]:          iload cx
9 [0x9]:          loadval ecx
10 [0xa]:          gte cx, ecx
11 [0xb]:          je 20
12 [0xc]:          istore 0
14 [0xe]:          movl 1
15 [0xf]:          movn #0
17 [0x11]:          iload cx
18 [0x12]:          loadval ecx
19 [0x13]:          lt cx, ecx
20 [0x14]:          jne 30
21 [0x15]: line: 67 - 21new_class @std#out_of_bounds_exception
23 [0x17]:          dup 
24 [0x18]:          movl 0
25 [0x19]:          pushobj
26 [0x1a]:          pushl 1
27 [0x1b]:          call @1077 // std#list<std.io#thread>.out_of_bounds_msg
28 [0x1c]:          call @211 // std#out_of_bounds_exception.out_of_bounds_exception
29 [0x1d]:          throw 
30 [0x1e]: line: 69 - 30movl 0
31 [0x1f]:          movn #1
33 [0x21]:          pushobj
34 [0x22]:          movl 1
35 [0x23]:          movn #0
37 [0x25]:          iload adx
38 [0x26]:          popobj2 
39 [0x27]:          chklen adx
40 [0x28]:          movnd adx
41 [0x29]:          pushobj
42 [0x2a]:          popl 3
43 [0x2b]: line: 70 - 43pushl 2
44 [0x2c]:          movl 0
45 [0x2d]:          movn #1
47 [0x2f]:          pushobj
48 [0x30]:          movl 1
49 [0x31]:          movn #0
51 [0x33]:          iload adx
52 [0x34]:          popobj2 
53 [0x35]:          chklen adx
54 [0x36]:          movnd adx
55 [0x37]:          popobj
56 [0x38]: line: 71 - 56movl 3
57 [0x39]:          returnobj
58 [0x3a]:          ret

expand(): nil
address: 1068
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 75 - 0movl 0
1 [0x1]:          movn #2
3 [0x3]:          iload cmt
4 [0x4]:          jne 26
5 [0x5]: line: 76 - 5movl 0
6 [0x6]:          movn #1
8 [0x8]:          pushobj
9 [0x9]:          movg @std#list<std.io#thread>
10 [0xa]:          movn #1
12 [0xc]:          movn #0
14 [0xe]:          iload egx
15 [0xf]:          rstore egx
16 [0x10]:          movl 0
17 [0x11]:          movn #1
19 [0x13]:          sizeof ebx
20 [0x14]:          movr cx, ebx
21 [0x15]:          loadval ecx
22 [0x16]:          add cx, ecx -> bmr
23 [0x17]:          rstore bmr
24 [0x18]:          call @1088 // std.io#__srt_global.realloc
25 [0x19]:          jmp @58
26 [0x1a]: line: 78 - 26movl 0
27 [0x1b]:          movn #1
29 [0x1d]:          pushobj
30 [0x1e]:          movg @std#list<std.io#thread>
31 [0x1f]:          movn #1
33 [0x21]:          movn #0
35 [0x23]:          iload egx
36 [0x24]:          rstore egx
37 [0x25]:          istore 4
39 [0x27]:          movl 0
40 [0x28]:          movn #1
42 [0x2a]:          sizeof ebx
43 [0x2b]:          movr edf, ebx
44 [0x2c]:          loadval ehf
45 [0x2d]:          shr edf, ehf -> bmr
46 [0x2e]:          rstore bmr
47 [0x2f]:          movl 0
48 [0x30]:          movn #1
50 [0x32]:          sizeof ebx
51 [0x33]:          movr ecx, ebx
52 [0x34]:          loadval ecf
53 [0x35]:          add ecx, ecf -> bmr
54 [0x36]:          loadval cx
55 [0x37]:          add bmr, cx -> bmr
56 [0x38]:          rstore bmr
57 [0x39]:          call @1088 // std.io#__srt_global.realloc
58 [0x3a]:          ret

add(std.io#thread): nil
address: 1069
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 110 - 0movl 0
1 [0x1]:           movn #1
3 [0x3]:           sizeof ebx
4 [0x4]:           rstore ebx
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gte cx, ecx
11 [0xb]:           jne 15
12 [0xc]: line: 111 - 12movl 0
13 [0xd]:           pushobj
14 [0xe]:           call @1068 // std#list<std.io#thread>.expand
15 [0xf]: line: 112 - 15pushl 1
16 [0x10]:           movl 0
17 [0x11]:           movn #1
19 [0x13]:           pushobj
20 [0x14]:           movl 0
21 [0x15]:           movn #0
23 [0x17]:           iload egx
24 [0x18]:           rstore egx
25 [0x19]:           iload egx
26 [0x1a]:           inc egx
27 [0x1b]:           imov egx
28 [0x1c]:           loadval ebx
29 [0x1d]:           movr adx, ebx
30 [0x1e]:           popobj2 
31 [0x1f]:           chklen adx
32 [0x20]:           movnd adx
33 [0x21]:           popobj
34 [0x22]:           ret

indexof(std.io#thread): std#int
address: 1070
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 116 - 0istore 0
2 [0x2]:           ipopl 2
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           loadl cx, fp+2
9 [0x9]:           loadval ecx
10 [0xa]:           lt cx, ecx
11 [0xb]:           jne 37
12 [0xc]: line: 117 - 12movl 0
13 [0xd]:           movn #1
15 [0xf]:           pushobj
16 [0x10]:           loadl adx, fp+2
17 [0x11]:           popobj2 
18 [0x12]:           chklen adx
19 [0x13]:           movnd adx
20 [0x14]:           pushobj
21 [0x15]:           pushl 1
22 [0x16]:           itest cmt
23 [0x17]:           jne 32
24 [0x18]: line: 118 - 24new_class @std#int
26 [0x1a]:           dup 
27 [0x1b]:           ipushl #2
28 [0x1c]:           call @67 // std#int.int
29 [0x1d]:           popobj2 
30 [0x1e]:           returnobj
31 [0x1f]:           ret
32 [0x20]:           ipushl #2
33 [0x21]:           iaddl 1, fp@2
35 [0x23]:           loadval ebx
36 [0x24]:           jmp @3
37 [0x25]: line: 122 - 37new_class @std#int
39 [0x27]:           dup 
40 [0x28]:           istore 4294967295
42 [0x2a]:           call @74 // std#int.int
43 [0x2b]:           popobj2 
44 [0x2c]:           returnobj
45 [0x2d]:           ret

pop_back(): nil
address: 1071
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 1
fpOffset: 0
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 126 - 0istore 0
2 [0x2]:           movl 0
3 [0x3]:           movn #0
5 [0x5]:           iload cx
6 [0x6]:           loadval ecx
7 [0x7]:           gt cx, ecx
8 [0x8]:           jne 27
9 [0x9]: line: 127 - 9pushnull 
10 [0xa]:           popl 1
11 [0xb]: line: 128 - 11pushl 1
12 [0xc]:           movl 0
13 [0xd]:           movn #1
15 [0xf]:           pushobj
16 [0x10]:           movl 0
17 [0x11]:           movn #0
19 [0x13]:           iload egx
20 [0x14]:           dec egx
21 [0x15]:           imov egx
22 [0x16]:           movr adx, egx
23 [0x17]:           popobj2 
24 [0x18]:           chklen adx
25 [0x19]:           movnd adx
26 [0x1a]:           popobj
27 [0x1b]:           ret

size(): std#int
address: 1072
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 133 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @67 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

remove(std.io#thread): nil
address: 1073
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 158 - 0istore 0
2 [0x2]:           ipopl 2
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           loadl cx, fp+2
9 [0x9]:           loadval ecx
10 [0xa]:           lt cx, ecx
11 [0xb]:           jne 38
12 [0xc]: line: 159 - 12movl 0
13 [0xd]:           movn #1
15 [0xf]:           pushobj
16 [0x10]:           loadl adx, fp+2
17 [0x11]:           popobj2 
18 [0x12]:           chklen adx
19 [0x13]:           movnd adx
20 [0x14]:           pushobj
21 [0x15]:           pushl 1
22 [0x16]:           itest cmt
23 [0x17]:           jne 33
24 [0x18]: line: 160 - 24movl 0
25 [0x19]:           pushobj
26 [0x1a]:           new_class @std#int
28 [0x1c]:           dup 
29 [0x1d]:           ipushl #2
30 [0x1e]:           call @67 // std#int.int
31 [0x1f]:           call @1074 // std#list<std.io#thread>.remove_at
32 [0x20]: line: 161 - 32ret
33 [0x21]:           ipushl #2
34 [0x22]:           iaddl 1, fp@2
36 [0x24]:           loadval ebx
37 [0x25]:           jmp @3
38 [0x26]:           ret

remove_at(std#int): nil
address: 1074
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 176 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           iload egx
4 [0x4]:           rstore egx
5 [0x5]:           movl 1
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gte cx, ecx
11 [0xb]:           je 20
12 [0xc]:           istore 0
14 [0xe]:           movl 1
15 [0xf]:           movn #0
17 [0x11]:           iload cx
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 30
21 [0x15]: line: 177 - 21new_class @std#out_of_bounds_exception
23 [0x17]:           dup 
24 [0x18]:           movl 0
25 [0x19]:           pushobj
26 [0x1a]:           pushl 1
27 [0x1b]:           call @1077 // std#list<std.io#thread>.out_of_bounds_msg
28 [0x1c]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
29 [0x1d]:           throw 
30 [0x1e]: line: 179 - 30istore 1
32 [0x20]:           movl 1
33 [0x21]:           movn #0
35 [0x23]:           iload egx
36 [0x24]:           rstore egx
37 [0x25]:           movl 0
38 [0x26]:           movn #0
40 [0x28]:           iload ecx
41 [0x29]:           loadval ecf
42 [0x2a]:           sub ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           sub bmr, cx -> bmr
45 [0x2d]:           rstore bmr
46 [0x2e]:           loadval egx
47 [0x2f]:           mov32 egx, egx
48 [0x30]:           smovr_2 egx, fp+2
49 [0x31]: line: 180 - 49istore 0
51 [0x33]:           loadl cx, fp+2
52 [0x34]:           loadval ecx
53 [0x35]:           gt cx, ecx
54 [0x36]:           jne 83
55 [0x37]: line: 181 - 55movl 0
56 [0x38]:           movn #1
58 [0x3a]:           pushobj
59 [0x3b]:           movl 0
60 [0x3c]:           movn #1
62 [0x3e]:           pushobj
63 [0x3f]:           movl 1
64 [0x40]:           movn #0
66 [0x42]:           iload egx
67 [0x43]:           rstore egx
68 [0x44]:           istore 1
70 [0x46]:           movl 1
71 [0x47]:           movn #0
73 [0x49]:           iload cx
74 [0x4a]:           loadval ecx
75 [0x4b]:           add cx, ecx -> bmr
76 [0x4c]:           rstore bmr
77 [0x4d]:           movl 0
78 [0x4e]:           movn #0
80 [0x50]:           iload egx
81 [0x51]:           rstore egx
82 [0x52]:           call @1090 // std.io#__srt_global.memcopy
83 [0x53]: line: 183 - 83movl 0
84 [0x54]:           pushobj
85 [0x55]:           call @1071 // std#list<std.io#thread>.pop_back
86 [0x56]:           ret

to_string(): std#string?
address: 1075
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 234 - 0new_class @std#string_builder
2 [0x2]:           dup 
3 [0x3]:           call @189 // std#string_builder.string_builder
4 [0x4]:           popl 1
5 [0x5]: line: 236 - 5pushl 1
6 [0x6]:           newstr @82 ([ )
7 [0x7]:           call @187 // std#string_builder.operator+=
8 [0x8]:           pop
9 [0x9]: line: 237 - 9istore 0
11 [0xb]:           ipopl 2
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           loadl cx, fp+2
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 55
21 [0x15]: line: 238 - 21pushl 1
22 [0x16]:           movl 0
23 [0x17]:           movn #1
25 [0x19]:           pushobj
26 [0x1a]:           loadl adx, fp+2
27 [0x1b]:           popobj2 
28 [0x1c]:           chklen adx
29 [0x1d]:           movnd adx
30 [0x1e]:           pushobj
31 [0x1f]:           call @185 // std#string_builder.operator+=
32 [0x20]:           pop
33 [0x21]: line: 240 - 33movl 0
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           istore 1
40 [0x28]:           loadl ecx, fp+2
41 [0x29]:           loadval ecf
42 [0x2a]:           add ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           lt bmr, cx
45 [0x2d]:           jne 50
46 [0x2e]: line: 241 - 46pushl 1
47 [0x2f]:           newstr @83 (, )
48 [0x30]:           call @187 // std#string_builder.operator+=
49 [0x31]:           pop
50 [0x32]:           ipushl #2
51 [0x33]:           iaddl 1, fp@2
53 [0x35]:           loadval ebx
54 [0x36]:           jmp @12
55 [0x37]: line: 245 - 55pushl 1
56 [0x38]:           newstr @84 ( ])
57 [0x39]:           call @187 // std#string_builder.operator+=
58 [0x3a]:           pop
59 [0x3b]: line: 246 - 59pushl 1
60 [0x3c]:           call @184 // std#string_builder.to_string
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret

hash(): std#int
address: 1076
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 250 - 0istore 0
2 [0x2]:           ipopl 1
3 [0x3]: line: 251 - 3new_class @std#int
5 [0x5]:           dup 
6 [0x6]:           istore 0
8 [0x8]:           call @79 // std#int.init<int>
9 [0x9]:           popl 2
10 [0xa]: line: 252 - 10istore 0
12 [0xc]:           ipopl 3
13 [0xd]: line: 253 - 13new_class @std#double
15 [0xf]:           dup 
16 [0x10]:           istore 1000000009
18 [0x12]:           call @125 // std#double.init<double>
19 [0x13]:           popl 4
20 [0x14]: line: 255 - 20istore 4294967295
22 [0x16]:           ipopl 6
23 [0x17]:           movl 0
24 [0x18]:           movn #1
26 [0x1a]:           pushobj
27 [0x1b]:           popl 7
28 [0x1c]:           iaddl 1, fp@6
30 [0x1e]:           loadl cx, fp+6
31 [0x1f]:           movl 7
32 [0x20]:           sizeof ebx
33 [0x21]:           movr ecx, ebx
34 [0x22]:           lt cx, ecx
35 [0x23]:           jne 69
36 [0x24]:           pushl 7
37 [0x25]:           loadl adx, fp+6
38 [0x26]:           popobj2 
39 [0x27]:           chklen adx
40 [0x28]:           movnd adx
41 [0x29]:           pushobj
42 [0x2a]:           popl 5
43 [0x2b]: line: 256 - 43pushl 2
44 [0x2c]:           pushl 5
45 [0x2d]:           call @1118 // std.io#thread.hash
46 [0x2e]:           popobj2 
47 [0x2f]:           movn #0
49 [0x31]:           iload egx
50 [0x32]:           rstore egx
51 [0x33]:           call @401 // std#number<_int32, std#int>.operator+
52 [0x34]:           ipushl #3
53 [0x35]:           call @398 // std#number<_int32, std#int>.operator+
54 [0x36]:           pushl 4
55 [0x37]:           call @478 // std#number<_int32, std#int>.operator%
56 [0x38]:           popl 2
57 [0x39]: line: 257 - 57istore 10
59 [0x3b]:           loadl ecf, fp+1
60 [0x3c]:           loadval edf
61 [0x3d]:           mod ecf, edf -> bmr
62 [0x3e]:           rstore bmr
63 [0x3f]:           loadl cx, fp+1
64 [0x40]:           loadval ecx
65 [0x41]:           mul cx, ecx -> bmr
66 [0x42]:           rstore bmr
67 [0x43]:           ipopl 3
68 [0x44]:           jmp @28
69 [0x45]: line: 260 - 69movl 2
70 [0x46]:           returnobj
71 [0x47]:           ret

out_of_bounds_msg(std#int): std#string
address: 1077
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<std.io#thread>
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 264 - 0new_class @std#string
2 [0x2]:           dup 
3 [0x3]:           newstr @85 (Index: )
4 [0x4]:           call @130 // std#string.string
5 [0x5]:           pushl 1
6 [0x6]:           call @145 // std#string.operator+
7 [0x7]:           newstr @86 (, size: )
8 [0x8]:           call @143 // std#string.operator+
9 [0x9]:           movl 0
10 [0xa]:           movn #0
12 [0xc]:           iload egx
13 [0xd]:           rstore egx
14 [0xe]:           call @161 // std#string.operator+
15 [0xf]:           popobj2 
16 [0x10]:           returnobj
17 [0x11]:           ret

to_string(): std#string?
address: 1078
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<main#transaction>
frameStackOffset: 4
fpOffset: 0
spOffset: 0
stackSize: 5
code:

0 [0x0]: line: 234 - 0new_class @std#string_builder
2 [0x2]:           dup 
3 [0x3]:           call @189 // std#string_builder.string_builder
4 [0x4]:           popl 1
5 [0x5]: line: 236 - 5pushl 1
6 [0x6]:           newstr @82 ([ )
7 [0x7]:           call @187 // std#string_builder.operator+=
8 [0x8]:           pop
9 [0x9]: line: 237 - 9istore 0
11 [0xb]:           ipopl 2
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           loadl cx, fp+2
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 55
21 [0x15]: line: 238 - 21pushl 1
22 [0x16]:           movl 0
23 [0x17]:           movn #1
25 [0x19]:           pushobj
26 [0x1a]:           loadl adx, fp+2
27 [0x1b]:           popobj2 
28 [0x1c]:           chklen adx
29 [0x1d]:           movnd adx
30 [0x1e]:           pushobj
31 [0x1f]:           call @185 // std#string_builder.operator+=
32 [0x20]:           pop
33 [0x21]: line: 240 - 33movl 0
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           istore 1
40 [0x28]:           loadl ecx, fp+2
41 [0x29]:           loadval ecf
42 [0x2a]:           add ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           lt bmr, cx
45 [0x2d]:           jne 50
46 [0x2e]: line: 241 - 46pushl 1
47 [0x2f]:           newstr @83 (, )
48 [0x30]:           call @187 // std#string_builder.operator+=
49 [0x31]:           pop
50 [0x32]:           ipushl #2
51 [0x33]:           iaddl 1, fp@2
53 [0x35]:           loadval ebx
54 [0x36]:           jmp @12
55 [0x37]: line: 245 - 55pushl 1
56 [0x38]:           newstr @84 ( ])
57 [0x39]:           call @187 // std#string_builder.operator+=
58 [0x3a]:           pop
59 [0x3b]: line: 246 - 59pushl 1
60 [0x3c]:           call @184 // std#string_builder.to_string
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret
64 [0x40]: line: 234 - 64new_class @std#string_builder
66 [0x42]:           dup 
67 [0x43]:           call @189 // std#string_builder.string_builder
68 [0x44]:           popl 3
69 [0x45]: line: 236 - 69pushl 3
70 [0x46]:           newstr @82 ([ )
71 [0x47]:           call @187 // std#string_builder.operator+=
72 [0x48]:           pop
73 [0x49]: line: 237 - 73istore 0
75 [0x4b]:           ipopl 4
76 [0x4c]:           movl 0
77 [0x4d]:           movn #0
79 [0x4f]:           iload egx
80 [0x50]:           rstore egx
81 [0x51]:           loadl cx, fp+4
82 [0x52]:           loadval ecx
83 [0x53]:           lt cx, ecx
84 [0x54]:           jne 119
85 [0x55]: line: 238 - 85pushl 3
86 [0x56]:           movl 0
87 [0x57]:           movn #1
89 [0x59]:           pushobj
90 [0x5a]:           loadl adx, fp+4
91 [0x5b]:           popobj2 
92 [0x5c]:           chklen adx
93 [0x5d]:           movnd adx
94 [0x5e]:           pushobj
95 [0x5f]:           call @185 // std#string_builder.operator+=
96 [0x60]:           pop
97 [0x61]: line: 240 - 97movl 0
98 [0x62]:           movn #0
100 [0x64]:           iload egx
101 [0x65]:           rstore egx
102 [0x66]:           istore 1
104 [0x68]:           loadl ecx, fp+4
105 [0x69]:           loadval ecf
106 [0x6a]:           add ecx, ecf -> bmr
107 [0x6b]:           loadval cx
108 [0x6c]:           lt bmr, cx
109 [0x6d]:           jne 114
110 [0x6e]: line: 241 - 110pushl 3
111 [0x6f]:           newstr @83 (, )
112 [0x70]:           call @187 // std#string_builder.operator+=
113 [0x71]:           pop
114 [0x72]:           ipushl #4
115 [0x73]:           iaddl 1, fp@4
117 [0x75]:           loadval ebx
118 [0x76]:           jmp @76
119 [0x77]: line: 245 - 119pushl 3
120 [0x78]:           newstr @84 ( ])
121 [0x79]:           call @187 // std#string_builder.operator+=
122 [0x7a]:           pop
123 [0x7b]: line: 246 - 123pushl 3
124 [0x7c]:           call @184 // std#string_builder.to_string
125 [0x7d]:           popobj2 
126 [0x7e]:           returnobj
127 [0x7f]:           ret

hash(): std#int
address: 1079
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<main#transaction>
frameStackOffset: 14
fpOffset: 0
spOffset: 0
stackSize: 15
code:

0 [0x0]: line: 250 - 0istore 0
2 [0x2]:           ipopl 1
3 [0x3]: line: 251 - 3new_class @std#int
5 [0x5]:           dup 
6 [0x6]:           istore 0
8 [0x8]:           call @79 // std#int.init<int>
9 [0x9]:           popl 2
10 [0xa]: line: 252 - 10istore 0
12 [0xc]:           ipopl 3
13 [0xd]: line: 253 - 13new_class @std#double
15 [0xf]:           dup 
16 [0x10]:           istore 1000000009
18 [0x12]:           call @125 // std#double.init<double>
19 [0x13]:           popl 4
20 [0x14]: line: 255 - 20istore 4294967295
22 [0x16]:           ipopl 6
23 [0x17]:           movl 0
24 [0x18]:           movn #1
26 [0x1a]:           pushobj
27 [0x1b]:           popl 7
28 [0x1c]:           iaddl 1, fp@6
30 [0x1e]:           loadl cx, fp+6
31 [0x1f]:           movl 7
32 [0x20]:           sizeof ebx
33 [0x21]:           movr ecx, ebx
34 [0x22]:           lt cx, ecx
35 [0x23]:           jne 69
36 [0x24]:           pushl 7
37 [0x25]:           loadl adx, fp+6
38 [0x26]:           popobj2 
39 [0x27]:           chklen adx
40 [0x28]:           movnd adx
41 [0x29]:           pushobj
42 [0x2a]:           popl 5
43 [0x2b]: line: 256 - 43pushl 2
44 [0x2c]:           pushl 5
45 [0x2d]:           call @36 // std#_object_.hash
46 [0x2e]:           popobj2 
47 [0x2f]:           movn #0
49 [0x31]:           iload egx
50 [0x32]:           rstore egx
51 [0x33]:           call @401 // std#number<_int32, std#int>.operator+
52 [0x34]:           ipushl #3
53 [0x35]:           call @398 // std#number<_int32, std#int>.operator+
54 [0x36]:           pushl 4
55 [0x37]:           call @478 // std#number<_int32, std#int>.operator%
56 [0x38]:           popl 2
57 [0x39]: line: 257 - 57istore 10
59 [0x3b]:           loadl ecf, fp+1
60 [0x3c]:           loadval edf
61 [0x3d]:           mod ecf, edf -> bmr
62 [0x3e]:           rstore bmr
63 [0x3f]:           loadl cx, fp+1
64 [0x40]:           loadval ecx
65 [0x41]:           mul cx, ecx -> bmr
66 [0x42]:           rstore bmr
67 [0x43]:           ipopl 3
68 [0x44]:           jmp @28
69 [0x45]: line: 260 - 69movl 2
70 [0x46]:           returnobj
71 [0x47]:           ret
72 [0x48]: line: 250 - 72istore 0
74 [0x4a]:           ipopl 8
75 [0x4b]: line: 251 - 75new_class @std#int
77 [0x4d]:           dup 
78 [0x4e]:           istore 0
80 [0x50]:           call @79 // std#int.init<int>
81 [0x51]:           popl 9
82 [0x52]: line: 252 - 82istore 0
84 [0x54]:           ipopl 10
85 [0x55]: line: 253 - 85new_class @std#double
87 [0x57]:           dup 
88 [0x58]:           istore 1000000009
90 [0x5a]:           call @125 // std#double.init<double>
91 [0x5b]:           popl 11
92 [0x5c]: line: 255 - 92istore 4294967295
94 [0x5e]:           ipopl 13
95 [0x5f]:           movl 0
96 [0x60]:           movn #1
98 [0x62]:           pushobj
99 [0x63]:           popl 14
100 [0x64]:           iaddl 1, fp@13
102 [0x66]:           loadl cx, fp+13
103 [0x67]:           movl 14
104 [0x68]:           sizeof ebx
105 [0x69]:           movr ecx, ebx
106 [0x6a]:           lt cx, ecx
107 [0x6b]:           jne 141
108 [0x6c]:           pushl 14
109 [0x6d]:           loadl adx, fp+13
110 [0x6e]:           popobj2 
111 [0x6f]:           chklen adx
112 [0x70]:           movnd adx
113 [0x71]:           pushobj
114 [0x72]:           popl 12
115 [0x73]: line: 256 - 115pushl 9
116 [0x74]:           pushl 12
117 [0x75]:           call @36 // std#_object_.hash
118 [0x76]:           popobj2 
119 [0x77]:           movn #0
121 [0x79]:           iload egx
122 [0x7a]:           rstore egx
123 [0x7b]:           call @401 // std#number<_int32, std#int>.operator+
124 [0x7c]:           ipushl #10
125 [0x7d]:           call @398 // std#number<_int32, std#int>.operator+
126 [0x7e]:           pushl 11
127 [0x7f]:           call @478 // std#number<_int32, std#int>.operator%
128 [0x80]:           popl 9
129 [0x81]: line: 257 - 129istore 10
131 [0x83]:           loadl ecf, fp+8
132 [0x84]:           loadval edf
133 [0x85]:           mod ecf, edf -> bmr
134 [0x86]:           rstore bmr
135 [0x87]:           loadl cx, fp+8
136 [0x88]:           loadval ecx
137 [0x89]:           mul cx, ecx -> bmr
138 [0x8a]:           rstore bmr
139 [0x8b]:           ipopl 10
140 [0x8c]:           jmp @100
141 [0x8d]: line: 260 - 141movl 9
142 [0x8e]:           returnobj
143 [0x8f]:           ret

to_string(): std#string?
address: 1080
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<main#user>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 234 - 0new_class @std#string_builder
2 [0x2]:           dup 
3 [0x3]:           call @189 // std#string_builder.string_builder
4 [0x4]:           popl 1
5 [0x5]: line: 236 - 5pushl 1
6 [0x6]:           newstr @82 ([ )
7 [0x7]:           call @187 // std#string_builder.operator+=
8 [0x8]:           pop
9 [0x9]: line: 237 - 9istore 0
11 [0xb]:           ipopl 2
12 [0xc]:           movl 0
13 [0xd]:           movn #0
15 [0xf]:           iload egx
16 [0x10]:           rstore egx
17 [0x11]:           loadl cx, fp+2
18 [0x12]:           loadval ecx
19 [0x13]:           lt cx, ecx
20 [0x14]:           jne 55
21 [0x15]: line: 238 - 21pushl 1
22 [0x16]:           movl 0
23 [0x17]:           movn #1
25 [0x19]:           pushobj
26 [0x1a]:           loadl adx, fp+2
27 [0x1b]:           popobj2 
28 [0x1c]:           chklen adx
29 [0x1d]:           movnd adx
30 [0x1e]:           pushobj
31 [0x1f]:           call @185 // std#string_builder.operator+=
32 [0x20]:           pop
33 [0x21]: line: 240 - 33movl 0
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           istore 1
40 [0x28]:           loadl ecx, fp+2
41 [0x29]:           loadval ecf
42 [0x2a]:           add ecx, ecf -> bmr
43 [0x2b]:           loadval cx
44 [0x2c]:           lt bmr, cx
45 [0x2d]:           jne 50
46 [0x2e]: line: 241 - 46pushl 1
47 [0x2f]:           newstr @83 (, )
48 [0x30]:           call @187 // std#string_builder.operator+=
49 [0x31]:           pop
50 [0x32]:           ipushl #2
51 [0x33]:           iaddl 1, fp@2
53 [0x35]:           loadval ebx
54 [0x36]:           jmp @12
55 [0x37]: line: 245 - 55pushl 1
56 [0x38]:           newstr @84 ( ])
57 [0x39]:           call @187 // std#string_builder.operator+=
58 [0x3a]:           pop
59 [0x3b]: line: 246 - 59pushl 1
60 [0x3c]:           call @184 // std#string_builder.to_string
61 [0x3d]:           popobj2 
62 [0x3e]:           returnobj
63 [0x3f]:           ret

hash(): std#int
address: 1081
file: /usr/include/sharp/0.3.0/std/list.sharp
owner: std#list<main#user>
frameStackOffset: 7
fpOffset: 0
spOffset: 0
stackSize: 8
code:

0 [0x0]: line: 250 - 0istore 0
2 [0x2]:           ipopl 1
3 [0x3]: line: 251 - 3new_class @std#int
5 [0x5]:           dup 
6 [0x6]:           istore 0
8 [0x8]:           call @79 // std#int.init<int>
9 [0x9]:           popl 2
10 [0xa]: line: 252 - 10istore 0
12 [0xc]:           ipopl 3
13 [0xd]: line: 253 - 13new_class @std#double
15 [0xf]:           dup 
16 [0x10]:           istore 1000000009
18 [0x12]:           call @125 // std#double.init<double>
19 [0x13]:           popl 4
20 [0x14]: line: 255 - 20istore 4294967295
22 [0x16]:           ipopl 6
23 [0x17]:           movl 0
24 [0x18]:           movn #1
26 [0x1a]:           pushobj
27 [0x1b]:           popl 7
28 [0x1c]:           iaddl 1, fp@6
30 [0x1e]:           loadl cx, fp+6
31 [0x1f]:           movl 7
32 [0x20]:           sizeof ebx
33 [0x21]:           movr ecx, ebx
34 [0x22]:           lt cx, ecx
35 [0x23]:           jne 69
36 [0x24]:           pushl 7
37 [0x25]:           loadl adx, fp+6
38 [0x26]:           popobj2 
39 [0x27]:           chklen adx
40 [0x28]:           movnd adx
41 [0x29]:           pushobj
42 [0x2a]:           popl 5
43 [0x2b]: line: 256 - 43pushl 2
44 [0x2c]:           pushl 5
45 [0x2d]:           call @36 // std#_object_.hash
46 [0x2e]:           popobj2 
47 [0x2f]:           movn #0
49 [0x31]:           iload egx
50 [0x32]:           rstore egx
51 [0x33]:           call @401 // std#number<_int32, std#int>.operator+
52 [0x34]:           ipushl #3
53 [0x35]:           call @398 // std#number<_int32, std#int>.operator+
54 [0x36]:           pushl 4
55 [0x37]:           call @478 // std#number<_int32, std#int>.operator%
56 [0x38]:           popl 2
57 [0x39]: line: 257 - 57istore 10
59 [0x3b]:           loadl ecf, fp+1
60 [0x3c]:           loadval edf
61 [0x3d]:           mod ecf, edf -> bmr
62 [0x3e]:           rstore bmr
63 [0x3f]:           loadl cx, fp+1
64 [0x40]:           loadval ecx
65 [0x41]:           mul cx, ecx -> bmr
66 [0x42]:           rstore bmr
67 [0x43]:           ipopl 3
68 [0x44]:           jmp @28
69 [0x45]: line: 260 - 69movl 2
70 [0x46]:           returnobj
71 [0x47]:           ret

read_next(std#int): std#list<std.io.coroutines#job>
address: 1082
file: /usr/include/sharp/0.3.0/std/io/receive_channel.sharp
owner: std.io#receive_channel<std.io.coroutines#job>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


read_all(std#int): std#list<std.io.coroutines#job>
address: 1083
file: /usr/include/sharp/0.3.0/std/io/receive_channel.sharp
owner: std.io#receive_channel<std.io.coroutines#job>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


avail_data(std#int): std#bool
address: 1084
file: /usr/include/sharp/0.3.0/std/io/receive_channel.sharp
owner: std.io#receive_channel<std.io.coroutines#job>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


read_next(std#int): std#list<std#int>
address: 1085
file: /usr/include/sharp/0.3.0/std/io/receive_channel.sharp
owner: std.io#receive_channel<std#int>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


read_all(std#int): std#list<std#int>
address: 1086
file: /usr/include/sharp/0.3.0/std/io/receive_channel.sharp
owner: std.io#receive_channel<std#int>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


avail_data(std#int): std#bool
address: 1087
file: /usr/include/sharp/0.3.0/std/io/receive_channel.sharp
owner: std.io#receive_channel<std#int>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


realloc(object[], _int32): nil
address: 1088
file: /usr/include/sharp/0.3.0/std/io/memory.sharp
owner: std.io#__srt_global
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 5 - 0pushl 0
1 [0x1]:         ipushl #1
2 [0x2]:         int 0x23
3 [0x3]:         ret

realloc(_int8[], _int32): nil
address: 1089
file: /usr/include/sharp/0.3.0/std/io/memory.sharp
owner: std.io#__srt_global
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 21 - 0pushl 0
1 [0x1]:          ipushl #1
2 [0x2]:          int 0x23
3 [0x3]:          ret

memcopy(object[], object[], _int32, _int32, _int32): nil
address: 1090
file: /usr/include/sharp/0.3.0/std/io/memory.sharp
owner: std.io#__srt_global
frameStackOffset: 0
fpOffset: 4
spOffset: 5
stackSize: 5
code:

0 [0x0]: line: 85 - 0pushl 1
1 [0x1]:          pushl 0
2 [0x2]:          ipushl #2
3 [0x3]:          ipushl #3
4 [0x4]:          ipushl #4
5 [0x5]:          int 0x21
6 [0x6]:          ret

memcopy(_int8[], _int8[], _int32, _int32, _int32): nil
address: 1091
file: /usr/include/sharp/0.3.0/std/io/memory.sharp
owner: std.io#__srt_global
frameStackOffset: 0
fpOffset: 4
spOffset: 5
stackSize: 5
code:

0 [0x0]: line: 107 - 0pushl 1
1 [0x1]:           pushl 0
2 [0x2]:           ipushl #2
3 [0x3]:           ipushl #3
4 [0x4]:           ipushl #4
5 [0x5]:           int 0x21
6 [0x6]:           ret

copy(object, _int32, _int32): object?
address: 1092
file: /usr/include/sharp/0.3.0/std/io/memory.sharp
owner: std.io#__srt_global
frameStackOffset: 0
fpOffset: 2
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 195 - 0pushl 0
1 [0x1]:           ipushl #1
2 [0x2]:           ipushl #2
3 [0x3]:           int 0x37
4 [0x4]:           popobj2 
5 [0x5]:           returnobj
6 [0x6]:           ret
7 [0x7]: line: 205 - 7pushnull 
8 [0x8]:           popobj2 
9 [0x9]:           returnobj
10 [0xa]:           ret

copy(_int8[], _int32, _int32): _int8[]?
address: 1093
file: /usr/include/sharp/0.3.0/std/io/memory.sharp
owner: std.io#__srt_global
frameStackOffset: 0
fpOffset: 2
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 222 - 0pushl 0
1 [0x1]:           ipushl #1
2 [0x2]:           ipushl #2
3 [0x3]:           int 0x37
4 [0x4]:           popobj2 
5 [0x5]:           returnobj
6 [0x6]:           ret
7 [0x7]: line: 231 - 7pushnull 
8 [0x8]:           popobj2 
9 [0x9]:           returnobj
10 [0xa]:           ret

_srt_thread_start(): nil
address: 1094
file: /usr/include/sharp/0.3.0/std/io/thread_kernel.sharp
owner: std.io#__srt_global
frameStackOffset: 3
fpOffset: -1
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 8 - 0call @19 // platform.kernel#vm.current_thread
1 [0x1]:         popl 0
2 [0x2]: line: 9 - 2pushl 0
3 [0x3]:         call @1112 // std.io#thread.set_started
4 [0x4]: line: 10 - 4call @0 // platform.kernel#platform.tls_init
5 [0x5]: line: 11 - 5new_class @std#int
7 [0x7]:          dup 
8 [0x8]:          istore 1
10 [0xa]:          call @79 // std#int.init<int>
11 [0xb]:          popl 1
12 [0xc]: line: 13 - 12pushl 0
13 [0xd]: line: 14 - 12call @1136 // std.io#thread.get_main_method
14 [0xe]:          loadval cx
15 [0xf]:          call @24 // platform.kernel#vm.thread_args
16 [0x10]:          movr egx, cx
17 [0x11]:          calld egx
18 [0x12]:          popl 1
19 [0x13]:          jmp @40
20 [0x14]: line: 16 - 20pushl 0
21 [0x15]:          call @1134 // std.io#thread.get_exception_handler
22 [0x16]:          popobj2 
23 [0x17]:          checknull
24 [0x18]:          movr ebx, cmt
25 [0x19]:          not ebx, ebx
26 [0x1a]:          movr cmt, ebx
27 [0x1b]:          jne 34
28 [0x1c]: line: 17 - 28pushl 0
29 [0x1d]:          call @1134 // std.io#thread.get_exception_handler
30 [0x1e]:          pushl 2
31 [0x1f]:          invoke_delegate 1158 { static=0, args=1 }
33 [0x21]:          jmp @39
34 [0x22]: line: 19 - 34pushl 0
35 [0x23]:          pushl 1
36 [0x24]:          call @1113 // std.io#thread.set_finished
37 [0x25]: line: 20 - 37pushl 2
38 [0x26]:          throw 
39 [0x27]:          jmp @40
40 [0x28]: line: 24 - 40pushl 0
41 [0x29]:          pushl 1
42 [0x2a]:          call @1113 // std.io#thread.set_finished
43 [0x2b]:          ret

static_init<thread>(): nil
address: 1095
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#thread
1 [0x1]:         movn #1
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#thread
9 [0x9]:         movn #1
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<thread>(): nil
address: 1096
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#int
2 [0x2]:         dup 
3 [0x3]:         call @85 // std#int.int
4 [0x4]:         movl 0
5 [0x5]:         movn #0
7 [0x7]:         popobj
8 [0x8]:         new_class @std#string
10 [0xa]:         dup 
11 [0xb]:         newstr @68 ()
12 [0xc]:         call @131 // std#string.init<string>
13 [0xd]:         movl 0
14 [0xe]:         movn #6
16 [0x10]:         popobj
17 [0x11]:         ret

thread(): nil
address: 1097
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1095 // std.io#thread.static_init<thread>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1096 // std.io#thread.init<thread>
12 [0xc]:         ret

thread(std#string, *(object[])(std#int)): nil
address: 1098
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 2
spOffset: 3
stackSize: 3
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1095 // std.io#thread.static_init<thread>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1096 // std.io#thread.init<thread>
12 [0xc]: line: 13 - 12ipushl #2
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #11
17 [0x11]:          loadval egx
18 [0x12]:          imov egx
19 [0x13]: line: 14 - 19pushl 1
20 [0x14]:          movl 0
21 [0x15]:          movl 0
22 [0x16]:          movn #6
24 [0x18]:          popobj
25 [0x19]: line: 15 - 25movg @std.io#thread_group
26 [0x1a]:          movn #0
28 [0x1c]:          pushobj
29 [0x1d]:          movl 0
30 [0x1e]:          movl 0
31 [0x1f]:          movn #7
33 [0x21]:          popobj
34 [0x22]: line: 16 - 34movl 0
35 [0x23]:          movn #7
37 [0x25]:          pushobj
38 [0x26]:          call @1144 // std.io#thread_group.get_priority
39 [0x27]:          movl 0
40 [0x28]:          movl 0
41 [0x29]:          movn #3
43 [0x2b]:          popobj
44 [0x2c]: line: 17 - 44istore 4294967295
46 [0x2e]:          movl 0
47 [0x2f]:          movl 0
48 [0x30]:          movn #1
50 [0x32]:          loadval egx
51 [0x33]:          imov egx
52 [0x34]: line: 18 - 52movg @std.io#thread
53 [0x35]:          movn #0
55 [0x37]:          iload egx
56 [0x38]:          rstore egx
57 [0x39]:          iload egx
58 [0x3a]:          inc egx
59 [0x3b]:          imov egx
60 [0x3c]:          loadval ebx
61 [0x3d]:          rstore ebx
62 [0x3e]:          movl 0
63 [0x3f]:          movn #2
65 [0x41]:          loadval egx
66 [0x42]:          imov egx
67 [0x43]: line: 20 - 67movl 0
68 [0x44]:          movn #7
70 [0x46]:          pushobj
71 [0x47]:          movl 0
72 [0x48]:          pushobj
73 [0x49]:          call @1142 // std.io#thread_group.add
74 [0x4a]:          ret

thread(std#string, var, *(object[])(std#int)): nil
address: 1099
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 3
spOffset: 4
stackSize: 4
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1095 // std.io#thread.static_init<thread>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1096 // std.io#thread.init<thread>
12 [0xc]: line: 24 - 12ipushl #3
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #11
17 [0x11]:          loadval egx
18 [0x12]:          imov egx
19 [0x13]: line: 25 - 19pushl 1
20 [0x14]:          movl 0
21 [0x15]:          movl 0
22 [0x16]:          movn #6
24 [0x18]:          popobj
25 [0x19]: line: 26 - 25ipushl #2
26 [0x1a]:          movl 0
27 [0x1b]:          movl 0
28 [0x1c]:          movn #4
30 [0x1e]:          loadval egx
31 [0x1f]:          imov egx
32 [0x20]: line: 27 - 32movg @std.io#thread_group
33 [0x21]:          movn #0
35 [0x23]:          pushobj
36 [0x24]:          movl 0
37 [0x25]:          movl 0
38 [0x26]:          movn #7
40 [0x28]:          popobj
41 [0x29]: line: 28 - 41movl 0
42 [0x2a]:          movn #7
44 [0x2c]:          pushobj
45 [0x2d]:          call @1144 // std.io#thread_group.get_priority
46 [0x2e]:          movl 0
47 [0x2f]:          movl 0
48 [0x30]:          movn #3
50 [0x32]:          popobj
51 [0x33]: line: 29 - 51istore 4294967295
53 [0x35]:          movl 0
54 [0x36]:          movl 0
55 [0x37]:          movn #1
57 [0x39]:          loadval egx
58 [0x3a]:          imov egx
59 [0x3b]: line: 30 - 59movg @std.io#thread
60 [0x3c]:          movn #0
62 [0x3e]:          iload egx
63 [0x3f]:          rstore egx
64 [0x40]:          iload egx
65 [0x41]:          inc egx
66 [0x42]:          imov egx
67 [0x43]:          loadval ebx
68 [0x44]:          rstore ebx
69 [0x45]:          movl 0
70 [0x46]:          movn #2
72 [0x48]:          loadval egx
73 [0x49]:          imov egx
74 [0x4a]: line: 32 - 74movl 0
75 [0x4b]:          movn #7
77 [0x4d]:          pushobj
78 [0x4e]:          movl 0
79 [0x4f]:          pushobj
80 [0x50]:          call @1142 // std.io#thread_group.add
81 [0x51]:          ret

thread(std#string, *(object[])(std#int), var): nil
address: 1100
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 3
spOffset: 4
stackSize: 4
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1095 // std.io#thread.static_init<thread>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1096 // std.io#thread.init<thread>
12 [0xc]: line: 36 - 12ipushl #2
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #11
17 [0x11]:          loadval egx
18 [0x12]:          imov egx
19 [0x13]: line: 37 - 19pushl 1
20 [0x14]:          movl 0
21 [0x15]:          movl 0
22 [0x16]:          movn #6
24 [0x18]:          popobj
25 [0x19]: line: 38 - 25ipushl #3
26 [0x1a]:          movl 0
27 [0x1b]:          movl 0
28 [0x1c]:          movn #10
30 [0x1e]:          loadval egx
31 [0x1f]:          imov egx
32 [0x20]: line: 39 - 32movg @std.io#thread_group
33 [0x21]:          movn #0
35 [0x23]:          pushobj
36 [0x24]:          movl 0
37 [0x25]:          movl 0
38 [0x26]:          movn #7
40 [0x28]:          popobj
41 [0x29]: line: 40 - 41movl 0
42 [0x2a]:          movn #7
44 [0x2c]:          pushobj
45 [0x2d]:          call @1144 // std.io#thread_group.get_priority
46 [0x2e]:          movl 0
47 [0x2f]:          movl 0
48 [0x30]:          movn #3
50 [0x32]:          popobj
51 [0x33]: line: 41 - 51istore 4294967295
53 [0x35]:          movl 0
54 [0x36]:          movl 0
55 [0x37]:          movn #1
57 [0x39]:          loadval egx
58 [0x3a]:          imov egx
59 [0x3b]: line: 42 - 59movg @std.io#thread
60 [0x3c]:          movn #0
62 [0x3e]:          iload egx
63 [0x3f]:          rstore egx
64 [0x40]:          iload egx
65 [0x41]:          inc egx
66 [0x42]:          imov egx
67 [0x43]:          loadval ebx
68 [0x44]:          rstore ebx
69 [0x45]:          movl 0
70 [0x46]:          movn #2
72 [0x48]:          loadval egx
73 [0x49]:          imov egx
74 [0x4a]: line: 44 - 74movl 0
75 [0x4b]:          movn #7
77 [0x4d]:          pushobj
78 [0x4e]:          movl 0
79 [0x4f]:          pushobj
80 [0x50]:          call @1142 // std.io#thread_group.add
81 [0x51]:          ret

thread(std#string, var, *(object[])(std#int), var): nil
address: 1101
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 4
spOffset: 5
stackSize: 5
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1095 // std.io#thread.static_init<thread>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1096 // std.io#thread.init<thread>
12 [0xc]: line: 48 - 12ipushl #3
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #11
17 [0x11]:          loadval egx
18 [0x12]:          imov egx
19 [0x13]: line: 49 - 19pushl 1
20 [0x14]:          movl 0
21 [0x15]:          movl 0
22 [0x16]:          movn #6
24 [0x18]:          popobj
25 [0x19]: line: 50 - 25ipushl #4
26 [0x1a]:          movl 0
27 [0x1b]:          movl 0
28 [0x1c]:          movn #10
30 [0x1e]:          loadval egx
31 [0x1f]:          imov egx
32 [0x20]: line: 51 - 32ipushl #2
33 [0x21]:          movl 0
34 [0x22]:          movl 0
35 [0x23]:          movn #4
37 [0x25]:          loadval egx
38 [0x26]:          imov egx
39 [0x27]: line: 52 - 39movg @std.io#thread_group
40 [0x28]:          movn #0
42 [0x2a]:          pushobj
43 [0x2b]:          movl 0
44 [0x2c]:          movl 0
45 [0x2d]:          movn #7
47 [0x2f]:          popobj
48 [0x30]: line: 53 - 48movl 0
49 [0x31]:          movn #7
51 [0x33]:          pushobj
52 [0x34]:          call @1144 // std.io#thread_group.get_priority
53 [0x35]:          movl 0
54 [0x36]:          movl 0
55 [0x37]:          movn #3
57 [0x39]:          popobj
58 [0x3a]: line: 54 - 58istore 4294967295
60 [0x3c]:          movl 0
61 [0x3d]:          movl 0
62 [0x3e]:          movn #1
64 [0x40]:          loadval egx
65 [0x41]:          imov egx
66 [0x42]: line: 55 - 66movg @std.io#thread
67 [0x43]:          movn #0
69 [0x45]:          iload egx
70 [0x46]:          rstore egx
71 [0x47]:          iload egx
72 [0x48]:          inc egx
73 [0x49]:          imov egx
74 [0x4a]:          loadval ebx
75 [0x4b]:          rstore ebx
76 [0x4c]:          movl 0
77 [0x4d]:          movn #2
79 [0x4f]:          loadval egx
80 [0x50]:          imov egx
81 [0x51]: line: 57 - 81movl 0
82 [0x52]:          movn #7
84 [0x54]:          pushobj
85 [0x55]:          movl 0
86 [0x56]:          pushobj
87 [0x57]:          call @1142 // std.io#thread_group.add
88 [0x58]:          ret

thread(std#string, *(object[])(std#int), var, std.io#thread_group): nil
address: 1102
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 4
spOffset: 5
stackSize: 5
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1095 // std.io#thread.static_init<thread>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1096 // std.io#thread.init<thread>
12 [0xc]: line: 61 - 12ipushl #2
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #11
17 [0x11]:          loadval egx
18 [0x12]:          imov egx
19 [0x13]: line: 62 - 19pushl 1
20 [0x14]:          movl 0
21 [0x15]:          movl 0
22 [0x16]:          movn #6
24 [0x18]:          popobj
25 [0x19]: line: 63 - 25ipushl #3
26 [0x1a]:          movl 0
27 [0x1b]:          movl 0
28 [0x1c]:          movn #10
30 [0x1e]:          loadval egx
31 [0x1f]:          imov egx
32 [0x20]: line: 64 - 32pushl 4
33 [0x21]:          movl 0
34 [0x22]:          movl 0
35 [0x23]:          movn #7
37 [0x25]:          popobj
38 [0x26]: line: 65 - 38pushl 4
39 [0x27]:          call @1144 // std.io#thread_group.get_priority
40 [0x28]:          movl 0
41 [0x29]:          movl 0
42 [0x2a]:          movn #3
44 [0x2c]:          popobj
45 [0x2d]: line: 66 - 45istore 4294967295
47 [0x2f]:          movl 0
48 [0x30]:          movl 0
49 [0x31]:          movn #1
51 [0x33]:          loadval egx
52 [0x34]:          imov egx
53 [0x35]: line: 67 - 53movg @std.io#thread
54 [0x36]:          movn #0
56 [0x38]:          iload egx
57 [0x39]:          rstore egx
58 [0x3a]:          iload egx
59 [0x3b]:          inc egx
60 [0x3c]:          imov egx
61 [0x3d]:          loadval ebx
62 [0x3e]:          rstore ebx
63 [0x3f]:          movl 0
64 [0x40]:          movn #2
66 [0x42]:          loadval egx
67 [0x43]:          imov egx
68 [0x44]: line: 69 - 68movl 0
69 [0x45]:          movn #7
71 [0x47]:          pushobj
72 [0x48]:          movl 0
73 [0x49]:          pushobj
74 [0x4a]:          call @1142 // std.io#thread_group.add
75 [0x4b]:          ret

thread(std#string, *(object[])(std#int), std.io#thread_group): nil
address: 1103
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 3
spOffset: 4
stackSize: 4
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1095 // std.io#thread.static_init<thread>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1096 // std.io#thread.init<thread>
12 [0xc]: line: 73 - 12ipushl #2
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #11
17 [0x11]:          loadval egx
18 [0x12]:          imov egx
19 [0x13]: line: 74 - 19pushl 1
20 [0x14]:          movl 0
21 [0x15]:          movl 0
22 [0x16]:          movn #6
24 [0x18]:          popobj
25 [0x19]: line: 75 - 25pushl 3
26 [0x1a]:          movl 0
27 [0x1b]:          movl 0
28 [0x1c]:          movn #7
30 [0x1e]:          popobj
31 [0x1f]: line: 76 - 31pushl 3
32 [0x20]:          call @1144 // std.io#thread_group.get_priority
33 [0x21]:          movl 0
34 [0x22]:          movl 0
35 [0x23]:          movn #3
37 [0x25]:          popobj
38 [0x26]: line: 77 - 38istore 4294967295
40 [0x28]:          movl 0
41 [0x29]:          movl 0
42 [0x2a]:          movn #1
44 [0x2c]:          loadval egx
45 [0x2d]:          imov egx
46 [0x2e]: line: 78 - 46movg @std.io#thread
47 [0x2f]:          movn #0
49 [0x31]:          iload egx
50 [0x32]:          rstore egx
51 [0x33]:          iload egx
52 [0x34]:          inc egx
53 [0x35]:          imov egx
54 [0x36]:          loadval ebx
55 [0x37]:          rstore ebx
56 [0x38]:          movl 0
57 [0x39]:          movn #2
59 [0x3b]:          loadval egx
60 [0x3c]:          imov egx
61 [0x3d]: line: 80 - 61movl 0
62 [0x3e]:          movn #7
64 [0x40]:          pushobj
65 [0x41]:          movl 0
66 [0x42]:          pushobj
67 [0x43]:          call @1142 // std.io#thread_group.add
68 [0x44]:          ret

thread(std#string, var, *(object[])(std#int), var, std.io#thread_group): nil
address: 1104
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 5
spOffset: 6
stackSize: 6
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1095 // std.io#thread.static_init<thread>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1096 // std.io#thread.init<thread>
12 [0xc]: line: 84 - 12ipushl #3
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #11
17 [0x11]:          loadval egx
18 [0x12]:          imov egx
19 [0x13]: line: 85 - 19pushl 1
20 [0x14]:          movl 0
21 [0x15]:          movl 0
22 [0x16]:          movn #6
24 [0x18]:          popobj
25 [0x19]: line: 86 - 25ipushl #2
26 [0x1a]:          movl 0
27 [0x1b]:          movl 0
28 [0x1c]:          movn #4
30 [0x1e]:          loadval egx
31 [0x1f]:          imov egx
32 [0x20]: line: 87 - 32ipushl #4
33 [0x21]:          movl 0
34 [0x22]:          movl 0
35 [0x23]:          movn #10
37 [0x25]:          loadval egx
38 [0x26]:          imov egx
39 [0x27]: line: 88 - 39pushl 5
40 [0x28]:          movl 0
41 [0x29]:          movl 0
42 [0x2a]:          movn #7
44 [0x2c]:          popobj
45 [0x2d]: line: 89 - 45pushl 5
46 [0x2e]:          call @1144 // std.io#thread_group.get_priority
47 [0x2f]:          movl 0
48 [0x30]:          movl 0
49 [0x31]:          movn #3
51 [0x33]:          popobj
52 [0x34]: line: 90 - 52istore 4294967295
54 [0x36]:          movl 0
55 [0x37]:          movl 0
56 [0x38]:          movn #1
58 [0x3a]:          loadval egx
59 [0x3b]:          imov egx
60 [0x3c]: line: 91 - 60movg @std.io#thread
61 [0x3d]:          movn #0
63 [0x3f]:          iload egx
64 [0x40]:          rstore egx
65 [0x41]:          iload egx
66 [0x42]:          inc egx
67 [0x43]:          imov egx
68 [0x44]:          loadval ebx
69 [0x45]:          rstore ebx
70 [0x46]:          movl 0
71 [0x47]:          movn #2
73 [0x49]:          loadval egx
74 [0x4a]:          imov egx
75 [0x4b]: line: 93 - 75movl 0
76 [0x4c]:          movn #7
78 [0x4e]:          pushobj
79 [0x4f]:          movl 0
80 [0x50]:          pushobj
81 [0x51]:          call @1142 // std.io#thread_group.add
82 [0x52]:          ret

start(object[]?): std.io#thread_result
address: 1105
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 97 - 0istore 4294967295
2 [0x2]:          movl 0
3 [0x3]:          movn #1
5 [0x5]:          iload cx
6 [0x6]:          loadval ecx
7 [0x7]:          test cx, ecx
8 [0x8]:          movr cmt, bmr
9 [0x9]:          jne 26
10 [0xa]: line: 98 - 10movl 0
11 [0xb]:          movn #4
13 [0xd]:          iload egx
14 [0xe]:          rstore egx
15 [0xf]:          call @6 // platform.kernel#vm.thread_create
16 [0x10]:          popobj2 
17 [0x11]:          movn #0
19 [0x13]:          iload egx
20 [0x14]:          rstore egx
21 [0x15]:          movl 0
22 [0x16]:          movn #1
24 [0x18]:          loadval egx
25 [0x19]:          imov egx
26 [0x1a]: line: 99 - 26movl 0
27 [0x1b]:          pushobj
28 [0x1c]:          pushl 1
29 [0x1d]:          call @21 // platform.kernel#vm.thread_start
30 [0x1e]:          popobj2 
31 [0x1f]:          returnobj
32 [0x20]:          ret

start(): std.io#thread_result
address: 1106
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 103 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           pushnull 
3 [0x3]:           call @1105 // std.io#thread.start
4 [0x4]:           popobj2 
5 [0x5]:           returnobj
6 [0x6]:           ret

suspend(): std.io#thread_result
address: 1107
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 107 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           call @15 // platform.kernel#vm.suspend
3 [0x3]:           popl 1
4 [0x4]: line: 108 - 4movg @std.io#thread_result
5 [0x5]:           movn #0
7 [0x7]:           pushobj
8 [0x8]:           pushl 1
9 [0x9]:           itest cmt
10 [0xa]:           jne 18
11 [0xb]: line: 109 - 11istore 1
13 [0xd]:           movl 0
14 [0xe]:           movn #9
16 [0x10]:           loadval egx
17 [0x11]:           imov egx
18 [0x12]: line: 111 - 18movl 1
19 [0x13]:           returnobj
20 [0x14]:           ret

unsuspend(): std.io#thread_result
address: 1108
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 115 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           istore 0
4 [0x4]:           call @16 // platform.kernel#vm.unsuspend
5 [0x5]:           popl 1
6 [0x6]: line: 116 - 6movg @std.io#thread_result
7 [0x7]:           movn #0
9 [0x9]:           pushobj
10 [0xa]:           pushl 1
11 [0xb]:           itest cmt
12 [0xc]:           jne 20
13 [0xd]: line: 117 - 13istore 0
15 [0xf]:           movl 0
16 [0x10]:           movn #9
18 [0x12]:           loadval egx
19 [0x13]:           imov egx
20 [0x14]: line: 119 - 20movl 1
21 [0x15]:           returnobj
22 [0x16]:           ret

unsuspend_and_wait(): std.io#thread_result
address: 1109
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 123 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           istore 1
4 [0x4]:           call @16 // platform.kernel#vm.unsuspend
5 [0x5]:           popl 1
6 [0x6]: line: 124 - 6movg @std.io#thread_result
7 [0x7]:           movn #0
9 [0x9]:           pushobj
10 [0xa]:           pushl 1
11 [0xb]:           itest cmt
12 [0xc]:           jne 20
13 [0xd]: line: 125 - 13istore 0
15 [0xf]:           movl 0
16 [0x10]:           movn #9
18 [0x12]:           loadval egx
19 [0x13]:           imov egx
20 [0x14]: line: 127 - 20movl 1
21 [0x15]:           returnobj
22 [0x16]:           ret

join(): std.io#thread_result
address: 1110
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 130 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           call @17 // platform.kernel#vm.thread_join
3 [0x3]:           popobj2 
4 [0x4]:           returnobj
5 [0x5]:           ret

interrupt(): nil
address: 1111
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 133 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           call @18 // platform.kernel#vm.kill
3 [0x3]:           pop
4 [0x4]:           ret

set_started(): nil
address: 1112
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 137 - 0istore 0
2 [0x2]:           movl 0
3 [0x3]:           movn #5
5 [0x5]:           loadval egx
6 [0x6]:           imov egx
7 [0x7]: line: 138 - 7istore 1
9 [0x9]:           movl 0
10 [0xa]:           movn #8
12 [0xc]:           loadval egx
13 [0xd]:           imov egx
14 [0xe]:           ret

set_finished(std#int): nil
address: 1113
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 142 - 0istore 1
2 [0x2]:           movl 0
3 [0x3]:           movn #5
5 [0x5]:           loadval egx
6 [0x6]:           imov egx
7 [0x7]: line: 143 - 7istore 0
9 [0x9]:           movl 0
10 [0xa]:           movn #8
12 [0xc]:           loadval egx
13 [0xd]:           imov egx
14 [0xe]: line: 144 - 14pushl 1
15 [0xf]:           movl 0
16 [0x10]:           movn #0
18 [0x12]:           popobj
19 [0x13]: line: 145 - 19istore 4294967295
21 [0x15]:           movl 0
22 [0x16]:           movn #1
24 [0x18]:           loadval egx
25 [0x19]:           imov egx
26 [0x1a]:           ret

current(): std.io#thread
address: 1114
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: -1
spOffset: -1
stackSize: 0
code:

0 [0x0]: line: 148 - 0call @19 // platform.kernel#vm.current_thread
1 [0x1]:           popobj2 
2 [0x2]:           returnobj
3 [0x3]:           ret

sleep(var): nil
address: 1115
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 150 - 0movg @std#time_unit
1 [0x1]:           movn #1
3 [0x3]:           pushobj
4 [0x4]:           new_class @std#long
6 [0x6]:           dup 
7 [0x7]:           ipushl #0
8 [0x8]:           call @55 // std#long.long
9 [0x9]:           call @261 // std#time.sleep
10 [0xa]:           ret

suspend_for(var): nil
address: 1116
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 153 - 0istore 1
2 [0x2]:           call @19 // platform.kernel#vm.current_thread
3 [0x3]:           popobj2 
4 [0x4]:           movn #9
6 [0x6]:           loadval egx
7 [0x7]:           imov egx
8 [0x8]: line: 154 - 8movg @std#time_unit
9 [0x9]:           movn #1
11 [0xb]:           pushobj
12 [0xc]:           new_class @std#long
14 [0xe]:           dup 
15 [0xf]:           ipushl #0
16 [0x10]:           call @55 // std#long.long
17 [0x11]:           call @262 // std#time.wait
18 [0x12]: line: 155 - 18istore 0
20 [0x14]:           call @19 // platform.kernel#vm.current_thread
21 [0x15]:           popobj2 
22 [0x16]:           movn #9
24 [0x18]:           loadval egx
25 [0x19]:           imov egx
26 [0x1a]:           ret

exit(var): nil
address: 1117
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 159 - 0call @1114 // std.io#thread.current
1 [0x1]:           new_class @std#int
3 [0x3]:           dup 
4 [0x4]:           ipushl #0
5 [0x5]:           call @67 // std#int.int
6 [0x6]:           call @1113 // std.io#thread.set_finished
7 [0x7]: line: 160 - 7hlt
8 [0x8]:           ret

hash(): std#int
address: 1118
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 164 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #2
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @67 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

yield(): nil
address: 1119
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]: line: 167 - 0call @20 // platform.kernel#vm.thread_yield
1 [0x1]:           ret

set_exception_handler(std.io#uncaught_exception_handler): nil
address: 1120
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 170 - 0pushl 1
1 [0x1]:           movl 0
2 [0x2]:           movl 0
3 [0x3]:           movn #12
5 [0x5]:           popobj
6 [0x6]:           ret

set_priority(std.io#thread_priority): std.io#thread_result
address: 1121
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 174 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]: line: 175 - 2pushl 1
3 [0x3]:           popl 2
4 [0x4]:           movg @std.io#thread_priority
5 [0x5]:           movn #0
7 [0x7]:           pushobj
8 [0x8]:           pushl 2
9 [0x9]:           itest cmt
10 [0xa]:           je 25
11 [0xb]:           movg @std.io#thread_priority
12 [0xc]:           movn #1
14 [0xe]:           pushobj
15 [0xf]:           pushl 2
16 [0x10]:           itest cmt
17 [0x11]:           je 25
18 [0x12]:           movg @std.io#thread_priority
19 [0x13]:           movn #2
21 [0x15]:           pushobj
22 [0x16]:           pushl 2
23 [0x17]:           itest cmt
24 [0x18]:           jne 42
25 [0x19]: line: 179 - 25movl 0
26 [0x1a]:           pushobj
27 [0x1b]:           movl 1
28 [0x1c]:           movn #1
30 [0x1e]:           iload egx
31 [0x1f]:           rstore egx
32 [0x20]:           call @22 // platform.kernel#vm.set_thread_priority
33 [0x21]:           popl 3
34 [0x22]:           movl 0
35 [0x23]:           _ulck
36 [0x24]:           movl 0
37 [0x25]:           _ulck
38 [0x26]:           movl 3
39 [0x27]:           returnobj
40 [0x28]:           ret
41 [0x29]:           jmp @54
42 [0x2a]: line: 182 - 42new_class @std#illegal_argument_exception
44 [0x2c]:           dup 
45 [0x2d]:           new_class @std#string
47 [0x2f]:           dup 
48 [0x30]:           newstr @87 (invalid thread priority )
49 [0x31]:           call @130 // std#string.string
50 [0x32]:           pushl 1
51 [0x33]:           call @145 // std#string.operator+
52 [0x34]:           call @203 // std#illegal_argument_exception.illegal_argument_exception
53 [0x35]:           throw 
54 [0x36]:           movl 0
55 [0x37]:           _ulck

remove_thread(std.io#thread): nil
address: 1122
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 189 - 0movl 0
1 [0x1]:           movn #7
3 [0x3]:           pushobj
4 [0x4]:           new_class @std#int
6 [0x6]:           dup 
7 [0x7]:           movl 1
8 [0x8]:           movn #1
10 [0xa]:           iload egx
11 [0xb]:           rstore egx
12 [0xc]:           call @67 // std#int.int
13 [0xd]:           call @1145 // std.io#thread_group.remove
14 [0xe]:           pop
15 [0xf]:           ret

get_id(): std#int
address: 1123
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 192 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #2
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @67 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

get_native_handle(): std#int
address: 1124
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 193 - 0new_class @std#int
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #1
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @67 // std#int.int
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

get_stack_size(): var
address: 1125
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 194 - 0movl 0
1 [0x1]:           movn #10
3 [0x3]:           iload ebx
4 [0x4]:           return_val ebx
5 [0x5]:           ret

get_name(): std#string
address: 1126
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 195 - 0movl 0
1 [0x1]:           movn #6
3 [0x3]:           returnobj
4 [0x4]:           ret

is_exited(): std#bool
address: 1127
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 196 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #5
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @109 // std#bool.bool
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

is_daemon(): std#bool
address: 1128
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 197 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #4
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @109 // std#bool.bool
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

is_started(): std#bool
address: 1129
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 198 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #8
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @109 // std#bool.bool
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

is_suspended(): std#bool
address: 1130
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 199 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #9
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @109 // std#bool.bool
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

set_main(*(object[])(std#int)): *(object[]?)(std#int)
address: 1131
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 200 - 0ipushl #1
1 [0x1]:           movl 0
2 [0x2]:           movl 0
3 [0x3]:           movn #11
5 [0x5]:           loadval egx
6 [0x6]:           imov egx
7 [0x7]:           iload ebx
8 [0x8]:           return_val ebx
9 [0x9]:           ret

is_active(): std#bool
address: 1132
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 201 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #8
6 [0x6]:           iload cmt
7 [0x7]:           jne 16
8 [0x8]:           movl 0
9 [0x9]:           movn #5
11 [0xb]:           iload ebx
12 [0xc]:           not ebx, ebx
13 [0xd]:           movr cmt, ebx
14 [0xe]:           jne 16
15 [0xf]:           ldc cmt @ 5 (1)
16 [0x10]:           rstore cmt
17 [0x11]:           call @111 // std#bool.bool
18 [0x12]:           popobj2 
19 [0x13]:           returnobj
20 [0x14]:           ret

get_exit_code(): std#int
address: 1133
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 202 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           returnobj
4 [0x4]:           ret

get_exception_handler(): std.io#uncaught_exception_handler
address: 1134
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 203 - 0movl 0
1 [0x1]:           movn #12
3 [0x3]:           returnobj
4 [0x4]:           ret

get_main_fiber(): std.io.fiber#fiber
address: 1135
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 204 - 0movl 0
1 [0x1]:           movn #13
3 [0x3]:           returnobj
4 [0x4]:           ret

get_main_method(): *(object[]?)(std#int)
address: 1136
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 205 - 0movl 0
1 [0x1]:           movn #11
3 [0x3]:           iload ebx
4 [0x4]:           return_val ebx
5 [0x5]:           ret

operator==(std.io#thread): std#bool
address: 1137
file: /usr/include/sharp/0.3.0/std/io/thread.sharp
owner: std.io#thread
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 207 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 1
4 [0x4]:           movn #1
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           movl 0
9 [0x9]:           movn #1
11 [0xb]:           iload cx
12 [0xc]:           loadval ecx
13 [0xd]:           test cx, ecx
14 [0xe]:           rstore bmr
15 [0xf]:           call @111 // std#bool.bool
16 [0x10]:           popobj2 
17 [0x11]:           returnobj
18 [0x12]:           ret

static_init<thread_group>(): nil
address: 1138
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#thread_group
1 [0x1]:         movn #1
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#thread_group
9 [0x9]:         movn #1
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std.io#thread_group
15 [0xf]:         dup 
16 [0x10]:         new_class @std#string
18 [0x12]:         dup 
19 [0x13]:         newstr @88 (main)
20 [0x14]:         call @130 // std#string.string
21 [0x15]:         call @1140 // std.io#thread_group.thread_group
22 [0x16]:         movg @std.io#thread_group
23 [0x17]:         movn #0
25 [0x19]:         popobj
26 [0x1a]:         ret

init<thread_group>(): nil
address: 1139
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#list<std.io#thread>
2 [0x2]:         dup 
3 [0x3]:         call @1064 // std#list<std.io#thread>.list
4 [0x4]:         movl 0
5 [0x5]:         movn #0
7 [0x7]:         popobj
8 [0x8]:         new_class @std#string
10 [0xa]:         dup 
11 [0xb]:         call @176 // std#string.string
12 [0xc]:         movl 0
13 [0xd]:         movn #1
15 [0xf]:         popobj
16 [0x10]:         new_class @std#int
18 [0x12]:         dup 
19 [0x13]:         istore 0
21 [0x15]:         call @79 // std#int.init<int>
22 [0x16]:         movl 0
23 [0x17]:         movn #3
25 [0x19]:         popobj
26 [0x1a]:         ret

thread_group(std#string): nil
address: 1140
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread_group
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1138 // std.io#thread_group.static_init<thread_group>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1139 // std.io#thread_group.init<thread_group>
12 [0xc]: line: 6 - 12pushl 1
13 [0xd]:         movl 0
14 [0xe]:         movl 0
15 [0xf]:         movn #1
17 [0x11]:         popobj
18 [0x12]: line: 7 - 18movg @std.io#thread_priority
19 [0x13]:         movn #1
21 [0x15]:         pushobj
22 [0x16]:         movl 0
23 [0x17]:         movl 0
24 [0x18]:         movn #2
26 [0x1a]:         popobj
27 [0x1b]:         ret

thread_group(std#string, std.io#thread_priority): nil
address: 1141
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 0
fpOffset: 2
spOffset: 3
stackSize: 3
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#thread_group
4 [0x4]:         movn #1
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1138 // std.io#thread_group.static_init<thread_group>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1139 // std.io#thread_group.init<thread_group>
12 [0xc]: line: 11 - 12pushl 1
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #1
17 [0x11]:          popobj
18 [0x12]: line: 12 - 18pushl 2
19 [0x13]:          movl 0
20 [0x14]:          movl 0
21 [0x15]:          movn #2
23 [0x17]:          popobj
24 [0x18]:          ret

add(std.io#thread): nil
address: 1142
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 18 - 0movl 0
1 [0x1]:          _lck 
2 [0x2]: line: 19 - 2movl 0
3 [0x3]:          movn #0
5 [0x5]:          pushobj
6 [0x6]:          pushl 1
7 [0x7]:          call @1070 // std#list<std.io#thread>.indexof
8 [0x8]:          popl 2
9 [0x9]: line: 20 - 9pushl 2
10 [0xa]:          istore 0
12 [0xc]:          call @562 // std#number<_int32, std#int>.operator>=
13 [0xd]:          popobj2 
14 [0xe]:          movn #0
16 [0x10]:          iload cmt
17 [0x11]:          jne 27
18 [0x12]: line: 21 - 18movl 0
19 [0x13]:          movn #0
21 [0x15]:          pushobj
22 [0x16]:          pushl 2
23 [0x17]:          pushl 1
24 [0x18]:          call @1067 // std#list<std.io#thread>.put
25 [0x19]:          pop
26 [0x1a]:          jmp @41
27 [0x1b]: line: 23 - 27movl 0
28 [0x1c]:          movn #0
30 [0x1e]:          pushobj
31 [0x1f]:          pushl 1
32 [0x20]:          call @1069 // std#list<std.io#thread>.add
33 [0x21]: line: 24 - 33movl 0
34 [0x22]:          movn #3
36 [0x24]:          pushobj
37 [0x25]:          istore 1
39 [0x27]:          call @739 // std#number<_int32, std#int>.operator++
40 [0x28]:          pop
41 [0x29]:          movl 0
42 [0x2a]:          _ulck
43 [0x2b]:          ret

size(): std#int
address: 1143
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 29 - 0movl 0
1 [0x1]:          movn #3
3 [0x3]:          returnobj
4 [0x4]:          ret

get_priority(): std.io#thread_priority
address: 1144
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 31 - 0movl 0
1 [0x1]:          movn #2
3 [0x3]:          returnobj
4 [0x4]:          ret

remove(std#int): std#bool
address: 1145
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 3
fpOffset: 1
spOffset: 1
stackSize: 5
code:

0 [0x0]: line: 33 - 0movl 0
1 [0x1]:          _lck 
2 [0x2]: line: 34 - 2movl 0
3 [0x3]:          pushobj
4 [0x4]:          pushl 1
5 [0x5]:          call @1147 // std.io#thread_group.find
6 [0x6]:          popl 2
7 [0x7]: line: 35 - 7movl 2
8 [0x8]:          checknull
9 [0x9]:          movr ebx, cmt
10 [0xa]:          not ebx, ebx
11 [0xb]:          movr cmt, ebx
12 [0xc]:          jne 42
13 [0xd]: line: 36 - 13movl 0
14 [0xe]:          movn #0
16 [0x10]:          pushobj
17 [0x11]:          pushl 2
18 [0x12]:          call @1073 // std#list<std.io#thread>.remove
19 [0x13]: line: 37 - 19movl 0
20 [0x14]:          movn #3
22 [0x16]:          pushobj
23 [0x17]:          istore 1
25 [0x19]:          call @741 // std#number<_int32, std#int>.operator--
26 [0x1a]:          pop
27 [0x1b]: line: 38 - 27istore 1
29 [0x1d]:          ipopl 3
30 [0x1e]:          movl 0
31 [0x1f]:          _ulck
32 [0x20]:          movl 0
33 [0x21]:          _ulck
34 [0x22]:          new_class @std#bool
36 [0x24]:          dup 
37 [0x25]:          ipushl #3
38 [0x26]:          call @110 // std#bool.bool
39 [0x27]:          popobj2 
40 [0x28]:          returnobj
41 [0x29]:          ret
42 [0x2a]: line: 41 - 42istore 0
44 [0x2c]:          ipopl 4
45 [0x2d]:          movl 0
46 [0x2e]:          _ulck
47 [0x2f]:          new_class @std#bool
49 [0x31]:          dup 
50 [0x32]:          ipushl #4
51 [0x33]:          call @110 // std#bool.bool
52 [0x34]:          popobj2 
53 [0x35]:          returnobj
54 [0x36]:          ret
55 [0x37]:          movl 0
56 [0x38]:          _ulck

find(*(std.io#thread)(std#bool)): std.io#thread?
address: 1146
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 4
fpOffset: 1
spOffset: 1
stackSize: 6
code:

0 [0x0]: line: 50 - 0movl 0
1 [0x1]:          _lck 
2 [0x2]: line: 51 - 2new_class @std#int
4 [0x4]:          dup 
5 [0x5]:          istore 0
7 [0x7]:          call @79 // std#int.init<int>
8 [0x8]:          popl 2
9 [0x9]:          pushl 2
10 [0xa]:          movl 0
11 [0xb]:          movn #0
13 [0xd]:          pushobj
14 [0xe]:          call @1072 // std#list<std.io#thread>.size
15 [0xf]:          popobj2 
16 [0x10]:          movn #0
18 [0x12]:          iload egx
19 [0x13]:          rstore egx
20 [0x14]:          call @502 // std#number<_int32, std#int>.operator<
21 [0x15]:          popobj2 
22 [0x16]:          movn #0
24 [0x18]:          iload cmt
25 [0x19]:          jne 69
26 [0x1a]: line: 52 - 26movl 0
27 [0x1b]:          movn #0
29 [0x1d]:          pushobj
30 [0x1e]:          pushl 2
31 [0x1f]:          call @1066 // std#list<std.io#thread>.at
32 [0x20]:          popl 3
33 [0x21]: line: 53 - 33movl 3
34 [0x22]:          checknull
35 [0x23]:          movr ebx, cmt
36 [0x24]:          not ebx, ebx
37 [0x25]:          movr cmt, ebx
38 [0x26]:          jne 49
39 [0x27]:          loadl cx, fp+1
40 [0x28]:          pushl 3
41 [0x29]:          movr egx, cx
42 [0x2a]:          calld egx
43 [0x2b]:          popobj2 
44 [0x2c]:          movn #0
46 [0x2e]:          iload cmt
47 [0x2f]:          jne 49
48 [0x30]:          ldc cmt @ 5 (1)
49 [0x31]:          jne 63
50 [0x32]: line: 54 - 50pushl 3
51 [0x33]:          popl 4
52 [0x34]:          movl 0
53 [0x35]:          _ulck
54 [0x36]:          movl 0
55 [0x37]:          _ulck
56 [0x38]:          movl 0
57 [0x39]:          _ulck
58 [0x3a]:          movl 0
59 [0x3b]:          _ulck
60 [0x3c]:          movl 4
61 [0x3d]:          returnobj
62 [0x3e]:          ret
63 [0x3f]:          pushl 2
64 [0x40]:          istore 1
66 [0x42]:          call @739 // std#number<_int32, std#int>.operator++
67 [0x43]:          pop
68 [0x44]:          jmp @9
69 [0x45]: line: 58 - 69pushnull 
70 [0x46]:          popl 5
71 [0x47]:          movl 0
72 [0x48]:          _ulck
73 [0x49]:          movl 5
74 [0x4a]:          returnobj
75 [0x4b]:          ret
76 [0x4c]:          movl 0
77 [0x4d]:          _ulck

find(std#int): std.io#thread?
address: 1147
file: /usr/include/sharp/0.3.0/std/io/thread_group.sharp
owner: std.io#thread_group
frameStackOffset: 3
fpOffset: 1
spOffset: 1
stackSize: 5
code:

0 [0x0]: line: 63 - 0movl 0
1 [0x1]:          _lck 
2 [0x2]: line: 64 - 2new_class @std#int
4 [0x4]:          dup 
5 [0x5]:          istore 0
7 [0x7]:          call @79 // std#int.init<int>
8 [0x8]:          popl 2
9 [0x9]:          pushl 2
10 [0xa]:          movl 0
11 [0xb]:          movn #0
13 [0xd]:          pushobj
14 [0xe]:          call @1072 // std#list<std.io#thread>.size
15 [0xf]:          popobj2 
16 [0x10]:          movn #0
18 [0x12]:          iload egx
19 [0x13]:          rstore egx
20 [0x14]:          call @502 // std#number<_int32, std#int>.operator<
21 [0x15]:          popobj2 
22 [0x16]:          movn #0
24 [0x18]:          iload cmt
25 [0x19]:          jne 60
26 [0x1a]: line: 65 - 26pushl 1
27 [0x1b]:          movl 0
28 [0x1c]:          movn #0
30 [0x1e]:          pushobj
31 [0x1f]:          pushl 2
32 [0x20]:          call @1065 // std#list<std.io#thread>.operator[
33 [0x21]:          call @1123 // std.io#thread.get_id
34 [0x22]:          itest cmt
35 [0x23]:          jne 54
36 [0x24]: line: 66 - 36movl 0
37 [0x25]:          movn #0
39 [0x27]:          pushobj
40 [0x28]:          pushl 2
41 [0x29]:          call @1065 // std#list<std.io#thread>.operator[
42 [0x2a]:          popl 3
43 [0x2b]:          movl 0
44 [0x2c]:          _ulck
45 [0x2d]:          movl 0
46 [0x2e]:          _ulck
47 [0x2f]:          movl 0
48 [0x30]:          _ulck
49 [0x31]:          movl 0
50 [0x32]:          _ulck
51 [0x33]:          movl 3
52 [0x34]:          returnobj
53 [0x35]:          ret
54 [0x36]:          pushl 2
55 [0x37]:          istore 1
57 [0x39]:          call @739 // std#number<_int32, std#int>.operator++
58 [0x3a]:          pop
59 [0x3b]:          jmp @9
60 [0x3c]: line: 70 - 60pushnull 
61 [0x3d]:          popl 4
62 [0x3e]:          movl 0
63 [0x3f]:          _ulck
64 [0x40]:          movl 4
65 [0x41]:          returnobj
66 [0x42]:          ret
67 [0x43]:          movl 0
68 [0x44]:          _ulck

static_init<thread_result>(): nil
address: 1148
file: /usr/include/sharp/0.3.0/std/io/thread_result.sharp
owner: std.io#thread_result
frameStackOffset: 1
fpOffset: -1
spOffset: 0
stackSize: 1
code:

0 [0x0]:         movg @std.io#thread_result
1 [0x1]:         movn #17
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#thread_result
9 [0x9]:         movn #17
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]: line: 31 - 13istore 0
15 [0xf]:          ipopl 0
16 [0x10]: line: 32 - 16ldc adx @ 47 (17)
17 [0x11]:          new_classarray adx @ std.io#thread_result
19 [0x13]:          movg @std.io#thread_result
20 [0x14]:          movn #18
22 [0x16]:          popobj
23 [0x17]: line: 33 - 23movg @std.io#thread_result
24 [0x18]:          movn #0
26 [0x1a]:          pushobj
27 [0x1b]:          movg @std.io#thread_result
28 [0x1c]:          movn #18
30 [0x1e]:          pushobj
31 [0x1f]:          ipushl #0
32 [0x20]:          iaddl 1, fp@0
34 [0x22]:          loadval ebx
35 [0x23]:          movr adx, ebx
36 [0x24]:          popobj2 
37 [0x25]:          chklen adx
38 [0x26]:          movnd adx
39 [0x27]:          popobj
40 [0x28]: line: 34 - 40movg @std.io#thread_result
41 [0x29]:          movn #1
43 [0x2b]:          pushobj
44 [0x2c]:          movg @std.io#thread_result
45 [0x2d]:          movn #18
47 [0x2f]:          pushobj
48 [0x30]:          ipushl #0
49 [0x31]:          iaddl 1, fp@0
51 [0x33]:          loadval ebx
52 [0x34]:          movr adx, ebx
53 [0x35]:          popobj2 
54 [0x36]:          chklen adx
55 [0x37]:          movnd adx
56 [0x38]:          popobj
57 [0x39]: line: 35 - 57movg @std.io#thread_result
58 [0x3a]:          movn #2
60 [0x3c]:          pushobj
61 [0x3d]:          movg @std.io#thread_result
62 [0x3e]:          movn #18
64 [0x40]:          pushobj
65 [0x41]:          ipushl #0
66 [0x42]:          iaddl 1, fp@0
68 [0x44]:          loadval ebx
69 [0x45]:          movr adx, ebx
70 [0x46]:          popobj2 
71 [0x47]:          chklen adx
72 [0x48]:          movnd adx
73 [0x49]:          popobj
74 [0x4a]: line: 36 - 74movg @std.io#thread_result
75 [0x4b]:          movn #3
77 [0x4d]:          pushobj
78 [0x4e]:          movg @std.io#thread_result
79 [0x4f]:          movn #18
81 [0x51]:          pushobj
82 [0x52]:          ipushl #0
83 [0x53]:          iaddl 1, fp@0
85 [0x55]:          loadval ebx
86 [0x56]:          movr adx, ebx
87 [0x57]:          popobj2 
88 [0x58]:          chklen adx
89 [0x59]:          movnd adx
90 [0x5a]:          popobj
91 [0x5b]: line: 37 - 91movg @std.io#thread_result
92 [0x5c]:          movn #4
94 [0x5e]:          pushobj
95 [0x5f]:          movg @std.io#thread_result
96 [0x60]:          movn #18
98 [0x62]:          pushobj
99 [0x63]:          ipushl #0
100 [0x64]:          iaddl 1, fp@0
102 [0x66]:          loadval ebx
103 [0x67]:          movr adx, ebx
104 [0x68]:          popobj2 
105 [0x69]:          chklen adx
106 [0x6a]:          movnd adx
107 [0x6b]:          popobj
108 [0x6c]: line: 38 - 108movg @std.io#thread_result
109 [0x6d]:          movn #5
111 [0x6f]:          pushobj
112 [0x70]:          movg @std.io#thread_result
113 [0x71]:          movn #18
115 [0x73]:          pushobj
116 [0x74]:          ipushl #0
117 [0x75]:          iaddl 1, fp@0
119 [0x77]:          loadval ebx
120 [0x78]:          movr adx, ebx
121 [0x79]:          popobj2 
122 [0x7a]:          chklen adx
123 [0x7b]:          movnd adx
124 [0x7c]:          popobj
125 [0x7d]: line: 39 - 125movg @std.io#thread_result
126 [0x7e]:          movn #6
128 [0x80]:          pushobj
129 [0x81]:          movg @std.io#thread_result
130 [0x82]:          movn #18
132 [0x84]:          pushobj
133 [0x85]:          ipushl #0
134 [0x86]:          iaddl 1, fp@0
136 [0x88]:          loadval ebx
137 [0x89]:          movr adx, ebx
138 [0x8a]:          popobj2 
139 [0x8b]:          chklen adx
140 [0x8c]:          movnd adx
141 [0x8d]:          popobj
142 [0x8e]: line: 40 - 142movg @std.io#thread_result
143 [0x8f]:          movn #7
145 [0x91]:          pushobj
146 [0x92]:          movg @std.io#thread_result
147 [0x93]:          movn #18
149 [0x95]:          pushobj
150 [0x96]:          ipushl #0
151 [0x97]:          iaddl 1, fp@0
153 [0x99]:          loadval ebx
154 [0x9a]:          movr adx, ebx
155 [0x9b]:          popobj2 
156 [0x9c]:          chklen adx
157 [0x9d]:          movnd adx
158 [0x9e]:          popobj
159 [0x9f]: line: 41 - 159movg @std.io#thread_result
160 [0xa0]:          movn #8
162 [0xa2]:          pushobj
163 [0xa3]:          movg @std.io#thread_result
164 [0xa4]:          movn #18
166 [0xa6]:          pushobj
167 [0xa7]:          ipushl #0
168 [0xa8]:          iaddl 1, fp@0
170 [0xaa]:          loadval ebx
171 [0xab]:          movr adx, ebx
172 [0xac]:          popobj2 
173 [0xad]:          chklen adx
174 [0xae]:          movnd adx
175 [0xaf]:          popobj
176 [0xb0]: line: 42 - 176movg @std.io#thread_result
177 [0xb1]:          movn #9
179 [0xb3]:          pushobj
180 [0xb4]:          movg @std.io#thread_result
181 [0xb5]:          movn #18
183 [0xb7]:          pushobj
184 [0xb8]:          ipushl #0
185 [0xb9]:          iaddl 1, fp@0
187 [0xbb]:          loadval ebx
188 [0xbc]:          movr adx, ebx
189 [0xbd]:          popobj2 
190 [0xbe]:          chklen adx
191 [0xbf]:          movnd adx
192 [0xc0]:          popobj
193 [0xc1]: line: 43 - 193movg @std.io#thread_result
194 [0xc2]:          movn #10
196 [0xc4]:          pushobj
197 [0xc5]:          movg @std.io#thread_result
198 [0xc6]:          movn #18
200 [0xc8]:          pushobj
201 [0xc9]:          ipushl #0
202 [0xca]:          iaddl 1, fp@0
204 [0xcc]:          loadval ebx
205 [0xcd]:          movr adx, ebx
206 [0xce]:          popobj2 
207 [0xcf]:          chklen adx
208 [0xd0]:          movnd adx
209 [0xd1]:          popobj
210 [0xd2]: line: 44 - 210movg @std.io#thread_result
211 [0xd3]:          movn #11
213 [0xd5]:          pushobj
214 [0xd6]:          movg @std.io#thread_result
215 [0xd7]:          movn #18
217 [0xd9]:          pushobj
218 [0xda]:          ipushl #0
219 [0xdb]:          iaddl 1, fp@0
221 [0xdd]:          loadval ebx
222 [0xde]:          movr adx, ebx
223 [0xdf]:          popobj2 
224 [0xe0]:          chklen adx
225 [0xe1]:          movnd adx
226 [0xe2]:          popobj
227 [0xe3]: line: 45 - 227movg @std.io#thread_result
228 [0xe4]:          movn #12
230 [0xe6]:          pushobj
231 [0xe7]:          movg @std.io#thread_result
232 [0xe8]:          movn #18
234 [0xea]:          pushobj
235 [0xeb]:          ipushl #0
236 [0xec]:          iaddl 1, fp@0
238 [0xee]:          loadval ebx
239 [0xef]:          movr adx, ebx
240 [0xf0]:          popobj2 
241 [0xf1]:          chklen adx
242 [0xf2]:          movnd adx
243 [0xf3]:          popobj
244 [0xf4]: line: 46 - 244movg @std.io#thread_result
245 [0xf5]:          movn #13
247 [0xf7]:          pushobj
248 [0xf8]:          movg @std.io#thread_result
249 [0xf9]:          movn #18
251 [0xfb]:          pushobj
252 [0xfc]:          ipushl #0
253 [0xfd]:          iaddl 1, fp@0
255 [0xff]:          loadval ebx
256 [0x100]:          movr adx, ebx
257 [0x101]:          popobj2 
258 [0x102]:          chklen adx
259 [0x103]:          movnd adx
260 [0x104]:          popobj
261 [0x105]: line: 47 - 261movg @std.io#thread_result
262 [0x106]:          movn #14
264 [0x108]:          pushobj
265 [0x109]:          movg @std.io#thread_result
266 [0x10a]:          movn #18
268 [0x10c]:          pushobj
269 [0x10d]:          ipushl #0
270 [0x10e]:          iaddl 1, fp@0
272 [0x110]:          loadval ebx
273 [0x111]:          movr adx, ebx
274 [0x112]:          popobj2 
275 [0x113]:          chklen adx
276 [0x114]:          movnd adx
277 [0x115]:          popobj
278 [0x116]: line: 48 - 278movg @std.io#thread_result
279 [0x117]:          movn #15
281 [0x119]:          pushobj
282 [0x11a]:          movg @std.io#thread_result
283 [0x11b]:          movn #18
285 [0x11d]:          pushobj
286 [0x11e]:          ipushl #0
287 [0x11f]:          iaddl 1, fp@0
289 [0x121]:          loadval ebx
290 [0x122]:          movr adx, ebx
291 [0x123]:          popobj2 
292 [0x124]:          chklen adx
293 [0x125]:          movnd adx
294 [0x126]:          popobj
295 [0x127]: line: 49 - 295movg @std.io#thread_result
296 [0x128]:          movn #16
298 [0x12a]:          pushobj
299 [0x12b]:          movg @std.io#thread_result
300 [0x12c]:          movn #18
302 [0x12e]:          pushobj
303 [0x12f]:          ipushl #0
304 [0x130]:          iaddl 1, fp@0
306 [0x132]:          loadval ebx
307 [0x133]:          movr adx, ebx
308 [0x134]:          popobj2 
309 [0x135]:          chklen adx
310 [0x136]:          movnd adx
311 [0x137]:          popobj
312 [0x138]:          ret

init<thread_result>(): nil
address: 1149
file: /usr/include/sharp/0.3.0/std/io/thread_result.sharp
owner: std.io#thread_result
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

thread_result(): nil
address: 1150
file: /usr/include/sharp/0.3.0/std/io/thread_result.sharp
owner: std.io#thread_result
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @280 // std#_enum_._enum_
3 [0x3]:         movg @std.io#thread_result
4 [0x4]:         movn #17
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1148 // std.io#thread_result.static_init<thread_result>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1149 // std.io#thread_result.init<thread_result>
12 [0xc]:         ret

at(std#int): std.io#thread_result
address: 1151
file: /usr/include/sharp/0.3.0/std/io/thread_kernel.sharp
owner: std.io#thread_result
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 53 - 0pushl 0
1 [0x1]:          movg @std.io#thread_result
2 [0x2]:          movn #16
4 [0x4]:          movn #1
6 [0x6]:          iload egx
7 [0x7]:          rstore egx
8 [0x8]:          call @370 // std#number<_int32, std#int>.operator==
9 [0x9]:          popobj2 
10 [0xa]:          movn #0
12 [0xc]:          iload cmt
13 [0xd]:          jne 33
14 [0xe]: line: 54 - 14movg @std.io#thread_result
15 [0xf]:          movn #18
17 [0x11]:          pushobj
18 [0x12]:          istore 1
20 [0x14]:          movg @std.io#thread_result
21 [0x15]:          movn #18
23 [0x17]:          sizeof ebx
24 [0x18]:          movr cx, ebx
25 [0x19]:          loadval ecx
26 [0x1a]:          sub cx, ecx -> bmr
27 [0x1b]:          movr adx, bmr
28 [0x1c]:          popobj2 
29 [0x1d]:          chklen adx
30 [0x1e]:          movnd adx
31 [0x1f]:          returnobj
32 [0x20]:          ret
33 [0x21]: line: 56 - 33movg @std.io#thread_result
34 [0x22]:          movn #18
36 [0x24]:          pushobj
37 [0x25]:          movl 0
38 [0x26]:          movn #0
40 [0x28]:          iload adx
41 [0x29]:          popobj2 
42 [0x2a]:          chklen adx
43 [0x2b]:          movnd adx
44 [0x2c]:          returnobj
45 [0x2d]:          ret

static_init<thread_priority>(): nil
address: 1152
file: /usr/include/sharp/0.3.0/std/io/thread_priority.sharp
owner: std.io#thread_priority
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#thread_priority
1 [0x1]:         movn #3
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#thread_priority
9 [0x9]:         movn #3
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<thread_priority>(): nil
address: 1153
file: /usr/include/sharp/0.3.0/std/io/thread_priority.sharp
owner: std.io#thread_priority
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

thread_priority(): nil
address: 1154
file: /usr/include/sharp/0.3.0/std/io/thread_priority.sharp
owner: std.io#thread_priority
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

static_init<buffer_type>(): nil
address: 1155
file: /usr/include/sharp/0.3.0/std/io/buffer_type.sharp
owner: std.io#buffer_type
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#buffer_type
1 [0x1]:         movn #4
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#buffer_type
9 [0x9]:         movn #4
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<buffer_type>(): nil
address: 1156
file: /usr/include/sharp/0.3.0/std/io/buffer_type.sharp
owner: std.io#buffer_type
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

buffer_type(): nil
address: 1157
file: /usr/include/sharp/0.3.0/std/io/buffer_type.sharp
owner: std.io#buffer_type
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

uncaught_exception(std#throwable): nil
address: 1158
file: /usr/include/sharp/0.3.0/std/io/uncaught_exception_handler.sharp
owner: std.io#uncaught_exception_handler
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


static_init<channel<std.io.coroutines#job>>(): nil
address: 1159
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#channel<std.io.coroutines#job>
1 [0x1]:         movn #2
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#channel<std.io.coroutines#job>
9 [0x9]:         movn #2
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#int
15 [0xf]:         dup 
16 [0x10]:         istore 10
18 [0x12]:         call @79 // std#int.init<int>
19 [0x13]:         movg @std.io#channel<std.io.coroutines#job>
20 [0x14]:         movn #0
22 [0x16]:         popobj
23 [0x17]:         new_class @std#int
25 [0x19]:         dup 
26 [0x1a]:         istore 0
28 [0x1c]:         call @79 // std#int.init<int>
29 [0x1d]:         movg @std.io#channel<std.io.coroutines#job>
30 [0x1e]:         movn #1
32 [0x20]:         popobj
33 [0x21]:         ret

init<channel<std.io.coroutines#job>>(): nil
address: 1160
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#int
2 [0x2]:         dup 
3 [0x3]:         istore 0
5 [0x5]:         call @79 // std#int.init<int>
6 [0x6]:         movl 0
7 [0x7]:         movn #2
9 [0x9]:         popobj
10 [0xa]:         movg @std.io#channel<std.io.coroutines#job>.channel_state
11 [0xb]:         movn #0
13 [0xd]:         pushobj
14 [0xe]:         movl 0
15 [0xf]:         movn #3
17 [0x11]:         popobj
18 [0x12]:         ret

channel(std.io#buffer_type): nil
address: 1161
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#channel<std.io.coroutines#job>
4 [0x4]:         movn #2
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1159 // std.io#channel<std.io.coroutines#job>.static_init<channel<std.io.coroutines#job>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1160 // std.io#channel<std.io.coroutines#job>.init<channel<std.io.coroutines#job>>
12 [0xc]: line: 56 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          new_class @std#int
16 [0x10]:          dup 
17 [0x11]:          istore 1
19 [0x13]:          call @72 // std#int.int
20 [0x14]:          call @1163 // std.io#channel<std.io.coroutines#job>.add_filters
21 [0x15]: line: 57 - 21movl 0
22 [0x16]:          pushobj
23 [0x17]:          pushl 1
24 [0x18]:          call @1162 // std.io#channel<std.io.coroutines#job>.set_buff_type
25 [0x19]:          ret

set_buff_type(std.io#buffer_type): nil
address: 1162
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 67 - 0pushl 1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #1
5 [0x5]:          popobj
6 [0x6]: line: 68 - 6pushl 1
7 [0x7]:          popl 2
8 [0x8]:          movg @std.io#buffer_type
9 [0x9]:          movn #0
11 [0xb]:          pushobj
12 [0xc]:          pushl 2
13 [0xd]:          itest cmt
14 [0xe]:          je 22
15 [0xf]:          movg @std.io#buffer_type
16 [0x10]:          movn #1
18 [0x12]:          pushobj
19 [0x13]:          pushl 2
20 [0x14]:          itest cmt
21 [0x15]:          jne 31
22 [0x16]: line: 70 - 22movl 0
23 [0x17]:          movn #2
25 [0x19]:          pushobj
26 [0x1a]:          istore 1
28 [0x1c]:          call @732 // std#number<_int32, std#int>.operator=
29 [0x1d]:          pop
30 [0x1e]:          jmp @62
31 [0x1f]:          movg @std.io#buffer_type
32 [0x20]:          movn #2
34 [0x22]:          pushobj
35 [0x23]:          pushl 2
36 [0x24]:          itest cmt
37 [0x25]:          jne 47
38 [0x26]: line: 73 - 38movl 0
39 [0x27]:          movn #2
41 [0x29]:          pushobj
42 [0x2a]:          istore 4294967295
44 [0x2c]:          call @732 // std#number<_int32, std#int>.operator=
45 [0x2d]:          pop
46 [0x2e]:          jmp @62
47 [0x2f]:          movg @std.io#buffer_type
48 [0x30]:          movn #3
50 [0x32]:          pushobj
51 [0x33]:          pushl 2
52 [0x34]:          itest cmt
53 [0x35]:          jne 62
54 [0x36]: line: 76 - 54movg @std.io#channel<std.io.coroutines#job>
55 [0x37]:          movn #0
57 [0x39]:          pushobj
58 [0x3a]:          movl 0
59 [0x3b]:          movn #2
61 [0x3d]:          popobj
62 [0x3e]:          ret

add_filters(std#int): nil
address: 1163
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 82 - 0istore 0
2 [0x2]:          movl 1
3 [0x3]:          movn #0
5 [0x5]:          iload cx
6 [0x6]:          loadval ecx
7 [0x7]:          lte cx, ecx
8 [0x8]:          jne 19
9 [0x9]: line: 83 - 9new_class @std#illegal_state_exception
11 [0xb]:          dup 
12 [0xc]:          new_class @std#string
14 [0xe]:          dup 
15 [0xf]:          newstr @89 (channels must have at least 1 filter)
16 [0x10]:          call @130 // std#string.string
17 [0x11]:          call @207 // std#illegal_state_exception.illegal_state_exception
18 [0x12]:          throw 
19 [0x13]: line: 86 - 19new_class @std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>
21 [0x15]:          dup 
22 [0x16]:          pushl 1
23 [0x17]:          call @1017 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.list
24 [0x18]:          movl 0
25 [0x19]:          movn #0
27 [0x1b]:          popobj
28 [0x1c]: line: 87 - 28new_class @std#int
30 [0x1e]:          dup 
31 [0x1f]:          istore 0
33 [0x21]:          call @79 // std#int.init<int>
34 [0x22]:          popl 2
35 [0x23]:          pushl 2
36 [0x24]:          movl 1
37 [0x25]:          movn #0
39 [0x27]:          iload egx
40 [0x28]:          rstore egx
41 [0x29]:          call @502 // std#number<_int32, std#int>.operator<
42 [0x2a]:          popobj2 
43 [0x2b]:          movn #0
45 [0x2d]:          iload cmt
46 [0x2e]:          jne 62
47 [0x2f]: line: 88 - 47movl 0
48 [0x30]:          movn #0
50 [0x32]:          pushobj
51 [0x33]:          new_class @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
53 [0x35]:          dup 
54 [0x36]:          call @1183 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.filter<std.io.coroutines#job>
55 [0x37]:          call @1020 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.add
56 [0x38]:          pushl 2
57 [0x39]:          istore 1
59 [0x3b]:          call @739 // std#number<_int32, std#int>.operator++
60 [0x3c]:          pop
61 [0x3d]:          jmp @35
62 [0x3e]:          ret

send(std.io.coroutines#job): nil
address: 1164
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 101 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           pushl 1
3 [0x3]:           movg @std.io#channel<std.io.coroutines#job>
4 [0x4]:           movn #1
6 [0x6]:           pushobj
7 [0x7]:           call @1165 // std.io#channel<std.io.coroutines#job>.send
8 [0x8]:           ret

send(std.io.coroutines#job, std#int): nil
address: 1165
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 2
spOffset: 3
stackSize: 3
code:

0 [0x0]: line: 105 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           pushobj
4 [0x4]:           call @1021 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.size
5 [0x5]:           popobj2 
6 [0x6]:           movn #0
8 [0x8]:           iload egx
9 [0x9]:           rstore egx
10 [0xa]:           movl 2
11 [0xb]:           movn #0
13 [0xd]:           iload cx
14 [0xe]:           loadval ecx
15 [0xf]:           gte cx, ecx
16 [0x10]:           je 25
17 [0x11]:           istore 0
19 [0x13]:           movl 2
20 [0x14]:           movn #0
22 [0x16]:           iload cx
23 [0x17]:           loadval ecx
24 [0x18]:           lt cx, ecx
25 [0x19]:           jne 46
26 [0x1a]: line: 106 - 26new_class @std#out_of_bounds_exception
28 [0x1c]:           dup 
29 [0x1d]:           new_class @std#string
31 [0x1f]:           dup 
32 [0x20]:           newstr @90 (invalid send on filter ()
33 [0x21]:           call @130 // std#string.string
34 [0x22]:           pushl 2
35 [0x23]:           call @145 // std#string.operator+
36 [0x24]:           newstr @91 () when max filter is )
37 [0x25]:           call @143 // std#string.operator+
38 [0x26]:           movl 0
39 [0x27]:           movn #0
41 [0x29]:           pushobj
42 [0x2a]:           call @1021 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.size
43 [0x2b]:           call @145 // std#string.operator+
44 [0x2c]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
45 [0x2d]:           throw 
46 [0x2e]: line: 109 - 46movl 0
47 [0x2f]:           movn #0
49 [0x31]:           pushobj
50 [0x32]:           pushl 2
51 [0x33]:           call @1018 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.operator[
52 [0x34]:           pushl 1
53 [0x35]:           movl 0
54 [0x36]:           pushobj
55 [0x37]:           call @1182 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.send
56 [0x38]:           ret

read_next(std#int): std#list<std.io.coroutines#job>
address: 1166
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 4
fpOffset: 1
spOffset: 1
stackSize: 6
code:

0 [0x0]: line: 156 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           pushobj
4 [0x4]:           call @1021 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.size
5 [0x5]:           popobj2 
6 [0x6]:           movn #0
8 [0x8]:           iload egx
9 [0x9]:           rstore egx
10 [0xa]:           movl 1
11 [0xb]:           movn #0
13 [0xd]:           iload cx
14 [0xe]:           loadval ecx
15 [0xf]:           gte cx, ecx
16 [0x10]:           je 25
17 [0x11]:           istore 0
19 [0x13]:           movl 1
20 [0x14]:           movn #0
22 [0x16]:           iload cx
23 [0x17]:           loadval ecx
24 [0x18]:           lt cx, ecx
25 [0x19]:           jne 46
26 [0x1a]: line: 157 - 26new_class @std#out_of_bounds_exception
28 [0x1c]:           dup 
29 [0x1d]:           new_class @std#string
31 [0x1f]:           dup 
32 [0x20]:           newstr @92 (invalid read on filter ()
33 [0x21]:           call @130 // std#string.string
34 [0x22]:           pushl 1
35 [0x23]:           call @145 // std#string.operator+
36 [0x24]:           newstr @91 () when max filter is )
37 [0x25]:           call @143 // std#string.operator+
38 [0x26]:           movl 0
39 [0x27]:           movn #0
41 [0x29]:           pushobj
42 [0x2a]:           call @1021 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.size
43 [0x2b]:           call @145 // std#string.operator+
44 [0x2c]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
45 [0x2d]:           throw 
46 [0x2e]: line: 160 - 46movl 0
47 [0x2f]:           movn #0
49 [0x31]:           pushobj
50 [0x32]:           new_class @std#int
52 [0x34]:           dup 
53 [0x35]:           movl 1
54 [0x36]:           movn #0
56 [0x38]:           iload egx
57 [0x39]:           rstore egx
58 [0x3a]:           call @72 // std#int.int
59 [0x3b]:           call @1018 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.operator[
60 [0x3c]:           popl 2
61 [0x3d]: line: 161 - 61pushl 2
62 [0x3e]:           call @1180 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.avail_data
63 [0x3f]:           istore 0
65 [0x41]:           call @953 // std#number<_int8, std#bool>.operator==
66 [0x42]:           popobj2 
67 [0x43]:           movn #0
69 [0x45]:           iload cmt
70 [0x46]:           jne 78
71 [0x47]: line: 162 - 71new_class @std#list<std.io.coroutines#job>
73 [0x49]:           dup 
74 [0x4a]:           call @1008 // std#list<std.io.coroutines#job>.list
75 [0x4b]:           popobj2 
76 [0x4c]:           returnobj
77 [0x4d]:           ret
78 [0x4e]: line: 165 - 78new_class @std#list<std.io.coroutines#job>
80 [0x50]:           dup 
81 [0x51]:           call @1008 // std#list<std.io.coroutines#job>.list
82 [0x52]:           popl 3
83 [0x53]: line: 166 - 83movl 2
84 [0x54]:           _lck 
85 [0x55]: line: 167 - 85movg @std.io#channel<std.io.coroutines#job>.channel_state
86 [0x56]: line: 168 - 85movn #1
88 [0x58]:           pushobj
89 [0x59]:           movl 0
90 [0x5a]:           movn #3
92 [0x5c]:           pushobj
93 [0x5d]:           itest cmt
94 [0x5e]:           jne 108
95 [0x5f]:           pushl 3
96 [0x60]:           popl 4
97 [0x61]:           movl 2
98 [0x62]:           _ulck
99 [0x63]:           movl 2
100 [0x64]:           _ulck
101 [0x65]:           movl 2
102 [0x66]:           _ulck
103 [0x67]:           movl 2
104 [0x68]:           _ulck
105 [0x69]:           movl 4
106 [0x6a]:           returnobj
107 [0x6b]:           ret
108 [0x6c]: line: 170 - 108pushl 2
109 [0x6d]:           call @1180 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.avail_data
110 [0x6e]:           popobj2 
111 [0x6f]:           movn #0
113 [0x71]:           iload cmt
114 [0x72]:           jne 122
115 [0x73]: line: 171 - 115pushl 3
116 [0x74]:           pushl 2
117 [0x75]:           movl 0
118 [0x76]:           pushobj
119 [0x77]:           call @1181 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.read
120 [0x78]:           call @1011 // std#list<std.io.coroutines#job>.add
121 [0x79]:           jmp @135
122 [0x7a]: line: 173 - 122pushl 3
123 [0x7b]:           popl 5
124 [0x7c]:           movl 2
125 [0x7d]:           _ulck
126 [0x7e]:           movl 2
127 [0x7f]:           _ulck
128 [0x80]:           movl 2
129 [0x81]:           _ulck
130 [0x82]:           movl 2
131 [0x83]:           _ulck
132 [0x84]:           movl 5
133 [0x85]:           returnobj
134 [0x86]:           ret
135 [0x87]:           jmp @85
136 [0x88]:           movl 2
137 [0x89]:           _ulck
138 [0x8a]: line: 178 - 138new_class @std#list<std.io.coroutines#job>
140 [0x8c]:           dup 
141 [0x8d]:           call @1008 // std#list<std.io.coroutines#job>.list
142 [0x8e]:           popobj2 
143 [0x8f]:           returnobj
144 [0x90]:           ret

read_all(std#int): std#list<std.io.coroutines#job>
address: 1167
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 182 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           pushobj
4 [0x4]:           call @1021 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.size
5 [0x5]:           popobj2 
6 [0x6]:           movn #0
8 [0x8]:           iload egx
9 [0x9]:           rstore egx
10 [0xa]:           movl 1
11 [0xb]:           movn #0
13 [0xd]:           iload cx
14 [0xe]:           loadval ecx
15 [0xf]:           gte cx, ecx
16 [0x10]:           je 25
17 [0x11]:           istore 0
19 [0x13]:           movl 1
20 [0x14]:           movn #0
22 [0x16]:           iload cx
23 [0x17]:           loadval ecx
24 [0x18]:           lt cx, ecx
25 [0x19]:           jne 46
26 [0x1a]: line: 183 - 26new_class @std#out_of_bounds_exception
28 [0x1c]:           dup 
29 [0x1d]:           new_class @std#string
31 [0x1f]:           dup 
32 [0x20]:           newstr @92 (invalid read on filter ()
33 [0x21]:           call @130 // std#string.string
34 [0x22]:           pushl 1
35 [0x23]:           call @145 // std#string.operator+
36 [0x24]:           newstr @91 () when max filter is )
37 [0x25]:           call @143 // std#string.operator+
38 [0x26]:           movl 0
39 [0x27]:           movn #0
41 [0x29]:           pushobj
42 [0x2a]:           call @1021 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.size
43 [0x2b]:           call @145 // std#string.operator+
44 [0x2c]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
45 [0x2d]:           throw 
46 [0x2e]: line: 186 - 46new_class @std#list<std.io.coroutines#job>
48 [0x30]:           dup 
49 [0x31]:           call @1008 // std#list<std.io.coroutines#job>.list
50 [0x32]:           popl 2
51 [0x33]: line: 187 - 51movl 0
52 [0x34]:           movn #0
54 [0x36]:           pushobj
55 [0x37]:           new_class @std#int
57 [0x39]:           dup 
58 [0x3a]:           movl 1
59 [0x3b]:           movn #0
61 [0x3d]:           iload egx
62 [0x3e]:           rstore egx
63 [0x3f]:           call @72 // std#int.int
64 [0x40]:           call @1018 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.operator[
65 [0x41]:           popl 3
66 [0x42]: line: 189 - 66pushl 3
67 [0x43]: line: 190 - 66movl 0
68 [0x44]:           pushobj
69 [0x45]:           call @1179 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.wait_for_data_or_close
70 [0x46]: line: 192 - 70movg @std.io#channel<std.io.coroutines#job>.channel_state
71 [0x47]:           movn #0
73 [0x49]:           pushobj
74 [0x4a]:           movl 0
75 [0x4b]:           movn #3
77 [0x4d]:           pushobj
78 [0x4e]:           itest cmt
79 [0x4f]:           jne 88
80 [0x50]:           pushl 3
81 [0x51]:           call @1180 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.avail_data
82 [0x52]:           popobj2 
83 [0x53]:           movn #0
85 [0x55]:           iload cmt
86 [0x56]:           jne 88
87 [0x57]:           ldc cmt @ 5 (1)
88 [0x58]:           jne 95
89 [0x59]: line: 193 - 89pushl 2
90 [0x5a]:           pushl 3
91 [0x5b]:           movl 0
92 [0x5c]:           pushobj
93 [0x5d]:           call @1181 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.read
94 [0x5e]:           call @1011 // std#list<std.io.coroutines#job>.add
95 [0x5f]:           jmp @66
96 [0x60]: line: 197 - 96new_class @std#list<std.io.coroutines#job>
98 [0x62]:           dup 
99 [0x63]:           call @1008 // std#list<std.io.coroutines#job>.list
100 [0x64]:           popobj2 
101 [0x65]:           returnobj
102 [0x66]:           ret

get_elements(): std.io.coroutines#job[]?
address: 1168
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 218 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           movg @std.io#channel<std.io.coroutines#job>
3 [0x3]:           movn #1
5 [0x5]:           pushobj
6 [0x6]:           call @1167 // std.io#channel<std.io.coroutines#job>.read_all
7 [0x7]:           call @1009 // std#list<std.io.coroutines#job>.get_elements
8 [0x8]:           popobj2 
9 [0x9]:           returnobj
10 [0xa]:           ret

avail_data(std#int): std#bool
address: 1169
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 222 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           pushobj
4 [0x4]:           call @1021 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.size
5 [0x5]:           popobj2 
6 [0x6]:           movn #0
8 [0x8]:           iload egx
9 [0x9]:           rstore egx
10 [0xa]:           movl 1
11 [0xb]:           movn #0
13 [0xd]:           iload cx
14 [0xe]:           loadval ecx
15 [0xf]:           gte cx, ecx
16 [0x10]:           je 25
17 [0x11]:           istore 0
19 [0x13]:           movl 1
20 [0x14]:           movn #0
22 [0x16]:           iload cx
23 [0x17]:           loadval ecx
24 [0x18]:           lt cx, ecx
25 [0x19]:           jne 46
26 [0x1a]: line: 223 - 26new_class @std#out_of_bounds_exception
28 [0x1c]:           dup 
29 [0x1d]:           new_class @std#string
31 [0x1f]:           dup 
32 [0x20]:           newstr @92 (invalid read on filter ()
33 [0x21]:           call @130 // std#string.string
34 [0x22]:           pushl 1
35 [0x23]:           call @145 // std#string.operator+
36 [0x24]:           newstr @91 () when max filter is )
37 [0x25]:           call @143 // std#string.operator+
38 [0x26]:           movl 0
39 [0x27]:           movn #0
41 [0x29]:           pushobj
42 [0x2a]:           call @1021 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.size
43 [0x2b]:           call @145 // std#string.operator+
44 [0x2c]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
45 [0x2d]:           throw 
46 [0x2e]: line: 226 - 46movl 0
47 [0x2f]:           movn #0
49 [0x31]:           pushobj
50 [0x32]:           new_class @std#int
52 [0x34]:           dup 
53 [0x35]:           movl 1
54 [0x36]:           movn #0
56 [0x38]:           iload egx
57 [0x39]:           rstore egx
58 [0x3a]:           call @72 // std#int.int
59 [0x3b]:           call @1018 // std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.operator[
60 [0x3c]:           popl 2
61 [0x3d]: line: 227 - 61pushl 2
62 [0x3e]:           call @1180 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.avail_data
63 [0x3f]:           popobj2 
64 [0x40]:           returnobj
65 [0x41]:           ret

get_state(): std.io#channel<std.io.coroutines#job>.channel_state
address: 1170
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 235 - 0movl 0
1 [0x1]:           movn #3
3 [0x3]:           returnobj
4 [0x4]:           ret

static_init<channel_state>(): nil
address: 1171
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.channel_state
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#channel<std.io.coroutines#job>.channel_state
1 [0x1]:         movn #2
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#channel<std.io.coroutines#job>.channel_state
9 [0x9]:         movn #2
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<channel_state>(): nil
address: 1172
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.channel_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

channel_state(): nil
address: 1173
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.channel_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

static_init<filter<std.io.coroutines#job>>(): nil
address: 1174
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<filter<std.io.coroutines#job>>(): nil
address: 1175
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

filo(): std.io.coroutines#job?
address: 1176
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 245 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           checknull
4 [0x4]:           je 7
5 [0x5]:           movn #0
7 [0x7]:           pushobj
8 [0x8]:           popl 1
9 [0x9]: line: 246 - 9movl 0
10 [0xa]:           movn #0
12 [0xc]:           checknull
13 [0xd]:           je 16
14 [0xe]:           movn #1
16 [0x10]:           pushobj
17 [0x11]:           movl 0
18 [0x12]:           movn #0
20 [0x14]:           popobj
21 [0x15]: line: 247 - 21movl 0
22 [0x16]:           movn #0
24 [0x18]:           checknull
25 [0x19]:           jne 31
26 [0x1a]: line: 248 - 26pushnull 
27 [0x1b]:           movl 0
28 [0x1c]:           movn #1
30 [0x1e]:           popobj
31 [0x1f]: line: 249 - 31movl 1
32 [0x20]:           returnobj
33 [0x21]:           ret

wait_for_data(): nil
address: 1177
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 253 - 0istore 0
2 [0x2]:           movl 0
3 [0x3]:           movn #2
5 [0x5]:           iload cx
6 [0x6]:           loadval ecx
7 [0x7]:           test cx, ecx
8 [0x8]:           movr cmt, bmr
9 [0x9]:           jne 18
10 [0xa]:           new_class @std#long
12 [0xc]:           dup 
13 [0xd]:           istore 0
15 [0xf]:           call @56 // std#long.long
16 [0x10]:           call @1272 // std.io.fiber#__srt_global.delay
17 [0x11]:           jmp @0
18 [0x12]:           ret

wait_for_consume(): nil
address: 1178
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 257 - 0istore 0
2 [0x2]:           movl 0
3 [0x3]:           movn #2
5 [0x5]:           iload cx
6 [0x6]:           loadval ecx
7 [0x7]:           tne cx, ecx
8 [0x8]:           movr cmt, bmr
9 [0x9]:           jne 18
10 [0xa]:           new_class @std#long
12 [0xc]:           dup 
13 [0xd]:           istore 0
15 [0xf]:           call @56 // std#long.long
16 [0x10]:           call @1272 // std.io.fiber#__srt_global.delay
17 [0x11]:           jmp @0
18 [0x12]:           ret

wait_for_data_or_close(std.io#channel<std.io.coroutines#job>): nil
address: 1179
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 261 - 0istore 0
2 [0x2]:           movl 0
3 [0x3]:           movn #2
5 [0x5]:           iload cx
6 [0x6]:           loadval ecx
7 [0x7]:           test cx, ecx
8 [0x8]:           movr cmt, bmr
9 [0x9]:           jne 37
10 [0xa]: line: 262 - 10istore 0
12 [0xc]:           movl 0
13 [0xd]:           movn #2
15 [0xf]:           iload cx
16 [0x10]:           loadval ecx
17 [0x11]:           test cx, ecx
18 [0x12]:           movr cmt, bmr
19 [0x13]:           jne 37
20 [0x14]: line: 263 - 20movg @std.io#channel<std.io.coroutines#job>.channel_state
21 [0x15]:           movn #1
23 [0x17]:           pushobj
24 [0x18]:           pushl 1
25 [0x19]:           call @1170 // std.io#channel<std.io.coroutines#job>.get_state
26 [0x1a]:           itest cmt
27 [0x1b]:           jne 29
28 [0x1c]: line: 264 - 28jmp @37
29 [0x1d]: line: 266 - 29new_class @std#long
31 [0x1f]:           dup 
32 [0x20]:           istore 0
34 [0x22]:           call @56 // std#long.long
35 [0x23]:           call @1272 // std.io.fiber#__srt_global.delay
36 [0x24]:           jmp @10
37 [0x25]:           ret

avail_data(): std#bool
address: 1180
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 272 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #2
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @109 // std#bool.bool
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

read(std.io#channel<std.io.coroutines#job>): std.io.coroutines#job
address: 1181
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 9
fpOffset: 1
spOffset: 1
stackSize: 11
code:

0 [0x0]: line: 276 - 0movl 1
1 [0x1]:           movn #1
3 [0x3]:           pushobj
4 [0x4]:           popl 2
5 [0x5]:           movg @std.io#buffer_type
6 [0x6]:           movn #0
8 [0x8]:           pushobj
9 [0x9]:           pushl 2
10 [0xa]:           itest cmt
11 [0xb]:           jne 53
12 [0xc]: line: 278 - 12movl 0
13 [0xd]:           pushobj
14 [0xe]:           call @1177 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.wait_for_data
15 [0xf]: line: 280 - 15movl 0
16 [0x10]:           _lck 
17 [0x11]: line: 281 - 17movl 0
18 [0x12]:           movn #0
20 [0x14]:           checknull
21 [0x15]:           je 24
22 [0x16]:           movn #0
24 [0x18]:           pushobj
25 [0x19]:           popl 3
26 [0x1a]: line: 282 - 26pushnull 
27 [0x1b]:           movl 0
28 [0x1c]:           movn #1
30 [0x1e]:           popobj
31 [0x1f]: line: 283 - 31pushnull 
32 [0x20]:           movl 0
33 [0x21]:           movn #0
35 [0x23]:           popobj
36 [0x24]: line: 284 - 36istore 0
38 [0x26]:           movl 0
39 [0x27]:           movn #2
41 [0x29]:           loadval egx
42 [0x2a]:           imov egx
43 [0x2b]: line: 285 - 43pushl 3
44 [0x2c]:           popl 4
45 [0x2d]:           movl 0
46 [0x2e]:           _ulck
47 [0x2f]:           movl 4
48 [0x30]:           returnobj
49 [0x31]:           ret
50 [0x32]:           movl 0
51 [0x33]:           _ulck
52 [0x34]:           jmp @158
53 [0x35]:           movg @std.io#buffer_type
54 [0x36]:           movn #1
56 [0x38]:           pushobj
57 [0x39]:           pushl 2
58 [0x3a]:           itest cmt
59 [0x3b]:           jne 83
60 [0x3c]: line: 289 - 60movl 0
61 [0x3d]:           pushobj
62 [0x3e]:           call @1177 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.wait_for_data
63 [0x3f]: line: 291 - 63movl 0
64 [0x40]:           movn #0
66 [0x42]:           checknull
67 [0x43]:           je 70
68 [0x44]:           movn #0
70 [0x46]:           pushobj
71 [0x47]:           popl 5
72 [0x48]: line: 292 - 72istore 0
74 [0x4a]:           movl 0
75 [0x4b]:           movn #2
77 [0x4d]:           loadval egx
78 [0x4e]:           imov egx
79 [0x4f]: line: 293 - 79movl 5
80 [0x50]:           returnobj
81 [0x51]:           ret
82 [0x52]:           jmp @158
83 [0x53]:           movg @std.io#buffer_type
84 [0x54]:           movn #2
86 [0x56]:           pushobj
87 [0x57]:           pushl 2
88 [0x58]:           itest cmt
89 [0x59]:           jne 118
90 [0x5a]: line: 296 - 90movl 0
91 [0x5b]:           pushobj
92 [0x5c]:           call @1177 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.wait_for_data
93 [0x5d]: line: 298 - 93movl 0
94 [0x5e]:           _lck 
95 [0x5f]: line: 299 - 95movl 0
96 [0x60]:           movn #2
98 [0x62]:           iload egx
99 [0x63]:           rstore egx
100 [0x64]:           iload egx
101 [0x65]:           dec egx
102 [0x66]:           imov egx
103 [0x67]:           loadval ebx
104 [0x68]: line: 300 - 104movl 0
105 [0x69]:           pushobj
106 [0x6a]:           call @1176 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.filo
107 [0x6b]:           popl 6
108 [0x6c]: line: 301 - 108pushl 6
109 [0x6d]:           popl 7
110 [0x6e]:           movl 0
111 [0x6f]:           _ulck
112 [0x70]:           movl 7
113 [0x71]:           returnobj
114 [0x72]:           ret
115 [0x73]:           movl 0
116 [0x74]:           _ulck
117 [0x75]:           jmp @158
118 [0x76]:           movg @std.io#buffer_type
119 [0x77]:           movn #3
121 [0x79]:           pushobj
122 [0x7a]:           pushl 2
123 [0x7b]:           itest cmt
124 [0x7c]:           jne 153
125 [0x7d]: line: 305 - 125movl 0
126 [0x7e]:           pushobj
127 [0x7f]:           call @1177 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.wait_for_data
128 [0x80]: line: 307 - 128movl 0
129 [0x81]:           _lck 
130 [0x82]: line: 308 - 130movl 0
131 [0x83]:           movn #2
133 [0x85]:           iload egx
134 [0x86]:           rstore egx
135 [0x87]:           iload egx
136 [0x88]:           dec egx
137 [0x89]:           imov egx
138 [0x8a]:           loadval ebx
139 [0x8b]: line: 309 - 139movl 0
140 [0x8c]:           pushobj
141 [0x8d]:           call @1176 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.filo
142 [0x8e]:           popl 8
143 [0x8f]: line: 310 - 143pushl 8
144 [0x90]:           popl 9
145 [0x91]:           movl 0
146 [0x92]:           _ulck
147 [0x93]:           movl 9
148 [0x94]:           returnobj
149 [0x95]:           ret
150 [0x96]:           movl 0
151 [0x97]:           _ulck
152 [0x98]:           jmp @158
153 [0x99]: line: 314 - 153pushnull 
154 [0x9a]:           popl 10
155 [0x9b]: line: 315 - 155movl 10
156 [0x9c]:           returnobj
157 [0x9d]:           ret

send(std.io.coroutines#job, std.io#channel<std.io.coroutines#job>): nil
address: 1182
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 1
fpOffset: 2
spOffset: 3
stackSize: 4
code:

0 [0x0]: line: 321 - 0movg @std.io#channel<std.io.coroutines#job>.channel_state
1 [0x1]:           movn #0
3 [0x3]:           pushobj
4 [0x4]:           pushl 2
5 [0x5]:           call @1170 // std.io#channel<std.io.coroutines#job>.get_state
6 [0x6]:           itest cmt
7 [0x7]:           jne 269
8 [0x8]: line: 322 - 8movl 2
9 [0x9]:           movn #1
11 [0xb]:           pushobj
12 [0xc]:           popl 3
13 [0xd]:           movg @std.io#buffer_type
14 [0xe]:           movn #0
16 [0x10]:           pushobj
17 [0x11]:           pushl 3
18 [0x12]:           itest cmt
19 [0x13]:           jne 53
20 [0x14]: line: 324 - 20movl 0
21 [0x15]:           _lck 
22 [0x16]: line: 325 - 22new_class @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
24 [0x18]:           dup 
25 [0x19]:           pushl 1
26 [0x1a]:           call @1186 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.channel_data
27 [0x1b]:           movl 0
28 [0x1c]:           movn #0
30 [0x1e]:           popobj
31 [0x1f]: line: 326 - 31movl 0
32 [0x20]:           movn #0
34 [0x22]:           pushobj
35 [0x23]:           movl 0
36 [0x24]:           movn #1
38 [0x26]:           popobj
39 [0x27]: line: 327 - 39istore 1
41 [0x29]:           movl 0
42 [0x2a]:           movn #2
44 [0x2c]:           loadval egx
45 [0x2d]:           imov egx
46 [0x2e]:           movl 0
47 [0x2f]:           _ulck
48 [0x30]: line: 329 - 48movl 0
49 [0x31]:           pushobj
50 [0x32]:           call @1178 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.wait_for_consume
51 [0x33]: line: 330 - 51ret
52 [0x34]:           jmp @269
53 [0x35]:           movg @std.io#buffer_type
54 [0x36]:           movn #1
56 [0x38]:           pushobj
57 [0x39]:           pushl 3
58 [0x3a]:           itest cmt
59 [0x3b]:           jne 100
60 [0x3c]: line: 333 - 60movl 0
61 [0x3d]:           movn #0
63 [0x3f]:           checknull
64 [0x40]:           jne 83
65 [0x41]: line: 334 - 65new_class @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
67 [0x43]:           dup 
68 [0x44]:           pushl 1
69 [0x45]:           call @1186 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.channel_data
70 [0x46]:           movl 0
71 [0x47]:           movn #0
73 [0x49]:           popobj
74 [0x4a]: line: 335 - 74movl 0
75 [0x4b]:           movn #0
77 [0x4d]:           pushobj
78 [0x4e]:           movl 0
79 [0x4f]:           movn #1
81 [0x51]:           popobj
82 [0x52]:           jmp @92
83 [0x53]: line: 337 - 83pushl 1
84 [0x54]:           movl 0
85 [0x55]:           movn #0
87 [0x57]:           checknull
88 [0x58]:           je 91
89 [0x59]:           movn #0
91 [0x5b]:           popobj
92 [0x5c]: line: 340 - 92istore 1
94 [0x5e]:           movl 0
95 [0x5f]:           movn #2
97 [0x61]:           loadval egx
98 [0x62]:           imov egx
99 [0x63]:           jmp @269
100 [0x64]:           movg @std.io#buffer_type
101 [0x65]:           movn #2
103 [0x67]:           pushobj
104 [0x68]:           pushl 3
105 [0x69]:           itest cmt
106 [0x6a]:           jne 169
107 [0x6b]: line: 343 - 107movl 0
108 [0x6c]:           _lck 
109 [0x6d]: line: 344 - 109movl 0
110 [0x6e]:           movn #0
112 [0x70]:           checknull
113 [0x71]:           jne 132
114 [0x72]: line: 345 - 114new_class @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
116 [0x74]:           dup 
117 [0x75]:           pushl 1
118 [0x76]:           call @1186 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.channel_data
119 [0x77]:           movl 0
120 [0x78]:           movn #0
122 [0x7a]:           popobj
123 [0x7b]: line: 346 - 123movl 0
124 [0x7c]:           movn #0
126 [0x7e]:           pushobj
127 [0x7f]:           movl 0
128 [0x80]:           movn #1
130 [0x82]:           popobj
131 [0x83]:           jmp @157
132 [0x84]: line: 348 - 132new_class @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
134 [0x86]:           dup 
135 [0x87]:           pushl 1
136 [0x88]:           call @1186 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.channel_data
137 [0x89]:           movl 0
138 [0x8a]:           movn #1
140 [0x8c]:           checknull
141 [0x8d]:           je 144
142 [0x8e]:           movn #1
144 [0x90]:           popobj
145 [0x91]: line: 349 - 145movl 0
146 [0x92]:           movn #1
148 [0x94]:           checknull
149 [0x95]:           je 152
150 [0x96]:           movn #1
152 [0x98]:           pushobj
153 [0x99]:           movl 0
154 [0x9a]:           movn #1
156 [0x9c]:           popobj
157 [0x9d]: line: 352 - 157movl 0
158 [0x9e]:           movn #2
160 [0xa0]:           iload egx
161 [0xa1]:           rstore egx
162 [0xa2]:           iload egx
163 [0xa3]:           inc egx
164 [0xa4]:           imov egx
165 [0xa5]:           loadval ebx
166 [0xa6]:           movl 0
167 [0xa7]:           _ulck
168 [0xa8]:           jmp @269
169 [0xa9]:           movg @std.io#buffer_type
170 [0xaa]:           movn #3
172 [0xac]:           pushobj
173 [0xad]:           pushl 3
174 [0xae]:           itest cmt
175 [0xaf]:           jne 269
176 [0xb0]: line: 356 - 176movl 2
177 [0xb1]:           movn #2
179 [0xb3]:           movn #0
181 [0xb5]:           iload egx
182 [0xb6]:           rstore egx
183 [0xb7]:           movl 0
184 [0xb8]:           movn #2
186 [0xba]:           iload cx
187 [0xbb]:           loadval ecx
188 [0xbc]:           test cx, ecx
189 [0xbd]:           movr cmt, bmr
190 [0xbe]:           jne 199
191 [0xbf]:           new_class @std#long
193 [0xc1]:           dup 
194 [0xc2]:           istore 0
196 [0xc4]:           call @56 // std#long.long
197 [0xc5]:           call @1272 // std.io.fiber#__srt_global.delay
198 [0xc6]:           jmp @176
199 [0xc7]: line: 358 - 199movl 0
200 [0xc8]:           _lck 
201 [0xc9]: line: 359 - 201movl 0
202 [0xca]:           movn #0
204 [0xcc]:           checknull
205 [0xcd]:           jne 233
206 [0xce]: line: 360 - 206new_class @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
208 [0xd0]:           dup 
209 [0xd1]:           pushl 1
210 [0xd2]:           call @1186 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.channel_data
211 [0xd3]:           movl 0
212 [0xd4]:           movn #0
214 [0xd6]:           popobj
215 [0xd7]: line: 361 - 215movl 0
216 [0xd8]:           movn #0
218 [0xda]:           pushobj
219 [0xdb]:           movl 0
220 [0xdc]:           movn #1
222 [0xde]:           popobj
223 [0xdf]: line: 362 - 223movl 0
224 [0xe0]:           movn #2
226 [0xe2]:           iload egx
227 [0xe3]:           rstore egx
228 [0xe4]:           iload egx
229 [0xe5]:           inc egx
230 [0xe6]:           imov egx
231 [0xe7]:           loadval ebx
232 [0xe8]:           jmp @267
233 [0xe9]: line: 364 - 233new_class @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
235 [0xeb]:           dup 
236 [0xec]:           pushl 1
237 [0xed]:           call @1186 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.channel_data
238 [0xee]:           movl 0
239 [0xef]:           movn #1
241 [0xf1]:           checknull
242 [0xf2]:           je 245
243 [0xf3]:           movn #1
245 [0xf5]:           popobj
246 [0xf6]: line: 365 - 246movl 0
247 [0xf7]:           movn #1
249 [0xf9]:           checknull
250 [0xfa]:           je 253
251 [0xfb]:           movn #1
253 [0xfd]:           pushobj
254 [0xfe]:           movl 0
255 [0xff]:           movn #1
257 [0x101]:           popobj
258 [0x102]: line: 366 - 258movl 0
259 [0x103]:           movn #2
261 [0x105]:           iload egx
262 [0x106]:           rstore egx
263 [0x107]:           iload egx
264 [0x108]:           inc egx
265 [0x109]:           imov egx
266 [0x10a]:           loadval ebx
267 [0x10b]:           movl 0
268 [0x10c]:           _ulck
269 [0x10d]:           ret

filter<std.io.coroutines#job>(): nil
address: 1183
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1174 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.static_init<filter<std.io.coroutines#job>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1175 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.init<filter<std.io.coroutines#job>>
12 [0xc]:         ret

static_init<channel_data<std.io.coroutines#job>>(): nil
address: 1184
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<channel_data<std.io.coroutines#job>>(): nil
address: 1185
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

channel_data(std.io.coroutines#job): nil
address: 1186
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1184 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.static_init<channel_data<std.io.coroutines#job>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1185 // std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.init<channel_data<std.io.coroutines#job>>
12 [0xc]: line: 376 - 12pushl 1
13 [0xd]:           movl 0
14 [0xe]:           movl 0
15 [0xf]:           movn #0
17 [0x11]:           popobj
18 [0x12]:           ret

static_init<channel<std#int>>(): nil
address: 1187
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#channel<std#int>
1 [0x1]:         movn #2
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#channel<std#int>
9 [0x9]:         movn #2
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#int
15 [0xf]:         dup 
16 [0x10]:         istore 10
18 [0x12]:         call @79 // std#int.init<int>
19 [0x13]:         movg @std.io#channel<std#int>
20 [0x14]:         movn #0
22 [0x16]:         popobj
23 [0x17]:         new_class @std#int
25 [0x19]:         dup 
26 [0x1a]:         istore 0
28 [0x1c]:         call @79 // std#int.init<int>
29 [0x1d]:         movg @std.io#channel<std#int>
30 [0x1e]:         movn #1
32 [0x20]:         popobj
33 [0x21]:         ret

init<channel<std#int>>(): nil
address: 1188
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#int
2 [0x2]:         dup 
3 [0x3]:         istore 0
5 [0x5]:         call @79 // std#int.init<int>
6 [0x6]:         movl 0
7 [0x7]:         movn #2
9 [0x9]:         popobj
10 [0xa]:         movg @std.io#channel<std#int>.channel_state
11 [0xb]:         movn #0
13 [0xd]:         pushobj
14 [0xe]:         movl 0
15 [0xf]:         movn #3
17 [0x11]:         popobj
18 [0x12]:         ret

channel(std.io#buffer_type): nil
address: 1189
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#channel<std#int>
4 [0x4]:         movn #2
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1187 // std.io#channel<std#int>.static_init<channel<std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1188 // std.io#channel<std#int>.init<channel<std#int>>
12 [0xc]: line: 56 - 12movl 0
13 [0xd]:          pushobj
14 [0xe]:          new_class @std#int
16 [0x10]:          dup 
17 [0x11]:          istore 1
19 [0x13]:          call @72 // std#int.int
20 [0x14]:          call @1191 // std.io#channel<std#int>.add_filters
21 [0x15]: line: 57 - 21movl 0
22 [0x16]:          pushobj
23 [0x17]:          pushl 1
24 [0x18]:          call @1190 // std.io#channel<std#int>.set_buff_type
25 [0x19]:          ret

set_buff_type(std.io#buffer_type): nil
address: 1190
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 67 - 0pushl 1
1 [0x1]:          movl 0
2 [0x2]:          movl 0
3 [0x3]:          movn #1
5 [0x5]:          popobj
6 [0x6]: line: 68 - 6pushl 1
7 [0x7]:          popl 2
8 [0x8]:          movg @std.io#buffer_type
9 [0x9]:          movn #0
11 [0xb]:          pushobj
12 [0xc]:          pushl 2
13 [0xd]:          itest cmt
14 [0xe]:          je 22
15 [0xf]:          movg @std.io#buffer_type
16 [0x10]:          movn #1
18 [0x12]:          pushobj
19 [0x13]:          pushl 2
20 [0x14]:          itest cmt
21 [0x15]:          jne 31
22 [0x16]: line: 70 - 22movl 0
23 [0x17]:          movn #2
25 [0x19]:          pushobj
26 [0x1a]:          istore 1
28 [0x1c]:          call @732 // std#number<_int32, std#int>.operator=
29 [0x1d]:          pop
30 [0x1e]:          jmp @62
31 [0x1f]:          movg @std.io#buffer_type
32 [0x20]:          movn #2
34 [0x22]:          pushobj
35 [0x23]:          pushl 2
36 [0x24]:          itest cmt
37 [0x25]:          jne 47
38 [0x26]: line: 73 - 38movl 0
39 [0x27]:          movn #2
41 [0x29]:          pushobj
42 [0x2a]:          istore 4294967295
44 [0x2c]:          call @732 // std#number<_int32, std#int>.operator=
45 [0x2d]:          pop
46 [0x2e]:          jmp @62
47 [0x2f]:          movg @std.io#buffer_type
48 [0x30]:          movn #3
50 [0x32]:          pushobj
51 [0x33]:          pushl 2
52 [0x34]:          itest cmt
53 [0x35]:          jne 62
54 [0x36]: line: 76 - 54movg @std.io#channel<std#int>
55 [0x37]:          movn #0
57 [0x39]:          pushobj
58 [0x3a]:          movl 0
59 [0x3b]:          movn #2
61 [0x3d]:          popobj
62 [0x3e]:          ret

add_filters(std#int): nil
address: 1191
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 1
fpOffset: 1
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 82 - 0istore 0
2 [0x2]:          movl 1
3 [0x3]:          movn #0
5 [0x5]:          iload cx
6 [0x6]:          loadval ecx
7 [0x7]:          lte cx, ecx
8 [0x8]:          jne 19
9 [0x9]: line: 83 - 9new_class @std#illegal_state_exception
11 [0xb]:          dup 
12 [0xc]:          new_class @std#string
14 [0xe]:          dup 
15 [0xf]:          newstr @89 (channels must have at least 1 filter)
16 [0x10]:          call @130 // std#string.string
17 [0x11]:          call @207 // std#illegal_state_exception.illegal_state_exception
18 [0x12]:          throw 
19 [0x13]: line: 86 - 19new_class @std#list<std.io#channel<std#int>.filter<std#int>>
21 [0x15]:          dup 
22 [0x16]:          pushl 1
23 [0x17]:          call @1042 // std#list<std.io#channel<std#int>.filter<std#int>>.list
24 [0x18]:          movl 0
25 [0x19]:          movn #0
27 [0x1b]:          popobj
28 [0x1c]: line: 87 - 28new_class @std#int
30 [0x1e]:          dup 
31 [0x1f]:          istore 0
33 [0x21]:          call @79 // std#int.init<int>
34 [0x22]:          popl 2
35 [0x23]:          pushl 2
36 [0x24]:          movl 1
37 [0x25]:          movn #0
39 [0x27]:          iload egx
40 [0x28]:          rstore egx
41 [0x29]:          call @502 // std#number<_int32, std#int>.operator<
42 [0x2a]:          popobj2 
43 [0x2b]:          movn #0
45 [0x2d]:          iload cmt
46 [0x2e]:          jne 62
47 [0x2f]: line: 88 - 47movl 0
48 [0x30]:          movn #0
50 [0x32]:          pushobj
51 [0x33]:          new_class @std.io#channel<std#int>.filter<std#int>
53 [0x35]:          dup 
54 [0x36]:          call @1207 // std.io#channel<std#int>.filter<std#int>.filter<std#int>
55 [0x37]:          call @1045 // std#list<std.io#channel<std#int>.filter<std#int>>.add
56 [0x38]:          pushl 2
57 [0x39]:          istore 1
59 [0x3b]:          call @739 // std#number<_int32, std#int>.operator++
60 [0x3c]:          pop
61 [0x3d]:          jmp @35
62 [0x3e]:          ret

read_next(std#int): std#list<std#int>
address: 1192
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 4
fpOffset: 1
spOffset: 1
stackSize: 6
code:

0 [0x0]: line: 156 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           pushobj
4 [0x4]:           call @1046 // std#list<std.io#channel<std#int>.filter<std#int>>.size
5 [0x5]:           popobj2 
6 [0x6]:           movn #0
8 [0x8]:           iload egx
9 [0x9]:           rstore egx
10 [0xa]:           movl 1
11 [0xb]:           movn #0
13 [0xd]:           iload cx
14 [0xe]:           loadval ecx
15 [0xf]:           gte cx, ecx
16 [0x10]:           je 25
17 [0x11]:           istore 0
19 [0x13]:           movl 1
20 [0x14]:           movn #0
22 [0x16]:           iload cx
23 [0x17]:           loadval ecx
24 [0x18]:           lt cx, ecx
25 [0x19]:           jne 46
26 [0x1a]: line: 157 - 26new_class @std#out_of_bounds_exception
28 [0x1c]:           dup 
29 [0x1d]:           new_class @std#string
31 [0x1f]:           dup 
32 [0x20]:           newstr @92 (invalid read on filter ()
33 [0x21]:           call @130 // std#string.string
34 [0x22]:           pushl 1
35 [0x23]:           call @145 // std#string.operator+
36 [0x24]:           newstr @91 () when max filter is )
37 [0x25]:           call @143 // std#string.operator+
38 [0x26]:           movl 0
39 [0x27]:           movn #0
41 [0x29]:           pushobj
42 [0x2a]:           call @1046 // std#list<std.io#channel<std#int>.filter<std#int>>.size
43 [0x2b]:           call @145 // std#string.operator+
44 [0x2c]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
45 [0x2d]:           throw 
46 [0x2e]: line: 160 - 46movl 0
47 [0x2f]:           movn #0
49 [0x31]:           pushobj
50 [0x32]:           new_class @std#int
52 [0x34]:           dup 
53 [0x35]:           movl 1
54 [0x36]:           movn #0
56 [0x38]:           iload egx
57 [0x39]:           rstore egx
58 [0x3a]:           call @72 // std#int.int
59 [0x3b]:           call @1043 // std#list<std.io#channel<std#int>.filter<std#int>>.operator[
60 [0x3c]:           popl 2
61 [0x3d]: line: 161 - 61pushl 2
62 [0x3e]:           call @1205 // std.io#channel<std#int>.filter<std#int>.avail_data
63 [0x3f]:           istore 0
65 [0x41]:           call @953 // std#number<_int8, std#bool>.operator==
66 [0x42]:           popobj2 
67 [0x43]:           movn #0
69 [0x45]:           iload cmt
70 [0x46]:           jne 78
71 [0x47]: line: 162 - 71new_class @std#list<std#int>
73 [0x49]:           dup 
74 [0x4a]:           call @1030 // std#list<std#int>.list
75 [0x4b]:           popobj2 
76 [0x4c]:           returnobj
77 [0x4d]:           ret
78 [0x4e]: line: 165 - 78new_class @std#list<std#int>
80 [0x50]:           dup 
81 [0x51]:           call @1030 // std#list<std#int>.list
82 [0x52]:           popl 3
83 [0x53]: line: 166 - 83movl 2
84 [0x54]:           _lck 
85 [0x55]: line: 167 - 85movg @std.io#channel<std#int>.channel_state
86 [0x56]: line: 168 - 85movn #1
88 [0x58]:           pushobj
89 [0x59]:           movl 0
90 [0x5a]:           movn #3
92 [0x5c]:           pushobj
93 [0x5d]:           itest cmt
94 [0x5e]:           jne 108
95 [0x5f]:           pushl 3
96 [0x60]:           popl 4
97 [0x61]:           movl 2
98 [0x62]:           _ulck
99 [0x63]:           movl 2
100 [0x64]:           _ulck
101 [0x65]:           movl 2
102 [0x66]:           _ulck
103 [0x67]:           movl 2
104 [0x68]:           _ulck
105 [0x69]:           movl 4
106 [0x6a]:           returnobj
107 [0x6b]:           ret
108 [0x6c]: line: 170 - 108pushl 2
109 [0x6d]:           call @1205 // std.io#channel<std#int>.filter<std#int>.avail_data
110 [0x6e]:           popobj2 
111 [0x6f]:           movn #0
113 [0x71]:           iload cmt
114 [0x72]:           jne 122
115 [0x73]: line: 171 - 115pushl 3
116 [0x74]:           pushl 2
117 [0x75]:           movl 0
118 [0x76]:           pushobj
119 [0x77]:           call @1206 // std.io#channel<std#int>.filter<std#int>.read
120 [0x78]:           call @1034 // std#list<std#int>.add
121 [0x79]:           jmp @135
122 [0x7a]: line: 173 - 122pushl 3
123 [0x7b]:           popl 5
124 [0x7c]:           movl 2
125 [0x7d]:           _ulck
126 [0x7e]:           movl 2
127 [0x7f]:           _ulck
128 [0x80]:           movl 2
129 [0x81]:           _ulck
130 [0x82]:           movl 2
131 [0x83]:           _ulck
132 [0x84]:           movl 5
133 [0x85]:           returnobj
134 [0x86]:           ret
135 [0x87]:           jmp @85
136 [0x88]:           movl 2
137 [0x89]:           _ulck
138 [0x8a]: line: 178 - 138new_class @std#list<std#int>
140 [0x8c]:           dup 
141 [0x8d]:           call @1030 // std#list<std#int>.list
142 [0x8e]:           popobj2 
143 [0x8f]:           returnobj
144 [0x90]:           ret

read_all(std#int): std#list<std#int>
address: 1193
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 182 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           pushobj
4 [0x4]:           call @1046 // std#list<std.io#channel<std#int>.filter<std#int>>.size
5 [0x5]:           popobj2 
6 [0x6]:           movn #0
8 [0x8]:           iload egx
9 [0x9]:           rstore egx
10 [0xa]:           movl 1
11 [0xb]:           movn #0
13 [0xd]:           iload cx
14 [0xe]:           loadval ecx
15 [0xf]:           gte cx, ecx
16 [0x10]:           je 25
17 [0x11]:           istore 0
19 [0x13]:           movl 1
20 [0x14]:           movn #0
22 [0x16]:           iload cx
23 [0x17]:           loadval ecx
24 [0x18]:           lt cx, ecx
25 [0x19]:           jne 46
26 [0x1a]: line: 183 - 26new_class @std#out_of_bounds_exception
28 [0x1c]:           dup 
29 [0x1d]:           new_class @std#string
31 [0x1f]:           dup 
32 [0x20]:           newstr @92 (invalid read on filter ()
33 [0x21]:           call @130 // std#string.string
34 [0x22]:           pushl 1
35 [0x23]:           call @145 // std#string.operator+
36 [0x24]:           newstr @91 () when max filter is )
37 [0x25]:           call @143 // std#string.operator+
38 [0x26]:           movl 0
39 [0x27]:           movn #0
41 [0x29]:           pushobj
42 [0x2a]:           call @1046 // std#list<std.io#channel<std#int>.filter<std#int>>.size
43 [0x2b]:           call @145 // std#string.operator+
44 [0x2c]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
45 [0x2d]:           throw 
46 [0x2e]: line: 186 - 46new_class @std#list<std#int>
48 [0x30]:           dup 
49 [0x31]:           call @1030 // std#list<std#int>.list
50 [0x32]:           popl 2
51 [0x33]: line: 187 - 51movl 0
52 [0x34]:           movn #0
54 [0x36]:           pushobj
55 [0x37]:           new_class @std#int
57 [0x39]:           dup 
58 [0x3a]:           movl 1
59 [0x3b]:           movn #0
61 [0x3d]:           iload egx
62 [0x3e]:           rstore egx
63 [0x3f]:           call @72 // std#int.int
64 [0x40]:           call @1043 // std#list<std.io#channel<std#int>.filter<std#int>>.operator[
65 [0x41]:           popl 3
66 [0x42]: line: 189 - 66pushl 3
67 [0x43]: line: 190 - 66movl 0
68 [0x44]:           pushobj
69 [0x45]:           call @1204 // std.io#channel<std#int>.filter<std#int>.wait_for_data_or_close
70 [0x46]: line: 192 - 70movg @std.io#channel<std#int>.channel_state
71 [0x47]:           movn #0
73 [0x49]:           pushobj
74 [0x4a]:           movl 0
75 [0x4b]:           movn #3
77 [0x4d]:           pushobj
78 [0x4e]:           itest cmt
79 [0x4f]:           jne 88
80 [0x50]:           pushl 3
81 [0x51]:           call @1205 // std.io#channel<std#int>.filter<std#int>.avail_data
82 [0x52]:           popobj2 
83 [0x53]:           movn #0
85 [0x55]:           iload cmt
86 [0x56]:           jne 88
87 [0x57]:           ldc cmt @ 5 (1)
88 [0x58]:           jne 95
89 [0x59]: line: 193 - 89pushl 2
90 [0x5a]:           pushl 3
91 [0x5b]:           movl 0
92 [0x5c]:           pushobj
93 [0x5d]:           call @1206 // std.io#channel<std#int>.filter<std#int>.read
94 [0x5e]:           call @1034 // std#list<std#int>.add
95 [0x5f]:           jmp @66
96 [0x60]: line: 197 - 96new_class @std#list<std#int>
98 [0x62]:           dup 
99 [0x63]:           call @1030 // std#list<std#int>.list
100 [0x64]:           popobj2 
101 [0x65]:           returnobj
102 [0x66]:           ret

get_elements(): std#int[]?
address: 1194
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 218 - 0movl 0
1 [0x1]:           pushobj
2 [0x2]:           movg @std.io#channel<std#int>
3 [0x3]:           movn #1
5 [0x5]:           pushobj
6 [0x6]:           call @1193 // std.io#channel<std#int>.read_all
7 [0x7]:           call @1031 // std#list<std#int>.get_elements
8 [0x8]:           popobj2 
9 [0x9]:           returnobj
10 [0xa]:           ret

avail_data(std#int): std#bool
address: 1195
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 222 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           pushobj
4 [0x4]:           call @1046 // std#list<std.io#channel<std#int>.filter<std#int>>.size
5 [0x5]:           popobj2 
6 [0x6]:           movn #0
8 [0x8]:           iload egx
9 [0x9]:           rstore egx
10 [0xa]:           movl 1
11 [0xb]:           movn #0
13 [0xd]:           iload cx
14 [0xe]:           loadval ecx
15 [0xf]:           gte cx, ecx
16 [0x10]:           je 25
17 [0x11]:           istore 0
19 [0x13]:           movl 1
20 [0x14]:           movn #0
22 [0x16]:           iload cx
23 [0x17]:           loadval ecx
24 [0x18]:           lt cx, ecx
25 [0x19]:           jne 46
26 [0x1a]: line: 223 - 26new_class @std#out_of_bounds_exception
28 [0x1c]:           dup 
29 [0x1d]:           new_class @std#string
31 [0x1f]:           dup 
32 [0x20]:           newstr @92 (invalid read on filter ()
33 [0x21]:           call @130 // std#string.string
34 [0x22]:           pushl 1
35 [0x23]:           call @145 // std#string.operator+
36 [0x24]:           newstr @91 () when max filter is )
37 [0x25]:           call @143 // std#string.operator+
38 [0x26]:           movl 0
39 [0x27]:           movn #0
41 [0x29]:           pushobj
42 [0x2a]:           call @1046 // std#list<std.io#channel<std#int>.filter<std#int>>.size
43 [0x2b]:           call @145 // std#string.operator+
44 [0x2c]:           call @211 // std#out_of_bounds_exception.out_of_bounds_exception
45 [0x2d]:           throw 
46 [0x2e]: line: 226 - 46movl 0
47 [0x2f]:           movn #0
49 [0x31]:           pushobj
50 [0x32]:           new_class @std#int
52 [0x34]:           dup 
53 [0x35]:           movl 1
54 [0x36]:           movn #0
56 [0x38]:           iload egx
57 [0x39]:           rstore egx
58 [0x3a]:           call @72 // std#int.int
59 [0x3b]:           call @1043 // std#list<std.io#channel<std#int>.filter<std#int>>.operator[
60 [0x3c]:           popl 2
61 [0x3d]: line: 227 - 61pushl 2
62 [0x3e]:           call @1205 // std.io#channel<std#int>.filter<std#int>.avail_data
63 [0x3f]:           popobj2 
64 [0x40]:           returnobj
65 [0x41]:           ret

get_state(): std.io#channel<std#int>.channel_state
address: 1196
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 235 - 0movl 0
1 [0x1]:           movn #3
3 [0x3]:           returnobj
4 [0x4]:           ret

static_init<channel_state>(): nil
address: 1197
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.channel_state
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#channel<std#int>.channel_state
1 [0x1]:         movn #2
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#channel<std#int>.channel_state
9 [0x9]:         movn #2
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<channel_state>(): nil
address: 1198
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.channel_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

channel_state(): nil
address: 1199
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.channel_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

static_init<filter<std#int>>(): nil
address: 1200
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.filter<std#int>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#channel<std#int>.filter<std#int>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#channel<std#int>.filter<std#int>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<filter<std#int>>(): nil
address: 1201
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.filter<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

filo(): std#int?
address: 1202
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.filter<std#int>
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 245 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           checknull
4 [0x4]:           je 7
5 [0x5]:           movn #0
7 [0x7]:           pushobj
8 [0x8]:           popl 1
9 [0x9]: line: 246 - 9movl 0
10 [0xa]:           movn #0
12 [0xc]:           checknull
13 [0xd]:           je 16
14 [0xe]:           movn #1
16 [0x10]:           pushobj
17 [0x11]:           movl 0
18 [0x12]:           movn #0
20 [0x14]:           popobj
21 [0x15]: line: 247 - 21movl 0
22 [0x16]:           movn #0
24 [0x18]:           checknull
25 [0x19]:           jne 31
26 [0x1a]: line: 248 - 26pushnull 
27 [0x1b]:           movl 0
28 [0x1c]:           movn #1
30 [0x1e]:           popobj
31 [0x1f]: line: 249 - 31movl 1
32 [0x20]:           returnobj
33 [0x21]:           ret

wait_for_data(): nil
address: 1203
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.filter<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 253 - 0istore 0
2 [0x2]:           movl 0
3 [0x3]:           movn #2
5 [0x5]:           iload cx
6 [0x6]:           loadval ecx
7 [0x7]:           test cx, ecx
8 [0x8]:           movr cmt, bmr
9 [0x9]:           jne 18
10 [0xa]:           new_class @std#long
12 [0xc]:           dup 
13 [0xd]:           istore 0
15 [0xf]:           call @56 // std#long.long
16 [0x10]:           call @1272 // std.io.fiber#__srt_global.delay
17 [0x11]:           jmp @0
18 [0x12]:           ret

wait_for_data_or_close(std.io#channel<std#int>): nil
address: 1204
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.filter<std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 261 - 0istore 0
2 [0x2]:           movl 0
3 [0x3]:           movn #2
5 [0x5]:           iload cx
6 [0x6]:           loadval ecx
7 [0x7]:           test cx, ecx
8 [0x8]:           movr cmt, bmr
9 [0x9]:           jne 37
10 [0xa]: line: 262 - 10istore 0
12 [0xc]:           movl 0
13 [0xd]:           movn #2
15 [0xf]:           iload cx
16 [0x10]:           loadval ecx
17 [0x11]:           test cx, ecx
18 [0x12]:           movr cmt, bmr
19 [0x13]:           jne 37
20 [0x14]: line: 263 - 20movg @std.io#channel<std#int>.channel_state
21 [0x15]:           movn #1
23 [0x17]:           pushobj
24 [0x18]:           pushl 1
25 [0x19]:           call @1196 // std.io#channel<std#int>.get_state
26 [0x1a]:           itest cmt
27 [0x1b]:           jne 29
28 [0x1c]: line: 264 - 28jmp @37
29 [0x1d]: line: 266 - 29new_class @std#long
31 [0x1f]:           dup 
32 [0x20]:           istore 0
34 [0x22]:           call @56 // std#long.long
35 [0x23]:           call @1272 // std.io.fiber#__srt_global.delay
36 [0x24]:           jmp @10
37 [0x25]:           ret

avail_data(): std#bool
address: 1205
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.filter<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 272 - 0new_class @std#bool
2 [0x2]:           dup 
3 [0x3]:           movl 0
4 [0x4]:           movn #2
6 [0x6]:           iload egx
7 [0x7]:           rstore egx
8 [0x8]:           call @109 // std#bool.bool
9 [0x9]:           popobj2 
10 [0xa]:           returnobj
11 [0xb]:           ret

read(std.io#channel<std#int>): std#int
address: 1206
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.filter<std#int>
frameStackOffset: 9
fpOffset: 1
spOffset: 1
stackSize: 11
code:

0 [0x0]: line: 276 - 0movl 1
1 [0x1]:           movn #1
3 [0x3]:           pushobj
4 [0x4]:           popl 2
5 [0x5]:           movg @std.io#buffer_type
6 [0x6]:           movn #0
8 [0x8]:           pushobj
9 [0x9]:           pushl 2
10 [0xa]:           itest cmt
11 [0xb]:           jne 53
12 [0xc]: line: 278 - 12movl 0
13 [0xd]:           pushobj
14 [0xe]:           call @1203 // std.io#channel<std#int>.filter<std#int>.wait_for_data
15 [0xf]: line: 280 - 15movl 0
16 [0x10]:           _lck 
17 [0x11]: line: 281 - 17movl 0
18 [0x12]:           movn #0
20 [0x14]:           checknull
21 [0x15]:           je 24
22 [0x16]:           movn #0
24 [0x18]:           pushobj
25 [0x19]:           popl 3
26 [0x1a]: line: 282 - 26pushnull 
27 [0x1b]:           movl 0
28 [0x1c]:           movn #1
30 [0x1e]:           popobj
31 [0x1f]: line: 283 - 31pushnull 
32 [0x20]:           movl 0
33 [0x21]:           movn #0
35 [0x23]:           popobj
36 [0x24]: line: 284 - 36istore 0
38 [0x26]:           movl 0
39 [0x27]:           movn #2
41 [0x29]:           loadval egx
42 [0x2a]:           imov egx
43 [0x2b]: line: 285 - 43pushl 3
44 [0x2c]:           popl 4
45 [0x2d]:           movl 0
46 [0x2e]:           _ulck
47 [0x2f]:           movl 4
48 [0x30]:           returnobj
49 [0x31]:           ret
50 [0x32]:           movl 0
51 [0x33]:           _ulck
52 [0x34]:           jmp @161
53 [0x35]:           movg @std.io#buffer_type
54 [0x36]:           movn #1
56 [0x38]:           pushobj
57 [0x39]:           pushl 2
58 [0x3a]:           itest cmt
59 [0x3b]:           jne 83
60 [0x3c]: line: 289 - 60movl 0
61 [0x3d]:           pushobj
62 [0x3e]:           call @1203 // std.io#channel<std#int>.filter<std#int>.wait_for_data
63 [0x3f]: line: 291 - 63movl 0
64 [0x40]:           movn #0
66 [0x42]:           checknull
67 [0x43]:           je 70
68 [0x44]:           movn #0
70 [0x46]:           pushobj
71 [0x47]:           popl 5
72 [0x48]: line: 292 - 72istore 0
74 [0x4a]:           movl 0
75 [0x4b]:           movn #2
77 [0x4d]:           loadval egx
78 [0x4e]:           imov egx
79 [0x4f]: line: 293 - 79movl 5
80 [0x50]:           returnobj
81 [0x51]:           ret
82 [0x52]:           jmp @161
83 [0x53]:           movg @std.io#buffer_type
84 [0x54]:           movn #2
86 [0x56]:           pushobj
87 [0x57]:           pushl 2
88 [0x58]:           itest cmt
89 [0x59]:           jne 118
90 [0x5a]: line: 296 - 90movl 0
91 [0x5b]:           pushobj
92 [0x5c]:           call @1203 // std.io#channel<std#int>.filter<std#int>.wait_for_data
93 [0x5d]: line: 298 - 93movl 0
94 [0x5e]:           _lck 
95 [0x5f]: line: 299 - 95movl 0
96 [0x60]:           movn #2
98 [0x62]:           iload egx
99 [0x63]:           rstore egx
100 [0x64]:           iload egx
101 [0x65]:           dec egx
102 [0x66]:           imov egx
103 [0x67]:           loadval ebx
104 [0x68]: line: 300 - 104movl 0
105 [0x69]:           pushobj
106 [0x6a]:           call @1202 // std.io#channel<std#int>.filter<std#int>.filo
107 [0x6b]:           popl 6
108 [0x6c]: line: 301 - 108pushl 6
109 [0x6d]:           popl 7
110 [0x6e]:           movl 0
111 [0x6f]:           _ulck
112 [0x70]:           movl 7
113 [0x71]:           returnobj
114 [0x72]:           ret
115 [0x73]:           movl 0
116 [0x74]:           _ulck
117 [0x75]:           jmp @161
118 [0x76]:           movg @std.io#buffer_type
119 [0x77]:           movn #3
121 [0x79]:           pushobj
122 [0x7a]:           pushl 2
123 [0x7b]:           itest cmt
124 [0x7c]:           jne 153
125 [0x7d]: line: 305 - 125movl 0
126 [0x7e]:           pushobj
127 [0x7f]:           call @1203 // std.io#channel<std#int>.filter<std#int>.wait_for_data
128 [0x80]: line: 307 - 128movl 0
129 [0x81]:           _lck 
130 [0x82]: line: 308 - 130movl 0
131 [0x83]:           movn #2
133 [0x85]:           iload egx
134 [0x86]:           rstore egx
135 [0x87]:           iload egx
136 [0x88]:           dec egx
137 [0x89]:           imov egx
138 [0x8a]:           loadval ebx
139 [0x8b]: line: 309 - 139movl 0
140 [0x8c]:           pushobj
141 [0x8d]:           call @1202 // std.io#channel<std#int>.filter<std#int>.filo
142 [0x8e]:           popl 8
143 [0x8f]: line: 310 - 143pushl 8
144 [0x90]:           popl 9
145 [0x91]:           movl 0
146 [0x92]:           _ulck
147 [0x93]:           movl 9
148 [0x94]:           returnobj
149 [0x95]:           ret
150 [0x96]:           movl 0
151 [0x97]:           _ulck
152 [0x98]:           jmp @161
153 [0x99]: line: 314 - 153new_class @std#int
155 [0x9b]:           dup 
156 [0x9c]:           call @85 // std#int.int
157 [0x9d]:           popl 10
158 [0x9e]: line: 315 - 158movl 10
159 [0x9f]:           returnobj
160 [0xa0]:           ret

filter<std#int>(): nil
address: 1207
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.filter<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#channel<std#int>.filter<std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1200 // std.io#channel<std#int>.filter<std#int>.static_init<filter<std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1201 // std.io#channel<std#int>.filter<std#int>.init<filter<std#int>>
12 [0xc]:         ret

init<channel_data<std#int>>(): nil
address: 1208
file: /usr/include/sharp/0.3.0/std/io/channel.sharp
owner: std.io#channel<std#int>.filter<std#int>.channel_data<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#int
2 [0x2]:         dup 
3 [0x3]:         call @85 // std#int.int
4 [0x4]:         movl 0
5 [0x5]:         movn #0
7 [0x7]:         popobj
8 [0x8]:         ret

send(std.io.coroutines#job): nil
address: 1209
file: /usr/include/sharp/0.3.0/std/io/send_channel.sharp
owner: std.io#send_channel<std.io.coroutines#job>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


send(std.io.coroutines#job, std#int): nil
address: 1210
file: /usr/include/sharp/0.3.0/std/io/send_channel.sharp
owner: std.io#send_channel<std.io.coroutines#job>
frameStackOffset: -1
fpOffset: -1
spOffset: -1
stackSize: -1
code:


static_init<atomic<std#int>>(): nil
address: 1211
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io#atomic<std#int>
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io#atomic<std#int>
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<atomic<std#int>>(): nil
address: 1212
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#int
2 [0x2]:         dup 
3 [0x3]:         call @85 // std#int.int
4 [0x4]:         movl 0
5 [0x5]:         movn #0
7 [0x7]:         popobj
8 [0x8]:         ret

atomic(std#int): nil
address: 1213
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io#atomic<std#int>
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1211 // std.io#atomic<std#int>.static_init<atomic<std#int>>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1212 // std.io#atomic<std#int>.init<atomic<std#int>>
12 [0xc]: line: 7 - 12pushl 1
13 [0xd]:         movl 0
14 [0xe]:         movn #0
16 [0x10]:         popobj
17 [0x11]:         ret
18 [0x12]:         movl 0
19 [0x13]:         pushobj
20 [0x14]:         call @37 // std#_object_._object_
21 [0x15]:         movg @std.io#atomic<std#int>
22 [0x16]:         movn #0
24 [0x18]:         iload cmt
25 [0x19]:         je 27
26 [0x1a]:         call @1211 // std.io#atomic<std#int>.static_init<atomic<std#int>>
27 [0x1b]:         movl 0
28 [0x1c]:         pushobj
29 [0x1d]:         call @1212 // std.io#atomic<std#int>.init<atomic<std#int>>
30 [0x1e]: line: 7 - 30pushl 1
31 [0x1f]:         movl 0
32 [0x20]:         movn #0
34 [0x22]:         popobj
35 [0x23]:         ret

read(): std#int
address: 1214
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 10 - 0movl 0
1 [0x1]:          _lck 
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          pushobj
6 [0x6]:          popl 1
7 [0x7]:          movl 0
8 [0x8]:          _ulck
9 [0x9]:          movl 1
10 [0xa]:          returnobj
11 [0xb]:          ret
12 [0xc]:          movl 0
13 [0xd]:          _ulck
14 [0xe]: line: 10 - 14movl 0
15 [0xf]:          _lck 
16 [0x10]:          movl 0
17 [0x11]:          movn #0
19 [0x13]:          pushobj
20 [0x14]:          popl 2
21 [0x15]:          movl 0
22 [0x16]:          _ulck
23 [0x17]:          movl 2
24 [0x18]:          returnobj
25 [0x19]:          ret
26 [0x1a]:          movl 0
27 [0x1b]:          _ulck

to_string(): std#string?
address: 1215
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 13 - 0movl 0
1 [0x1]:          _lck 
2 [0x2]: line: 14 - 2new_class @std#string
4 [0x4]:          dup 
5 [0x5]:          newstr @68 ()
6 [0x6]:          call @130 // std#string.string
7 [0x7]:          movl 0
8 [0x8]:          movn #0
10 [0xa]:          pushobj
11 [0xb]:          call @145 // std#string.operator+
12 [0xc]:          popl 1
13 [0xd]:          movl 0
14 [0xe]:          _ulck
15 [0xf]:          movl 1
16 [0x10]:          returnobj
17 [0x11]:          ret
18 [0x12]:          movl 0
19 [0x13]:          _ulck
20 [0x14]: line: 13 - 20movl 0
21 [0x15]:          _lck 
22 [0x16]: line: 14 - 22new_class @std#string
24 [0x18]:          dup 
25 [0x19]:          newstr @68 ()
26 [0x1a]:          call @130 // std#string.string
27 [0x1b]:          movl 0
28 [0x1c]:          movn #0
30 [0x1e]:          pushobj
31 [0x1f]:          call @145 // std#string.operator+
32 [0x20]:          popl 2
33 [0x21]:          movl 0
34 [0x22]:          _ulck
35 [0x23]:          movl 2
36 [0x24]:          returnobj
37 [0x25]:          ret
38 [0x26]:          movl 0
39 [0x27]:          _ulck

operator!=(_int32): std#bool
address: 1216
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 36 - 0movl 0
1 [0x1]:          _lck 
2 [0x2]:          ipushl #1
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          movn #0
8 [0x8]:          iload cx
9 [0x9]:          loadval ecx
10 [0xa]:          tne cx, ecx
11 [0xb]:          rstore bmr
12 [0xc]:          loadval egx
13 [0xd]:          mov32 egx, egx
14 [0xe]:          smovr_2 egx, fp+2
15 [0xf]:          movl 0
16 [0x10]:          _ulck
17 [0x11]:          new_class @std#bool
19 [0x13]:          dup 
20 [0x14]:          ipushl #2
21 [0x15]:          call @111 // std#bool.bool
22 [0x16]:          popobj2 
23 [0x17]:          returnobj
24 [0x18]:          ret
25 [0x19]:          movl 0
26 [0x1a]:          _ulck
27 [0x1b]: line: 36 - 27movl 0
28 [0x1c]:          _lck 
29 [0x1d]:          ipushl #1
30 [0x1e]:          movl 0
31 [0x1f]:          movn #0
33 [0x21]:          movn #0
35 [0x23]:          iload cx
36 [0x24]:          loadval ecx
37 [0x25]:          tne cx, ecx
38 [0x26]:          rstore bmr
39 [0x27]:          loadval egx
40 [0x28]:          mov32 egx, egx
41 [0x29]:          smovr_2 egx, fp+3
42 [0x2a]:          movl 0
43 [0x2b]:          _ulck
44 [0x2c]:          new_class @std#bool
46 [0x2e]:          dup 
47 [0x2f]:          ipushl #3
48 [0x30]:          call @111 // std#bool.bool
49 [0x31]:          popobj2 
50 [0x32]:          returnobj
51 [0x33]:          ret
52 [0x34]:          movl 0
53 [0x35]:          _ulck

operator==(_int32): std#bool
address: 1217
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 58 - 0movl 0
1 [0x1]:          _lck 
2 [0x2]:          ipushl #1
3 [0x3]:          movl 0
4 [0x4]:          movn #0
6 [0x6]:          movn #0
8 [0x8]:          iload cx
9 [0x9]:          loadval ecx
10 [0xa]:          test cx, ecx
11 [0xb]:          rstore bmr
12 [0xc]:          loadval egx
13 [0xd]:          mov32 egx, egx
14 [0xe]:          smovr_2 egx, fp+2
15 [0xf]:          movl 0
16 [0x10]:          _ulck
17 [0x11]:          new_class @std#bool
19 [0x13]:          dup 
20 [0x14]:          ipushl #2
21 [0x15]:          call @111 // std#bool.bool
22 [0x16]:          popobj2 
23 [0x17]:          returnobj
24 [0x18]:          ret
25 [0x19]:          movl 0
26 [0x1a]:          _ulck
27 [0x1b]: line: 58 - 27movl 0
28 [0x1c]:          _lck 
29 [0x1d]:          ipushl #1
30 [0x1e]:          movl 0
31 [0x1f]:          movn #0
33 [0x21]:          movn #0
35 [0x23]:          iload cx
36 [0x24]:          loadval ecx
37 [0x25]:          test cx, ecx
38 [0x26]:          rstore bmr
39 [0x27]:          loadval egx
40 [0x28]:          mov32 egx, egx
41 [0x29]:          smovr_2 egx, fp+3
42 [0x2a]:          movl 0
43 [0x2b]:          _ulck
44 [0x2c]:          new_class @std#bool
46 [0x2e]:          dup 
47 [0x2f]:          ipushl #3
48 [0x30]:          call @111 // std#bool.bool
49 [0x31]:          popobj2 
50 [0x32]:          returnobj
51 [0x33]:          ret
52 [0x34]:          movl 0
53 [0x35]:          _ulck

operator>(_int32): std#bool
address: 1218
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 146 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]:           ipushl #1
3 [0x3]:           movl 0
4 [0x4]:           movn #0
6 [0x6]:           movn #0
8 [0x8]:           iload cx
9 [0x9]:           loadval ecx
10 [0xa]:           gt cx, ecx
11 [0xb]:           rstore cmt
12 [0xc]:           loadval egx
13 [0xd]:           mov32 egx, egx
14 [0xe]:           smovr_2 egx, fp+2
15 [0xf]:           movl 0
16 [0x10]:           _ulck
17 [0x11]:           new_class @std#bool
19 [0x13]:           dup 
20 [0x14]:           ipushl #2
21 [0x15]:           call @111 // std#bool.bool
22 [0x16]:           popobj2 
23 [0x17]:           returnobj
24 [0x18]:           ret
25 [0x19]:           movl 0
26 [0x1a]:           _ulck
27 [0x1b]: line: 146 - 27movl 0
28 [0x1c]:           _lck 
29 [0x1d]:           ipushl #1
30 [0x1e]:           movl 0
31 [0x1f]:           movn #0
33 [0x21]:           movn #0
35 [0x23]:           iload cx
36 [0x24]:           loadval ecx
37 [0x25]:           gt cx, ecx
38 [0x26]:           rstore cmt
39 [0x27]:           loadval egx
40 [0x28]:           mov32 egx, egx
41 [0x29]:           smovr_2 egx, fp+3
42 [0x2a]:           movl 0
43 [0x2b]:           _ulck
44 [0x2c]:           new_class @std#bool
46 [0x2e]:           dup 
47 [0x2f]:           ipushl #3
48 [0x30]:           call @111 // std#bool.bool
49 [0x31]:           popobj2 
50 [0x32]:           returnobj
51 [0x33]:           ret
52 [0x34]:           movl 0
53 [0x35]:           _ulck

operator+(std#int): std#int
address: 1219
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 176 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]:           movl 1
3 [0x3]:           movn #0
5 [0x5]:           iload egx
6 [0x6]:           rstore egx
7 [0x7]:           movl 0
8 [0x8]:           movn #0
10 [0xa]:           movn #0
12 [0xc]:           iload cx
13 [0xd]:           loadval ecx
14 [0xe]:           add cx, ecx -> bmr
15 [0xf]:           rstore bmr
16 [0x10]:           loadval egx
17 [0x11]:           mov32 egx, egx
18 [0x12]:           smovr_2 egx, fp+2
19 [0x13]:           movl 0
20 [0x14]:           _ulck
21 [0x15]:           new_class @std#int
23 [0x17]:           dup 
24 [0x18]:           ipushl #2
25 [0x19]:           call @72 // std#int.int
26 [0x1a]:           popobj2 
27 [0x1b]:           returnobj
28 [0x1c]:           ret
29 [0x1d]:           movl 0
30 [0x1e]:           _ulck
31 [0x1f]: line: 176 - 31movl 0
32 [0x20]:           _lck 
33 [0x21]:           movl 1
34 [0x22]:           movn #0
36 [0x24]:           iload egx
37 [0x25]:           rstore egx
38 [0x26]:           movl 0
39 [0x27]:           movn #0
41 [0x29]:           movn #0
43 [0x2b]:           iload cx
44 [0x2c]:           loadval ecx
45 [0x2d]:           add cx, ecx -> bmr
46 [0x2e]:           rstore bmr
47 [0x2f]:           loadval egx
48 [0x30]:           mov32 egx, egx
49 [0x31]:           smovr_2 egx, fp+3
50 [0x32]:           movl 0
51 [0x33]:           _ulck
52 [0x34]:           new_class @std#int
54 [0x36]:           dup 
55 [0x37]:           ipushl #3
56 [0x38]:           call @72 // std#int.int
57 [0x39]:           popobj2 
58 [0x3a]:           returnobj
59 [0x3b]:           ret
60 [0x3c]:           movl 0
61 [0x3d]:           _ulck

operator=(std#double): std.io#atomic<std#int>
address: 1220
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 425 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]:           movl 0
3 [0x3]:           movn #0
5 [0x5]:           pushobj
6 [0x6]:           movl 1
7 [0x7]:           movn #0
9 [0x9]:           iload egx
10 [0xa]:           rstore egx
11 [0xb]:           call @337 // std#number<_int32, std#int>.set_value
12 [0xc]:           movl 0
13 [0xd]:           pushobj
14 [0xe]:           popl 2
15 [0xf]:           movl 0
16 [0x10]:           _ulck
17 [0x11]:           movl 2
18 [0x12]:           returnobj
19 [0x13]:           ret
20 [0x14]:           movl 0
21 [0x15]:           _ulck
22 [0x16]: line: 425 - 22movl 0
23 [0x17]:           _lck 
24 [0x18]:           movl 0
25 [0x19]:           movn #0
27 [0x1b]:           pushobj
28 [0x1c]:           movl 1
29 [0x1d]:           movn #0
31 [0x1f]:           iload egx
32 [0x20]:           rstore egx
33 [0x21]:           call @337 // std#number<_int32, std#int>.set_value
34 [0x22]:           movl 0
35 [0x23]:           pushobj
36 [0x24]:           popl 3
37 [0x25]:           movl 0
38 [0x26]:           _ulck
39 [0x27]:           movl 3
40 [0x28]:           returnobj
41 [0x29]:           ret
42 [0x2a]:           movl 0
43 [0x2b]:           _ulck

operator=(_int64): std.io#atomic<std#int>
address: 1221
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 433 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]:           movl 0
3 [0x3]:           movn #0
5 [0x5]:           pushobj
6 [0x6]:           ipushl #1
7 [0x7]:           call @337 // std#number<_int32, std#int>.set_value
8 [0x8]:           movl 0
9 [0x9]:           pushobj
10 [0xa]:           popl 2
11 [0xb]:           movl 0
12 [0xc]:           _ulck
13 [0xd]:           movl 2
14 [0xe]:           returnobj
15 [0xf]:           ret
16 [0x10]:           movl 0
17 [0x11]:           _ulck
18 [0x12]: line: 433 - 18movl 0
19 [0x13]:           _lck 
20 [0x14]:           movl 0
21 [0x15]:           movn #0
23 [0x17]:           pushobj
24 [0x18]:           ipushl #1
25 [0x19]:           call @337 // std#number<_int32, std#int>.set_value
26 [0x1a]:           movl 0
27 [0x1b]:           pushobj
28 [0x1c]:           popl 3
29 [0x1d]:           movl 0
30 [0x1e]:           _ulck
31 [0x1f]:           movl 3
32 [0x20]:           returnobj
33 [0x21]:           ret
34 [0x22]:           movl 0
35 [0x23]:           _ulck

operator++(var): std#int
address: 1222
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 614 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]:           new_class @std#int
4 [0x4]:           dup 
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           movn #0
10 [0xa]:           iload egx
11 [0xb]:           rstore egx
12 [0xc]:           iload egx
13 [0xd]:           inc egx
14 [0xe]:           mov32 egx, egx
15 [0xf]:           imov egx
16 [0x10]:           loadval ebx
17 [0x11]:           rstore ebx
18 [0x12]:           call @72 // std#int.int
19 [0x13]:           popl 2
20 [0x14]:           movl 0
21 [0x15]:           _ulck
22 [0x16]:           movl 2
23 [0x17]:           returnobj
24 [0x18]:           ret
25 [0x19]:           movl 0
26 [0x1a]:           _ulck
27 [0x1b]: line: 614 - 27movl 0
28 [0x1c]:           _lck 
29 [0x1d]:           new_class @std#int
31 [0x1f]:           dup 
32 [0x20]:           movl 0
33 [0x21]:           movn #0
35 [0x23]:           movn #0
37 [0x25]:           iload egx
38 [0x26]:           rstore egx
39 [0x27]:           iload egx
40 [0x28]:           inc egx
41 [0x29]:           mov32 egx, egx
42 [0x2a]:           imov egx
43 [0x2b]:           loadval ebx
44 [0x2c]:           rstore ebx
45 [0x2d]:           call @72 // std#int.int
46 [0x2e]:           popl 3
47 [0x2f]:           movl 0
48 [0x30]:           _ulck
49 [0x31]:           movl 3
50 [0x32]:           returnobj
51 [0x33]:           ret
52 [0x34]:           movl 0
53 [0x35]:           _ulck

operator--(var): std#int
address: 1223
file: /usr/include/sharp/0.3.0/std/io/atomic.sharp
owner: std.io#atomic<std#int>
frameStackOffset: 2
fpOffset: 1
spOffset: 1
stackSize: 4
code:

0 [0x0]: line: 616 - 0movl 0
1 [0x1]:           _lck 
2 [0x2]:           new_class @std#int
4 [0x4]:           dup 
5 [0x5]:           movl 0
6 [0x6]:           movn #0
8 [0x8]:           movn #0
10 [0xa]:           iload egx
11 [0xb]:           rstore egx
12 [0xc]:           iload egx
13 [0xd]:           dec egx
14 [0xe]:           mov32 egx, egx
15 [0xf]:           imov egx
16 [0x10]:           loadval ebx
17 [0x11]:           rstore ebx
18 [0x12]:           call @72 // std#int.int
19 [0x13]:           popl 2
20 [0x14]:           movl 0
21 [0x15]:           _ulck
22 [0x16]:           movl 2
23 [0x17]:           returnobj
24 [0x18]:           ret
25 [0x19]:           movl 0
26 [0x1a]:           _ulck
27 [0x1b]: line: 616 - 27movl 0
28 [0x1c]:           _lck 
29 [0x1d]:           new_class @std#int
31 [0x1f]:           dup 
32 [0x20]:           movl 0
33 [0x21]:           movn #0
35 [0x23]:           movn #0
37 [0x25]:           iload egx
38 [0x26]:           rstore egx
39 [0x27]:           iload egx
40 [0x28]:           dec egx
41 [0x29]:           mov32 egx, egx
42 [0x2a]:           imov egx
43 [0x2b]:           loadval ebx
44 [0x2c]:           rstore ebx
45 [0x2d]:           call @72 // std#int.int
46 [0x2e]:           popl 3
47 [0x2f]:           movl 0
48 [0x30]:           _ulck
49 [0x31]:           movl 3
50 [0x32]:           returnobj
51 [0x33]:           ret
52 [0x34]:           movl 0
53 [0x35]:           _ulck

static_init<job_master>(): nil
address: 1224
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_master.sharp
owner: std.io.coroutines#job_master
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io.coroutines#job_master
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io.coroutines#job_master
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<job_master>(): nil
address: 1225
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_master.sharp
owner: std.io.coroutines#job_master
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

job_master(): nil
address: 1226
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_master.sharp
owner: std.io.coroutines#job_master
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io.coroutines#job_master
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1224 // std.io.coroutines#job_master.static_init<job_master>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1225 // std.io.coroutines#job_master.init<job_master>
12 [0xc]: line: 10 - 12new_class @std.io#thread_group
14 [0xe]:          dup 
15 [0xf]:          new_class @std#string
17 [0x11]:          dup 
18 [0x12]:          newstr @93 (Long term jobs)
19 [0x13]:          call @130 // std#string.string
20 [0x14]:          movg @std.io#thread_priority
21 [0x15]:          movn #0
23 [0x17]:          pushobj
24 [0x18]:          call @1141 // std.io#thread_group.thread_group
25 [0x19]:          movl 0
26 [0x1a]:          movn #3
28 [0x1c]:          popobj
29 [0x1d]: line: 11 - 29new_class @std.io#thread_group
31 [0x1f]:          dup 
32 [0x20]:          new_class @std#string
34 [0x22]:          dup 
35 [0x23]:          newstr @94 (Short term jobs)
36 [0x24]:          call @130 // std#string.string
37 [0x25]:          movg @std.io#thread_priority
38 [0x26]:          movn #2
40 [0x28]:          pushobj
41 [0x29]:          call @1141 // std.io#thread_group.thread_group
42 [0x2a]:          movl 0
43 [0x2b]:          movn #4
45 [0x2d]:          popobj
46 [0x2e]: line: 12 - 46new_class @std.io#channel<std.io.coroutines#job>
48 [0x30]:          dup 
49 [0x31]:          movg @std.io#buffer_type
50 [0x32]:          movn #2
52 [0x34]:          pushobj
53 [0x35]:          call @1161 // std.io#channel<std.io.coroutines#job>.channel
54 [0x36]:          movl 0
55 [0x37]:          movn #1
57 [0x39]:          popobj
58 [0x3a]: line: 13 - 58new_class @std.io#channel<std#int>
60 [0x3c]:          dup 
61 [0x3d]:          movg @std.io#buffer_type
62 [0x3e]:          movn #2
64 [0x40]:          pushobj
65 [0x41]:          call @1189 // std.io#channel<std#int>.channel
66 [0x42]:          movl 0
67 [0x43]:          movn #2
69 [0x45]:          popobj
70 [0x46]: line: 14 - 70new_class @std#synced_list<std.io.coroutines#job>
72 [0x48]:          dup 
73 [0x49]:          call @981 // std#synced_list<std.io.coroutines#job>.synced_list
74 [0x4a]:          movl 0
75 [0x4b]:          movn #0
77 [0x4d]:          popobj
78 [0x4e]:          ret

create_job(): std.io.coroutines#job
address: 1227
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_master.sharp
owner: std.io.coroutines#job_master
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 24 - 0new_class @std.io.coroutines#job
2 [0x2]:          dup 
3 [0x3]:          new_class @std#string
5 [0x5]:          dup 
6 [0x6]:          newstr @95 (unnamed_job)
7 [0x7]:          call @130 // std#string.string
8 [0x8]:          call @1248 // std.io.coroutines#job.job
9 [0x9]:          popobj2 
10 [0xa]:          returnobj
11 [0xb]:          ret

start_job(std.io.coroutines#job): nil
address: 1228
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_master.sharp
owner: std.io.coroutines#job_master
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 29 - 0movl 1
1 [0x1]:          movn #14
3 [0x3]:          movn #0
5 [0x5]:          iload cmt
6 [0x6]:          jne 10
7 [0x7]: line: 30 - 7pushl 1
8 [0x8]:          call @1238 // std.io.coroutines#__srt_global.execute_synchronous
9 [0x9]:          jmp @16
10 [0xa]: line: 32 - 10movl 0
11 [0xb]:          movn #1
13 [0xd]:          pushobj
14 [0xe]:          pushl 1
15 [0xf]:          call @1164 // std.io#channel<std.io.coroutines#job>.send
16 [0x10]:          ret

add_job(std.io.coroutines#job): nil
address: 1229
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_master.sharp
owner: std.io.coroutines#job_master
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 37 - 0movl 0
1 [0x1]:          movn #0
3 [0x3]:          pushobj
4 [0x4]:          pushl 1
5 [0x5]:          call @984 // std#synced_list<std.io.coroutines#job>.add
6 [0x6]:          ret

cleanup_job(std.io.coroutines#job): nil
address: 1230
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_master.sharp
owner: std.io.coroutines#job_master
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 41 - 0pushnull 
1 [0x1]:          movl 1
2 [0x2]:          movn #8
4 [0x4]:          popobj
5 [0x5]: line: 42 - 5pushnull 
6 [0x6]:          movl 1
7 [0x7]:          movn #4
9 [0x9]:          popobj
10 [0xa]: line: 43 - 10pushnull 
11 [0xb]:          movl 1
12 [0xc]:          movn #7
14 [0xe]:          popobj
15 [0xf]: line: 44 - 15pushnull 
16 [0x10]:          movl 1
17 [0x11]:          movn #6
19 [0x13]:          popobj
20 [0x14]: line: 45 - 20movl 0
21 [0x15]:          movn #0
23 [0x17]:          pushobj
24 [0x18]:          pushl 1
25 [0x19]:          call @986 // std#synced_list<std.io.coroutines#job>.remove
26 [0x1a]:          ret

static_init<__srt_global>(): nil
address: 1231
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         new_class @std.io#atomic<std#int>
2 [0x2]:         dup 
3 [0x3]:         new_class @std#int
5 [0x5]:         dup 
6 [0x6]:         istore 0
8 [0x8]:         call @72 // std#int.int
9 [0x9]:         call @1213 // std.io#atomic<std#int>.atomic
10 [0xa]:         movg @std.io.coroutines#__srt_global
11 [0xb]:         movn #0
13 [0xd]:         popobj
14 [0xe]:         new_class @std.io#atomic<std#int>
16 [0x10]:         dup 
17 [0x11]:         new_class @std#int
19 [0x13]:         dup 
20 [0x14]:         istore 0
22 [0x16]:         call @72 // std#int.int
23 [0x17]:         call @1213 // std.io#atomic<std#int>.atomic
24 [0x18]:         movg @std.io.coroutines#__srt_global
25 [0x19]:         movn #1
27 [0x1b]:         popobj
28 [0x1c]:         istore 0
30 [0x1e]:         movg @std.io.coroutines#__srt_global
31 [0x1f]:         movn #2
33 [0x21]:         loadval egx
34 [0x22]:         imov egx
35 [0x23]:         istore 4
37 [0x25]:         movg @std.io.coroutines#__srt_global
38 [0x26]:         movn #4
40 [0x28]:         loadval egx
41 [0x29]:         imov egx
42 [0x2a]:         new_class @std#int
44 [0x2c]:         dup 
45 [0x2d]:         istore 0
47 [0x2f]:         call @79 // std#int.init<int>
48 [0x30]:         movg @std.io.coroutines#__srt_global
49 [0x31]:         movn #5
51 [0x33]:         popobj
52 [0x34]:         new_class @std.io.coroutines#job_master
54 [0x36]:         dup 
55 [0x37]:         call @1226 // std.io.coroutines#job_master.job_master
56 [0x38]:         movg @std.io.coroutines#__srt_global
57 [0x39]:         movn #9
59 [0x3b]:         popobj
60 [0x3c]:         ret

start_scheduler(): nil
address: 1232
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]: line: 18 - 0movg @std.io.coroutines#__srt_global
1 [0x1]:          movn #9
3 [0x3]:          _lck 
4 [0x4]: line: 19 - 4movg @std.io.coroutines#__srt_global
5 [0x5]:          movn #3
7 [0x7]:          checknull
8 [0x8]:          jne 48
9 [0x9]: line: 20 - 9istore 0
11 [0xb]:          movg @std.io.coroutines#__srt_global
12 [0xc]:          movn #2
14 [0xe]:          iload cx
15 [0xf]:          loadval ecx
16 [0x10]:          test cx, ecx
17 [0x11]:          movr cmt, bmr
18 [0x12]:          jne 20
19 [0x13]: line: 21 - 19call @1233 // std.io.coroutines#__srt_global.calculate_max_threads
20 [0x14]: line: 22 - 20new_class @std.io#thread
22 [0x16]:          dup 
23 [0x17]:          new_class @std#string
25 [0x19]:          dup 
26 [0x1a]:          newstr @96 (job_scheduler)
27 [0x1b]:          call @130 // std#string.string
28 [0x1c]:          istore 1235
30 [0x1e]:          movg @std.io.coroutines#__srt_global
31 [0x1f]:          movn #9
33 [0x21]:          movn #3
35 [0x23]:          pushobj
36 [0x24]:          call @1103 // std.io#thread.thread
37 [0x25]:          movg @std.io.coroutines#__srt_global
38 [0x26]:          movn #3
40 [0x28]:          popobj
41 [0x29]: line: 23 - 41movg @std.io.coroutines#__srt_global
42 [0x2a]:          movn #3
44 [0x2c]:          pushobj
45 [0x2d]:          pushnull 
46 [0x2e]:          call @1105 // std.io#thread.start
47 [0x2f]:          pop
48 [0x30]:          movg @std.io.coroutines#__srt_global
49 [0x31]:          movn #9
51 [0x33]:          _ulck
52 [0x34]:          ret

calculate_max_threads(): nil
address: 1233
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 1
fpOffset: -1
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 29 - 0call @25 // platform.kernel#vm.hardware_concurrency
1 [0x1]:          popobj2 
2 [0x2]:          movn #0
4 [0x4]:          iload egx
5 [0x5]:          rstore egx
6 [0x6]:          ipopl 0
7 [0x7]: line: 30 - 7ldc ecx @ 6 (2)
8 [0x8]:          loadl cx, fp+0
9 [0x9]:          sub cx, ecx -> bmr
10 [0xa]:          smovr_2 bmr, fp+0
11 [0xb]: line: 32 - 11istore 1
13 [0xd]:          loadl cx, fp+0
14 [0xe]:          loadval ecx
15 [0xf]:          lte cx, ecx
16 [0x10]:          jne 26
17 [0x11]: line: 33 - 17movg @std.io.coroutines#__srt_global
18 [0x12]:          movn #0
20 [0x14]:          pushobj
21 [0x15]:          istore 1
23 [0x17]:          call @1221 // std.io#atomic<std#int>.operator=
24 [0x18]:          pop
25 [0x19]:          jmp @60
26 [0x1a]: line: 35 - 26movg @std.io.coroutines#__srt_global
27 [0x1b]:          movn #0
29 [0x1d]:          pushobj
30 [0x1e]:          new_class @std#double
32 [0x20]:          dup 
33 [0x21]:          ldc egx @ 49 (0.75)
34 [0x22]:          rstore egx
35 [0x23]:          loadl cx, fp+0
36 [0x24]:          loadval ecx
37 [0x25]:          mul cx, ecx -> bmr
38 [0x26]:          rstore bmr
39 [0x27]:          call @121 // std#double.double
40 [0x28]:          call @1293 // std.math#__srt_global.round
41 [0x29]:          call @1220 // std.io#atomic<std#int>.operator=
42 [0x2a]:          pop
43 [0x2b]: line: 36 - 43movg @std.io.coroutines#__srt_global
44 [0x2c]:          movn #1
46 [0x2e]:          pushobj
47 [0x2f]:          new_class @std#double
49 [0x31]:          dup 
50 [0x32]:          ldc egx @ 50 (0.25)
51 [0x33]:          rstore egx
52 [0x34]:          loadl cx, fp+0
53 [0x35]:          loadval ecx
54 [0x36]:          mul cx, ecx -> bmr
55 [0x37]:          rstore bmr
56 [0x38]:          call @121 // std#double.double
57 [0x39]:          call @1293 // std.math#__srt_global.round
58 [0x3a]:          call @1220 // std.io#atomic<std#int>.operator=
59 [0x3b]:          pop
60 [0x3c]: line: 39 - 60movg @std.io.coroutines#__srt_global
61 [0x3d]:          movn #0
63 [0x3f]:          pushobj
64 [0x40]:          istore 0
66 [0x42]:          call @1217 // std.io#atomic<std#int>.operator==
67 [0x43]:          popobj2 
68 [0x44]:          movn #0
70 [0x46]:          iload cmt
71 [0x47]:          jne 80
72 [0x48]: line: 40 - 72movg @std.io.coroutines#__srt_global
73 [0x49]:          movn #0
75 [0x4b]:          pushobj
76 [0x4c]:          istore 1
78 [0x4e]:          call @1221 // std.io#atomic<std#int>.operator=
79 [0x4f]:          pop
80 [0x50]: line: 42 - 80movg @std.io.coroutines#__srt_global
81 [0x51]:          movn #1
83 [0x53]:          pushobj
84 [0x54]:          istore 0
86 [0x56]:          call @1217 // std.io#atomic<std#int>.operator==
87 [0x57]:          popobj2 
88 [0x58]:          movn #0
90 [0x5a]:          iload cmt
91 [0x5b]:          jne 100
92 [0x5c]: line: 43 - 92movg @std.io.coroutines#__srt_global
93 [0x5d]:          movn #1
95 [0x5f]:          pushobj
96 [0x60]:          istore 1
98 [0x62]:          call @1221 // std.io#atomic<std#int>.operator=
99 [0x63]:          pop
100 [0x64]: line: 45 - 100movg @std.io.coroutines#__srt_global
101 [0x65]:          movn #0
103 [0x67]:          pushobj
104 [0x68]:          movg @std.io.coroutines#__srt_global
105 [0x69]:          movn #1
107 [0x6b]:          pushobj
108 [0x6c]:          call @1214 // std.io#atomic<std#int>.read
109 [0x6d]:          call @1219 // std.io#atomic<std#int>.operator+
110 [0x6e]:          popobj2 
111 [0x6f]:          movn #0
113 [0x71]:          iload egx
114 [0x72]:          rstore egx
115 [0x73]:          movg @std.io.coroutines#__srt_global
116 [0x74]:          movn #2
118 [0x76]:          loadval egx
119 [0x77]:          imov egx
120 [0x78]:          ret

run_scheduler(): nil
address: 1234
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 12
fpOffset: -1
spOffset: 0
stackSize: 12
code:

0 [0x0]: line: 83 - 0movg @std.io.coroutines#__srt_global
1 [0x1]:          movn #9
3 [0x3]:          movn #1
5 [0x5]:          pushobj
6 [0x6]:          popl 0
7 [0x7]: line: 84 - 7movg @std.io.coroutines#__srt_global
8 [0x8]:          movn #9
10 [0xa]:          movn #2
12 [0xc]:          pushobj
13 [0xd]:          popl 1
14 [0xe]: line: 85 - 14istore 2
16 [0x10]:          ipopl 2
17 [0x11]: line: 86 - 17ipushl #2
18 [0x12]:          ldc cx @ 51 (60000)
19 [0x13]:          loadval ecx
20 [0x14]:          div cx, ecx -> bmr
21 [0x15]:          rstore bmr
22 [0x16]:          ipopl 3
23 [0x17]: line: 87 - 23ipushl #3
24 [0x18]:          ipopl 4
25 [0x19]: line: 88 - 25new_class @std#list<std#int>
27 [0x1b]:          dup 
28 [0x1c]:          call @1030 // std#list<std#int>.list
29 [0x1d]:          popl 5
30 [0x1e]: line: 90 - 30ldc cmt @ 5 (1)
31 [0x1f]:          jne 187
32 [0x20]: line: 92 - 32pushl 1
33 [0x21]:          new_class @std#int
35 [0x23]:          dup 
36 [0x24]:          istore 0
38 [0x26]:          call @72 // std#int.int
39 [0x27]:          call @1195 // std.io#channel<std#int>.avail_data
40 [0x28]:          popobj2 
41 [0x29]:          movn #0
43 [0x2b]:          iload cmt
44 [0x2c]:          jne 78
45 [0x2d]: line: 94 - 45istore 4294967295
47 [0x2f]:          ipopl 7
48 [0x30]:          pushl 1
49 [0x31]:          new_class @std#int
51 [0x33]:          dup 
52 [0x34]:          istore 0
54 [0x36]:          call @72 // std#int.int
55 [0x37]:          call @1192 // std.io#channel<std#int>.read_next
56 [0x38]:          call @1031 // std#list<std#int>.get_elements
57 [0x39]:          popl 8
58 [0x3a]:          iaddl 1, fp@7
60 [0x3c]:          loadl cx, fp+7
61 [0x3d]:          movl 8
62 [0x3e]:          sizeof ebx
63 [0x3f]:          movr ecx, ebx
64 [0x40]:          lt cx, ecx
65 [0x41]:          jne 77
66 [0x42]:          pushl 8
67 [0x43]:          loadl adx, fp+7
68 [0x44]:          popobj2 
69 [0x45]:          chklen adx
70 [0x46]:          movnd adx
71 [0x47]:          pushobj
72 [0x48]:          popl 6
73 [0x49]: line: 95 - 73pushl 5
74 [0x4a]:          pushl 6
75 [0x4b]:          call @1034 // std#list<std#int>.add
76 [0x4c]:          jmp @58
77 [0x4d]:          jmp @167
78 [0x4e]:          pushl 0
79 [0x4f]:          new_class @std#int
81 [0x51]:          dup 
82 [0x52]:          istore 0
84 [0x54]:          call @72 // std#int.int
85 [0x55]:          call @1169 // std.io#channel<std.io.coroutines#job>.avail_data
86 [0x56]:          popobj2 
87 [0x57]:          movn #0
89 [0x59]:          iload cmt
90 [0x5a]:          jne 167
91 [0x5b]: line: 100 - 91istore 4294967295
93 [0x5d]:           ipopl 10
94 [0x5e]:           pushl 0
95 [0x5f]:           new_class @std#int
97 [0x61]:           dup 
98 [0x62]:           istore 0
100 [0x64]:           call @72 // std#int.int
101 [0x65]:           call @1166 // std.io#channel<std.io.coroutines#job>.read_next
102 [0x66]:           call @1009 // std#list<std.io.coroutines#job>.get_elements
103 [0x67]:           popl 11
104 [0x68]:           iaddl 1, fp@10
106 [0x6a]:           loadl cx, fp+10
107 [0x6b]:           movl 11
108 [0x6c]:           sizeof ebx
109 [0x6d]:           movr ecx, ebx
110 [0x6e]:           lt cx, ecx
111 [0x6f]:           jne 165
112 [0x70]:           pushl 11
113 [0x71]:           loadl adx, fp+10
114 [0x72]:           popobj2 
115 [0x73]:           chklen adx
116 [0x74]:           movnd adx
117 [0x75]:           pushobj
118 [0x76]:           popl 9
119 [0x77]: line: 101 - 119pushl 5
120 [0x78]:           call @1035 // std#list<std#int>.empty
121 [0x79]:           call @957 // std#number<_int8, std#bool>.operator!
122 [0x7a]:           popobj2 
123 [0x7b]:           movn #0
125 [0x7d]:           iload cmt
126 [0x7e]:           jne 142
127 [0x7f]: line: 102 - 127movl 9
128 [0x80]:           movn #13
130 [0x82]:           pushobj
131 [0x83]:           pushl 5
132 [0x84]:           movl 9
133 [0x85]:           movn #13
135 [0x87]:           pushobj
136 [0x88]:           istore 1240
138 [0x8a]:           call @1036 // std#list<std#int>.find
139 [0x8b]:           itest cmt
140 [0x8c]:           jne 142
141 [0x8d]: line: 103 - 141jmp @30
142 [0x8e]: line: 106 - 142movg @std.io.coroutines#job_state
143 [0x8f]:           movn #3
145 [0x91]:           pushobj
146 [0x92]:           movl 9
147 [0x93]:           movn #17
149 [0x95]:           pushobj
150 [0x96]:           itest cmt
151 [0x97]:           jne 153
152 [0x98]: line: 107 - 152jmp @30
153 [0x99]: line: 109 - 153pushl 9
154 [0x9a]:           call @1239 // std.io.coroutines#__srt_global.execute_job
155 [0x9b]:           call @957 // std#number<_int8, std#bool>.operator!
156 [0x9c]:           popobj2 
157 [0x9d]:           movn #0
159 [0x9f]:           iload cmt
160 [0xa0]:           jne 164
161 [0xa1]: line: 110 - 161pushl 0
162 [0xa2]:           pushl 9
163 [0xa3]:           call @1164 // std.io#channel<std.io.coroutines#job>.send
164 [0xa4]:           jmp @104
165 [0xa5]: line: 114 - 165pushl 5
166 [0xa6]:           call @1033 // std#list<std#int>.clear
167 [0xa7]: line: 118 - 167istore 0
169 [0xa9]:           ipushl #4
170 [0xaa]:           isubl 1, fp@4
172 [0xac]:           loadval ebx
173 [0xad]:           movr cx, ebx
174 [0xae]:           loadval ecx
175 [0xaf]:           lte cx, ecx
176 [0xb0]:           jne 180
177 [0xb1]: line: 119 - 177ipushl #3
178 [0xb2]:           ipopl 4
179 [0xb3]: line: 120 - 179call @1237 // std.io.coroutines#__srt_global.kill_threads
180 [0xb4]: line: 123 - 180new_class @std#long
182 [0xb6]:           dup 
183 [0xb7]:           ipushl #2
184 [0xb8]:           call @55 // std#long.long
185 [0xb9]:           call @1272 // std.io.fiber#__srt_global.delay
186 [0xba]:           jmp @30
187 [0xbb]:           ret

scheduler_main(object[]): std#int
address: 1235
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 130 - 0call @1234 // std.io.coroutines#__srt_global.run_scheduler
1 [0x1]: line: 131 - 1new_class @std#int
3 [0x3]:           dup 
4 [0x4]:           istore 0
6 [0x6]:           call @74 // std#int.int
7 [0x7]:           popobj2 
8 [0x8]:           returnobj
9 [0x9]:           ret

get_host(std#bool): std.io#thread?
address: 1236
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 138 - 0movl 0
1 [0x1]:           movn #0
3 [0x3]:           iload cmt
4 [0x4]:           jne 14
5 [0x5]: line: 139 - 5movg @std.io.coroutines#__srt_global
6 [0x6]:           movn #9
8 [0x8]:           movn #3
10 [0xa]:           pushobj
11 [0xb]:           tls_movl 2
12 [0xc]:           popobj
13 [0xd]:           jmp @22
14 [0xe]: line: 141 - 14movg @std.io.coroutines#__srt_global
15 [0xf]:           movn #9
17 [0x11]:           movn #4
19 [0x13]:           pushobj
20 [0x14]:           tls_movl 2
21 [0x15]:           popobj
22 [0x16]: line: 143 - 22istore 0
24 [0x18]:           loadval ebx
25 [0x19]:           mov_abs ebx -> stack+0
26 [0x1a]: line: 144 - 26pushnull 
27 [0x1b]:           tls_movl 1
28 [0x1c]:           popobj
29 [0x1d]: line: 145 - 29tls_movl 2
30 [0x1e]:           pushobj
31 [0x1f]:           istore 1241
33 [0x21]:           call @1146 // std.io#thread_group.find
34 [0x22]:           pop
35 [0x23]: line: 161 - 35tls_movl 1
36 [0x24]:           checknull
37 [0x25]:           movr ebx, cmt
38 [0x26]:           not ebx, ebx
39 [0x27]:           movr cmt, ebx
40 [0x28]:           jne 56
41 [0x29]:           tls_movl 1
42 [0x2a]:           pushobj
43 [0x2b]:           call @1288 // std.io.fiber#fiber.poll
44 [0x2c]:           movg @std.io.coroutines#__srt_global
45 [0x2d]:           movn #4
47 [0x2f]:           iload egx
48 [0x30]:           rstore egx
49 [0x31]:           call @559 // std#number<_int32, std#int>.operator>=
50 [0x32]:           popobj2 
51 [0x33]:           movn #0
53 [0x35]:           iload cmt
54 [0x36]:           jne 56
55 [0x37]:           ldc cmt @ 5 (1)
56 [0x38]:           jne 82
57 [0x39]: line: 162 - 57pushl 0
58 [0x3a]:           movg @std.io.coroutines#__srt_global
59 [0x3b]:           movn #1
61 [0x3d]:           pushobj
62 [0x3e]:           istore 0
64 [0x40]:           call @1218 // std.io#atomic<std#int>.operator>
65 [0x41]:           call @954 // std#number<_int8, std#bool>.operator&&
66 [0x42]:           movg @std.io.coroutines#__srt_global
67 [0x43]:           movn #0
69 [0x45]:           pushobj
70 [0x46]:           istore 0
72 [0x48]:           call @1218 // std.io#atomic<std#int>.operator>
73 [0x49]:           call @955 // std#number<_int8, std#bool>.operator||
74 [0x4a]:           popobj2 
75 [0x4b]:           movn #0
77 [0x4d]:           iload cmt
78 [0x4e]:           jne 82
79 [0x4f]: line: 163 - 79pushnull 
80 [0x50]:           tls_movl 1
81 [0x51]:           popobj
82 [0x52]: line: 169 - 82tls_movl 1
83 [0x53]:           checknull
84 [0x54]:           jne 183
85 [0x55]: line: 170 - 85movl 0
86 [0x56]:           movn #0
88 [0x58]:           iload cmt
89 [0x59]:           jne 137
90 [0x5a]: line: 171 - 90movg @std.io.coroutines#__srt_global
91 [0x5b]:           movn #1
93 [0x5d]:           pushobj
94 [0x5e]:           istore 0
96 [0x60]:           call @1218 // std.io#atomic<std#int>.operator>
97 [0x61]:           popobj2 
98 [0x62]:           movn #0
100 [0x64]:           iload cmt
101 [0x65]:           jne 136
102 [0x66]: line: 172 - 102movg @std.io.coroutines#__srt_global
103 [0x67]:           movn #1
105 [0x69]:           pushobj
106 [0x6a]:           istore 1
108 [0x6c]:           call @1223 // std.io#atomic<std#int>.operator--
109 [0x6d]:           pop
110 [0x6e]: line: 173 - 110new_class @std.io#thread
112 [0x70]:           dup 
113 [0x71]:           new_class @std#string
115 [0x73]:           dup 
116 [0x74]:           newstr @97 (long_term_worker_thread#)
117 [0x75]:           call @130 // std#string.string
118 [0x76]:           tls_movl 2
119 [0x77]:           pushobj
120 [0x78]:           call @1143 // std.io#thread_group.size
121 [0x79]:           istore 1
123 [0x7b]:           call @401 // std#number<_int32, std#int>.operator+
124 [0x7c]:           call @145 // std#string.operator+
125 [0x7d]:           istore 1252
127 [0x7f]:           tls_movl 2
128 [0x80]:           pushobj
129 [0x81]:           call @1103 // std.io#thread.thread
130 [0x82]:           tls_movl 1
131 [0x83]:           popobj
132 [0x84]: line: 174 - 132tls_movl 1
133 [0x85]:           pushobj
134 [0x86]:           call @1106 // std.io#thread.start
135 [0x87]:           pop
136 [0x88]:           jmp @183
137 [0x89]: line: 177 - 137movg @std.io.coroutines#__srt_global
138 [0x8a]:           movn #0
140 [0x8c]:           pushobj
141 [0x8d]:           istore 0
143 [0x8f]:           call @1218 // std.io#atomic<std#int>.operator>
144 [0x90]:           popobj2 
145 [0x91]:           movn #0
147 [0x93]:           iload cmt
148 [0x94]:           jne 183
149 [0x95]: line: 178 - 149movg @std.io.coroutines#__srt_global
150 [0x96]:           movn #0
152 [0x98]:           pushobj
153 [0x99]:           istore 1
155 [0x9b]:           call @1223 // std.io#atomic<std#int>.operator--
156 [0x9c]:           pop
157 [0x9d]: line: 179 - 157new_class @std.io#thread
159 [0x9f]:           dup 
160 [0xa0]:           new_class @std#string
162 [0xa2]:           dup 
163 [0xa3]:           newstr @98 (worker_thread#)
164 [0xa4]:           call @130 // std#string.string
165 [0xa5]:           tls_movl 2
166 [0xa6]:           pushobj
167 [0xa7]:           call @1143 // std.io#thread_group.size
168 [0xa8]:           istore 1
170 [0xaa]:           call @401 // std#number<_int32, std#int>.operator+
171 [0xab]:           call @145 // std#string.operator+
172 [0xac]:           istore 1252
174 [0xae]:           tls_movl 2
175 [0xaf]:           pushobj
176 [0xb0]:           call @1103 // std.io#thread.thread
177 [0xb1]:           tls_movl 1
178 [0xb2]:           popobj
179 [0xb3]: line: 180 - 179tls_movl 1
180 [0xb4]:           pushobj
181 [0xb5]:           call @1106 // std.io#thread.start
182 [0xb6]:           pop
183 [0xb7]: line: 185 - 183tls_movl 1
184 [0xb8]:           returnobj
185 [0xb9]:           ret

kill_threads(): nil
address: 1237
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]: line: 189 - 0istore 3
2 [0x2]:           movg @std.io.coroutines#__srt_global
3 [0x3]:           movn #2
5 [0x5]:           iload cx
6 [0x6]:           loadval ecx
7 [0x7]:           lt cx, ecx
8 [0x8]:           jne 10
9 [0x9]: line: 190 - 9ret
10 [0xa]: line: 192 - 10movg @std.io.coroutines#__srt_global
11 [0xb]:           movn #9
13 [0xd]:           movn #3
15 [0xf]:           pushobj
16 [0x10]:           tls_movl 2
17 [0x11]:           popobj
18 [0x12]: line: 194 - 18istore 0
20 [0x14]:           loadval ebx
21 [0x15]:           mov_abs ebx -> stack+0
22 [0x16]: line: 195 - 22tls_movl 2
23 [0x17]:           pushobj
24 [0x18]:           istore 1242
26 [0x1a]:           call @1146 // std.io#thread_group.find
27 [0x1b]:           pop
28 [0x1c]: line: 204 - 28istore 1
30 [0x1e]:           load_abs stack+0 -> ebx
31 [0x1f]:           loadval ecx
32 [0x20]:           lt cx, ecx
33 [0x21]:           jne 35
34 [0x22]: line: 205 - 34ret
35 [0x23]: line: 207 - 35tls_movl 2
36 [0x24]:           pushobj
37 [0x25]:           istore 1243
39 [0x27]:           call @1146 // std.io#thread_group.find
40 [0x28]:           tls_movl 1
41 [0x29]:           popobj
42 [0x2a]: line: 215 - 42tls_movl 1
43 [0x2b]:           checknull
44 [0x2c]:           je 47
45 [0x2d]:           pushobj
46 [0x2e]:           call @1111 // std.io#thread.interrupt
47 [0x2f]: line: 216 - 47movg @std.io.coroutines#__srt_global
48 [0x30]:           movn #9
50 [0x32]:           movn #4
52 [0x34]:           pushobj
53 [0x35]:           tls_movl 2
54 [0x36]:           popobj
55 [0x37]: line: 218 - 55istore 0
57 [0x39]:           loadval ebx
58 [0x3a]:           mov_abs ebx -> stack+0
59 [0x3b]: line: 219 - 59tls_movl 2
60 [0x3c]:           pushobj
61 [0x3d]:           istore 1244
63 [0x3f]:           call @1146 // std.io#thread_group.find
64 [0x40]:           pop
65 [0x41]: line: 226 - 65istore 1
67 [0x43]:           load_abs stack+0 -> ebx
68 [0x44]:           loadval ecx
69 [0x45]:           lt cx, ecx
70 [0x46]:           jne 72
71 [0x47]: line: 227 - 71ret
72 [0x48]: line: 229 - 72tls_movl 2
73 [0x49]:           pushobj
74 [0x4a]:           istore 1245
76 [0x4c]:           call @1146 // std.io#thread_group.find
77 [0x4d]:           tls_movl 1
78 [0x4e]:           popobj
79 [0x4f]: line: 235 - 79tls_movl 1
80 [0x50]:           checknull
81 [0x51]:           je 84
82 [0x52]:           pushobj
83 [0x53]:           call @1111 // std.io#thread.interrupt
84 [0x54]:           ret

execute_synchronous(std.io.coroutines#job): nil
address: 1238
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 1
fpOffset: 0
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 239 - 0movl 0
1 [0x1]:           movn #11
3 [0x3]:           pushobj
4 [0x4]:           istore 0
6 [0x6]:           call @312 // std#number<_int64, std#long>.operator!=
7 [0x7]:           popobj2 
8 [0x8]:           movn #0
10 [0xa]:           iload cmt
11 [0xb]:           jne 19
12 [0xc]: line: 240 - 12movl 0
13 [0xd]:           movn #11
15 [0xf]:           pushobj
16 [0x10]:           call @260 // std#time.mills_time
17 [0x11]:           call @315 // std#number<_int64, std#long>.operator-
18 [0x12]:           popl 1
19 [0x13]: line: 242 - 19movl 0
20 [0x14]:           movn #11
22 [0x16]:           pushobj
23 [0x17]:           call @1272 // std.io.fiber#__srt_global.delay
24 [0x18]: line: 243 - 24pushl 0
25 [0x19]:           call @1253 // std.io.coroutines#job.execute
26 [0x1a]:           ret

execute_job(std.io.coroutines#job): std#bool
address: 1239
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 247 - 0movl 0
1 [0x1]:           movn #4
3 [0x3]:           checknull
4 [0x4]:           jne 12
5 [0x5]:           movl 0
6 [0x6]:           movn #15
8 [0x8]:           pushobj
9 [0x9]:           call @1236 // std.io.coroutines#__srt_global.get_host
10 [0xa]:           popobj2 
11 [0xb]:           jmp @15
12 [0xc]:           movl 0
13 [0xd]:           movn #4
15 [0xf]:           pushobj
16 [0x10]:           popl 1
17 [0x11]: line: 250 - 17movl 1
18 [0x12]:           checknull
19 [0x13]:           movr ebx, cmt
20 [0x14]:           not ebx, ebx
21 [0x15]:           movr cmt, ebx
22 [0x16]:           jne 72
23 [0x17]: line: 251 - 23pushl 1
24 [0x18]:           movl 0
25 [0x19]:           movn #4
27 [0x1b]:           popobj
28 [0x1c]: line: 252 - 28pushl 0
29 [0x1d]:           call @1250 // std.io.coroutines#job.execute_async
30 [0x1e]:           popl 2
31 [0x1f]: line: 254 - 31pushl 2
32 [0x20]:           istore 0
34 [0x22]:           call @375 // std#number<_int32, std#int>.operator!=
35 [0x23]:           popobj2 
36 [0x24]:           movn #0
38 [0x26]:           iload cmt
39 [0x27]:           jne 54
40 [0x28]: line: 255 - 40pushnull 
41 [0x29]:           movl 0
42 [0x2a]:           movn #4
44 [0x2c]:           popobj
45 [0x2d]: line: 256 - 45new_class @std#bool
47 [0x2f]:           dup 
48 [0x30]:           istore 0
50 [0x32]:           call @110 // std#bool.bool
51 [0x33]:           popobj2 
52 [0x34]:           returnobj
53 [0x35]:           ret
54 [0x36]: line: 259 - 54movg @std.io.coroutines#__srt_global
55 [0x37]:           movn #5
57 [0x39]:           pushobj
58 [0x3a]:           istore 1
60 [0x3c]:           call @739 // std#number<_int32, std#int>.operator++
61 [0x3d]:           pop
62 [0x3e]: line: 260 - 62new_class @std#bool
64 [0x40]:           dup 
65 [0x41]:           istore 1
67 [0x43]:           call @110 // std#bool.bool
68 [0x44]:           popobj2 
69 [0x45]:           returnobj
70 [0x46]:           ret
71 [0x47]:           jmp @81
72 [0x48]: line: 262 - 72new_class @std#bool
74 [0x4a]:           dup 
75 [0x4b]:           istore 0
77 [0x4d]:           call @110 // std#bool.bool
78 [0x4e]:           popobj2 
79 [0x4f]:           returnobj
80 [0x50]:           ret

@anonymous_fun_10953(std#int, std#int): std#bool
address: 1240
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]:         new_class @std#bool
2 [0x2]:         dup 
3 [0x3]:         pushl 1
4 [0x4]:         pushl 0
5 [0x5]:         itest cmt
6 [0x6]:         rstore cmt
7 [0x7]:         call @110 // std#bool.bool
8 [0x8]:         popobj2 
9 [0x9]:         returnobj
10 [0xa]:         ret

@anonymous_fun_10968(std.io#thread): std#bool
address: 1241
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 146 - 0movg @std.io.coroutines#__srt_global
1 [0x1]:           movn #3
3 [0x3]:           pushobj
4 [0x4]:           pushl 0
5 [0x5]:           itest cmt
6 [0x6]:           jne 16
7 [0x7]:           new_class @std#bool
9 [0x9]:           dup 
10 [0xa]:           istore 0
12 [0xc]:           call @110 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret
16 [0x10]: line: 148 - 16pushl 0
17 [0x11]:           call @1288 // std.io.fiber#fiber.poll
18 [0x12]:           popl 1
19 [0x13]: line: 149 - 19pushl 0
20 [0x14]:           call @1132 // std.io#thread.is_active
21 [0x15]:           call @957 // std#number<_int8, std#bool>.operator!
22 [0x16]:           pushl 1
23 [0x17]:           istore 1
25 [0x19]:           call @562 // std#number<_int32, std#int>.operator>=
26 [0x1a]:           call @955 // std#number<_int8, std#bool>.operator||
27 [0x1b]:           popobj2 
28 [0x1c]:           movn #0
30 [0x1e]:           iload cmt
31 [0x1f]:           jne 66
32 [0x20]: line: 150 - 32load_abs stack+0 -> ebx
33 [0x21]:           rstore ebx
34 [0x22]:           load_abs stack+0 -> ebx
35 [0x23]:           inc ebx
36 [0x24]:           mov_abs ebx -> stack+0
37 [0x25]:           loadval ebx
38 [0x26]: line: 152 - 38tls_movl 1
39 [0x27]:           checknull
40 [0x28]:           movr ebx, cmt
41 [0x29]:           not ebx, ebx
42 [0x2a]:           movr cmt, ebx
43 [0x2b]:           jne 55
44 [0x2c]:           tls_movl 1
45 [0x2d]:           pushobj
46 [0x2e]:           call @1288 // std.io.fiber#fiber.poll
47 [0x2f]:           pushl 1
48 [0x30]:           call @511 // std#number<_int32, std#int>.operator>
49 [0x31]:           popobj2 
50 [0x32]:           movn #0
52 [0x34]:           iload cmt
53 [0x35]:           jne 55
54 [0x36]:           ldc cmt @ 5 (1)
55 [0x37]:           jne 60
56 [0x38]: line: 153 - 56pushl 0
57 [0x39]:           tls_movl 1
58 [0x3a]:           popobj
59 [0x3b]:           jmp @66
60 [0x3c]:           tls_movl 1
61 [0x3d]:           checknull
62 [0x3e]:           jne 66
63 [0x3f]: line: 155 - 63pushl 0
64 [0x40]:           tls_movl 1
65 [0x41]:           popobj
66 [0x42]: line: 158 - 66new_class @std#bool
68 [0x44]:           dup 
69 [0x45]:           istore 0
71 [0x47]:           call @110 // std#bool.bool
72 [0x48]:           popobj2 
73 [0x49]:           returnobj
74 [0x4a]:           ret

@anonymous_fun_10988(std.io#thread): std#bool
address: 1242
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 196 - 0movg @std.io.coroutines#__srt_global
1 [0x1]:           movn #3
3 [0x3]:           pushobj
4 [0x4]:           pushl 0
5 [0x5]:           itest cmt
6 [0x6]:           jne 16
7 [0x7]:           new_class @std#bool
9 [0x9]:           dup 
10 [0xa]:           istore 0
12 [0xc]:           call @110 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret
16 [0x10]: line: 198 - 16pushl 0
17 [0x11]:           call @1132 // std.io#thread.is_active
18 [0x12]:           call @957 // std#number<_int8, std#bool>.operator!
19 [0x13]:           pushl 0
20 [0x14]:           call @1288 // std.io.fiber#fiber.poll
21 [0x15]:           istore 1
23 [0x17]:           call @522 // std#number<_int32, std#int>.operator>
24 [0x18]:           call @955 // std#number<_int8, std#bool>.operator||
25 [0x19]:           popobj2 
26 [0x1a]:           movn #0
28 [0x1c]:           iload cmt
29 [0x1d]:           jne 36
30 [0x1e]: line: 199 - 30load_abs stack+0 -> ebx
31 [0x1f]:           rstore ebx
32 [0x20]:           load_abs stack+0 -> ebx
33 [0x21]:           inc ebx
34 [0x22]:           mov_abs ebx -> stack+0
35 [0x23]:           loadval ebx
36 [0x24]: line: 201 - 36new_class @std#bool
38 [0x26]:           dup 
39 [0x27]:           istore 0
41 [0x29]:           call @110 // std#bool.bool
42 [0x2a]:           popobj2 
43 [0x2b]:           returnobj
44 [0x2c]:           ret

@anonymous_fun_10996(std.io#thread): std#bool
address: 1243
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 209 - 0movg @std.io.coroutines#__srt_global
1 [0x1]:           movn #3
3 [0x3]:           pushobj
4 [0x4]:           pushl 0
5 [0x5]:           itest cmt
6 [0x6]:           jne 16
7 [0x7]:           new_class @std#bool
9 [0x9]:           dup 
10 [0xa]:           istore 0
12 [0xc]:           call @110 // std#bool.bool
13 [0xd]:           popobj2 
14 [0xe]:           returnobj
15 [0xf]:           ret
16 [0x10]: line: 211 - 16pushl 0
17 [0x11]:           call @1132 // std.io#thread.is_active
18 [0x12]:           pushl 0
19 [0x13]:           call @1288 // std.io.fiber#fiber.poll
20 [0x14]:           istore 1
22 [0x16]:           call @376 // std#number<_int32, std#int>.operator==
23 [0x17]:           call @954 // std#number<_int8, std#bool>.operator&&
24 [0x18]:           popobj2 
25 [0x19]:           returnobj
26 [0x1a]:           ret

@anonymous_fun_11001(std.io#thread): std#bool
address: 1244
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 220 - 0pushl 0
1 [0x1]:           call @1132 // std.io#thread.is_active
2 [0x2]:           call @957 // std#number<_int8, std#bool>.operator!
3 [0x3]:           pushl 0
4 [0x4]:           call @1288 // std.io.fiber#fiber.poll
5 [0x5]:           istore 1
7 [0x7]:           call @522 // std#number<_int32, std#int>.operator>
8 [0x8]:           call @955 // std#number<_int8, std#bool>.operator||
9 [0x9]:           popobj2 
10 [0xa]:           movn #0
12 [0xc]:           iload cmt
13 [0xd]:           jne 20
14 [0xe]: line: 221 - 14load_abs stack+0 -> ebx
15 [0xf]:           rstore ebx
16 [0x10]:           load_abs stack+0 -> ebx
17 [0x11]:           inc ebx
18 [0x12]:           mov_abs ebx -> stack+0
19 [0x13]:           loadval ebx
20 [0x14]: line: 223 - 20new_class @std#bool
22 [0x16]:           dup 
23 [0x17]:           istore 0
25 [0x19]:           call @110 // std#bool.bool
26 [0x1a]:           popobj2 
27 [0x1b]:           returnobj
28 [0x1c]:           ret

@anonymous_fun_11007(std.io#thread): std#bool
address: 1245
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_scheduler.sharp
owner: std.io.coroutines#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 231 - 0pushl 0
1 [0x1]:           call @1132 // std.io#thread.is_active
2 [0x2]:           pushl 0
3 [0x3]:           call @1288 // std.io.fiber#fiber.poll
4 [0x4]:           istore 1
6 [0x6]:           call @376 // std#number<_int32, std#int>.operator==
7 [0x7]:           call @954 // std#number<_int8, std#bool>.operator&&
8 [0x8]:           popobj2 
9 [0x9]:           returnobj
10 [0xa]:           ret

static_init<job>(): nil
address: 1246
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io.coroutines#job
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io.coroutines#job
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<job>(): nil
address: 1247
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#string
2 [0x2]:         dup 
3 [0x3]:         call @176 // std#string.string
4 [0x4]:         movl 0
5 [0x5]:         movn #6
7 [0x7]:         popobj
8 [0x8]:         new_class @std#long
10 [0xa]:         dup 
11 [0xb]:         istore 0
13 [0xd]:         call @58 // std#long.init<long>
14 [0xe]:         movl 0
15 [0xf]:         movn #9
17 [0x11]:         popobj
18 [0x12]:         new_class @std#long
20 [0x14]:         dup 
21 [0x15]:         istore 0
23 [0x17]:         call @58 // std#long.init<long>
24 [0x18]:         movl 0
25 [0x19]:         movn #10
27 [0x1b]:         popobj
28 [0x1c]:         new_class @std#long
30 [0x1e]:         dup 
31 [0x1f]:         istore 0
33 [0x21]:         call @58 // std#long.init<long>
34 [0x22]:         movl 0
35 [0x23]:         movn #11
37 [0x25]:         popobj
38 [0x26]:         new_class @std#bool
40 [0x28]:         dup 
41 [0x29]:         istore 0
43 [0x2b]:         call @112 // std#bool.init<bool>
44 [0x2c]:         movl 0
45 [0x2d]:         movn #12
47 [0x2f]:         popobj
48 [0x30]:         new_class @std#int
50 [0x32]:         dup 
51 [0x33]:         istore 0
53 [0x35]:         call @79 // std#int.init<int>
54 [0x36]:         movl 0
55 [0x37]:         movn #13
57 [0x39]:         popobj
58 [0x3a]:         new_class @std#bool
60 [0x3c]:         dup 
61 [0x3d]:         istore 0
63 [0x3f]:         call @112 // std#bool.init<bool>
64 [0x40]:         movl 0
65 [0x41]:         movn #14
67 [0x43]:         popobj
68 [0x44]:         new_class @std#bool
70 [0x46]:         dup 
71 [0x47]:         istore 0
73 [0x49]:         call @112 // std#bool.init<bool>
74 [0x4a]:         movl 0
75 [0x4b]:         movn #15
77 [0x4d]:         popobj
78 [0x4e]:         new_class @std#bool
80 [0x50]:         dup 
81 [0x51]:         istore 0
83 [0x53]:         call @112 // std#bool.init<bool>
84 [0x54]:         movl 0
85 [0x55]:         movn #16
87 [0x57]:         popobj
88 [0x58]:         movg @std.io.coroutines#job_state
89 [0x59]:         movn #0
91 [0x5b]:         pushobj
92 [0x5c]:         movl 0
93 [0x5d]:         movn #17
95 [0x5f]:         popobj
96 [0x60]:         ret

job(std#string): nil
address: 1248
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io.coroutines#job
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1246 // std.io.coroutines#job.static_init<job>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1247 // std.io.coroutines#job.init<job>
12 [0xc]: line: 13 - 12pushl 1
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #6
17 [0x11]:          popobj
18 [0x12]: line: 14 - 18call @46 // std#__srt_global.rand_int
19 [0x13]:          movl 0
20 [0x14]:          movl 0
21 [0x15]:          movn #13
23 [0x17]:          popobj
24 [0x18]:          ret

to_string(): std#string
address: 1249
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 18 - 0new_class @std#string
2 [0x2]:          dup 
3 [0x3]:          newstr @99 (job()
4 [0x4]:          call @130 // std#string.string
5 [0x5]:          movl 0
6 [0x6]:          movn #6
8 [0x8]:          pushobj
9 [0x9]:          call @146 // std#string.operator+
10 [0xa]:          newstr @100 (): )
11 [0xb]:          call @143 // std#string.operator+
12 [0xc]:          movl 0
13 [0xd]:          movn #13
15 [0xf]:          pushobj
16 [0x10]:          call @145 // std#string.operator+
17 [0x11]:          popobj2 
18 [0x12]:          returnobj
19 [0x13]:          ret

execute_async(): std#int
address: 1250
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 22 - 0movg @std.io.coroutines#job_state
1 [0x1]:          movn #0
3 [0x3]:          pushobj
4 [0x4]:          movl 0
5 [0x5]:          movn #17
7 [0x7]:          pushobj
8 [0x8]:          itest cmt
9 [0x9]:          jne 86
10 [0xa]: line: 23 - 10movl 0
11 [0xb]:          movn #4
13 [0xd]:          checknull
14 [0xe]:          je 17
15 [0xf]:          pushobj
16 [0x10]:          call @1132 // std.io#thread.is_active
17 [0x11]:          call @957 // std#number<_int8, std#bool>.operator!
18 [0x12]:          popobj2 
19 [0x13]:          movn #0
21 [0x15]:          iload cmt
22 [0x16]:          jne 46
23 [0x17]: line: 24 - 23movg @std.io#thread_result
24 [0x18]:          movn #0
26 [0x1a]:          pushobj
27 [0x1b]:          movl 0
28 [0x1c]:          movn #4
30 [0x1e]:          checknull
31 [0x1f]:          je 34
32 [0x20]:          pushobj
33 [0x21]:          call @1106 // std.io#thread.start
34 [0x22]:          itest cmt
35 [0x23]:          not cmt, cmt
36 [0x24]:          jne 46
37 [0x25]: line: 26 - 37new_class @std#int
39 [0x27]:          dup 
40 [0x28]:          istore 2
42 [0x2a]:          call @74 // std#int.int
43 [0x2b]:          popobj2 
44 [0x2c]:          returnobj
45 [0x2d]:          ret
46 [0x2e]: line: 30 - 46pushnull 
47 [0x2f]:          popl 1
48 [0x30]: line: 31 - 48movl 0
49 [0x31]:          movn #16
51 [0x33]:          pushobj
52 [0x34]:          call @957 // std#number<_int8, std#bool>.operator!
53 [0x35]:          popobj2 
54 [0x36]:          movn #0
56 [0x38]:          iload cmt
57 [0x39]:          jne 63
58 [0x3a]:          movl 0
59 [0x3b]:          movn #4
61 [0x3d]:          pushobj
62 [0x3e]:          popl 1
63 [0x3f]: line: 33 - 63istore 1256
65 [0x41]:          pushl 1
66 [0x42]:          ldc adx @ 5 (1)
67 [0x43]:          newobj_arry adx
68 [0x44]:          movl 0
69 [0x45]:          pushobj
70 [0x46]:          movsl #-1
71 [0x47]:          movn #0
73 [0x49]:          popobj
74 [0x4a]:          call @1273 // std.io.fiber#__srt_global.slice
75 [0x4b]:          pop
76 [0x4c]: line: 38 - 76new_class @std#int
78 [0x4e]:          dup 
79 [0x4f]:          istore 0
81 [0x51]:          call @74 // std#int.int
82 [0x52]:          popobj2 
83 [0x53]:          returnobj
84 [0x54]:          ret
85 [0x55]:          jmp @105
86 [0x56]:          movg @std.io.coroutines#job_state
87 [0x57]:          movn #1
89 [0x59]:          pushobj
90 [0x5a]:          movl 0
91 [0x5b]:          movn #17
93 [0x5d]:          pushobj
94 [0x5e]:          itest cmt
95 [0x5f]:          jne 105
96 [0x60]: line: 40 - 96new_class @std#int
98 [0x62]:          dup 
99 [0x63]:          istore 1
101 [0x65]:          call @74 // std#int.int
102 [0x66]:          popobj2 
103 [0x67]:          returnobj
104 [0x68]:          ret
105 [0x69]: line: 43 - 105new_class @std#int
107 [0x6b]:          dup 
108 [0x6c]:          istore 2
110 [0x6e]:          call @74 // std#int.int
111 [0x6f]:          popobj2 
112 [0x70]:          returnobj
113 [0x71]:          ret

operator=(*(object[])(nil)): nil
address: 1251
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 88 - 0ipushl #1
1 [0x1]:          movl 0
2 [0x2]:          movn #1
4 [0x4]:          loadval egx
5 [0x5]:          imov egx
6 [0x6]:          ret

job_main(object[]): std#int
address: 1252
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 100 - 0new_class @std#long
2 [0x2]: line: 101 - 0dup 
3 [0x3]:           istore 10000
5 [0x5]:           call @56 // std#long.long
6 [0x6]:           call @1272 // std.io.fiber#__srt_global.delay
7 [0x7]:           jmp @0
8 [0x8]: line: 103 - 8new_class @std#int
10 [0xa]:           dup 
11 [0xb]:           istore 0
13 [0xd]:           call @74 // std#int.int
14 [0xe]:           popobj2 
15 [0xf]:           returnobj
16 [0x10]:           ret

execute(): nil
address: 1253
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 1
fpOffset: 0
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 107 - 0call @260 // std#time.mills_time
1 [0x1]:           movl 0
2 [0x2]:           movn #9
4 [0x4]:           popobj
5 [0x5]: line: 108 - 5movg @std.io.coroutines#__srt_global
6 [0x6]:           movn #9
8 [0x8]:           pushobj
9 [0x9]:           movl 0
10 [0xa]:           pushobj
11 [0xb]:           call @1229 // std.io.coroutines#job_master.add_job
12 [0xc]: line: 109 - 12call @1287 // std.io.fiber#fiber.current
13 [0xd]:           movl 0
14 [0xe]:           movn #5
16 [0x10]:           popobj
17 [0x11]: line: 110 - 17movg @std.io.coroutines#job_state
18 [0x12]:           movn #1
20 [0x14]:           pushobj
21 [0x15]:           movl 0
22 [0x16]:           movn #17
24 [0x18]:           popobj
25 [0x19]: line: 112 - 25movl 0
26 [0x1a]: line: 113 - 25movn #11
28 [0x1c]:           pushobj
29 [0x1d]:           istore 0
31 [0x1f]:           call @320 // std#number<_int64, std#long>.operator>
32 [0x20]:           popobj2 
33 [0x21]:           movn #0
35 [0x23]:           iload cmt
36 [0x24]:           jne 42
37 [0x25]: line: 114 - 37movl 0
38 [0x26]:           movn #11
40 [0x28]:           pushobj
41 [0x29]:           call @1272 // std.io.fiber#__srt_global.delay
42 [0x2a]: line: 116 - 42istore 0
44 [0x2c]:           movl 0
45 [0x2d]:           movn #0
47 [0x2f]:           iload cx
48 [0x30]:           loadval ecx
49 [0x31]:           tne cx, ecx
50 [0x32]:           movr cmt, bmr
51 [0x33]:           jne 59
52 [0x34]: line: 117 - 52movl 0
53 [0x35]:           movn #0
55 [0x37]:           iload cx
56 [0x38]:           movr egx, cx
57 [0x39]:           calld egx
58 [0x3a]:           jmp @125
59 [0x3b]:           istore 0
61 [0x3d]:           movl 0
62 [0x3e]:           movn #1
64 [0x40]:           iload cx
65 [0x41]:           loadval ecx
66 [0x42]:           tne cx, ecx
67 [0x43]:           movr cmt, bmr
68 [0x44]:           jne 80
69 [0x45]: line: 118 - 69movl 0
70 [0x46]:           movn #1
72 [0x48]:           iload cx
73 [0x49]:           movl 0
74 [0x4a]:           movn #7
76 [0x4c]:           pushobj
77 [0x4d]:           movr egx, cx
78 [0x4e]:           calld egx
79 [0x4f]:           jmp @125
80 [0x50]:           istore 0
82 [0x52]:           movl 0
83 [0x53]:           movn #2
85 [0x55]:           iload cx
86 [0x56]:           loadval ecx
87 [0x57]:           tne cx, ecx
88 [0x58]:           movr cmt, bmr
89 [0x59]:           jne 105
90 [0x5a]: line: 119 - 90movl 0
91 [0x5b]:           movn #2
93 [0x5d]:           iload cx
94 [0x5e]:           movl 0
95 [0x5f]:           movn #8
97 [0x61]:           pushobj
98 [0x62]:           movl 0
99 [0x63]:           movn #7
101 [0x65]:           pushobj
102 [0x66]:           movr egx, cx
103 [0x67]:           calld egx
104 [0x68]:           jmp @125
105 [0x69]:           istore 0
107 [0x6b]:           movl 0
108 [0x6c]:           movn #3
110 [0x6e]:           iload cx
111 [0x6f]:           loadval ecx
112 [0x70]:           tne cx, ecx
113 [0x71]:           movr cmt, bmr
114 [0x72]:           jne 125
115 [0x73]: line: 120 - 115movl 0
116 [0x74]:           movn #3
118 [0x76]:           iload cx
119 [0x77]:           movl 0
120 [0x78]:           movn #8
122 [0x7a]:           pushobj
123 [0x7b]:           movr egx, cx
124 [0x7c]:           calld egx
125 [0x7d]: line: 123 - 125movl 0
126 [0x7e]:           movn #12
128 [0x80]:           movn #0
130 [0x82]:           iload cmt
131 [0x83]:           jne 135
132 [0x84]: line: 124 - 132movl 0
133 [0x85]:           pushobj
134 [0x86]:           call @1255 // std.io.coroutines#job.reschedule
135 [0x87]: line: 126 - 135movg @std.io.coroutines#job_state
136 [0x88]:           movn #2
138 [0x8a]:           pushobj
139 [0x8b]:           movl 0
140 [0x8c]:           movn #17
142 [0x8e]:           popobj
143 [0x8f]: line: 127 - 143movg @std.io.coroutines#__srt_global
144 [0x90]:           movn #9
146 [0x92]:           pushobj
147 [0x93]:           movl 0
148 [0x94]:           pushobj
149 [0x95]:           call @1230 // std.io.coroutines#job_master.cleanup_job
150 [0x96]:           jmp @201
151 [0x97]: line: 129 - 151movg @std.io.coroutines#job_state
152 [0x98]:           movn #3
154 [0x9a]:           pushobj
155 [0x9b]:           movl 0
156 [0x9c]:           movn #17
158 [0x9e]:           popobj
159 [0x9f]: line: 130 - 159movg @std.io.coroutines#__srt_global
160 [0xa0]:           movn #9
162 [0xa2]:           pushobj
163 [0xa3]:           movl 0
164 [0xa4]:           pushobj
165 [0xa5]:           call @1230 // std.io.coroutines#job_master.cleanup_job
166 [0xa6]:           jmp @201
167 [0xa7]: line: 132 - 167movg @std.io.coroutines#job_state
168 [0xa8]:           movn #3
170 [0xaa]:           pushobj
171 [0xab]:           movl 0
172 [0xac]:           movn #17
174 [0xae]:           popobj
175 [0xaf]: line: 133 - 175movg @std.io.coroutines#__srt_global
176 [0xb0]:           movn #9
178 [0xb2]:           pushobj
179 [0xb3]:           movl 0
180 [0xb4]:           pushobj
181 [0xb5]:           call @1230 // std.io.coroutines#job_master.cleanup_job
182 [0xb6]: line: 134 - 182movl 0
183 [0xb7]:           movn #14
185 [0xb9]:           pushobj
186 [0xba]:           call @957 // std#number<_int8, std#bool>.operator!
187 [0xbb]:           popobj2 
188 [0xbc]:           movn #0
190 [0xbe]:           iload cmt
191 [0xbf]:           jne 198
192 [0xc0]: line: 135 - 192movl 0
193 [0xc1]:           movn #5
195 [0xc3]:           pushobj
196 [0xc4]:           call @1285 // std.io.fiber#fiber.unbind
197 [0xc5]:           pop
198 [0xc6]: line: 136 - 198pushl 1
199 [0xc7]:           throw 
200 [0xc8]:           jmp @201
201 [0xc9]:           ret

update_interval(std#long, std#time_unit): nil
address: 1254
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 0
fpOffset: 2
spOffset: 3
stackSize: 3
code:

0 [0x0]: line: 144 - 0movl 0
1 [0x1]:           movn #12
3 [0x3]:           pushobj
4 [0x4]:           call @957 // std#number<_int8, std#bool>.operator!
5 [0x5]:           popobj2 
6 [0x6]:           movn #0
8 [0x8]:           iload cmt
9 [0x9]:           jne 20
10 [0xa]: line: 145 - 10new_class @std#illegal_state_exception
12 [0xc]:           dup 
13 [0xd]:           new_class @std#string
15 [0xf]:           dup 
16 [0x10]:           newstr @101 (cannot set update restart interval on non-recurring job)
17 [0x11]:           call @130 // std#string.string
18 [0x12]:           call @207 // std#illegal_state_exception.illegal_state_exception
19 [0x13]:           throw 
20 [0x14]: line: 147 - 20movg @std#time_unit
21 [0x15]:           movn #3
23 [0x17]:           pushobj
24 [0x18]:           pushl 2
25 [0x19]:           itest cmt
26 [0x1a]:           jne 34
27 [0x1b]: line: 148 - 27pushl 1
28 [0x1c]:           call @259 // std#time.nano_to_mills
29 [0x1d]:           movl 0
30 [0x1e]:           movn #10
32 [0x20]:           popobj
33 [0x21]:           jmp @78
34 [0x22]:           movg @std#time_unit
35 [0x23]:           movn #2
37 [0x25]:           pushobj
38 [0x26]:           pushl 2
39 [0x27]:           itest cmt
40 [0x28]:           jne 50
41 [0x29]: line: 150 - 41pushl 1
42 [0x2a]:           istore 1000
44 [0x2c]:           call @318 // std#number<_int64, std#long>.operator/
45 [0x2d]:           movl 0
46 [0x2e]:           movn #10
48 [0x30]:           popobj
49 [0x31]:           jmp @78
50 [0x32]:           movg @std#time_unit
51 [0x33]:           movn #1
53 [0x35]:           pushobj
54 [0x36]:           pushl 2
55 [0x37]:           itest cmt
56 [0x38]:           jne 63
57 [0x39]: line: 152 - 57pushl 1
58 [0x3a]:           movl 0
59 [0x3b]:           movn #10
61 [0x3d]:           popobj
62 [0x3e]:           jmp @78
63 [0x3f]:           movg @std#time_unit
64 [0x40]:           movn #0
66 [0x42]:           pushobj
67 [0x43]:           pushl 2
68 [0x44]:           itest cmt
69 [0x45]:           jne 78
70 [0x46]: line: 154 - 70pushl 1
71 [0x47]:           istore 1000
73 [0x49]:           call @317 // std#number<_int64, std#long>.operator*
74 [0x4a]:           movl 0
75 [0x4b]:           movn #10
77 [0x4d]:           popobj
78 [0x4e]: line: 157 - 78movg @std.io.coroutines#job_state
79 [0x4f]:           movn #1
81 [0x51]:           pushobj
82 [0x52]:           movl 0
83 [0x53]:           movn #17
85 [0x55]:           pushobj
86 [0x56]:           itest cmt
87 [0x57]:           jne 91
88 [0x58]: line: 158 - 88movl 0
89 [0x59]:           pushobj
90 [0x5a]:           call @1255 // std.io.coroutines#job.reschedule
91 [0x5b]:           ret

reschedule(): nil
address: 1255
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 5
fpOffset: 0
spOffset: 1
stackSize: 6
code:

0 [0x0]: line: 163 - 0movl 0
1 [0x1]:           movn #9
3 [0x3]:           pushobj
4 [0x4]:           movl 0
5 [0x5]:           movn #10
7 [0x7]:           pushobj
8 [0x8]:           call @313 // std#number<_int64, std#long>.operator+
9 [0x9]:           call @260 // std#time.mills_time
10 [0xa]:           popobj2 
11 [0xb]:           movn #0
13 [0xd]:           iload egx
14 [0xe]:           rstore egx
15 [0xf]:           call @316 // std#number<_int64, std#long>.operator-
16 [0x10]:           popl 1
17 [0x11]: line: 164 - 17call @1267 // std.io.coroutines#coroutine.builder
18 [0x12]:           movl 0
19 [0x13]:           movn #6
21 [0x15]:           pushobj
22 [0x16]:           call @1262 // std.io.coroutines#coroutine_builder.with_name
23 [0x17]:           movl 0
24 [0x18]:           movn #13
26 [0x1a]:           pushobj
27 [0x1b]:           call @1263 // std.io.coroutines#coroutine_builder.with_tag
28 [0x1c]:           movl 0
29 [0x1d]:           movn #10
31 [0x1f]:           pushobj
32 [0x20]:           movg @std#time_unit
33 [0x21]:           movn #1
35 [0x23]:           pushobj
36 [0x24]:           call @1261 // std.io.coroutines#coroutine_builder.recurring
37 [0x25]:           popl 2
38 [0x26]: line: 169 - 38istore 1
40 [0x28]:           movl 0
41 [0x29]:           movn #7
43 [0x2b]:           sizeof ebx
44 [0x2c]:           movr cx, ebx
45 [0x2d]:           loadval ecx
46 [0x2e]:           sub cx, ecx -> bmr
47 [0x2f]:           movr adx, bmr
48 [0x30]:           newobj_arry adx
49 [0x31]:           popl 3
50 [0x32]: line: 170 - 50new_class @std#int
52 [0x34]:           dup 
53 [0x35]:           istore 0
55 [0x37]:           call @79 // std#int.init<int>
56 [0x38]:           popl 4
57 [0x39]: line: 171 - 57new_class @std#int
59 [0x3b]:           dup 
60 [0x3c]:           istore 1
62 [0x3e]:           call @79 // std#int.init<int>
63 [0x3f]:           popl 5
64 [0x40]:           pushl 5
65 [0x41]:           movl 0
66 [0x42]:           movn #7
68 [0x44]:           sizeof ebx
69 [0x45]:           rstore ebx
70 [0x46]:           call @502 // std#number<_int32, std#int>.operator<
71 [0x47]:           popobj2 
72 [0x48]:           movn #0
74 [0x4a]:           iload cmt
75 [0x4b]:           jne 107
76 [0x4c]: line: 172 - 76movl 0
77 [0x4d]:           movn #7
79 [0x4f]:           pushobj
80 [0x50]:           movl 5
81 [0x51]:           movn #0
83 [0x53]:           iload adx
84 [0x54]:           popobj2 
85 [0x55]:           chklen adx
86 [0x56]:           movnd adx
87 [0x57]:           pushobj
88 [0x58]:           pushl 3
89 [0x59]:           pushl 4
90 [0x5a]:           istore 1
92 [0x5c]:           call @739 // std#number<_int32, std#int>.operator++
93 [0x5d]:           popobj2 
94 [0x5e]:           movn #0
96 [0x60]:           iload adx
97 [0x61]:           popobj2 
98 [0x62]:           chklen adx
99 [0x63]:           movnd adx
100 [0x64]:           popobj
101 [0x65]:           pushl 5
102 [0x66]:           istore 1
104 [0x68]:           call @739 // std#number<_int32, std#int>.operator++
105 [0x69]:           pop
106 [0x6a]:           jmp @64
107 [0x6b]: line: 175 - 107movl 0
108 [0x6c]:           movn #15
110 [0x6e]:           movn #0
112 [0x70]:           iload cmt
113 [0x71]:           jne 117
114 [0x72]: line: 176 - 114pushl 2
115 [0x73]:           call @1265 // std.io.coroutines#coroutine_builder.long_term
116 [0x74]:           pop
117 [0x75]: line: 177 - 117pushl 2
118 [0x76]:           pushl 3
119 [0x77]:           call @1264 // std.io.coroutines#coroutine_builder.with_args
120 [0x78]:           pop
121 [0x79]: line: 179 - 121istore 0
123 [0x7b]:           movl 0
124 [0x7c]:           movn #0
126 [0x7e]:           iload cx
127 [0x7f]:           loadval ecx
128 [0x80]:           tne cx, ecx
129 [0x81]:           movr cmt, bmr
130 [0x82]:           jne 144
131 [0x83]: line: 180 - 131movl 0
132 [0x84]:           movn #0
134 [0x86]:           iload egx
135 [0x87]:           rstore egx
136 [0x88]:           movl 2
137 [0x89]:           movn #1
139 [0x8b]:           movn #0
141 [0x8d]:           loadval egx
142 [0x8e]:           imov egx
143 [0x8f]:           jmp @212
144 [0x90]:           istore 0
146 [0x92]:           movl 0
147 [0x93]:           movn #1
149 [0x95]:           iload cx
150 [0x96]:           loadval ecx
151 [0x97]:           tne cx, ecx
152 [0x98]:           movr cmt, bmr
153 [0x99]:           jne 167
154 [0x9a]: line: 181 - 154movl 0
155 [0x9b]:           movn #1
157 [0x9d]:           iload egx
158 [0x9e]:           rstore egx
159 [0x9f]:           movl 2
160 [0xa0]:           movn #1
162 [0xa2]:           movn #1
164 [0xa4]:           loadval egx
165 [0xa5]:           imov egx
166 [0xa6]:           jmp @212
167 [0xa7]:           istore 0
169 [0xa9]:           movl 0
170 [0xaa]:           movn #2
172 [0xac]:           iload cx
173 [0xad]:           loadval ecx
174 [0xae]:           tne cx, ecx
175 [0xaf]:           movr cmt, bmr
176 [0xb0]:           jne 190
177 [0xb1]: line: 182 - 177movl 0
178 [0xb2]:           movn #2
180 [0xb4]:           iload egx
181 [0xb5]:           rstore egx
182 [0xb6]:           movl 2
183 [0xb7]:           movn #1
185 [0xb9]:           movn #2
187 [0xbb]:           loadval egx
188 [0xbc]:           imov egx
189 [0xbd]:           jmp @212
190 [0xbe]:           istore 0
192 [0xc0]:           movl 0
193 [0xc1]:           movn #3
195 [0xc3]:           iload cx
196 [0xc4]:           loadval ecx
197 [0xc5]:           tne cx, ecx
198 [0xc6]:           movr cmt, bmr
199 [0xc7]:           jne 212
200 [0xc8]: line: 183 - 200movl 0
201 [0xc9]:           movn #3
203 [0xcb]:           iload egx
204 [0xcc]:           rstore egx
205 [0xcd]:           movl 2
206 [0xce]:           movn #1
208 [0xd0]:           movn #3
210 [0xd2]:           loadval egx
211 [0xd3]:           imov egx
212 [0xd4]: line: 186 - 212pushl 1
213 [0xd5]:           istore 0
215 [0xd7]:           call @320 // std#number<_int64, std#long>.operator>
216 [0xd8]:           popobj2 
217 [0xd9]:           movn #0
219 [0xdb]:           iload cmt
220 [0xdc]:           jne 225
221 [0xdd]: line: 187 - 221pushl 2
222 [0xde]:           pushl 1
223 [0xdf]:           call @1260 // std.io.coroutines#coroutine_builder.schedule
224 [0xe0]:           pop
225 [0xe1]: line: 189 - 225movl 2
226 [0xe2]:           movn #0
228 [0xe4]:           pushobj
229 [0xe5]:           movl 2
230 [0xe6]:           movn #1
232 [0xe8]:           pushobj
233 [0xe9]:           call @1228 // std.io.coroutines#job_master.start_job
234 [0xea]:           ret

@anonymous_fun_16944(object[]): std#int
address: 1256
file: /usr/include/sharp/0.3.0/std/io/coroutines/job.sharp
owner: std.io.coroutines#job
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 34 - 0pushl 0
1 [0x1]:          ldc adx @ 4 (0)
2 [0x2]:          popobj2 
3 [0x3]:          chklen adx
4 [0x4]:          movnd adx
5 [0x5]:          cast 112 // std.io.coroutines#job
6 [0x6]:          pushobj
7 [0x7]:          popl 1
8 [0x8]: line: 35 - 8pushl 1
9 [0x9]:          call @1253 // std.io.coroutines#job.execute
10 [0xa]: line: 36 - 10new_class @std#int
12 [0xc]:          dup 
13 [0xd]:          istore 0
15 [0xf]:          call @74 // std#int.int
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret

static_init<coroutine_builder>(): nil
address: 1257
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io.coroutines#coroutine_builder
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io.coroutines#coroutine_builder
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<coroutine_builder>(): nil
address: 1258
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

coroutine_builder(std.io.coroutines#job, std.io.coroutines#job_master): nil
address: 1259
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 1
fpOffset: 2
spOffset: 3
stackSize: 4
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io.coroutines#coroutine_builder
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1257 // std.io.coroutines#coroutine_builder.static_init<coroutine_builder>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1258 // std.io.coroutines#coroutine_builder.init<coroutine_builder>
12 [0xc]: line: 12 - 12pushl 1
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #1
17 [0x11]:          popobj
18 [0x12]: line: 13 - 18pushl 2
19 [0x13]:          movl 0
20 [0x14]:          movl 0
21 [0x15]:          movn #0
23 [0x17]:          popobj
24 [0x18]: line: 15 - 24ldc adx @ 5 (1)
25 [0x19]:          newobj_arry adx
26 [0x1a]:          popl 3
27 [0x1b]: line: 16 - 27movl 0
28 [0x1c]:          movl 0
29 [0x1d]:          movn #1
31 [0x1f]:          pushobj
32 [0x20]:          pushl 3
33 [0x21]:          ldc adx @ 4 (0)
34 [0x22]:          popobj2 
35 [0x23]:          chklen adx
36 [0x24]:          movnd adx
37 [0x25]:          popobj
38 [0x26]: line: 17 - 38pushl 3
39 [0x27]:          movl 0
40 [0x28]:          movl 0
41 [0x29]:          movn #1
43 [0x2b]:          movn #7
45 [0x2d]:          popobj
46 [0x2e]:          ret

schedule(std#long): std.io.coroutines#coroutine_builder
address: 1260
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 21 - 0pushl 1
1 [0x1]:          movl 0
2 [0x2]:          movn #1
4 [0x4]:          movn #11
6 [0x6]:          popobj
7 [0x7]: line: 22 - 7movl 0
8 [0x8]:          returnobj
9 [0x9]:          ret

recurring(std#long, std#time_unit): std.io.coroutines#coroutine_builder
address: 1261
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 0
fpOffset: 2
spOffset: 2
stackSize: 3
code:

0 [0x0]: line: 44 - 0movl 0
1 [0x1]:          movn #1
3 [0x3]:          movn #14
5 [0x5]:          movn #0
7 [0x7]:          iload cmt
8 [0x8]:          jne 19
9 [0x9]: line: 45 - 9new_class @std#illegal_state_exception
11 [0xb]:          dup 
12 [0xc]:          new_class @std#string
14 [0xe]:          dup 
15 [0xf]:          newstr @102 (cannot set a job recurring that's blocking the calling thread)
16 [0x10]:          call @130 // std#string.string
17 [0x11]:          call @207 // std#illegal_state_exception.illegal_state_exception
18 [0x12]:          throw 
19 [0x13]: line: 48 - 19movl 0
20 [0x14]:          movn #1
22 [0x16]:          movn #12
24 [0x18]:          pushobj
25 [0x19]:          istore 1
27 [0x1b]:          call @956 // std#number<_int8, std#bool>.operator=
28 [0x1c]:          pop
29 [0x1d]: line: 49 - 29movl 0
30 [0x1e]:          movn #1
32 [0x20]:          pushobj
33 [0x21]:          pushl 1
34 [0x22]:          pushl 2
35 [0x23]:          call @1254 // std.io.coroutines#job.update_interval
36 [0x24]: line: 50 - 36movl 0
37 [0x25]:          returnobj
38 [0x26]:          ret

with_name(std#string): std.io.coroutines#coroutine_builder
address: 1262
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 54 - 0pushl 1
1 [0x1]:          movl 0
2 [0x2]:          movn #1
4 [0x4]:          movn #6
6 [0x6]:          popobj
7 [0x7]: line: 55 - 7movl 0
8 [0x8]:          returnobj
9 [0x9]:          ret

with_tag(std#int): std.io.coroutines#coroutine_builder
address: 1263
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 59 - 0pushl 1
1 [0x1]:          movl 0
2 [0x2]:          movn #1
4 [0x4]:          movn #13
6 [0x6]:          popobj
7 [0x7]: line: 60 - 7movl 0
8 [0x8]:          returnobj
9 [0x9]:          ret

with_args(object[]): std.io.coroutines#coroutine_builder
address: 1264
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 5
fpOffset: 1
spOffset: 1
stackSize: 7
code:

0 [0x0]: line: 64 - 0movl 1
1 [0x1]:          sizeof ebx
2 [0x2]:          rstore ebx
3 [0x3]:          ldc cx @ 5 (1)
4 [0x4]:          loadval ecx
5 [0x5]:          add cx, ecx -> bmr
6 [0x6]:          movr adx, bmr
7 [0x7]:          newobj_arry adx
8 [0x8]:          popl 2
9 [0x9]: line: 65 - 9movl 0
10 [0xa]:          movn #1
12 [0xc]:          pushobj
13 [0xd]:          pushl 2
14 [0xe]:          ldc adx @ 4 (0)
15 [0xf]:          popobj2 
16 [0x10]:          chklen adx
17 [0x11]:          movnd adx
18 [0x12]:          popobj
19 [0x13]: line: 67 - 19new_class @std#int
21 [0x15]:          dup 
22 [0x16]:          istore 0
24 [0x18]:          call @79 // std#int.init<int>
25 [0x19]:          popl 3
26 [0x1a]: line: 68 - 26istore 4294967295
28 [0x1c]:          ipopl 5
29 [0x1d]:          pushl 1
30 [0x1e]:          popl 6
31 [0x1f]:          iaddl 1, fp@5
33 [0x21]:          loadl cx, fp+5
34 [0x22]:          movl 6
35 [0x23]:          sizeof ebx
36 [0x24]:          movr ecx, ebx
37 [0x25]:          lt cx, ecx
38 [0x26]:          jne 59
39 [0x27]:          pushl 6
40 [0x28]:          loadl adx, fp+5
41 [0x29]:          popobj2 
42 [0x2a]:          chklen adx
43 [0x2b]:          movnd adx
44 [0x2c]:          pushobj
45 [0x2d]:          popl 4
46 [0x2e]: line: 69 - 46pushl 4
47 [0x2f]:          pushl 2
48 [0x30]:          pushl 3
49 [0x31]:          call @738 // std#number<_int32, std#int>.operator++
50 [0x32]:          popobj2 
51 [0x33]:          movn #0
53 [0x35]:          iload adx
54 [0x36]:          popobj2 
55 [0x37]:          chklen adx
56 [0x38]:          movnd adx
57 [0x39]:          popobj
58 [0x3a]:          jmp @31
59 [0x3b]: line: 72 - 59pushl 2
60 [0x3c]:          movl 0
61 [0x3d]:          movn #1
63 [0x3f]:          movn #7
65 [0x41]:          popobj
66 [0x42]: line: 73 - 66movl 0
67 [0x43]:          returnobj
68 [0x44]:          ret

long_term(): std.io.coroutines#coroutine_builder
address: 1265
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 86 - 0movl 0
1 [0x1]:          movn #1
3 [0x3]:          movn #15
5 [0x5]:          pushobj
6 [0x6]:          istore 1
8 [0x8]:          call @956 // std#number<_int8, std#bool>.operator=
9 [0x9]:          pop
10 [0xa]: line: 87 - 10movl 0
11 [0xb]:          returnobj
12 [0xc]:          ret

operator=(*(object[])(nil)): std.io.coroutines#job
address: 1266
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine_builder.sharp
owner: std.io.coroutines#coroutine_builder
frameStackOffset: 0
fpOffset: 1
spOffset: 1
stackSize: 2
code:

0 [0x0]: line: 97 - 0movl 0
1 [0x1]:          movn #1
3 [0x3]:          pushobj
4 [0x4]:          ipushl #1
5 [0x5]:          call @1251 // std.io.coroutines#job.operator=
6 [0x6]: line: 98 - 6movl 0
7 [0x7]:          movn #0
9 [0x9]:          pushobj
10 [0xa]:          movl 0
11 [0xb]:          movn #1
13 [0xd]:          pushobj
14 [0xe]:          call @1228 // std.io.coroutines#job_master.start_job
15 [0xf]: line: 99 - 15movl 0
16 [0x10]:          movn #1
18 [0x12]:          returnobj
19 [0x13]:          ret

builder(): std.io.coroutines#coroutine_builder
address: 1267
file: /usr/include/sharp/0.3.0/std/io/coroutines/coroutine.sharp
owner: std.io.coroutines#coroutine
frameStackOffset: 2
fpOffset: -1
spOffset: -1
stackSize: 2
code:

0 [0x0]: line: 53 - 0movg @std.io.coroutines#__srt_global
1 [0x1]:          movn #9
3 [0x3]:          pushobj
4 [0x4]:          call @1227 // std.io.coroutines#job_master.create_job
5 [0x5]:          popl 0
6 [0x6]: line: 54 - 6new_class @std.io.coroutines#coroutine_builder
8 [0x8]:          dup 
9 [0x9]:          pushl 0
10 [0xa]:          movg @std.io.coroutines#__srt_global
11 [0xb]:          movn #9
13 [0xd]:          pushobj
14 [0xe]:          call @1259 // std.io.coroutines#coroutine_builder.coroutine_builder
15 [0xf]:          popl 1
16 [0x10]: line: 55 - 16movl 1
17 [0x11]:          returnobj
18 [0x12]:          ret

static_init<job_state>(): nil
address: 1268
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_state.sharp
owner: std.io.coroutines#job_state
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io.coroutines#job_state
1 [0x1]:         movn #4
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io.coroutines#job_state
9 [0x9]:         movn #4
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<job_state>(): nil
address: 1269
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_state.sharp
owner: std.io.coroutines#job_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

job_state(): nil
address: 1270
file: /usr/include/sharp/0.3.0/std/io/coroutines/job_state.sharp
owner: std.io.coroutines#job_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

static_init<__srt_global>(): nil
address: 1271
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#__srt_global
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         new_class @std#int
2 [0x2]:         dup 
3 [0x3]:         istore 0
5 [0x5]:         call @79 // std#int.init<int>
6 [0x6]:         movg @std.io.fiber#__srt_global
7 [0x7]:         movn #0
9 [0x9]:         popobj
10 [0xa]:         ret

delay(std#long): nil
address: 1272
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 115 - 0pushl 0
1 [0x1]:           call @28 // platform.kernel#vm.delay
2 [0x2]:           ret

slice(*(object[])(std#int), std.io#thread, object[]): std.io.fiber#fiber
address: 1273
file: /usr/include/sharp/0.3.0/std/io/fiber/slice.sharp
owner: std.io.fiber#__srt_global
frameStackOffset: 1
fpOffset: 2
spOffset: 2
stackSize: 4
code:

0 [0x0]: line: 27 - 0new_class @std.io.fiber#fiber
2 [0x2]:          dup 
3 [0x3]:          new_class @std#string
5 [0x5]:          dup 
6 [0x6]:          newstr @103 (fiber)
7 [0x7]:          call @130 // std#string.string
8 [0x8]:          movg @std.io.fiber#__srt_global
9 [0x9]:          movn #0
11 [0xb]:          pushobj
12 [0xc]:          istore 1
14 [0xe]:          call @739 // std#number<_int32, std#int>.operator++
15 [0xf]:          call @145 // std#string.operator+
16 [0x10]:          pushl 1
17 [0x11]:          ipushl #0
18 [0x12]:          call @1278 // std.io.fiber#fiber.fiber
19 [0x13]:          popl 3
20 [0x14]: line: 28 - 20pushl 3
21 [0x15]:          pushl 2
22 [0x16]:          call @1279 // std.io.fiber#fiber.start
23 [0x17]: line: 29 - 23movl 3
24 [0x18]:          returnobj
25 [0x19]:          ret

static_init<fiber>(): nil
address: 1274
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io.fiber#fiber
1 [0x1]:         movn #0
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io.fiber#fiber
9 [0x9]:         movn #0
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<fiber>(): nil
address: 1275
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#string
2 [0x2]:         dup 
3 [0x3]:         newstr @68 ()
4 [0x4]:         call @131 // std#string.init<string>
5 [0x5]:         movl 0
6 [0x6]:         movn #0
8 [0x8]:         popobj
9 [0x9]:         istore 4294967295
11 [0xb]:         movl 0
12 [0xc]:         movn #1
14 [0xe]:         loadval egx
15 [0xf]:         imov egx
16 [0x10]:         istore 0
18 [0x12]:         movl 0
19 [0x13]:         movn #3
21 [0x15]:         loadval egx
22 [0x16]:         imov egx
23 [0x17]:         ret

fiber(): nil
address: 1276
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io.fiber#fiber
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1274 // std.io.fiber#fiber.static_init<fiber>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1275 // std.io.fiber#fiber.init<fiber>
12 [0xc]:         ret

fiber(std#string, *(object[])(std#int)): nil
address: 1277
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 2
spOffset: 3
stackSize: 3
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io.fiber#fiber
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1274 // std.io.fiber#fiber.static_init<fiber>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1275 // std.io.fiber#fiber.init<fiber>
12 [0xc]: line: 19 - 12pushl 1
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #0
17 [0x11]:          popobj
18 [0x12]: line: 20 - 18ipushl #2
19 [0x13]:          movl 0
20 [0x14]:          movl 0
21 [0x15]:          movn #2
23 [0x17]:          loadval egx
24 [0x18]:          imov egx
25 [0x19]:          ret

fiber(std#string, std.io#thread, *(object[])(std#int)): nil
address: 1278
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 3
spOffset: 4
stackSize: 4
code:

0 [0x0]:         movl 0
1 [0x1]:         pushobj
2 [0x2]:         call @37 // std#_object_._object_
3 [0x3]:         movg @std.io.fiber#fiber
4 [0x4]:         movn #0
6 [0x6]:         iload cmt
7 [0x7]:         je 9
8 [0x8]:         call @1274 // std.io.fiber#fiber.static_init<fiber>
9 [0x9]:         movl 0
10 [0xa]:         pushobj
11 [0xb]:         call @1275 // std.io.fiber#fiber.init<fiber>
12 [0xc]: line: 24 - 12pushl 1
13 [0xd]:          movl 0
14 [0xe]:          movl 0
15 [0xf]:          movn #0
17 [0x11]:          popobj
18 [0x12]: line: 25 - 18ipushl #3
19 [0x13]:          movl 0
20 [0x14]:          movl 0
21 [0x15]:          movn #2
23 [0x17]:          loadval egx
24 [0x18]:          imov egx
25 [0x19]: line: 26 - 25pushl 2
26 [0x1a]:          movl 0
27 [0x1b]:          movl 0
28 [0x1c]:          movn #4
30 [0x1e]:          popobj
31 [0x1f]:          ret

start(object[]?): nil
address: 1279
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 1
spOffset: 2
stackSize: 2
code:

0 [0x0]: line: 30 - 0istore 4294967295
2 [0x2]:          movl 0
3 [0x3]:          movn #1
5 [0x5]:          iload cx
6 [0x6]:          loadval ecx
7 [0x7]:          test cx, ecx
8 [0x8]:          movr cmt, bmr
9 [0x9]:          jne 30
10 [0xa]: line: 31 - 10movl 0
11 [0xb]:          pushobj
12 [0xc]:          movl 0
13 [0xd]:          movn #4
15 [0xf]:          pushobj
16 [0x10]:          pushl 1
17 [0x11]:          istore 1289
19 [0x13]:          call @7 // platform.kernel#vm.start_fiber
20 [0x14]:          popobj2 
21 [0x15]:          movn #0
23 [0x17]:          iload egx
24 [0x18]:          rstore egx
25 [0x19]:          movl 0
26 [0x1a]:          movn #1
28 [0x1c]:          loadval egx
29 [0x1d]:          imov egx
30 [0x1e]:          ret

suspend(): std#int
address: 1280
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 35 - 0movl 0
1 [0x1]:          pushobj
2 [0x2]:          call @8 // platform.kernel#vm.suspend_fiber
3 [0x3]:          popobj2 
4 [0x4]:          returnobj
5 [0x5]:          ret

unsuspend(): std#int
address: 1281
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 39 - 0movl 0
1 [0x1]:          pushobj
2 [0x2]:          call @9 // platform.kernel#vm.unsuspend_fiber
3 [0x3]:          popobj2 
4 [0x4]:          returnobj
5 [0x5]:          ret

kill(): std#int
address: 1282
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 43 - 0movl 0
1 [0x1]:          pushobj
2 [0x2]:          call @10 // platform.kernel#vm.kill_fiber
3 [0x3]:          popl 1
4 [0x4]: line: 44 - 4pushl 1
5 [0x5]:          istore 0
7 [0x7]:          call @376 // std#number<_int32, std#int>.operator==
8 [0x8]:          popobj2 
9 [0x9]:          movn #0
11 [0xb]:          iload cmt
12 [0xc]:          jne 20
13 [0xd]: line: 45 - 13istore 4294967295
15 [0xf]:          movl 0
16 [0x10]:          movn #1
18 [0x12]:          loadval egx
19 [0x13]:          imov egx
20 [0x14]: line: 46 - 20movl 1
21 [0x15]:          returnobj
22 [0x16]:          ret

bind(std.io#thread): std#int
address: 1283
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 1
fpOffset: 1
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 50 - 0movl 0
1 [0x1]:          pushobj
2 [0x2]:          pushl 1
3 [0x3]:          call @11 // platform.kernel#vm.bind_fiber
4 [0x4]:          popl 2
5 [0x5]: line: 51 - 5pushl 2
6 [0x6]:          istore 0
8 [0x8]:          call @376 // std#number<_int32, std#int>.operator==
9 [0x9]:          popobj2 
10 [0xa]:          movn #0
12 [0xc]:          iload cmt
13 [0xd]:          jne 19
14 [0xe]: line: 52 - 14pushl 1
15 [0xf]:          movl 0
16 [0x10]:          movn #4
18 [0x12]:          popobj
19 [0x13]: line: 53 - 19movl 2
20 [0x14]:          returnobj
21 [0x15]:          ret

join(): nil
address: 1284
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]: line: 57 - 0ldc cmt @ 5 (1)
1 [0x1]:          jne 21
2 [0x2]: line: 58 - 2istore 4294967295
4 [0x4]:          movl 0
5 [0x5]:          movn #1
7 [0x7]:          iload cx
8 [0x8]:          loadval ecx
9 [0x9]:          test cx, ecx
10 [0xa]:          movr cmt, bmr
11 [0xb]:          jne 13
12 [0xc]: line: 59 - 12jmp @21
13 [0xd]: line: 60 - 13new_class @std#long
15 [0xf]:          dup 
16 [0x10]:          istore 10
18 [0x12]:          call @56 // std#long.long
19 [0x13]:          call @1272 // std.io.fiber#__srt_global.delay
20 [0x14]:          jmp @0
21 [0x15]:          ret

unbind(): std#int
address: 1285
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 65 - 0movl 0
1 [0x1]:          pushobj
2 [0x2]:          pushnull 
3 [0x3]:          call @11 // platform.kernel#vm.bind_fiber
4 [0x4]:          popobj2 
5 [0x5]:          returnobj
6 [0x6]:          ret

get_state(): std.io.fiber#fiber_state
address: 1286
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 2
fpOffset: 0
spOffset: 0
stackSize: 3
code:

0 [0x0]: line: 69 - 0movl 0
1 [0x1]:          pushobj
2 [0x2]:          call @13 // platform.kernel#vm.get_fiber_state
3 [0x3]:          popl 1
4 [0x4]: line: 71 - 4pushl 1
5 [0x5]:          popl 2
6 [0x6]:          pushl 2
7 [0x7]:          istore 0
9 [0x9]:          call @376 // std#number<_int32, std#int>.operator==
10 [0xa]:          popobj2 
11 [0xb]:          movn #0
13 [0xd]:          iload cmt
14 [0xe]:          jne 21
15 [0xf]: line: 73 - 15movg @std.io.fiber#fiber_state
16 [0x10]:          movn #0
18 [0x12]:          returnobj
19 [0x13]:          ret
20 [0x14]:          jmp @71
21 [0x15]:          pushl 2
22 [0x16]:          istore 1
24 [0x18]:          call @376 // std#number<_int32, std#int>.operator==
25 [0x19]:          popobj2 
26 [0x1a]:          movn #0
28 [0x1c]:          iload cmt
29 [0x1d]:          jne 36
30 [0x1e]: line: 76 - 30movg @std.io.fiber#fiber_state
31 [0x1f]:          movn #1
33 [0x21]:          returnobj
34 [0x22]:          ret
35 [0x23]:          jmp @71
36 [0x24]:          pushl 2
37 [0x25]:          istore 2
39 [0x27]:          call @376 // std#number<_int32, std#int>.operator==
40 [0x28]:          popobj2 
41 [0x29]:          movn #0
43 [0x2b]:          iload cmt
44 [0x2c]:          jne 51
45 [0x2d]: line: 79 - 45movg @std.io.fiber#fiber_state
46 [0x2e]:          movn #2
48 [0x30]:          returnobj
49 [0x31]:          ret
50 [0x32]:          jmp @71
51 [0x33]:          pushl 2
52 [0x34]:          istore 3
54 [0x36]:          call @376 // std#number<_int32, std#int>.operator==
55 [0x37]:          popobj2 
56 [0x38]:          movn #0
58 [0x3a]:          iload cmt
59 [0x3b]:          jne 66
60 [0x3c]: line: 82 - 60movg @std.io.fiber#fiber_state
61 [0x3d]:          movn #3
63 [0x3f]:          returnobj
64 [0x40]:          ret
65 [0x41]:          jmp @71
66 [0x42]: line: 85 - 66movg @std.io.fiber#fiber_state
67 [0x43]:          movn #4
69 [0x45]:          returnobj
70 [0x46]:          ret

current(): std.io.fiber#fiber
address: 1287
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: -1
spOffset: -1
stackSize: 0
code:

0 [0x0]: line: 91 - 0call @14 // platform.kernel#vm.current_fiber
1 [0x1]:          popobj2 
2 [0x2]:          returnobj
3 [0x3]:          ret

poll(std.io#thread?): std#int
address: 1288
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 95 - 0pushl 0
1 [0x1]:          call @12 // platform.kernel#vm.get_bound_fibers
2 [0x2]:          popobj2 
3 [0x3]:          returnobj
4 [0x4]:          ret

fiber_main(object[]?): nil
address: 1289
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber.sharp
owner: std.io.fiber#fiber
frameStackOffset: 2
fpOffset: 0
spOffset: 1
stackSize: 3
code:

0 [0x0]: line: 99 - 0call @0 // platform.kernel#platform.tls_init
1 [0x1]: line: 100 - 1call @1287 // std.io.fiber#fiber.current
2 [0x2]:           popl 1
3 [0x3]: line: 102 - 3movl 1
4 [0x4]: line: 103 - 3movn #2
6 [0x6]:           iload cx
7 [0x7]:           pushl 0
8 [0x8]:           movr egx, cx
9 [0x9]:           calld egx
10 [0xa]:           popobj2 
11 [0xb]:           movn #0
13 [0xd]:           iload egx
14 [0xe]:           rstore egx
15 [0xf]:           movl 1
16 [0x10]:           movn #3
18 [0x12]:           loadval egx
19 [0x13]:           imov egx
20 [0x14]:           jmp @38
21 [0x15]: line: 105 - 21istore 4294967295
23 [0x17]:           movl 1
24 [0x18]:           movn #1
26 [0x1a]:           loadval egx
27 [0x1b]:           imov egx
28 [0x1c]: line: 106 - 28istore 300
30 [0x1e]:           movl 1
31 [0x1f]:           movn #3
33 [0x21]:           loadval egx
34 [0x22]:           imov egx
35 [0x23]: line: 107 - 35pushl 2
36 [0x24]:           throw 
37 [0x25]:           jmp @38
38 [0x26]: line: 110 - 38istore 4294967295
40 [0x28]:           movl 1
41 [0x29]:           movn #1
43 [0x2b]:           loadval egx
44 [0x2c]:           imov egx
45 [0x2d]:           ret

static_init<fiber_state>(): nil
address: 1290
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber_state.sharp
owner: std.io.fiber#fiber_state
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.io.fiber#fiber_state
1 [0x1]:         movn #5
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.io.fiber#fiber_state
9 [0x9]:         movn #5
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<fiber_state>(): nil
address: 1291
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber_state.sharp
owner: std.io.fiber#fiber_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

fiber_state(): nil
address: 1292
file: /usr/include/sharp/0.3.0/std/io/fiber/fiber_state.sharp
owner: std.io.fiber#fiber_state
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

round(std#double): std#double
address: 1293
file: /usr/include/sharp/0.3.0/std/math/math.sharp
owner: std.math#__srt_global
frameStackOffset: 1
fpOffset: 0
spOffset: 0
stackSize: 2
code:

0 [0x0]: line: 165 - 0pushl 0
1 [0x1]:           call @975 // std#number<var, std#double>.to_long
2 [0x2]:           popl 1
3 [0x3]: line: 166 - 3pushl 0
4 [0x4]:           pushl 1
5 [0x5]:           call @973 // std#number<var, std#double>.operator-=
6 [0x6]:           pop
7 [0x7]: line: 168 - 7pushl 0
8 [0x8]:           ldc egx @ 63 (0.5)
9 [0x9]:           rstore egx
10 [0xa]:           call @972 // std#number<var, std#double>.operator>=
11 [0xb]:           popobj2 
12 [0xc]:           movn #0
14 [0xe]:           iload cmt
15 [0xf]:           jne 27
16 [0x10]:           pushl 1
17 [0x11]:           istore 1
19 [0x13]:           call @314 // std#number<_int64, std#long>.operator+
20 [0x14]:           popobj2 
21 [0x15]:           pushobj
22 [0x16]:           call @326 // std#number<_int64, std#long>.to_double
23 [0x17]:           popobj2 
24 [0x18]:           returnobj
25 [0x19]:           ret
26 [0x1a]:           jmp @32
27 [0x1b]: line: 169 - 27pushl 1
28 [0x1c]:           call @326 // std#number<_int64, std#long>.to_double
29 [0x1d]:           popobj2 
30 [0x1e]:           returnobj
31 [0x1f]:           ret

static_init<__srt_global>(): nil
address: 1294
file: /workspaces/Sharp/compiler-test/src/user_terminal.sharp
owner: main#__srt_global
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         new_class @std.io#atomic<std#int>
2 [0x2]:         dup 
3 [0x3]:         new_class @std#int
5 [0x5]:         dup 
6 [0x6]:         istore 0
8 [0x8]:         call @72 // std#int.int
9 [0x9]:         call @1213 // std.io#atomic<std#int>.atomic
10 [0xa]:         movg @main#__srt_global
11 [0xb]:         movn #0
13 [0xd]:         popobj
14 [0xe]:         ret

main(): nil
address: 1295
file: /workspaces/Sharp/compiler-test/src/main.sharp
owner: main#__srt_global
frameStackOffset: 1
fpOffset: -1
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 8 - 0new_class @std#int
2 [0x2]:         dup 
3 [0x3]:         istore 0
5 [0x5]:         call @79 // std#int.init<int>
6 [0x6]:         popl 0
7 [0x7]:         pushl 0
8 [0x8]:         istore 10000
10 [0xa]:         call @502 // std#number<_int32, std#int>.operator<
11 [0xb]:         popobj2 
12 [0xc]:         movn #0
14 [0xe]:         iload cmt
15 [0xf]:         jne 28
16 [0x10]: line: 9 - 16call @1267 // std.io.coroutines#coroutine.builder
17 [0x11]:         call @1265 // std.io.coroutines#coroutine_builder.long_term
18 [0x12]:         istore 1296
20 [0x14]:         call @1266 // std.io.coroutines#coroutine_builder.operator=
21 [0x15]:         pop
22 [0x16]:         pushl 0
23 [0x17]:         istore 1
25 [0x19]:         call @739 // std#number<_int32, std#int>.operator++
26 [0x1a]:         pop
27 [0x1b]:         jmp @7
28 [0x1c]: line: 17 - 28new_class @std#string
30 [0x1e]:          dup 
31 [0x1f]:          newstr @68 ()
32 [0x20]:          call @130 // std#string.string
33 [0x21]:          movg @platform#build
34 [0x22]:          movn #1
36 [0x24]:          pushobj
37 [0x25]:          call @146 // std#string.operator+
38 [0x26]:          newstr @104 ( )
39 [0x27]:          call @143 // std#string.operator+
40 [0x28]:          movg @platform#build
41 [0x29]:          movn #3
43 [0x2b]:          pushobj
44 [0x2c]:          call @146 // std#string.operator+
45 [0x2d]:          newstr @104 ( )
46 [0x2e]:          call @143 // std#string.operator+
47 [0x2f]:          movg @platform#build
48 [0x30]:          movn #2
50 [0x32]:          pushobj
51 [0x33]:          call @146 // std#string.operator+
52 [0x34]:          newstr @104 ( )
53 [0x35]:          call @143 // std#string.operator+
54 [0x36]:          movg @platform#build
55 [0x37]:          movn #0
57 [0x39]:          pushobj
58 [0x3a]:          call @146 // std#string.operator+
59 [0x3b]:          call @41 // std#__srt_global.println
60 [0x3c]: line: 18 - 60newstr @105 (main task!)
61 [0x3d]:          call @40 // std#__srt_global.println
62 [0x3e]: line: 19 - 62movg @main#__srt_global
63 [0x3f]:          movn #0
65 [0x41]:          pushobj
66 [0x42]:          istore 10000
68 [0x44]:          call @1216 // std.io#atomic<std#int>.operator!=
69 [0x45]:          popobj2 
70 [0x46]:          movn #0
72 [0x48]:          iload cmt
73 [0x49]:          jne 82
74 [0x4a]:          new_class @std#long
76 [0x4c]:          dup 
77 [0x4d]:          istore 0
79 [0x4f]:          call @56 // std#long.long
80 [0x50]:          call @1272 // std.io.fiber#__srt_global.delay
81 [0x51]:          jmp @62
82 [0x52]: line: 20 - 82newstr @106 (tasks finished!)
83 [0x53]:          call @40 // std#__srt_global.println
84 [0x54]:          ret

@anonymous_fun_11155(object[]): std#int
address: 1296
file: /workspaces/Sharp/compiler-test/src/main.sharp
owner: main#__srt_global
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 12 - 0movg @main#__srt_global
1 [0x1]:          movn #0
3 [0x3]:          pushobj
4 [0x4]:          istore 1
6 [0x6]:          call @1222 // std.io#atomic<std#int>.operator++
7 [0x7]:          pop
8 [0x8]: line: 13 - 8new_class @std#int
10 [0xa]:          dup 
11 [0xb]:          istore 0
13 [0xd]:          call @74 // std#int.int
14 [0xe]:          popobj2 
15 [0xf]:          returnobj
16 [0x10]:          ret

init<transaction>(): nil
address: 1297
file: /workspaces/Sharp/compiler-test/src/transaction.sharp
owner: main#transaction
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#long
2 [0x2]:         dup 
3 [0x3]:         call @59 // std#long.long
4 [0x4]:         movl 0
5 [0x5]:         movn #0
7 [0x7]:         popobj
8 [0x8]:         new_class @std#string
10 [0xa]:         dup 
11 [0xb]:         call @176 // std#string.string
12 [0xc]:         movl 0
13 [0xd]:         movn #1
15 [0xf]:         popobj
16 [0x10]:         new_class @std#string
18 [0x12]:         dup 
19 [0x13]:         call @176 // std#string.string
20 [0x14]:         movl 0
21 [0x15]:         movn #2
23 [0x17]:         popobj
24 [0x18]:         new_class @std#long
26 [0x1a]:         dup 
27 [0x1b]:         call @59 // std#long.long
28 [0x1c]:         movl 0
29 [0x1d]:         movn #3
31 [0x1f]:         popobj
32 [0x20]:         ret

to_string(): std#string
address: 1298
file: /workspaces/Sharp/compiler-test/src/transaction.sharp
owner: main#transaction
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 32 - 0new_class @std#string
2 [0x2]:          dup 
3 [0x3]:          newstr @107 ([at: )
4 [0x4]:          call @130 // std#string.string
5 [0x5]:          movl 0
6 [0x6]:          movn #3
8 [0x8]:          pushobj
9 [0x9]:          call @145 // std#string.operator+
10 [0xa]:          newstr @83 (, )
11 [0xb]:          call @143 // std#string.operator+
12 [0xc]:          movl 0
13 [0xd]:          movn #0
15 [0xf]:          pushobj
16 [0x10]:          call @145 // std#string.operator+
17 [0x11]:          newstr @108 (, memo: )
18 [0x12]:          call @143 // std#string.operator+
19 [0x13]:          movl 0
20 [0x14]:          movn #1
22 [0x16]:          pushobj
23 [0x17]:          call @146 // std#string.operator+
24 [0x18]:          newstr @109 (, to/from: )
25 [0x19]:          call @143 // std#string.operator+
26 [0x1a]:          movl 0
27 [0x1b]:          movn #2
29 [0x1d]:          pushobj
30 [0x1e]:          call @146 // std#string.operator+
31 [0x1f]:          newstr @110 (])
32 [0x20]:          call @143 // std#string.operator+
33 [0x21]:          popobj2 
34 [0x22]:          returnobj
35 [0x23]:          ret

init<user>(): nil
address: 1299
file: /workspaces/Sharp/compiler-test/src/user.sharp
owner: main#user
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         new_class @std#string
2 [0x2]:         dup 
3 [0x3]:         call @176 // std#string.string
4 [0x4]:         movl 0
5 [0x5]:         movn #0
7 [0x7]:         popobj
8 [0x8]:         new_class @std#int
10 [0xa]:         dup 
11 [0xb]:         call @85 // std#int.int
12 [0xc]:         movl 0
13 [0xd]:         movn #1
15 [0xf]:         popobj
16 [0x10]:         ret

to_string(): std#string
address: 1300
file: /workspaces/Sharp/compiler-test/src/user.sharp
owner: main#user
frameStackOffset: 0
fpOffset: 0
spOffset: 0
stackSize: 1
code:

0 [0x0]: line: 25 - 0new_class @std#string
2 [0x2]:          dup 
3 [0x3]:          newstr @111 (User ()
4 [0x4]:          call @130 // std#string.string
5 [0x5]:          movl 0
6 [0x6]:          movn #0
8 [0x8]:          pushobj
9 [0x9]:          call @146 // std#string.operator+
10 [0xa]:          newstr @83 (, )
11 [0xb]:          call @143 // std#string.operator+
12 [0xc]:          movl 0
13 [0xd]:          movn #1
15 [0xf]:          pushobj
16 [0x10]:          call @145 // std#string.operator+
17 [0x11]:          newstr @112 ())
18 [0x12]:          call @143 // std#string.operator+
19 [0x13]:          popobj2 
20 [0x14]:          returnobj
21 [0x15]:          ret

static_init<build>(): nil
address: 1301
file: /usr/include/sharp/0.3.0/platform/build.sharp
owner: platform#build
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @platform#build
1 [0x1]:         movn #4
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @platform#build
9 [0x9]:         movn #4
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         new_class @std#string
15 [0xf]:         dup 
16 [0x10]:         call @176 // std#string.string
17 [0x11]:         movg @platform#build
18 [0x12]:         movn #0
20 [0x14]:         popobj
21 [0x15]:         new_class @std#string
23 [0x17]:         dup 
24 [0x18]:         call @176 // std#string.string
25 [0x19]:         movg @platform#build
26 [0x1a]:         movn #1
28 [0x1c]:         popobj
29 [0x1d]:         new_class @std#string
31 [0x1f]:         dup 
32 [0x20]:         call @176 // std#string.string
33 [0x21]:         movg @platform#build
34 [0x22]:         movn #2
36 [0x24]:         popobj
37 [0x25]:         new_class @std#string
39 [0x27]:         dup 
40 [0x28]:         call @176 // std#string.string
41 [0x29]:         movg @platform#build
42 [0x2a]:         movn #3
44 [0x2c]:         popobj
45 [0x2d]:         ret

static_init<data_type>(): nil
address: 1302
file: /usr/include/sharp/0.3.0/std/reflect/data_entity.sharp
owner: std.reflect#data_type
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.reflect#data_type
1 [0x1]:         movn #17
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.reflect#data_type
9 [0x9]:         movn #17
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<data_type>(): nil
address: 1303
file: /usr/include/sharp/0.3.0/std/reflect/data_entity.sharp
owner: std.reflect#data_type
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

data_type(): nil
address: 1304
file: /usr/include/sharp/0.3.0/std/reflect/data_entity.sharp
owner: std.reflect#data_type
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

static_init<property_type>(): nil
address: 1305
file: /usr/include/sharp/0.3.0/std/reflect/data_property.sharp
owner: std.reflect#property_type
frameStackOffset: 0
fpOffset: -1
spOffset: 0
stackSize: 0
code:

0 [0x0]:         movg @std.reflect#property_type
1 [0x1]:         movn #3
3 [0x3]:         iload cmt
4 [0x4]:         jne 6
5 [0x5]:         ret
6 [0x6]:         istore 1
8 [0x8]:         movg @std.reflect#property_type
9 [0x9]:         movn #3
11 [0xb]:         loadval egx
12 [0xc]:         imov egx
13 [0xd]:         ret

init<property_type>(): nil
address: 1306
file: /usr/include/sharp/0.3.0/std/reflect/data_property.sharp
owner: std.reflect#property_type
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret

property_type(): nil
address: 1307
file: /usr/include/sharp/0.3.0/std/reflect/data_property.sharp
owner: std.reflect#property_type
frameStackOffset: 0
fpOffset: 0
spOffset: 1
stackSize: 1
code:

0 [0x0]:         ret


classes:
[0]: platform.kernel#platform - 0
	 [0] static : platform.kernel#platform.main
	 [1] static : platform.kernel#platform.main2
	 [2] static : platform.kernel#platform.main3
	 [3] static : platform.kernel#platform.main4
[1]: platform.kernel#__srt_global - 1
[2]: platform.kernel#vm - 2
[3]: platform.kernel#stack_state - 3
	 [0] static : platform.kernel#stack_state.@static_init_flag
	 [0] : platform.kernel#stack_state.methods
	 [1] : platform.kernel#stack_state.pc
[4]: std#_object_ - 4
	 [0] static : std#_object_.@static_init_flag
[5]: std#__srt_global - 5
[6]: std#ulong - 6
	 [0] static : std#ulong.@static_init_flag
	 [0] : std#number<_uint64, std#ulong>.value
[7]: std#long - 7
	 [0] static : std#long.@static_init_flag
	 [0] : std#number<_int64, std#long>.value
[8]: std#uint - 8
	 [0] static : std#uint.@static_init_flag
	 [0] : std#number<_uint32, std#uint>.value
[9]: std#int - 9
	 [0] static : std#int.@static_init_flag
	 [0] : std#number<_int32, std#int>.value
[10]: std#ushort - 10
	 [0] static : std#ushort.@static_init_flag
	 [0] : std#number<_uint16, std#ushort>.value
[11]: std#short - 11
	 [0] static : std#short.@static_init_flag
	 [0] : std#number<_int16, std#short>.value
[12]: std#uchar - 12
	 [0] static : std#uchar.@static_init_flag
	 [0] : std#number<_uint8, std#uchar>.value
[13]: std#char - 13
	 [0] static : std#char.@static_init_flag
	 [0] : std#number<_int8, std#char>.value
[14]: std#byte - 14
	 [0] static : std#byte.@static_init_flag
	 [0] : std#number<_uint8, std#uchar>.value
[15]: std#bool - 15
	 [0] static : std#bool.@static_init_flag
	 [0] : std#number<_int8, std#bool>.value
[16]: std#double - 16
	 [0] static : std#double.@static_init_flag
	 [0] : std#number<var, std#double>.value
[17]: std#string - 17
	 [0] static : std#string.@static_init_flag
	 [0] : std#string.data
[18]: std#string_builder - 18
	 [0] static : std#string_builder.default_capacity
	 [1] static : std#string_builder.@static_init_flag
	 [0] : std#string_builder.data
	 [1] : std#string_builder.min_resize_capacity
	 [2] : std#string_builder.cursor
[19]: std#throwable - 19
	 [0] static : std#throwable.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[20]: std#exception - 20
	 [0] static : std#exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[21]: std#illegal_argument_exception - 21
	 [0] static : std#illegal_argument_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[22]: std#illegal_state_exception - 22
	 [0] static : std#illegal_state_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[23]: std#out_of_bounds_exception - 23
	 [0] static : std#out_of_bounds_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[24]: std#io_exception - 24
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[25]: std#invalid_operation_exception - 25
	 [0] static : std#invalid_operation_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[26]: std#nullptr_exception - 26
	 [0] static : std#nullptr_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[27]: std#runtime_exception - 27
	 [0] static : std#runtime_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[28]: std#stack_overflow_exception - 28
	 [0] static : std#stack_overflow_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[29]: std#thread_stack_exception - 29
	 [0] static : std#thread_stack_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[30]: std#class_cast_exception - 30
	 [0] static : std#class_cast_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[31]: std#out_of_memory_exception - 31
	 [0] static : std#out_of_memory_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[32]: std#incompatible_class_exception - 32
	 [0] static : std#incompatible_class_exception.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[33]: std#object_import_error - 33
	 [0] static : std#object_import_error.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[34]: std#not_implemented_error - 34
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[35]: std#unsatisfied_link_error - 35
	 [0] static : std#unsatisfied_link_error.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[36]: std#assertion_error - 36
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[37]: std#error - 37
	 [0] static : std#error.@static_init_flag
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[38]: std#time - 38
	 [0] static : std#time.INFINITE
[39]: std#time_request - 39
	 [0] static : std#time_request.tm_seconds
	 [1] static : std#time_request.tm_minutes
	 [2] static : std#time_request.tm_hour
	 [3] static : std#time_request.tm_mday
	 [4] static : std#time_request.tm_mon
	 [5] static : std#time_request.tm_year
	 [6] static : std#time_request.tm_wday
	 [7] static : std#time_request.tm_yday
	 [8] static : std#time_request.tm_isdst
	 [9] static : std#time_request.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[40]: std#time_unit - 40
	 [0] static : std#time_unit.seconds
	 [1] static : std#time_unit.milliseconds
	 [2] static : std#time_unit.microseconds
	 [3] static : std#time_unit.nanoseconds
	 [4] static : std#time_unit.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[41]: std#_enum_ - 41
	 [0] static : std#_enum_.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[42]: std#char_array - 42
	 [0] static : std#char_array.@static_init_flag
	 [0] : std#char_array.data
[43]: std#printable - 43
[44]: std#_nil - 44
[45]: std#unique - 45
[46]: std#number<_uint64, std#ulong> - 46
	 [0] static : std#number<_uint64, std#ulong>.@static_init_flag
	 [0] : std#number<_uint64, std#ulong>.value
[47]: std#number<_int64, std#long> - 47
	 [0] static : std#number<_int64, std#long>.@static_init_flag
	 [0] : std#number<_int64, std#long>.value
[48]: std#number<_uint32, std#uint> - 48
	 [0] static : std#number<_uint32, std#uint>.@static_init_flag
	 [0] : std#number<_uint32, std#uint>.value
[49]: std#number<_int32, std#int> - 49
	 [0] static : std#number<_int32, std#int>.@static_init_flag
	 [0] : std#number<_int32, std#int>.value
[50]: std#number<_uint16, std#ushort> - 50
	 [0] static : std#number<_uint16, std#ushort>.@static_init_flag
	 [0] : std#number<_uint16, std#ushort>.value
[51]: std#number<_int16, std#short> - 51
	 [0] static : std#number<_int16, std#short>.@static_init_flag
	 [0] : std#number<_int16, std#short>.value
[52]: std#list<std#string> - 52
	 [0] : std#list<std#string>.n_elements
	 [1] : std#list<std#string>.data
[53]: std#number<_uint8, std#uchar> - 53
	 [0] static : std#number<_uint8, std#uchar>.@static_init_flag
	 [0] : std#number<_uint8, std#uchar>.value
[54]: std#number<_int8, std#char> - 54
	 [0] static : std#number<_int8, std#char>.@static_init_flag
	 [0] : std#number<_int8, std#char>.value
[55]: std#number<_int8, std#bool> - 55
	 [0] static : std#number<_int8, std#bool>.@static_init_flag
	 [0] : std#number<_int8, std#bool>.value
[56]: std#number<var, std#double> - 56
	 [0] static : std#number<var, std#double>.@static_init_flag
	 [0] : std#number<var, std#double>.value
[57]: std#list<main#bank_account> - 57
	 [0] : std#list<main#bank_account>.n_elements
	 [1] : std#list<main#bank_account>.data
[58]: std#loopable<_int8> - 58
[59]: std#loopable<std.io#thread> - 59
[60]: std#synced_list<std.io.coroutines#job> - 60
	 [0] static : std#synced_list<std.io.coroutines#job>.default_capacity
	 [1] static : std#synced_list<std.io.coroutines#job>.min_capacity
	 [2] static : std#synced_list<std.io.coroutines#job>.@static_init_flag
	 [0] : std#synced_list<std.io.coroutines#job>.n_elements
	 [1] : std#synced_list<std.io.coroutines#job>.data
	 [2] : std#synced_list<std.io.coroutines#job>.is_compact
[61]: std#base_number<std#ulong> - 61
	 [0] static : std#base_number<std#ulong>.@static_init_flag
[62]: std#base_number<std#long> - 62
	 [0] static : std#base_number<std#long>.@static_init_flag
[63]: std#base_number<std#uint> - 63
	 [0] static : std#base_number<std#uint>.@static_init_flag
[64]: std#base_number<std#int> - 64
	 [0] static : std#base_number<std#int>.@static_init_flag
[65]: std#base_number<std#ushort> - 65
	 [0] static : std#base_number<std#ushort>.@static_init_flag
[66]: std#list<std.io.coroutines#job> - 66
	 [0] static : std#list<std.io.coroutines#job>.default_capacity
	 [1] static : std#list<std.io.coroutines#job>.min_capacity
	 [2] static : std#list<std.io.coroutines#job>.@static_init_flag
	 [0] : std#list<std.io.coroutines#job>.n_elements
	 [1] : std#list<std.io.coroutines#job>.data
	 [2] : std#list<std.io.coroutines#job>.is_compact
[67]: std#loopable<std.io.coroutines#job> - 67
[68]: std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>> - 68
	 [0] static : std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.min_capacity
	 [1] static : std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.@static_init_flag
	 [0] : std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.n_elements
	 [1] : std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.data
	 [2] : std#list<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>>.is_compact
[69]: std#loopable<std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>> - 69
[70]: std#base_number<std#short> - 70
	 [0] static : std#base_number<std#short>.@static_init_flag
[71]: std#list<std#int> - 71
	 [0] static : std#list<std#int>.default_capacity
	 [1] static : std#list<std#int>.min_capacity
	 [2] static : std#list<std#int>.@static_init_flag
	 [0] : std#list<std#int>.n_elements
	 [1] : std#list<std#int>.data
	 [2] : std#list<std#int>.is_compact
[72]: std#loopable<std#int> - 72
[73]: std#list<std.io#channel<std#int>.filter<std#int>> - 73
	 [0] static : std#list<std.io#channel<std#int>.filter<std#int>>.min_capacity
	 [1] static : std#list<std.io#channel<std#int>.filter<std#int>>.@static_init_flag
	 [0] : std#list<std.io#channel<std#int>.filter<std#int>>.n_elements
	 [1] : std#list<std.io#channel<std#int>.filter<std#int>>.data
	 [2] : std#list<std.io#channel<std#int>.filter<std#int>>.is_compact
[74]: std#loopable<std.io#channel<std#int>.filter<std#int>> - 74
[75]: std#base_number<std#uchar> - 75
	 [0] static : std#base_number<std#uchar>.@static_init_flag
[76]: std#base_number<std#char> - 76
	 [0] static : std#base_number<std#char>.@static_init_flag
[77]: std#base_number<std#bool> - 77
	 [0] static : std#base_number<std#bool>.@static_init_flag
[78]: std#base_number<std#double> - 78
	 [0] static : std#base_number<std#double>.@static_init_flag
[79]: std#loopable<std#string> - 79
[80]: std#loopable<main#bank_account> - 80
[81]: std#list<std.io#thread> - 81
	 [0] static : std#list<std.io#thread>.default_capacity
	 [1] static : std#list<std.io#thread>.min_capacity
	 [2] static : std#list<std.io#thread>.@static_init_flag
	 [0] : std#list<std.io#thread>.n_elements
	 [1] : std#list<std.io#thread>.data
	 [2] : std#list<std.io#thread>.is_compact
[82]: std#list<main#transaction> - 82
	 [0] : std#list<main#transaction>.n_elements
	 [1] : std#list<main#transaction>.data
[83]: std#loopable<main#transaction> - 83
[84]: std#list<main#user> - 84
	 [0] : std#list<main#user>.n_elements
	 [1] : std#list<main#user>.data
[85]: std#loopable<main#user> - 85
[86]: std.io#receive_channel<std.io.coroutines#job> - 86
[87]: std.io#receive_channel<std#int> - 87
[88]: std.io#__srt_global - 88
[89]: std.io#file - 89
[90]: std.io#file_system - 90
[91]: std.io#thread - 91
	 [0] static : std.io#thread.id_generator
	 [1] static : std.io#thread.@static_init_flag
	 [0] : std.io#thread.exit_code
	 [1] : std.io#thread.native_handle
	 [2] : std.io#thread.id
	 [3] : std.io#thread.priority
	 [4] : std.io#thread.daemon
	 [5] : std.io#thread.exited
	 [6] : std.io#thread.name
	 [7] : std.io#thread.parent_group
	 [8] : std.io#thread.started
	 [9] : std.io#thread.suspended
	 [10] : std.io#thread.stack_size
	 [11] : std.io#thread.main
	 [12] : std.io#thread.error_handler
	 [13] : std.io#thread.fib
[92]: std.io#win_fs - 92
[93]: std.io#unix_fs - 93
[94]: std.io#thread_group - 94
	 [0] static : std.io#thread_group.main_group
	 [1] static : std.io#thread_group.@static_init_flag
	 [0] : std.io#thread_group.handles
	 [1] : std.io#thread_group.name
	 [2] : std.io#thread_group.default_priority
	 [3] : std.io#thread_group.n_threads
[95]: std.io#thread_result - 95
	 [0] static : std.io#thread_result.result_ok
	 [1] static : std.io#thread_result.result_ill_thread_start
	 [2] static : std.io#thread_result.result_thread_running
	 [3] static : std.io#thread_result.result_thread_terminated
	 [4] static : std.io#thread_result.result_invalid_stack_size
	 [5] static : std.io#thread_result.result_thread_not_started
	 [6] static : std.io#thread_result.result_ill_thread_join
	 [7] static : std.io#thread_result.result_thread_join_failed
	 [8] static : std.io#thread_result.result_ill_thread_interrupt
	 [9] static : std.io#thread_result.result_thread_interrupt_failed
	 [10] static : std.io#thread_result.result_ill_thread_destroy
	 [11] static : std.io#thread_result.result_thread_create_failed
	 [12] static : std.io#thread_result.result_no_thread_id
	 [13] static : std.io#thread_result.result_thread_destroy_failed
	 [14] static : std.io#thread_result.result_ill_priority_set
	 [15] static : std.io#thread_result.result_ill_thread_suspend
	 [16] static : std.io#thread_result.result_max_spin
	 [17] static : std.io#thread_result.@static_init_flag
	 [18] static : std.io#thread_result.enums
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[96]: std.io#thread_priority - 96
	 [0] static : std.io#thread_priority.min_priority
	 [1] static : std.io#thread_priority.norm_priority
	 [2] static : std.io#thread_priority.max_priority
	 [3] static : std.io#thread_priority.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[97]: std.io#buffer_type - 97
	 [0] static : std.io#buffer_type.EXCLUSIVE
	 [1] static : std.io#buffer_type.SINGLE
	 [2] static : std.io#buffer_type.UNLIMITED
	 [3] static : std.io#buffer_type.BUFFERED
	 [4] static : std.io#buffer_type.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[98]: std.io#uncaught_exception_handler - 98
[99]: std.io#channel<std.io.coroutines#job> - 99
	 [0] static : std.io#channel<std.io.coroutines#job>.default_capacity
	 [1] static : std.io#channel<std.io.coroutines#job>.DEFAULT_FILTER
	 [2] static : std.io#channel<std.io.coroutines#job>.@static_init_flag
	 [0] : std.io#channel<std.io.coroutines#job>.filters
	 [1] : std.io#channel<std.io.coroutines#job>.buff_type
	 [2] : std.io#channel<std.io.coroutines#job>.capacity
	 [3] : std.io#channel<std.io.coroutines#job>.state
[100]: std.io#channel<std.io.coroutines#job>.channel_state - 100
	 [0] static : std.io#channel<std.io.coroutines#job>.channel_state.OPEN
	 [1] static : std.io#channel<std.io.coroutines#job>.channel_state.CLOSED
	 [2] static : std.io#channel<std.io.coroutines#job>.channel_state.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[101]: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job> - 101
	 [0] static : std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.@static_init_flag
	 [0] : std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.head
	 [1] : std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.tail
	 [2] : std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.buff_size
[102]: std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job> - 102
	 [0] static : std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.@static_init_flag
	 [0] : std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.data
	 [1] : std.io#channel<std.io.coroutines#job>.filter<std.io.coroutines#job>.channel_data<std.io.coroutines#job>.next
[103]: std.io#channel<std#int> - 103
	 [0] static : std.io#channel<std#int>.default_capacity
	 [1] static : std.io#channel<std#int>.DEFAULT_FILTER
	 [2] static : std.io#channel<std#int>.@static_init_flag
	 [0] : std.io#channel<std#int>.filters
	 [1] : std.io#channel<std#int>.buff_type
	 [2] : std.io#channel<std#int>.capacity
	 [3] : std.io#channel<std#int>.state
[104]: std.io#channel<std#int>.channel_state - 104
	 [0] static : std.io#channel<std#int>.channel_state.OPEN
	 [1] static : std.io#channel<std#int>.channel_state.CLOSED
	 [2] static : std.io#channel<std#int>.channel_state.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[105]: std.io#channel<std#int>.filter<std#int> - 105
	 [0] static : std.io#channel<std#int>.filter<std#int>.@static_init_flag
	 [0] : std.io#channel<std#int>.filter<std#int>.head
	 [1] : std.io#channel<std#int>.filter<std#int>.tail
	 [2] : std.io#channel<std#int>.filter<std#int>.buff_size
[106]: std.io#channel<std#int>.filter<std#int>.channel_data<std#int> - 106
	 [0] : std.io#channel<std#int>.filter<std#int>.channel_data<std#int>.data
	 [1] : std.io#channel<std#int>.filter<std#int>.channel_data<std#int>.next
[107]: std.io#send_channel<std.io.coroutines#job> - 107
[108]: std.io#send_channel<std#int> - 108
[109]: std.io#atomic<std#int> - 109
	 [0] static : std.io#atomic<std#int>.@static_init_flag
	 [0] : std.io#atomic<std#int>.value
[110]: std.io.coroutines#job_master - 110
	 [0] static : std.io.coroutines#job_master.@static_init_flag
	 [0] : std.io.coroutines#job_master.running_jobs
	 [1] : std.io.coroutines#job_master.job_queue
	 [2] : std.io.coroutines#job_master.canceled_job_queue
	 [3] : std.io.coroutines#job_master.long_term_pool
	 [4] : std.io.coroutines#job_master.short_term_pool
[111]: std.io.coroutines#__srt_global - 111
	 [0] static : std.io.coroutines#__srt_global.short_term_threads
	 [1] static : std.io.coroutines#__srt_global.long_term_threads
	 [2] static : std.io.coroutines#__srt_global.max_threads
	 [3] static : std.io.coroutines#__srt_global.scheduler
	 [4] static : std.io.coroutines#__srt_global.FIBER_THRESHOLD_TRIGGER
	 [5] static : std.io.coroutines#__srt_global.started
	 [0] static : std.io.coroutines#__srt_global.avail_threads
	 [1] static : std.io.coroutines#__srt_global.host
	 [2] static : std.io.coroutines#__srt_global.pool
	 [9] static : std.io.coroutines#__srt_global.launcher
[112]: std.io.coroutines#job - 112
	 [0] static : std.io.coroutines#job.@static_init_flag
	 [0] : std.io.coroutines#job.main0
	 [1] : std.io.coroutines#job.main1
	 [2] : std.io.coroutines#job.main2
	 [3] : std.io.coroutines#job.main3
	 [4] : std.io.coroutines#job.host
	 [5] : std.io.coroutines#job.fib
	 [6] : std.io.coroutines#job.name
	 [7] : std.io.coroutines#job.args
	 [8] : std.io.coroutines#job.deferred_obj
	 [9] : std.io.coroutines#job.start_time
	 [10] : std.io.coroutines#job.sched_time
	 [11] : std.io.coroutines#job.delay_time
	 [12] : std.io.coroutines#job.recurring
	 [13] : std.io.coroutines#job.tag
	 [14] : std.io.coroutines#job.block_caller
	 [15] : std.io.coroutines#job.long_term
	 [16] : std.io.coroutines#job.unconfined
	 [17] : std.io.coroutines#job.state
[113]: std.io.coroutines#coroutine_builder - 113
	 [0] static : std.io.coroutines#coroutine_builder.@static_init_flag
	 [0] : std.io.coroutines#coroutine_builder.master
	 [1] : std.io.coroutines#coroutine_builder.scheduled_job
[114]: std.io.coroutines#coroutine - 114
[115]: std.io.coroutines#cancellation_exception - 115
	 [0] : std#throwable.message
	 [1] : std#throwable.stack_trace
	 [2] : std#throwable.frame_info
[116]: std.io.coroutines#job_state - 116
	 [0] static : std.io.coroutines#job_state.created
	 [1] static : std.io.coroutines#job_state.active
	 [2] static : std.io.coroutines#job_state.completed
	 [3] static : std.io.coroutines#job_state.cancelled
	 [4] static : std.io.coroutines#job_state.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[117]: std.io.fiber#__srt_global - 117
	 [0] static : std.io.fiber#__srt_global.unique_id
[118]: std.io.fiber#fiber - 118
	 [0] static : std.io.fiber#fiber.@static_init_flag
	 [0] : std.io.fiber#fiber.name
	 [1] : std.io.fiber#fiber.id
	 [2] : std.io.fiber#fiber.main
	 [3] : std.io.fiber#fiber.exit_val
	 [4] : std.io.fiber#fiber.bound_thread
[119]: std.io.fiber#fiber_state - 119
	 [0] static : std.io.fiber#fiber_state.FIB_CREATED
	 [1] static : std.io.fiber#fiber_state.FIB_RUNNING
	 [2] static : std.io.fiber#fiber_state.FIB_SUSPENDED
	 [3] static : std.io.fiber#fiber_state.FIB_KILLED
	 [4] static : std.io.fiber#fiber_state.FIB_INVALID
	 [5] static : std.io.fiber#fiber_state.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[120]: std.math#__srt_global - 120
[121]: main#bank_account - 121
[122]: main#__srt_global - 122
	 [0] static : main#__srt_global.count
[123]: main#account_manager - 123
[124]: main#user_manager - 124
[125]: main#transaction - 125
	 [0] : main#transaction.amount
	 [1] : main#transaction.memo
	 [2] : main#transaction.payee
	 [3] : main#transaction.time
[126]: main#user - 126
	 [0] : main#user.name
	 [1] : main#user.uid
[127]: platform#build - 127
	 [0] static : platform#build.os
	 [1] static : platform#build.app_name
	 [2] static : platform#build.platform
	 [3] static : platform#build.version
	 [4] static : platform#build.@static_init_flag
[128]: platform#__srt_global - 128
[129]: std.reflect#data_type - 129
	 [0] static : std.reflect#data_type.int8
	 [1] static : std.reflect#data_type.int16
	 [2] static : std.reflect#data_type.int32
	 [3] static : std.reflect#data_type.int64
	 [4] static : std.reflect#data_type.uint8
	 [5] static : std.reflect#data_type.uint16
	 [6] static : std.reflect#data_type.uint32
	 [7] static : std.reflect#data_type.uint64
	 [8] static : std.reflect#data_type.fnptr
	 [9] static : std.reflect#data_type._var
	 [10] static : std.reflect#data_type._object
	 [11] static : std.reflect#data_type._class
	 [12] static : std.reflect#data_type.method
	 [13] static : std.reflect#data_type._nil
	 [14] static : std.reflect#data_type.any
	 [15] static : std.reflect#data_type.untyped
	 [16] static : std.reflect#data_type.undefined
	 [17] static : std.reflect#data_type.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal
[130]: std.reflect#__srt_global - 130
[131]: std.reflect#property_type - 131
	 [0] static : std.reflect#property_type.class_property
	 [1] static : std.reflect#property_type.field_property
	 [2] static : std.reflect#property_type.function_property
	 [3] static : std.reflect#property_type.@static_init_flag
	 [0] : std#_enum_.name
	 [1] : std#_enum_.ordinal


constants:
[0]: 15289
[1]: 15290
[2]: 15435
[3]: 15436
[4]: 0
[5]: 1
[6]: 2
[7]: 3
[8]: 4
[9]: 5
[10]: 6
[11]: 7
[12]: 8
[13]: 9
[14]: 10
[15]: 11
[16]: 12
[17]: 13
[18]: 14
[19]: 15
[20]: 255
[21]: 16
[22]: 17692
[23]: 17693
[24]: 17694
[25]: 17695
[26]: 17696
[27]: 17697
[28]: 17698
[29]: 17699
[30]: -1
[31]: 1295
[32]: 1e+09
[33]: 76
[34]: 48
[35]: 57
[36]: 102
[37]: 65
[38]: 90
[39]: 97
[40]: 31
[41]: 1e+09
[42]: 128
[43]: 1000
[44]: 1e+06
[45]: 108
[46]: 45
[47]: 17
[48]: 1235
[49]: 0.75
[50]: 0.25
[51]: 60000
[52]: 1240
[53]: 1241
[54]: 1252
[55]: 1242
[56]: 1243
[57]: 1244
[58]: 1245
[59]: 1256
[60]: 10000
[61]: 1289
[62]: 300
[63]: 0.5
[64]: 1296


strings:
[0]: OPEN
[1]: CLOSED
[2]: tm_seconds
[3]: tm_minutes
[4]: tm_hour
[5]: tm_mday
[6]: tm_mon
[7]: tm_year
[8]: tm_wday
[9]: tm_yday
[10]: tm_isdst
[11]: seconds
[12]: milliseconds
[13]: microseconds
[14]: nanoseconds
[15]: result_ok
[16]: result_ill_thread_start
[17]: result_thread_running
[18]: result_thread_terminated
[19]: result_invalid_stack_size
[20]: result_thread_not_started
[21]: result_ill_thread_join
[22]: result_thread_join_failed
[23]: result_ill_thread_interrupt
[24]: result_thread_interrupt_failed
[25]: result_ill_thread_destroy
[26]: result_thread_create_failed
[27]: result_no_thread_id
[28]: result_thread_destroy_failed
[29]: result_ill_priority_set
[30]: result_ill_thread_suspend
[31]: result_max_spin
[32]: int8
[33]: int16
[34]: int32
[35]: int64
[36]: uint8
[37]: uint16
[38]: uint32
[39]: uint64
[40]: fnptr
[41]: _var
[42]: _object
[43]: _class
[44]: method
[45]: _nil
[46]: any
[47]: untyped
[48]: undefined
[49]: min_priority
[50]: norm_priority
[51]: max_priority
[52]: class_property
[53]: field_property
[54]: function_property
[55]: FIB_CREATED
[56]: FIB_RUNNING
[57]: FIB_SUSPENDED
[58]: FIB_KILLED
[59]: FIB_INVALID
[60]: EXCLUSIVE
[61]: SINGLE
[62]: UNLIMITED
[63]: BUFFERED
[64]: created
[65]: active
[66]: completed
[67]: cancelled
[68]: 
[69]: true
[70]: false
[71]: length cannot be less than zero
[72]: length of: 
[73]:  is greater than the string: 
[74]: null
[75]: end_pos: 
[76]:  cannot be less than the start_pos: 
[77]: Index out of bounds exception at: 
[78]:  with size of: 
[79]: cannot sleep for negative time: 
[80]: nil
[81]: illegal char in string: 
[82]: [ 
[83]: , 
[84]:  ]
[85]: Index: 
[86]: , size: 
[87]: invalid thread priority 
[88]: main
[89]: channels must have at least 1 filter
[90]: invalid send on filter (
[91]: ) when max filter is 
[92]: invalid read on filter (
[93]: Long term jobs
[94]: Short term jobs
[95]: unnamed_job
[96]: job_scheduler
[97]: long_term_worker_thread#
[98]: worker_thread#
[99]: job(
[100]: ): 
[101]: cannot set update restart interval on non-recurring job
[102]: cannot set a job recurring that's blocking the calling thread
[103]: fiber
[104]:  
[105]: main task!
[106]: tasks finished!
[107]: [at: 
[108]: , memo: 
[109]: , to/from: 
[110]: ]
[111]: User (
[112]: )
