mod main;

import (
    std.*,
    platform
);

th : thread?;
count := 0;
def main() {
//    terminal_main_loop();

//    th = new thread("runnable thread", { args: object[] -> (int)
//        while(true) { delay(0); }
//        return 0;
//    });
//
//    th!!.start();
//    code_motion(min_priority);
//    code_motion(norm_priority);
//    code_motion(max_priority);
//    foo();
  jb: job;
    for(i := 0; i < 1; i++) {
       jb = coroutine.builder().schedule(1000).recurring(100, time_unit.milliseconds) = { args: object[] -> (int)
         println("st");
         for(j := 0; j < 1_000; j++){
             count++;
         }
         return 0;
       };
    }

    for(i := 0; i < 1_000_000; i++) {
    }
    jb.cancel();
    println("cancel");
    for(i : var = 0; i < 100_000_000; i++) {
    }

    println("done");
}

