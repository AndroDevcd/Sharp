mod main;

/**
* Created by bknun on 6/19/2023
* 
* @class account_manager
*
* Description:
*
*/
class account_manager {
    accounts := new list<bank_account>();
    inject user_registry: user_manager;

    def find_user(username: string): user? =
        user_registry.locate_user(username);

    def get_associated_accounts(usr: user): list<bank_account> {
        associated_accounts := new list<bank_account>();

        foreach(acct in accounts) {
            if(acct.is_user_associated(usr)) {
                associated_accounts.add(acct);
            }
        }

        return associated_accounts;
    }

    def get_primary_account(usr: user): bank_account? {
        foreach(acct in accounts) {
            if(acct.is_user_primary(usr)) {
                return acct;
            }
        }

        return null;
    }

    def create_account(usr: user): bool {
        if(get_primary_account(usr) == null) {
            accounts.add(new bank_account(usr));
            return true;
        }

        return false;
    }

    def delete_account(usr: user): bool {
        primary := get_primary_account(usr);
        if(primary != null) {
            accounts.remove(primary!!);
            return true;
        }

        return false;
    }

    def create_user(username: string, password: string): bool =
        user_registry.create_user(username, password);
}
