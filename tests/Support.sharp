mod application;

/**
 * Created by BraxtonN on 5/17/2018.
 */
class Start {

    public static def main(string[] args) : var
    {
        string str = "hello2e235456756";
        string message = new string("hello");
        message += "2";
        System.println(message);
        System.println(string.parse(129));
        System.println(message + "tt");
        System.print(2*6+9);

        try {
            message.at(99);
        } catch(Throwable t) {
            System.println("exception caught");
            System.println(t.getMessage());
        }

        message = "hello";
        System.println(message);
        System.println(str);
        if(message==str) {
            System.println("equal");
        } else {
            System.println("not equal");
        }

        //System.exit();

        System.println("tt" + message);

        System.println("Current time in Mills: " + string.parse(System.getUtcTimeInMills()));
        System.println("Current time in Nanos: " + string.parse(System.getNanoTime()));

        string[] data = new string[1000];
        var memory1;
        var memory2;

        System.println("Total memory is: "
                           + string.parse(System.getMaxMemory()));

        // checking free memory
        memory1 = System.freeMemory();
        System.println("Initial free memory: "
                                      + string.parse(memory1));

        // calling the garbage collector on demand
        System.gc();

        memory1 = System.freeMemory();

        System.println("Free memory after garbage "
                           + "collection: " + string.parse(memory1));

        // allocating integers
        for (var i = 0; i < 1000; i++) {
            data[i] = new string("string");
        }

        memory2 = System.freeMemory();
        System.println("Free memory after allocation: "
                           + string.parse(memory2));

        System.println("Memory used by allocation: " +
                                    string.parse((memory1 - memory2)));

        // discard integers
        for (var i = 0; i < 1000; i++) {
            data[i] = null;
        }

        System.gc();

        memory2 = System.freeMemory();
        System.println("Free memory after  "
            + "collecting discarded strings: " + string.parse(memory2));
    }
}
