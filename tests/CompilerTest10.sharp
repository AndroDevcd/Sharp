mod app;

import std;

class Employee {
    Employee name, company;
    int salary;
    var t = 3;

    public def operator=(var i) {
        salary = i;
    }
}

/*
    // TODO: perform test for Generic classes to not allow thuis to happen

    class Vehicle<T> {
        string make, model;
        T type;
    }

    veh = new Vehicle {
                make = "kia",
                model = "optima",
                T = null // we should not be able to do this
        };


        // TODO: prevent this from happening
    class Vehicle<T> {
            string make, model;
            T T; // variable name cannot be the same name as the Type parameters of a generic class
        }
*/

def main(string[] args) : var {
    Employee john;
    var[] arr=new var[6];
    asm("nop nop nop nop nop");
//    john = new Employee {"john", "Google", 125_000};
    john = new Employee {
//            name = "john"
            salary = 5
    };

//    fn someComputation := use -> num, x, y: var {
//          // we are in a completly seperate code space
//          // this code space knows nothing of the x variable
//          // unless explicitly passed in
//
//          print("num = " + num);
//    ;
    //var v = foo;
    return 0;
}
