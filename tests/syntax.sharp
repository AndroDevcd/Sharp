mod app;

import std.io;
import std.io.task;

/**
*
*/

def send(str: string)
{
    send(str.get_data());
}

times := 0;
def main(args: string[]) : var {
    jb := task.builder()
        .long_term()
        .recurring(50, milliseconds) = { args: object[] ->
            jb := args[0] as job;
            for(i := 0; i < 10000; i++) {}
        };

        task.builder()
                .recurring(1000, milliseconds) = { args: object[] ->
                    jb := args[0] as job;
                    for(i := 0; i < 1000; i++) {}
                };
        task.builder()
                .recurring(250, milliseconds) = { args: object[] ->
                    jb := args[0] as job;
                    for(i := 0; i < 10000; i++) {}
                };

        task.builder()
                .recurring(350, milliseconds) = { args: object[] ->
                    jb := args[0] as job;
                    for(i := 0; i < 10000; i++) {}
                };
        task.builder()
                .long_term()
                .recurring(450, milliseconds) = { args: object[] ->
                    jb := args[0] as job;
                    for(i := 0; i < 1000; i++) {}
                };


    while(true) {
        thread.yield();
        thread.sleep(1);
        }
    return 4;
}
