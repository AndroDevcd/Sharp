mod app;

import std.io;
import std.io.task;
import std.io.fiber;
import platform;
import platform.kernel;


def foo() : var {
    task.builder()
     .recurring(250, milliseconds) = { ->
       for(i := 0; i < 100_000_000; i++) {}
    };
    task.builder()
     .recurring(50, milliseconds)= { ->
       for(i := 0; i < 10_000_000; i++) {}
    };

    task.builder()
     .recurring(1000, milliseconds) = { ->
       for(i := 0; i < 10_000_000; i++) {}
       thread.sleep(250);
       for(i := 0; i < 10_000_000; i++) {}
    };

    task.builder()
     .recurring(1200, milliseconds) = { ->
       for(i := 0; i < 10_000_000; i++) {}
       thread.sleep(200);
       for(i := 0; i < 10_000_000; i++) {}
    };

    task.builder()
     .recurring(5000, milliseconds) = { ->
       for(i := 0; i < 1_000_000; i++) {}
    };

    return 0;
}

def main(args: string[]) {
   foo();
   for(;;) {
      for(i := 0; i < 1_000_000; i++) {}
      thread.sleep(32);
   }
}
