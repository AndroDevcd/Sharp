mod application;

import std;
import std.io;
import std.kernel.vm;

var a=8, b, c;

    def foo() : string[] {
        object[] arry = new object[5];

        return (string[])arry;
    }

    public static def main(string[] args) : var {
        File file = new File(new string("README1.md"));

        println("file " + file.getName() + " being created  ");
        file.create();
        //println("file " + file.getName() + " rename " + file.renameTo(new File(new string("poop.md"))));
        println("file " + file.getName() + " read only " + file.setReadOnly());
        println("file " + file.getName() + " absolute path is " + file.getAbsolutePath());
        println("file " + file.getName() + " has read access " + file.isReadable());
        println("file " + file.getName() + " has write access " + file.isWriteable());
        asm("nop nop nop nop nop");
        println("file " + file.getName() + " has write access " + (file.isWriteable()==1? "yes" : "no"));
        asm("nop nop nop nop nop");
       // println("file " + file.getName() + " setting writeable " + file.setWritable(true));
        if(file.exists()) {
            println("file " + file.getName() + " exists");
        } else {
            println("file " + file.getName() + " dosent exist!");
        }

        lock (file) {
            file.setWritable(true);
            IOStream ostream = new IOStream(file, IOStream.WRITE);
            ostream.write("Hello, World!");
            ostream.close();

            IOStream istream = new IOStream(file, IOStream.READ);
            var _char;

            while((_char = istream.nextChar()) != -1) {
                printChar(_char);
            }

            istream.close();
        }
//
        println(" what is your name ?");
        string name = readLine();
        println(" hello " + name);
        println("file " + file.getName() + " is a directory " + file.isDirectory());
        println("file " + file.getName() + " is a file " + file.isFile());
        println("file " + file.getName() + " is a hidden " + file.isHidden());
        println("file " + file.getName() + " last modified time " + file.lastModified());
        println("file " + file.getName() + " size is  " + file.length());
        println("file " + file.getName() + " being deleted  ");
        println("file " + file.getName() + " setting time to " + file.setLastModified(Time.timeToSecs(Time.nanoTime())));
       // file.delete();

        File dir = new File(new string("tests/tmp"));
        dir.mkdir();
        println("file " + dir.getPath() + " has files  ");
        string[] files = dir.list();
        foreach(string f : files) {
            println("file: " + f);
            File tmp = new File(f);
            println("file " + tmp.getName() + " is a directory " + tmp.isDirectory());
            println("file: " + tmp.getPath());
            tmp.delete();
        }
        println("folder is being deleted  ");
        println("file " + file.getName() + " size is  " + file.length());

        println("file " + file.getName() + " total disk space  " + file.getTotalSpace());
        println("file " + file.getName() + " total free disk space  " + file.getFreeSpace());
        println("file " + file.getName() + " total usable disk space  " + file.getUsableSpace());
//        dir.delete();
    }
