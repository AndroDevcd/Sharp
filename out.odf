## Object Dump file for out:

pre codebase size: 86132
post codebase size: 77089
optimized opcodes: 9043
net % gain 10.499


class: xxz#xxa[0] fields(0) methods(2)
class: xxz#xxa.xxd[1] fields(2) methods(8)
class: xxz#xxa.xxg[2] fields(6) methods(17)
class: xxz#xxa.xxn[3] fields(4) methods(13)
class: xxt#xxu[4] fields(0) methods(1)
class: xxt#xxu.xxw[5] fields(6) methods(9)
enum: xxt#xxu.xyz[6] fields(5) methods(17)
class: xxt#xxu.xyd[7] fields(6) methods(9)
class: xxt#xxu.xyg[8] fields(6) methods(9)
class: xxt#xxu.xyj[9] fields(2) methods(8)
class: xxt#xxu.xyo[10] fields(4) methods(11)
class: xxt#xxu.xyv[11] fields(6) methods(8)
enum: xxt#xxu.yzc[12] fields(19) methods(17)
class: yzv#yzw[13] fields(5) methods(27)
class: std#yaf[14] fields(2) methods(56)
class: std#yaf.yak[15] fields(1) methods(11)
class: std#yaf.yas[16] fields(1) methods(318)
class: std#yaf.yat[17] fields(1) methods(318)
class: std#yaf.yau[18] fields(1) methods(318)
class: std#yaf.yav[19] fields(1) methods(318)
class: std#yaf.yaw[20] fields(1) methods(318)
class: std#yaf.yax[21] fields(1) methods(318)
class: std#yaf.yay[22] fields(1) methods(318)
class: std#yaf.ybz[23] fields(1) methods(324)
class: std#yaf.yba[24] fields(1) methods(426)
class: std#yaf.ybb[25] fields(1) methods(320)
class: std#yaf.ybc[26] fields(1) methods(318)
class: std#yaf.ybf[27] fields(7) methods(53)
class: std.io#ybq[28] fields(1) methods(45)
interface: std.io#ybq.ybs[29] fields(0) methods(9)
class: std.io#ybq.ybv[30] fields(3) methods(50)
class: std.io#ybq.ycb[31] fields(20) methods(32)
class: std.io#ybq.ycg[32] fields(6) methods(20)
enum: std.io#ybq.ycp[33] fields(20) methods(20)
class: std.io#ybq.ydj[34] fields(18) methods(27)
class: yed#yee[35] fields(6) methods(18)
class: yed#yee.yeg[36] fields(2) methods(21)
class: yed#yee.yeo[37] fields(5) methods(15)
class: yed#yee.yew[38] fields(22) methods(28)
enum: yed#yee.ygi[39] fields(6) methods(17)
class: yed#yee.ygp[40] fields(3) methods(22)
class: yed#yee.ygs[41] fields(2) methods(8)
class: yed#yee.ygy[42] fields(0) methods(17)
enum: std.io#ybq.yhd[43] fields(5) methods(17)
class: std.io#ybq.yhp[44] fields(20) methods(32)
class: std.io#thread[45] fields(14) methods(44)
class: std#yaf.yir[46] fields(0) methods(9)
class: std#yaf.yja[47] fields(2) methods(17)
class: std#yaf.yji[48] fields(1) methods(21)
enum: std#yaf.yjk[49] fields(11) methods(17)
enum: std#yaf.yju[50] fields(6) methods(17)
class: std#yaf.yke[51] fields(0) methods(7)
interface: std#yaf.yki[52] fields(0) methods(10)
class: ykk#ykl[53] fields(0) methods(4)
class: ykk#ykl.ykr[54] fields(4) methods(10)
class: platform.kernel#yky[55] fields(0) methods(1)
class: platform.kernel#stack_state[56] fields(2) methods(8)
class: platform.kernel#yky.ylf[57] fields(0) methods(29)
class: platform.kernel#yky.yli[58] fields(4) methods(16)
class: std#string[59] fields(3) methods(67)
class: std#throwable[60] fields(3) methods(13)
class: std#exception[61] fields(3) methods(16)
class: std#illegal_argument_exception[62] fields(3) methods(19)
class: std#illegal_state_exception[63] fields(3) methods(19)
class: std#out_of_bounds_exception[64] fields(3) methods(19)
class: std#yaf.ymi[65] fields(3) methods(19)
class: std#invalid_operation_exception[66] fields(3) methods(19)
class: std#nullptr_exception[67] fields(3) methods(19)
class: std#runtime_exception[68] fields(3) methods(19)
class: std#stack_overflow_exception[69] fields(3) methods(19)
class: std#thread_stack_exception[70] fields(3) methods(19)
class: std#class_cast_exception[71] fields(3) methods(19)
class: std#out_of_memory_exception[72] fields(3) methods(19)
class: std#yaf.ymq[73] fields(3) methods(22)
class: std#unsatisfied_link_error[74] fields(3) methods(22)
class: std#yaf.yms[75] fields(3) methods(22)
class: std#error[76] fields(3) methods(19)
interface: std#yaf.ynf[77] fields(0) methods(9)
generic: std#yaf.yar[78] fields(1) methods(216)
generic: std#yaf.yar[79] fields(1) methods(216)
generic: std#yaf.yar[80] fields(1) methods(216)
generic: std#yaf.yar[81] fields(1) methods(216)
generic: std#yaf.yar[82] fields(1) methods(216)
generic: std#yaf.yar[83] fields(1) methods(216)
generic: std#yaf.yar[84] fields(1) methods(216)
generic: std#yaf.yar[85] fields(1) methods(216)
generic: std#yaf.yar[86] fields(1) methods(216)
std#yaf.ykb[87] fields(0) methods(9)
std.io#ybq.ykb[88] fields(0) methods(9)
generic: xxz#xxa.yah[89] fields(5) methods(35)
xxz#xxa.ykb[90] fields(0) methods(9)
generic: xxz#xxa.yah[91] fields(5) methods(35)
xxz#xxa.ykb[92] fields(0) methods(9)
generic: std.io#ybq.yah[93] fields(5) methods(35)
std.io#ybq.ykb[94] fields(0) methods(9)
generic: std.io#ybq.yao[95] fields(6) methods(15)
generic: yed#yee.yao[96] fields(6) methods(15)
generic: xxz#xxa.yah[97] fields(5) methods(35)
xxz#xxa.ykb[98] fields(0) methods(9)
generic: xxz#xxa.yah[99] fields(5) methods(35)
xxz#xxa.ykb[100] fields(0) methods(9)
generic: yed#yee.yix[101] fields(5) methods(33)
yed#yee.ykb[102] fields(0) methods(9)
generic: yed#yee.yah[103] fields(5) methods(35)
generic: yed#yee.yah[104] fields(5) methods(35)
generic: std.io#ybq.yao.aedr[105] fields(3) methods(10)
generic: yed#yee.yao.aeeh[106] fields(3) methods(10)


 strings: 

[0]: nil
[1]: job#
[2]: main
[3]: 
[4]: ################ Exclusive or neural network ################
[5]: Test Results:
[6]: 
test #
[7]: input data: 
[8]:  ^ 
[9]: target answer: 
[10]: ai result: 
[11]: true
[12]: false
[13]: length cannot be less than zero
[14]: length of: 
[15]:  is greater than the string: 
[16]: null
[17]: invalid precision: 
[18]: endPos: 
[19]:  cannot be less than the startPos: 
[20]: Index out of bounds exception at: 
[21]:  with size of: 
[22]: file path cannot be null
[23]: file path cannot be empty
[24]: Negative time
[25]: file could not be resolved: 
[26]: cannot set a timeout on a job that's blocking the calling thread
[27]: cannot set a job recurring that's blocking the calling thread
[28]: cannot block calling thread on job that has a timeout
[29]: cannot block calling thread on a recurring job
[30]: recurring jobs cannot be deferred tasks
[31]: Long term jobs
[32]: Short term jobs
[33]: cannot set update restart interval on non-recurring job
[34]: task_scheduler
[35]: cannot modify max thread count after task library has started, 
[36]: try calling this before your first task
[37]: cannot modify max thread count after task library has started, try calling this before your first ta
[38]: cannot have less than 2 max threads
[39]: long_term_worker_thread#
[40]: worker_thread#
[41]: invalid thread priority 
[42]: cannot sleep for negative time: 
[43]: win
[44]: posix
[45]: .dll
[46]: .so
[47]: end_pos: 
[48]:  cannot be less than the start_pos: 
[49]: assertion failed!
[50]: class_property
[51]: field_property
[52]: function_property
[53]: int8
[54]: int16
[55]: int32
[56]: int64
[57]: uint8
[58]: uint16
[59]: uint32
[60]: uint64
[61]: fnptr
[62]: _var
[63]: _object
[64]: _class
[65]: method
[66]: _nil
[67]: any
[68]: untyped
[69]: undefined
[70]: result_ok
[71]: result_ill_thread_start
[72]: result_thread_running
[73]: result_thread_terminated
[74]: result_invalid_stack_size
[75]: result_thread_not_started
[76]: result_ill_thread_join
[77]: result_thread_join_failed
[78]: result_ill_thread_interrupt
[79]: result_thread_interrupt_failed
[80]: result_ill_thread_destroy
[81]: result_thread_create_failed
[82]: result_no_thread_id
[83]: result_thread_destroy_failed
[84]: result_ill_priority_set
[85]: result_ill_thread_suspend
[86]: result_max_spin
[87]: enums
[88]: created
[89]: active
[90]: completed
[91]: cancelled
[92]: min_priority
[93]: norm_priority
[94]: max_priority
[95]: tm_seconds
[96]: tm_minutes
[97]: tm_hour
[98]: tm_mday
[99]: tm_mon
[100]: tm_year
[101]: tm_wday
[102]: tm_yday
[103]: tm_isdst
[104]: seconds
[105]: milliseconds
[106]: microseconds
[107]: nanoseconds
[108]: illegal char in string: 
[109]: [ 
[110]: , 
[111]:  ]
[112]: Index: 
[113]: , size: 
[114]: key 
[115]:  value 

 constants: 

[0]: 2.7182818284590451e+00
[1]: 3.1415926535897931e+00
[2]: 1.0000000000000000e+00
[3]: 0.0000000000000000e+00
[4]: inf
[5]: -nan
[6]: -nan
[7]: 7.5000000000000000e-01
[8]: 3.4999999999999998e-01
[9]: 5.0000000000000000e-01
[10]: 1.0000000000000000e+02
[11]: 1.0000000000000000e+09
[12]: 2.5000000000000000e-01

 methods: 
constructor: xxz#xxa.xxb[0] params(0) in file: xwy:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: xxt#xxu.xxv[1] params(0) in file: xxs:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: yzv#yzw.yzx[2] params(0) in file: yzu:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std#yaf.yag[3] params(0) in file: yad:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io#ybq.ybr[4] params(0) in file: ybo:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: yed#yee.yef[5] params(0) in file: yec:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: ykk#ykl.ykm[6] params(0) in file: ykj:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform.kernel#yky.ylz[7] params(0) in file: ykw:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std#yaf.yar.ynt[8] params(1) in file: yap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#yaf.yar.ynu[9] params(0) in file: yap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2117 // <std#yaf.yat.absw>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#yaf.yar.ynv[10] params(1) in file: yap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ynw[11] params(1) in file: yap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ynx[12] params(1) in file: yap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yny[13] params(1) in file: yap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoz[14] params(1) in file: yap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoa[15] params(1) in file: yap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yob[16] params(1) in file: yap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoc[17] params(1) in file: yap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yod[18] params(1) in file: yap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoe[19] params(1) in file: yap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yof[20] params(1) in file: yap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yog[21] params(1) in file: yap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoh[22] params(1) in file: yap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoi[23] params(1) in file: yap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoj[24] params(1) in file: yap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yok[25] params(1) in file: yap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yol[26] params(1) in file: yap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yom[27] params(1) in file: yap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yon[28] params(1) in file: yap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoo[29] params(1) in file: yap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yop[30] params(1) in file: yap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoq[31] params(1) in file: yap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yor[32] params(1) in file: yap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yos[33] params(1) in file: yap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yot[34] params(1) in file: yap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.you[35] params(1) in file: yap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yov[36] params(1) in file: yap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yow[37] params(1) in file: yap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yox[38] params(1) in file: yap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yoy[39] params(1) in file: yap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypz[40] params(1) in file: yap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypa[41] params(1) in file: yap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypb[42] params(1) in file: yap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.ypc[43] params(1) in file: yap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypd[44] params(1) in file: yap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ype[45] params(1) in file: yap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypf[46] params(1) in file: yap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypg[47] params(1) in file: yap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yph[48] params(1) in file: yap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypi[49] params(1) in file: yap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypj[50] params(1) in file: yap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypk[51] params(1) in file: yap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypl[52] params(1) in file: yap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypm[53] params(1) in file: yap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypn[54] params(1) in file: yap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.ypo[55] params(1) in file: yap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypp[56] params(1) in file: yap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypq[57] params(1) in file: yap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypr[58] params(1) in file: yap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yps[59] params(1) in file: yap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypt[60] params(1) in file: yap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypu[61] params(1) in file: yap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypv[62] params(1) in file: yap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypw[63] params(1) in file: yap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypx[64] params(1) in file: yap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ypy[65] params(1) in file: yap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqz[66] params(1) in file: yap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.yqa[67] params(1) in file: yap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqb[68] params(1) in file: yap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqc[69] params(1) in file: yap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqd[70] params(1) in file: yap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqe[71] params(1) in file: yap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqf[72] params(1) in file: yap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqg[73] params(1) in file: yap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqh[74] params(1) in file: yap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqi[75] params(1) in file: yap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqj[76] params(1) in file: yap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqk[77] params(1) in file: yap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yql[78] params(1) in file: yap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.yqm[79] params(1) in file: yap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqn[80] params(1) in file: yap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqo[81] params(1) in file: yap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqp[82] params(1) in file: yap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqq[83] params(1) in file: yap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqr[84] params(1) in file: yap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqs[85] params(1) in file: yap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqt[86] params(1) in file: yap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqu[87] params(1) in file: yap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqv[88] params(1) in file: yap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yqw[89] params(1) in file: yap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yqx[90] params(1) in file: yap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.yqy[91] params(1) in file: yap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrz[92] params(1) in file: yap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yra[93] params(1) in file: yap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrb[94] params(1) in file: yap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrc[95] params(1) in file: yap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrd[96] params(1) in file: yap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yre[97] params(1) in file: yap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrf[98] params(1) in file: yap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrg[99] params(1) in file: yap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrh[100] params(1) in file: yap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yri[101] params(1) in file: yap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrj[102] params(1) in file: yap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.yrk[103] params(1) in file: yap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrl[104] params(1) in file: yap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrm[105] params(1) in file: yap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrn[106] params(1) in file: yap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yro[107] params(1) in file: yap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrp[108] params(1) in file: yap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrq[109] params(1) in file: yap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrr[110] params(1) in file: yap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrs[111] params(1) in file: yap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrt[112] params(1) in file: yap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yru[113] params(1) in file: yap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrv[114] params(1) in file: yap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.yrw[115] params(1) in file: yap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yrx[116] params(1) in file: yap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yry[117] params(1) in file: yap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysz[118] params(1) in file: yap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysa[119] params(1) in file: yap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysb[120] params(1) in file: yap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysc[121] params(1) in file: yap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysd[122] params(1) in file: yap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.yse[123] params(1) in file: yap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysf[124] params(1) in file: yap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysg[125] params(1) in file: yap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysh[126] params(1) in file: yap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.ysi[127] params(1) in file: yap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysj[128] params(1) in file: yap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysk[129] params(1) in file: yap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysl[130] params(1) in file: yap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysm[131] params(1) in file: yap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysn[132] params(1) in file: yap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yso[133] params(1) in file: yap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysp[134] params(1) in file: yap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysq[135] params(1) in file: yap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysr[136] params(1) in file: yap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yss[137] params(1) in file: yap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yst[138] params(1) in file: yap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.ysu[139] params(1) in file: yap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysv[140] params(1) in file: yap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysw[141] params(1) in file: yap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysx[142] params(1) in file: yap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ysy[143] params(1) in file: yap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytz[144] params(1) in file: yap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yta[145] params(1) in file: yap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytb[146] params(1) in file: yap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytc[147] params(1) in file: yap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytd[148] params(1) in file: yap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yte[149] params(1) in file: yap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytf[150] params(1) in file: yap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.ytg[151] params(1) in file: yap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yth[152] params(1) in file: yap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yti[153] params(1) in file: yap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytj[154] params(1) in file: yap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytk[155] params(1) in file: yap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytl[156] params(1) in file: yap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytm[157] params(1) in file: yap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytn[158] params(1) in file: yap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yto[159] params(1) in file: yap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytp[160] params(1) in file: yap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytq[161] params(1) in file: yap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytr[162] params(1) in file: yap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.yts[163] params(1) in file: yap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytt[164] params(1) in file: yap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytu[165] params(1) in file: yap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytv[166] params(1) in file: yap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytw[167] params(1) in file: yap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.ytx[168] params(1) in file: yap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yty[169] params(1) in file: yap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuz[170] params(1) in file: yap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yua[171] params(1) in file: yap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yub[172] params(1) in file: yap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuc[173] params(1) in file: yap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yud[174] params(1) in file: yap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.yue[175] params(1) in file: yap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuf[176] params(1) in file: yap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yug[177] params(1) in file: yap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuh[178] params(1) in file: yap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yui[179] params(1) in file: yap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuj[180] params(1) in file: yap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuk[181] params(1) in file: yap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yul[182] params(1) in file: yap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yum[183] params(1) in file: yap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yun[184] params(1) in file: yap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuo[185] params(1) in file: yap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yup[186] params(1) in file: yap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.yuq[187] params(1) in file: yap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yur[188] params(1) in file: yap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yus[189] params(1) in file: yap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yut[190] params(1) in file: yap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuu[191] params(1) in file: yap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuv[192] params(1) in file: yap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuw[193] params(1) in file: yap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yux[194] params(1) in file: yap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yuy[195] params(1) in file: yap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yvz[196] params(1) in file: yap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yva[197] params(1) in file: yap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.yvb[198] params(1) in file: yap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.yvc[199] params(1) in file: yap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.yvd[200] params(1) in file: yap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.yve[201] params(1) in file: yap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#yaf.yar.yvf[202] params(0) in file: yap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3580 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#yaf.yar.yvg[203] params(1) in file: yap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3497 // <std#yaf.adve>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3581 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3562 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3562 // <std#string.at>   
47 [0x2f]:           call @2819 // <std#yaf.ybz.actw>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // xxz#xxa   
53 [0x35]:           shr adx, adx -> adx   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // xxz#xxa   
56 [0x38]:           skip @0 // pc = 56   
57 [0x39]:           dup    
58 [0x3a]:           newstr @108 // illegal char in string:    
59 [0x3b]:           call @3540 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3562 // <std#string.at>   
63 [0x3f]:           call @3573 // <std#string.operator+>   
64 [0x40]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu64 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3562 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu64 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu64 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#yaf.yar.yvh[204] params(0) in file: yap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // xxz#xxa   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvi[205] params(0) in file: yap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvj[206] params(0) in file: yap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // xxz#xxa   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvk[207] params(0) in file: yap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // xxz#xxa   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvl[208] params(0) in file: yap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // xxz#xxa   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvm[209] params(0) in file: yap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // xxz#xxa   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvn[210] params(0) in file: yap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // xxz#xxa   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvo[211] params(0) in file: yap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // xxz#xxa   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvp[212] params(0) in file: yap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // xxz#xxa   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvq[213] params(0) in file: yap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // xxz#xxa   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.yvr[214] params(0) in file: yap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // xxz#xxa   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#yaf.yar.yvs[215] params(0) in file: yap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#yaf.yar.yvt[216] params(0) in file: yap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yar.yvv[217] params(1) in file: yap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#yaf.yar.yvw[218] params(0) in file: yap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2117 // <std#yaf.yat.absw>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#yaf.yar.yvx[219] params(1) in file: yap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yvy[220] params(1) in file: yap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywz[221] params(1) in file: yap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywa[222] params(1) in file: yap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywb[223] params(1) in file: yap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywc[224] params(1) in file: yap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywd[225] params(1) in file: yap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywe[226] params(1) in file: yap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywf[227] params(1) in file: yap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywg[228] params(1) in file: yap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywh[229] params(1) in file: yap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywi[230] params(1) in file: yap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywj[231] params(1) in file: yap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywk[232] params(1) in file: yap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywl[233] params(1) in file: yap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywm[234] params(1) in file: yap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywn[235] params(1) in file: yap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywo[236] params(1) in file: yap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywp[237] params(1) in file: yap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywq[238] params(1) in file: yap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywr[239] params(1) in file: yap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.yws[240] params(1) in file: yap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywt[241] params(1) in file: yap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywu[242] params(1) in file: yap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywv[243] params(1) in file: yap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yww[244] params(1) in file: yap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywx[245] params(1) in file: yap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.ywy[246] params(1) in file: yap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxz[247] params(1) in file: yap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxa[248] params(1) in file: yap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxb[249] params(1) in file: yap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxc[250] params(1) in file: yap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxd[251] params(1) in file: yap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.yxe[252] params(1) in file: yap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxf[253] params(1) in file: yap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxg[254] params(1) in file: yap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxh[255] params(1) in file: yap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxi[256] params(1) in file: yap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxj[257] params(1) in file: yap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxk[258] params(1) in file: yap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxl[259] params(1) in file: yap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxm[260] params(1) in file: yap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxn[261] params(1) in file: yap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxo[262] params(1) in file: yap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxp[263] params(1) in file: yap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.yxq[264] params(1) in file: yap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxr[265] params(1) in file: yap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxs[266] params(1) in file: yap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxt[267] params(1) in file: yap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxu[268] params(1) in file: yap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxv[269] params(1) in file: yap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxw[270] params(1) in file: yap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxx[271] params(1) in file: yap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yxy[272] params(1) in file: yap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyz[273] params(1) in file: yap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yya[274] params(1) in file: yap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyb[275] params(1) in file: yap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.yyc[276] params(1) in file: yap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyd[277] params(1) in file: yap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yye[278] params(1) in file: yap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyf[279] params(1) in file: yap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyg[280] params(1) in file: yap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyh[281] params(1) in file: yap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyi[282] params(1) in file: yap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyj[283] params(1) in file: yap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyk[284] params(1) in file: yap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyl[285] params(1) in file: yap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yym[286] params(1) in file: yap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyn[287] params(1) in file: yap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.yyo[288] params(1) in file: yap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyp[289] params(1) in file: yap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyq[290] params(1) in file: yap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyr[291] params(1) in file: yap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yys[292] params(1) in file: yap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyt[293] params(1) in file: yap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyu[294] params(1) in file: yap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyv[295] params(1) in file: yap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyw[296] params(1) in file: yap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyx[297] params(1) in file: yap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.yyy[298] params(1) in file: yap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzz[299] params(1) in file: yap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azza[300] params(1) in file: yap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzb[301] params(1) in file: yap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzc[302] params(1) in file: yap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzd[303] params(1) in file: yap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azze[304] params(1) in file: yap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzf[305] params(1) in file: yap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzg[306] params(1) in file: yap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzh[307] params(1) in file: yap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzi[308] params(1) in file: yap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzj[309] params(1) in file: yap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzk[310] params(1) in file: yap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzl[311] params(1) in file: yap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azzm[312] params(1) in file: yap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzn[313] params(1) in file: yap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzo[314] params(1) in file: yap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzp[315] params(1) in file: yap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzq[316] params(1) in file: yap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzr[317] params(1) in file: yap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzs[318] params(1) in file: yap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzt[319] params(1) in file: yap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzu[320] params(1) in file: yap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzv[321] params(1) in file: yap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzw[322] params(1) in file: yap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azzx[323] params(1) in file: yap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azzy[324] params(1) in file: yap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azaz[325] params(1) in file: yap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azaa[326] params(1) in file: yap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azab[327] params(1) in file: yap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azac[328] params(1) in file: yap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azad[329] params(1) in file: yap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azae[330] params(1) in file: yap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azaf[331] params(1) in file: yap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azag[332] params(1) in file: yap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azah[333] params(1) in file: yap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azai[334] params(1) in file: yap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azaj[335] params(1) in file: yap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azak[336] params(1) in file: yap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azal[337] params(1) in file: yap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azam[338] params(1) in file: yap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azan[339] params(1) in file: yap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azao[340] params(1) in file: yap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azap[341] params(1) in file: yap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azaq[342] params(1) in file: yap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azar[343] params(1) in file: yap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azas[344] params(1) in file: yap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azat[345] params(1) in file: yap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azau[346] params(1) in file: yap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azav[347] params(1) in file: yap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azaw[348] params(1) in file: yap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azax[349] params(1) in file: yap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azay[350] params(1) in file: yap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbz[351] params(1) in file: yap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azba[352] params(1) in file: yap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbb[353] params(1) in file: yap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbc[354] params(1) in file: yap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbd[355] params(1) in file: yap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbe[356] params(1) in file: yap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbf[357] params(1) in file: yap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbg[358] params(1) in file: yap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbh[359] params(1) in file: yap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azbi[360] params(1) in file: yap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbj[361] params(1) in file: yap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbk[362] params(1) in file: yap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbl[363] params(1) in file: yap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbm[364] params(1) in file: yap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbn[365] params(1) in file: yap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbo[366] params(1) in file: yap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbp[367] params(1) in file: yap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbq[368] params(1) in file: yap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbr[369] params(1) in file: yap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbs[370] params(1) in file: yap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbt[371] params(1) in file: yap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azbu[372] params(1) in file: yap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbv[373] params(1) in file: yap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbw[374] params(1) in file: yap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azbx[375] params(1) in file: yap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azby[376] params(1) in file: yap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcz[377] params(1) in file: yap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azca[378] params(1) in file: yap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcb[379] params(1) in file: yap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcc[380] params(1) in file: yap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcd[381] params(1) in file: yap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azce[382] params(1) in file: yap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcf[383] params(1) in file: yap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azcg[384] params(1) in file: yap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azch[385] params(1) in file: yap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azci[386] params(1) in file: yap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcj[387] params(1) in file: yap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azck[388] params(1) in file: yap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcl[389] params(1) in file: yap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcm[390] params(1) in file: yap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcn[391] params(1) in file: yap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azco[392] params(1) in file: yap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcp[393] params(1) in file: yap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcq[394] params(1) in file: yap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcr[395] params(1) in file: yap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azcs[396] params(1) in file: yap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azct[397] params(1) in file: yap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcu[398] params(1) in file: yap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcv[399] params(1) in file: yap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcw[400] params(1) in file: yap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcx[401] params(1) in file: yap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azcy[402] params(1) in file: yap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azdz[403] params(1) in file: yap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azda[404] params(1) in file: yap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azdb[405] params(1) in file: yap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azdc[406] params(1) in file: yap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azdd[407] params(1) in file: yap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azde[408] params(1) in file: yap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azdf[409] params(1) in file: yap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azdg[410] params(1) in file: yap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#yaf.yar.azdh[411] params(0) in file: yap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3576 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#yaf.yar.azdi[412] params(1) in file: yap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3497 // <std#yaf.adve>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3581 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3562 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3562 // <std#string.at>   
47 [0x2f]:           call @2819 // <std#yaf.ybz.actw>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // xxz#xxa   
53 [0x35]:           shr adx, adx -> adx   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // xxz#xxa   
56 [0x38]:           skip @0 // pc = 56   
57 [0x39]:           dup    
58 [0x3a]:           newstr @108 // illegal char in string:    
59 [0x3b]:           call @3540 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3562 // <std#string.at>   
63 [0x3f]:           call @3573 // <std#string.operator+>   
64 [0x40]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov64 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3562 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov64 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov64 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#yaf.yar.azdj[413] params(0) in file: yap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // xxz#xxa   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azdk[414] params(0) in file: yap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azdl[415] params(0) in file: yap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // xxz#xxa   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azdm[416] params(0) in file: yap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // xxz#xxa   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azdn[417] params(0) in file: yap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // xxz#xxa   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azdo[418] params(0) in file: yap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // xxz#xxa   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azdp[419] params(0) in file: yap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // xxz#xxa   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azdq[420] params(0) in file: yap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // xxz#xxa   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azdr[421] params(0) in file: yap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // xxz#xxa   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azds[422] params(0) in file: yap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // xxz#xxa   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azdt[423] params(0) in file: yap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // xxz#xxa   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#yaf.yar.azdu[424] params(0) in file: yap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#yaf.yar.azdv[425] params(0) in file: yap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yar.azdx[426] params(1) in file: yap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#yaf.yar.azdy[427] params(0) in file: yap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2117 // <std#yaf.yat.absw>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#yaf.yar.azez[428] params(1) in file: yap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azea[429] params(1) in file: yap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azeb[430] params(1) in file: yap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azec[431] params(1) in file: yap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azed[432] params(1) in file: yap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azee[433] params(1) in file: yap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azef[434] params(1) in file: yap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azeg[435] params(1) in file: yap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azeh[436] params(1) in file: yap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azei[437] params(1) in file: yap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azej[438] params(1) in file: yap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azek[439] params(1) in file: yap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azel[440] params(1) in file: yap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azem[441] params(1) in file: yap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azen[442] params(1) in file: yap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azeo[443] params(1) in file: yap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azep[444] params(1) in file: yap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azeq[445] params(1) in file: yap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azer[446] params(1) in file: yap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azes[447] params(1) in file: yap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azet[448] params(1) in file: yap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azeu[449] params(1) in file: yap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azev[450] params(1) in file: yap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azew[451] params(1) in file: yap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azex[452] params(1) in file: yap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azey[453] params(1) in file: yap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfz[454] params(1) in file: yap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfa[455] params(1) in file: yap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfb[456] params(1) in file: yap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfc[457] params(1) in file: yap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfd[458] params(1) in file: yap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfe[459] params(1) in file: yap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azff[460] params(1) in file: yap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azfg[461] params(1) in file: yap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfh[462] params(1) in file: yap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfi[463] params(1) in file: yap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfj[464] params(1) in file: yap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfk[465] params(1) in file: yap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfl[466] params(1) in file: yap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfm[467] params(1) in file: yap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfn[468] params(1) in file: yap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfo[469] params(1) in file: yap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfp[470] params(1) in file: yap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfq[471] params(1) in file: yap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfr[472] params(1) in file: yap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azfs[473] params(1) in file: yap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azft[474] params(1) in file: yap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfu[475] params(1) in file: yap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfv[476] params(1) in file: yap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfw[477] params(1) in file: yap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfx[478] params(1) in file: yap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azfy[479] params(1) in file: yap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgz[480] params(1) in file: yap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azga[481] params(1) in file: yap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgb[482] params(1) in file: yap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgc[483] params(1) in file: yap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgd[484] params(1) in file: yap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azge[485] params(1) in file: yap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgf[486] params(1) in file: yap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgg[487] params(1) in file: yap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgh[488] params(1) in file: yap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgi[489] params(1) in file: yap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgj[490] params(1) in file: yap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgk[491] params(1) in file: yap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgl[492] params(1) in file: yap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgm[493] params(1) in file: yap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgn[494] params(1) in file: yap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgo[495] params(1) in file: yap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgp[496] params(1) in file: yap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azgq[497] params(1) in file: yap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgr[498] params(1) in file: yap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgs[499] params(1) in file: yap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgt[500] params(1) in file: yap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgu[501] params(1) in file: yap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgv[502] params(1) in file: yap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgw[503] params(1) in file: yap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgx[504] params(1) in file: yap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azgy[505] params(1) in file: yap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azhz[506] params(1) in file: yap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azha[507] params(1) in file: yap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhb[508] params(1) in file: yap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azhc[509] params(1) in file: yap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhd[510] params(1) in file: yap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhe[511] params(1) in file: yap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhf[512] params(1) in file: yap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhg[513] params(1) in file: yap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhh[514] params(1) in file: yap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhi[515] params(1) in file: yap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhj[516] params(1) in file: yap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhk[517] params(1) in file: yap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhl[518] params(1) in file: yap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhm[519] params(1) in file: yap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhn[520] params(1) in file: yap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azho[521] params(1) in file: yap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhp[522] params(1) in file: yap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhq[523] params(1) in file: yap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhr[524] params(1) in file: yap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhs[525] params(1) in file: yap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azht[526] params(1) in file: yap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhu[527] params(1) in file: yap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhv[528] params(1) in file: yap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhw[529] params(1) in file: yap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhx[530] params(1) in file: yap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azhy[531] params(1) in file: yap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aziz[532] params(1) in file: yap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azia[533] params(1) in file: yap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azib[534] params(1) in file: yap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azic[535] params(1) in file: yap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azid[536] params(1) in file: yap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azie[537] params(1) in file: yap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azif[538] params(1) in file: yap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azig[539] params(1) in file: yap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azih[540] params(1) in file: yap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azii[541] params(1) in file: yap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azij[542] params(1) in file: yap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azik[543] params(1) in file: yap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azil[544] params(1) in file: yap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azim[545] params(1) in file: yap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azin[546] params(1) in file: yap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azio[547] params(1) in file: yap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azip[548] params(1) in file: yap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aziq[549] params(1) in file: yap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azir[550] params(1) in file: yap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azis[551] params(1) in file: yap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azit[552] params(1) in file: yap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aziu[553] params(1) in file: yap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aziv[554] params(1) in file: yap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aziw[555] params(1) in file: yap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azix[556] params(1) in file: yap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aziy[557] params(1) in file: yap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjz[558] params(1) in file: yap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azja[559] params(1) in file: yap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjb[560] params(1) in file: yap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjc[561] params(1) in file: yap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjd[562] params(1) in file: yap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azje[563] params(1) in file: yap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjf[564] params(1) in file: yap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjg[565] params(1) in file: yap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjh[566] params(1) in file: yap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azji[567] params(1) in file: yap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjj[568] params(1) in file: yap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azjk[569] params(1) in file: yap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjl[570] params(1) in file: yap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjm[571] params(1) in file: yap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjn[572] params(1) in file: yap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjo[573] params(1) in file: yap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjp[574] params(1) in file: yap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjq[575] params(1) in file: yap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjr[576] params(1) in file: yap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjs[577] params(1) in file: yap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjt[578] params(1) in file: yap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azju[579] params(1) in file: yap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjv[580] params(1) in file: yap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azjw[581] params(1) in file: yap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjx[582] params(1) in file: yap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azjy[583] params(1) in file: yap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkz[584] params(1) in file: yap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azka[585] params(1) in file: yap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkb[586] params(1) in file: yap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkc[587] params(1) in file: yap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkd[588] params(1) in file: yap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azke[589] params(1) in file: yap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkf[590] params(1) in file: yap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkg[591] params(1) in file: yap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkh[592] params(1) in file: yap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azki[593] params(1) in file: yap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkj[594] params(1) in file: yap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkk[595] params(1) in file: yap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkl[596] params(1) in file: yap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkm[597] params(1) in file: yap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkn[598] params(1) in file: yap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azko[599] params(1) in file: yap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkp[600] params(1) in file: yap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkq[601] params(1) in file: yap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkr[602] params(1) in file: yap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azks[603] params(1) in file: yap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkt[604] params(1) in file: yap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azku[605] params(1) in file: yap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkv[606] params(1) in file: yap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkw[607] params(1) in file: yap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azkx[608] params(1) in file: yap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azky[609] params(1) in file: yap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azlz[610] params(1) in file: yap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azla[611] params(1) in file: yap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azlb[612] params(1) in file: yap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azlc[613] params(1) in file: yap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azld[614] params(1) in file: yap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azle[615] params(1) in file: yap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azlf[616] params(1) in file: yap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azlg[617] params(1) in file: yap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azlh[618] params(1) in file: yap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azli[619] params(1) in file: yap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#yaf.yar.azlj[620] params(0) in file: yap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3579 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#yaf.yar.azlk[621] params(1) in file: yap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu32 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3497 // <std#yaf.adve>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3581 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3562 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3562 // <std#string.at>   
47 [0x2f]:           call @2819 // <std#yaf.ybz.actw>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // xxz#xxa   
53 [0x35]:           shr adx, adx -> adx   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // xxz#xxa   
56 [0x38]:           skip @0 // pc = 56   
57 [0x39]:           dup    
58 [0x3a]:           newstr @108 // illegal char in string:    
59 [0x3b]:           call @3540 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3562 // <std#string.at>   
63 [0x3f]:           call @3573 // <std#string.operator+>   
64 [0x40]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu32 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3562 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu32 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu32 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#yaf.yar.azll[622] params(0) in file: yap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // xxz#xxa   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azlm[623] params(0) in file: yap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azln[624] params(0) in file: yap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // xxz#xxa   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azlo[625] params(0) in file: yap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // xxz#xxa   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azlp[626] params(0) in file: yap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // xxz#xxa   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azlq[627] params(0) in file: yap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // xxz#xxa   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azlr[628] params(0) in file: yap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // xxz#xxa   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azls[629] params(0) in file: yap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // xxz#xxa   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azlt[630] params(0) in file: yap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // xxz#xxa   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azlu[631] params(0) in file: yap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // xxz#xxa   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azlv[632] params(0) in file: yap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // xxz#xxa   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#yaf.yar.azlw[633] params(0) in file: yap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#yaf.yar.azlx[634] params(0) in file: yap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yar.azmz[635] params(1) in file: yap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#yaf.yar.azma[636] params(0) in file: yap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2117 // <std#yaf.yat.absw>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#yaf.yar.azmb[637] params(1) in file: yap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmc[638] params(1) in file: yap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmd[639] params(1) in file: yap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azme[640] params(1) in file: yap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmf[641] params(1) in file: yap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmg[642] params(1) in file: yap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmh[643] params(1) in file: yap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmi[644] params(1) in file: yap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmj[645] params(1) in file: yap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmk[646] params(1) in file: yap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azml[647] params(1) in file: yap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmm[648] params(1) in file: yap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmn[649] params(1) in file: yap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmo[650] params(1) in file: yap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmp[651] params(1) in file: yap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmq[652] params(1) in file: yap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmr[653] params(1) in file: yap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azms[654] params(1) in file: yap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmt[655] params(1) in file: yap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmu[656] params(1) in file: yap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmv[657] params(1) in file: yap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmw[658] params(1) in file: yap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmx[659] params(1) in file: yap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azmy[660] params(1) in file: yap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznz[661] params(1) in file: yap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azna[662] params(1) in file: yap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznb[663] params(1) in file: yap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznc[664] params(1) in file: yap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznd[665] params(1) in file: yap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azne[666] params(1) in file: yap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznf[667] params(1) in file: yap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azng[668] params(1) in file: yap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznh[669] params(1) in file: yap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azni[670] params(1) in file: yap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznj[671] params(1) in file: yap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznk[672] params(1) in file: yap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznl[673] params(1) in file: yap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznm[674] params(1) in file: yap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznn[675] params(1) in file: yap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azno[676] params(1) in file: yap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznp[677] params(1) in file: yap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznq[678] params(1) in file: yap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznr[679] params(1) in file: yap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azns[680] params(1) in file: yap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznt[681] params(1) in file: yap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aznu[682] params(1) in file: yap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznv[683] params(1) in file: yap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznw[684] params(1) in file: yap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aznx[685] params(1) in file: yap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azny[686] params(1) in file: yap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoz[687] params(1) in file: yap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoa[688] params(1) in file: yap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azob[689] params(1) in file: yap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoc[690] params(1) in file: yap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azod[691] params(1) in file: yap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoe[692] params(1) in file: yap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azof[693] params(1) in file: yap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azog[694] params(1) in file: yap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoh[695] params(1) in file: yap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoi[696] params(1) in file: yap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoj[697] params(1) in file: yap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azok[698] params(1) in file: yap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azol[699] params(1) in file: yap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azom[700] params(1) in file: yap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azon[701] params(1) in file: yap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoo[702] params(1) in file: yap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azop[703] params(1) in file: yap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoq[704] params(1) in file: yap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azor[705] params(1) in file: yap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azos[706] params(1) in file: yap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azot[707] params(1) in file: yap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azou[708] params(1) in file: yap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azov[709] params(1) in file: yap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azow[710] params(1) in file: yap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azox[711] params(1) in file: yap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azoy[712] params(1) in file: yap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azpz[713] params(1) in file: yap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azpa[714] params(1) in file: yap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azpb[715] params(1) in file: yap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azpc[716] params(1) in file: yap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpd[717] params(1) in file: yap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azpe[718] params(1) in file: yap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpf[719] params(1) in file: yap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpg[720] params(1) in file: yap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azph[721] params(1) in file: yap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpi[722] params(1) in file: yap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpj[723] params(1) in file: yap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpk[724] params(1) in file: yap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpl[725] params(1) in file: yap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpm[726] params(1) in file: yap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpn[727] params(1) in file: yap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpo[728] params(1) in file: yap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpp[729] params(1) in file: yap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azpq[730] params(1) in file: yap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpr[731] params(1) in file: yap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azps[732] params(1) in file: yap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpt[733] params(1) in file: yap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpu[734] params(1) in file: yap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpv[735] params(1) in file: yap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpw[736] params(1) in file: yap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpx[737] params(1) in file: yap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azpy[738] params(1) in file: yap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqz[739] params(1) in file: yap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqa[740] params(1) in file: yap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqb[741] params(1) in file: yap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azqc[742] params(1) in file: yap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqd[743] params(1) in file: yap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqe[744] params(1) in file: yap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqf[745] params(1) in file: yap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqg[746] params(1) in file: yap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqh[747] params(1) in file: yap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqi[748] params(1) in file: yap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqj[749] params(1) in file: yap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqk[750] params(1) in file: yap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azql[751] params(1) in file: yap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqm[752] params(1) in file: yap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqn[753] params(1) in file: yap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azqo[754] params(1) in file: yap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqp[755] params(1) in file: yap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqq[756] params(1) in file: yap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqr[757] params(1) in file: yap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqs[758] params(1) in file: yap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqt[759] params(1) in file: yap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqu[760] params(1) in file: yap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqv[761] params(1) in file: yap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqw[762] params(1) in file: yap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqx[763] params(1) in file: yap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azqy[764] params(1) in file: yap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrz[765] params(1) in file: yap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azra[766] params(1) in file: yap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrb[767] params(1) in file: yap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrc[768] params(1) in file: yap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrd[769] params(1) in file: yap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azre[770] params(1) in file: yap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrf[771] params(1) in file: yap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrg[772] params(1) in file: yap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrh[773] params(1) in file: yap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azri[774] params(1) in file: yap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrj[775] params(1) in file: yap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrk[776] params(1) in file: yap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrl[777] params(1) in file: yap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azrm[778] params(1) in file: yap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrn[779] params(1) in file: yap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azro[780] params(1) in file: yap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrp[781] params(1) in file: yap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrq[782] params(1) in file: yap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrr[783] params(1) in file: yap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrs[784] params(1) in file: yap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrt[785] params(1) in file: yap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azru[786] params(1) in file: yap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrv[787] params(1) in file: yap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrw[788] params(1) in file: yap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azrx[789] params(1) in file: yap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azry[790] params(1) in file: yap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsz[791] params(1) in file: yap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsa[792] params(1) in file: yap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsb[793] params(1) in file: yap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsc[794] params(1) in file: yap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsd[795] params(1) in file: yap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azse[796] params(1) in file: yap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsf[797] params(1) in file: yap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsg[798] params(1) in file: yap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsh[799] params(1) in file: yap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsi[800] params(1) in file: yap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsj[801] params(1) in file: yap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azsk[802] params(1) in file: yap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsl[803] params(1) in file: yap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsm[804] params(1) in file: yap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsn[805] params(1) in file: yap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azso[806] params(1) in file: yap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsp[807] params(1) in file: yap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsq[808] params(1) in file: yap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsr[809] params(1) in file: yap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azss[810] params(1) in file: yap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azst[811] params(1) in file: yap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsu[812] params(1) in file: yap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsv[813] params(1) in file: yap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azsw[814] params(1) in file: yap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsx[815] params(1) in file: yap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azsy[816] params(1) in file: yap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aztz[817] params(1) in file: yap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azta[818] params(1) in file: yap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aztb[819] params(1) in file: yap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aztc[820] params(1) in file: yap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aztd[821] params(1) in file: yap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azte[822] params(1) in file: yap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aztf[823] params(1) in file: yap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aztg[824] params(1) in file: yap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azth[825] params(1) in file: yap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azti[826] params(1) in file: yap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aztj[827] params(1) in file: yap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aztk[828] params(1) in file: yap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#yaf.yar.aztl[829] params(0) in file: yap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3575 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#yaf.yar.aztm[830] params(1) in file: yap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov32 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3497 // <std#yaf.adve>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3581 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3562 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3562 // <std#string.at>   
47 [0x2f]:           call @2819 // <std#yaf.ybz.actw>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // xxz#xxa   
53 [0x35]:           shr adx, adx -> adx   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // xxz#xxa   
56 [0x38]:           skip @0 // pc = 56   
57 [0x39]:           dup    
58 [0x3a]:           newstr @108 // illegal char in string:    
59 [0x3b]:           call @3540 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3562 // <std#string.at>   
63 [0x3f]:           call @3573 // <std#string.operator+>   
64 [0x40]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov32 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3562 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov32 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov32 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#yaf.yar.aztn[831] params(0) in file: yap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // xxz#xxa   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azto[832] params(0) in file: yap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aztp[833] params(0) in file: yap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // xxz#xxa   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aztq[834] params(0) in file: yap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // xxz#xxa   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aztr[835] params(0) in file: yap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // xxz#xxa   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.azts[836] params(0) in file: yap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // xxz#xxa   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aztt[837] params(0) in file: yap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // xxz#xxa   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aztu[838] params(0) in file: yap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // xxz#xxa   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aztv[839] params(0) in file: yap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // xxz#xxa   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aztw[840] params(0) in file: yap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // xxz#xxa   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aztx[841] params(0) in file: yap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // xxz#xxa   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#yaf.yar.azty[842] params(0) in file: yap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#yaf.yar.azuz[843] params(0) in file: yap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yar.azub[844] params(1) in file: yap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#yaf.yar.azuc[845] params(0) in file: yap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2117 // <std#yaf.yat.absw>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#yaf.yar.azud[846] params(1) in file: yap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azue[847] params(1) in file: yap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuf[848] params(1) in file: yap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azug[849] params(1) in file: yap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuh[850] params(1) in file: yap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azui[851] params(1) in file: yap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuj[852] params(1) in file: yap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuk[853] params(1) in file: yap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azul[854] params(1) in file: yap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azum[855] params(1) in file: yap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azun[856] params(1) in file: yap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuo[857] params(1) in file: yap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azup[858] params(1) in file: yap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuq[859] params(1) in file: yap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azur[860] params(1) in file: yap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azus[861] params(1) in file: yap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azut[862] params(1) in file: yap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuu[863] params(1) in file: yap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuv[864] params(1) in file: yap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuw[865] params(1) in file: yap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azux[866] params(1) in file: yap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.azuy[867] params(1) in file: yap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvz[868] params(1) in file: yap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azva[869] params(1) in file: yap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvb[870] params(1) in file: yap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvc[871] params(1) in file: yap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvd[872] params(1) in file: yap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azve[873] params(1) in file: yap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvf[874] params(1) in file: yap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvg[875] params(1) in file: yap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvh[876] params(1) in file: yap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvi[877] params(1) in file: yap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvj[878] params(1) in file: yap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azvk[879] params(1) in file: yap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvl[880] params(1) in file: yap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvm[881] params(1) in file: yap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvn[882] params(1) in file: yap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvo[883] params(1) in file: yap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvp[884] params(1) in file: yap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvq[885] params(1) in file: yap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvr[886] params(1) in file: yap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvs[887] params(1) in file: yap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvt[888] params(1) in file: yap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvu[889] params(1) in file: yap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvv[890] params(1) in file: yap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azvw[891] params(1) in file: yap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvx[892] params(1) in file: yap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azvy[893] params(1) in file: yap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwz[894] params(1) in file: yap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwa[895] params(1) in file: yap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwb[896] params(1) in file: yap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwc[897] params(1) in file: yap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwd[898] params(1) in file: yap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwe[899] params(1) in file: yap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwf[900] params(1) in file: yap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwg[901] params(1) in file: yap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwh[902] params(1) in file: yap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azwi[903] params(1) in file: yap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwj[904] params(1) in file: yap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwk[905] params(1) in file: yap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwl[906] params(1) in file: yap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwm[907] params(1) in file: yap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwn[908] params(1) in file: yap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwo[909] params(1) in file: yap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwp[910] params(1) in file: yap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwq[911] params(1) in file: yap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwr[912] params(1) in file: yap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azws[913] params(1) in file: yap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwt[914] params(1) in file: yap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.azwu[915] params(1) in file: yap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwv[916] params(1) in file: yap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azww[917] params(1) in file: yap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwx[918] params(1) in file: yap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azwy[919] params(1) in file: yap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azxz[920] params(1) in file: yap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azxa[921] params(1) in file: yap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azxb[922] params(1) in file: yap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azxc[923] params(1) in file: yap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azxd[924] params(1) in file: yap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.azxe[925] params(1) in file: yap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxf[926] params(1) in file: yap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.azxg[927] params(1) in file: yap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxh[928] params(1) in file: yap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxi[929] params(1) in file: yap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxj[930] params(1) in file: yap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxk[931] params(1) in file: yap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxl[932] params(1) in file: yap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxm[933] params(1) in file: yap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxn[934] params(1) in file: yap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxo[935] params(1) in file: yap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxp[936] params(1) in file: yap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxq[937] params(1) in file: yap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxr[938] params(1) in file: yap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azxs[939] params(1) in file: yap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxt[940] params(1) in file: yap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxu[941] params(1) in file: yap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxv[942] params(1) in file: yap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxw[943] params(1) in file: yap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxx[944] params(1) in file: yap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azxy[945] params(1) in file: yap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyz[946] params(1) in file: yap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azya[947] params(1) in file: yap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyb[948] params(1) in file: yap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyc[949] params(1) in file: yap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyd[950] params(1) in file: yap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azye[951] params(1) in file: yap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyf[952] params(1) in file: yap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyg[953] params(1) in file: yap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyh[954] params(1) in file: yap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyi[955] params(1) in file: yap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyj[956] params(1) in file: yap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyk[957] params(1) in file: yap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyl[958] params(1) in file: yap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azym[959] params(1) in file: yap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyn[960] params(1) in file: yap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyo[961] params(1) in file: yap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyp[962] params(1) in file: yap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.azyq[963] params(1) in file: yap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyr[964] params(1) in file: yap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azys[965] params(1) in file: yap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyt[966] params(1) in file: yap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyu[967] params(1) in file: yap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyv[968] params(1) in file: yap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyw[969] params(1) in file: yap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyx[970] params(1) in file: yap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.azyy[971] params(1) in file: yap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazz[972] params(1) in file: yap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaza[973] params(1) in file: yap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazb[974] params(1) in file: yap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aazc[975] params(1) in file: yap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazd[976] params(1) in file: yap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaze[977] params(1) in file: yap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazf[978] params(1) in file: yap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazg[979] params(1) in file: yap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazh[980] params(1) in file: yap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazi[981] params(1) in file: yap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazj[982] params(1) in file: yap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazk[983] params(1) in file: yap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazl[984] params(1) in file: yap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazm[985] params(1) in file: yap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazn[986] params(1) in file: yap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aazo[987] params(1) in file: yap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazp[988] params(1) in file: yap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazq[989] params(1) in file: yap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazr[990] params(1) in file: yap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazs[991] params(1) in file: yap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazt[992] params(1) in file: yap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazu[993] params(1) in file: yap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazv[994] params(1) in file: yap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazw[995] params(1) in file: yap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazx[996] params(1) in file: yap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aazy[997] params(1) in file: yap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaaz[998] params(1) in file: yap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaaa[999] params(1) in file: yap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaab[1000] params(1) in file: yap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaac[1001] params(1) in file: yap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaad[1002] params(1) in file: yap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaae[1003] params(1) in file: yap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaaf[1004] params(1) in file: yap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaag[1005] params(1) in file: yap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaah[1006] params(1) in file: yap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaai[1007] params(1) in file: yap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaaj[1008] params(1) in file: yap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaak[1009] params(1) in file: yap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaal[1010] params(1) in file: yap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaam[1011] params(1) in file: yap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaan[1012] params(1) in file: yap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaao[1013] params(1) in file: yap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaap[1014] params(1) in file: yap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaaq[1015] params(1) in file: yap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaar[1016] params(1) in file: yap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaas[1017] params(1) in file: yap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaat[1018] params(1) in file: yap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaau[1019] params(1) in file: yap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaav[1020] params(1) in file: yap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaaw[1021] params(1) in file: yap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaax[1022] params(1) in file: yap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaay[1023] params(1) in file: yap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabz[1024] params(1) in file: yap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaba[1025] params(1) in file: yap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabb[1026] params(1) in file: yap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabc[1027] params(1) in file: yap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabd[1028] params(1) in file: yap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabe[1029] params(1) in file: yap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabf[1030] params(1) in file: yap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabg[1031] params(1) in file: yap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabh[1032] params(1) in file: yap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabi[1033] params(1) in file: yap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aabj[1034] params(1) in file: yap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aabk[1035] params(1) in file: yap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aabl[1036] params(1) in file: yap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aabm[1037] params(1) in file: yap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#yaf.yar.aabn[1038] params(0) in file: yap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3578 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#yaf.yar.aabo[1039] params(1) in file: yap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu16 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3497 // <std#yaf.adve>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3581 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3562 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3562 // <std#string.at>   
47 [0x2f]:           call @2819 // <std#yaf.ybz.actw>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // xxz#xxa   
53 [0x35]:           shr adx, adx -> adx   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // xxz#xxa   
56 [0x38]:           skip @0 // pc = 56   
57 [0x39]:           dup    
58 [0x3a]:           newstr @108 // illegal char in string:    
59 [0x3b]:           call @3540 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3562 // <std#string.at>   
63 [0x3f]:           call @3573 // <std#string.operator+>   
64 [0x40]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu16 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3562 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu16 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu16 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#yaf.yar.aabp[1040] params(0) in file: yap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // xxz#xxa   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aabq[1041] params(0) in file: yap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aabr[1042] params(0) in file: yap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // xxz#xxa   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aabs[1043] params(0) in file: yap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // xxz#xxa   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aabt[1044] params(0) in file: yap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // xxz#xxa   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aabu[1045] params(0) in file: yap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // xxz#xxa   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aabv[1046] params(0) in file: yap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // xxz#xxa   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aabw[1047] params(0) in file: yap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // xxz#xxa   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aabx[1048] params(0) in file: yap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // xxz#xxa   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aaby[1049] params(0) in file: yap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // xxz#xxa   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aacz[1050] params(0) in file: yap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // xxz#xxa   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#yaf.yar.aaca[1051] params(0) in file: yap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#yaf.yar.aacb[1052] params(0) in file: yap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yar.aacd[1053] params(1) in file: yap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#yaf.yar.aace[1054] params(0) in file: yap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2117 // <std#yaf.yat.absw>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#yaf.yar.aacf[1055] params(1) in file: yap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacg[1056] params(1) in file: yap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aach[1057] params(1) in file: yap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaci[1058] params(1) in file: yap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacj[1059] params(1) in file: yap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aack[1060] params(1) in file: yap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacl[1061] params(1) in file: yap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacm[1062] params(1) in file: yap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacn[1063] params(1) in file: yap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaco[1064] params(1) in file: yap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacp[1065] params(1) in file: yap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacq[1066] params(1) in file: yap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacr[1067] params(1) in file: yap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacs[1068] params(1) in file: yap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aact[1069] params(1) in file: yap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacu[1070] params(1) in file: yap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacv[1071] params(1) in file: yap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacw[1072] params(1) in file: yap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacx[1073] params(1) in file: yap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aacy[1074] params(1) in file: yap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadz[1075] params(1) in file: yap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aada[1076] params(1) in file: yap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadb[1077] params(1) in file: yap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadc[1078] params(1) in file: yap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadd[1079] params(1) in file: yap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aade[1080] params(1) in file: yap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadf[1081] params(1) in file: yap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadg[1082] params(1) in file: yap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadh[1083] params(1) in file: yap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadi[1084] params(1) in file: yap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadj[1085] params(1) in file: yap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadk[1086] params(1) in file: yap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadl[1087] params(1) in file: yap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aadm[1088] params(1) in file: yap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadn[1089] params(1) in file: yap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aado[1090] params(1) in file: yap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadp[1091] params(1) in file: yap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadq[1092] params(1) in file: yap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadr[1093] params(1) in file: yap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aads[1094] params(1) in file: yap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadt[1095] params(1) in file: yap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadu[1096] params(1) in file: yap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadv[1097] params(1) in file: yap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadw[1098] params(1) in file: yap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aadx[1099] params(1) in file: yap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aady[1100] params(1) in file: yap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaez[1101] params(1) in file: yap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaea[1102] params(1) in file: yap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaeb[1103] params(1) in file: yap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaec[1104] params(1) in file: yap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaed[1105] params(1) in file: yap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaee[1106] params(1) in file: yap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaef[1107] params(1) in file: yap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaeg[1108] params(1) in file: yap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaeh[1109] params(1) in file: yap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaei[1110] params(1) in file: yap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaej[1111] params(1) in file: yap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aaek[1112] params(1) in file: yap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aael[1113] params(1) in file: yap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaem[1114] params(1) in file: yap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaen[1115] params(1) in file: yap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaeo[1116] params(1) in file: yap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaep[1117] params(1) in file: yap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaeq[1118] params(1) in file: yap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaer[1119] params(1) in file: yap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaes[1120] params(1) in file: yap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaet[1121] params(1) in file: yap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaeu[1122] params(1) in file: yap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaev[1123] params(1) in file: yap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aaew[1124] params(1) in file: yap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaex[1125] params(1) in file: yap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaey[1126] params(1) in file: yap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aafz[1127] params(1) in file: yap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aafa[1128] params(1) in file: yap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aafb[1129] params(1) in file: yap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aafc[1130] params(1) in file: yap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aafd[1131] params(1) in file: yap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aafe[1132] params(1) in file: yap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaff[1133] params(1) in file: yap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aafg[1134] params(1) in file: yap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafh[1135] params(1) in file: yap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aafi[1136] params(1) in file: yap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafj[1137] params(1) in file: yap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafk[1138] params(1) in file: yap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafl[1139] params(1) in file: yap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafm[1140] params(1) in file: yap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafn[1141] params(1) in file: yap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafo[1142] params(1) in file: yap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafp[1143] params(1) in file: yap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafq[1144] params(1) in file: yap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafr[1145] params(1) in file: yap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafs[1146] params(1) in file: yap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaft[1147] params(1) in file: yap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aafu[1148] params(1) in file: yap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafv[1149] params(1) in file: yap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafw[1150] params(1) in file: yap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafx[1151] params(1) in file: yap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aafy[1152] params(1) in file: yap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagz[1153] params(1) in file: yap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaga[1154] params(1) in file: yap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagb[1155] params(1) in file: yap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagc[1156] params(1) in file: yap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagd[1157] params(1) in file: yap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aage[1158] params(1) in file: yap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagf[1159] params(1) in file: yap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aagg[1160] params(1) in file: yap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagh[1161] params(1) in file: yap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagi[1162] params(1) in file: yap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagj[1163] params(1) in file: yap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagk[1164] params(1) in file: yap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagl[1165] params(1) in file: yap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagm[1166] params(1) in file: yap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagn[1167] params(1) in file: yap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aago[1168] params(1) in file: yap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagp[1169] params(1) in file: yap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagq[1170] params(1) in file: yap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagr[1171] params(1) in file: yap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aags[1172] params(1) in file: yap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagt[1173] params(1) in file: yap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagu[1174] params(1) in file: yap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagv[1175] params(1) in file: yap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagw[1176] params(1) in file: yap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagx[1177] params(1) in file: yap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aagy[1178] params(1) in file: yap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahz[1179] params(1) in file: yap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaha[1180] params(1) in file: yap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahb[1181] params(1) in file: yap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahc[1182] params(1) in file: yap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahd[1183] params(1) in file: yap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aahe[1184] params(1) in file: yap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahf[1185] params(1) in file: yap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahg[1186] params(1) in file: yap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahh[1187] params(1) in file: yap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahi[1188] params(1) in file: yap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahj[1189] params(1) in file: yap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahk[1190] params(1) in file: yap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahl[1191] params(1) in file: yap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahm[1192] params(1) in file: yap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahn[1193] params(1) in file: yap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaho[1194] params(1) in file: yap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahp[1195] params(1) in file: yap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aahq[1196] params(1) in file: yap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahr[1197] params(1) in file: yap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahs[1198] params(1) in file: yap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaht[1199] params(1) in file: yap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahu[1200] params(1) in file: yap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahv[1201] params(1) in file: yap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahw[1202] params(1) in file: yap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahx[1203] params(1) in file: yap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aahy[1204] params(1) in file: yap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaiz[1205] params(1) in file: yap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaia[1206] params(1) in file: yap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaib[1207] params(1) in file: yap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaic[1208] params(1) in file: yap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaid[1209] params(1) in file: yap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaie[1210] params(1) in file: yap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaif[1211] params(1) in file: yap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaig[1212] params(1) in file: yap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaih[1213] params(1) in file: yap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaii[1214] params(1) in file: yap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaij[1215] params(1) in file: yap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaik[1216] params(1) in file: yap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aail[1217] params(1) in file: yap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaim[1218] params(1) in file: yap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aain[1219] params(1) in file: yap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaio[1220] params(1) in file: yap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaip[1221] params(1) in file: yap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaiq[1222] params(1) in file: yap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aair[1223] params(1) in file: yap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aais[1224] params(1) in file: yap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aait[1225] params(1) in file: yap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaiu[1226] params(1) in file: yap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaiv[1227] params(1) in file: yap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaiw[1228] params(1) in file: yap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaix[1229] params(1) in file: yap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaiy[1230] params(1) in file: yap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajz[1231] params(1) in file: yap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaja[1232] params(1) in file: yap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajb[1233] params(1) in file: yap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajc[1234] params(1) in file: yap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajd[1235] params(1) in file: yap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaje[1236] params(1) in file: yap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajf[1237] params(1) in file: yap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajg[1238] params(1) in file: yap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajh[1239] params(1) in file: yap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaji[1240] params(1) in file: yap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajj[1241] params(1) in file: yap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajk[1242] params(1) in file: yap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aajl[1243] params(1) in file: yap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aajm[1244] params(1) in file: yap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aajn[1245] params(1) in file: yap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aajo[1246] params(1) in file: yap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#yaf.yar.aajp[1247] params(0) in file: yap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3574 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#yaf.yar.aajq[1248] params(1) in file: yap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov16 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3497 // <std#yaf.adve>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3581 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3562 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3562 // <std#string.at>   
47 [0x2f]:           call @2819 // <std#yaf.ybz.actw>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // xxz#xxa   
53 [0x35]:           shr adx, adx -> adx   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // xxz#xxa   
56 [0x38]:           skip @0 // pc = 56   
57 [0x39]:           dup    
58 [0x3a]:           newstr @108 // illegal char in string:    
59 [0x3b]:           call @3540 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3562 // <std#string.at>   
63 [0x3f]:           call @3573 // <std#string.operator+>   
64 [0x40]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov16 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3562 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov16 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov16 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#yaf.yar.aajr[1249] params(0) in file: yap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // xxz#xxa   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aajs[1250] params(0) in file: yap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aajt[1251] params(0) in file: yap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // xxz#xxa   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aaju[1252] params(0) in file: yap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // xxz#xxa   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aajv[1253] params(0) in file: yap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // xxz#xxa   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aajw[1254] params(0) in file: yap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // xxz#xxa   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aajx[1255] params(0) in file: yap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // xxz#xxa   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aajy[1256] params(0) in file: yap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // xxz#xxa   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aakz[1257] params(0) in file: yap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // xxz#xxa   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aaka[1258] params(0) in file: yap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // xxz#xxa   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aakb[1259] params(0) in file: yap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // xxz#xxa   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#yaf.yar.aakc[1260] params(0) in file: yap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#yaf.yar.aakd[1261] params(0) in file: yap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yar.aakf[1262] params(1) in file: yap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#yaf.yar.aakg[1263] params(0) in file: yap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2117 // <std#yaf.yat.absw>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#yaf.yar.aakh[1264] params(1) in file: yap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaki[1265] params(1) in file: yap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakj[1266] params(1) in file: yap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakk[1267] params(1) in file: yap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakl[1268] params(1) in file: yap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakm[1269] params(1) in file: yap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakn[1270] params(1) in file: yap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aako[1271] params(1) in file: yap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakp[1272] params(1) in file: yap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakq[1273] params(1) in file: yap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakr[1274] params(1) in file: yap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaks[1275] params(1) in file: yap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakt[1276] params(1) in file: yap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaku[1277] params(1) in file: yap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakv[1278] params(1) in file: yap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakw[1279] params(1) in file: yap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aakx[1280] params(1) in file: yap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaky[1281] params(1) in file: yap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalz[1282] params(1) in file: yap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aala[1283] params(1) in file: yap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalb[1284] params(1) in file: yap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalc[1285] params(1) in file: yap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aald[1286] params(1) in file: yap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aale[1287] params(1) in file: yap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalf[1288] params(1) in file: yap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalg[1289] params(1) in file: yap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalh[1290] params(1) in file: yap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aali[1291] params(1) in file: yap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalj[1292] params(1) in file: yap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalk[1293] params(1) in file: yap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aall[1294] params(1) in file: yap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalm[1295] params(1) in file: yap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaln[1296] params(1) in file: yap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aalo[1297] params(1) in file: yap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalp[1298] params(1) in file: yap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalq[1299] params(1) in file: yap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalr[1300] params(1) in file: yap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aals[1301] params(1) in file: yap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalt[1302] params(1) in file: yap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalu[1303] params(1) in file: yap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalv[1304] params(1) in file: yap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalw[1305] params(1) in file: yap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aalx[1306] params(1) in file: yap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaly[1307] params(1) in file: yap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamz[1308] params(1) in file: yap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aama[1309] params(1) in file: yap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamb[1310] params(1) in file: yap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamc[1311] params(1) in file: yap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamd[1312] params(1) in file: yap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aame[1313] params(1) in file: yap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamf[1314] params(1) in file: yap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamg[1315] params(1) in file: yap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamh[1316] params(1) in file: yap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aami[1317] params(1) in file: yap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamj[1318] params(1) in file: yap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamk[1319] params(1) in file: yap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaml[1320] params(1) in file: yap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aamm[1321] params(1) in file: yap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamn[1322] params(1) in file: yap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamo[1323] params(1) in file: yap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamp[1324] params(1) in file: yap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamq[1325] params(1) in file: yap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamr[1326] params(1) in file: yap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aams[1327] params(1) in file: yap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamt[1328] params(1) in file: yap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamu[1329] params(1) in file: yap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamv[1330] params(1) in file: yap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamw[1331] params(1) in file: yap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aamx[1332] params(1) in file: yap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aamy[1333] params(1) in file: yap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aanz[1334] params(1) in file: yap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aana[1335] params(1) in file: yap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aanb[1336] params(1) in file: yap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aanc[1337] params(1) in file: yap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aand[1338] params(1) in file: yap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aane[1339] params(1) in file: yap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aanf[1340] params(1) in file: yap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aang[1341] params(1) in file: yap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aanh[1342] params(1) in file: yap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aani[1343] params(1) in file: yap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aanj[1344] params(1) in file: yap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aank[1345] params(1) in file: yap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aanl[1346] params(1) in file: yap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aanm[1347] params(1) in file: yap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aann[1348] params(1) in file: yap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aano[1349] params(1) in file: yap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aanp[1350] params(1) in file: yap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aanq[1351] params(1) in file: yap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aanr[1352] params(1) in file: yap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aans[1353] params(1) in file: yap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aant[1354] params(1) in file: yap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aanu[1355] params(1) in file: yap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aanv[1356] params(1) in file: yap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aanw[1357] params(1) in file: yap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aanx[1358] params(1) in file: yap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aany[1359] params(1) in file: yap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaoz[1360] params(1) in file: yap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaoa[1361] params(1) in file: yap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaob[1362] params(1) in file: yap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaoc[1363] params(1) in file: yap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaod[1364] params(1) in file: yap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaoe[1365] params(1) in file: yap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaof[1366] params(1) in file: yap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaog[1367] params(1) in file: yap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaoh[1368] params(1) in file: yap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaoi[1369] params(1) in file: yap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaoj[1370] params(1) in file: yap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaok[1371] params(1) in file: yap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaol[1372] params(1) in file: yap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaom[1373] params(1) in file: yap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaon[1374] params(1) in file: yap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaoo[1375] params(1) in file: yap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaop[1376] params(1) in file: yap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaoq[1377] params(1) in file: yap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaor[1378] params(1) in file: yap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaos[1379] params(1) in file: yap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaot[1380] params(1) in file: yap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaou[1381] params(1) in file: yap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaov[1382] params(1) in file: yap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaow[1383] params(1) in file: yap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaox[1384] params(1) in file: yap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaoy[1385] params(1) in file: yap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapz[1386] params(1) in file: yap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapa[1387] params(1) in file: yap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapb[1388] params(1) in file: yap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapc[1389] params(1) in file: yap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapd[1390] params(1) in file: yap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aape[1391] params(1) in file: yap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapf[1392] params(1) in file: yap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aapg[1393] params(1) in file: yap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaph[1394] params(1) in file: yap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapi[1395] params(1) in file: yap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapj[1396] params(1) in file: yap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapk[1397] params(1) in file: yap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapl[1398] params(1) in file: yap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapm[1399] params(1) in file: yap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapn[1400] params(1) in file: yap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapo[1401] params(1) in file: yap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapp[1402] params(1) in file: yap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapq[1403] params(1) in file: yap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapr[1404] params(1) in file: yap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaps[1405] params(1) in file: yap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapt[1406] params(1) in file: yap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapu[1407] params(1) in file: yap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapv[1408] params(1) in file: yap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapw[1409] params(1) in file: yap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapx[1410] params(1) in file: yap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aapy[1411] params(1) in file: yap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqz[1412] params(1) in file: yap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqa[1413] params(1) in file: yap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqb[1414] params(1) in file: yap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqc[1415] params(1) in file: yap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqd[1416] params(1) in file: yap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaqe[1417] params(1) in file: yap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqf[1418] params(1) in file: yap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqg[1419] params(1) in file: yap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqh[1420] params(1) in file: yap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqi[1421] params(1) in file: yap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqj[1422] params(1) in file: yap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqk[1423] params(1) in file: yap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaql[1424] params(1) in file: yap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqm[1425] params(1) in file: yap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqn[1426] params(1) in file: yap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqo[1427] params(1) in file: yap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqp[1428] params(1) in file: yap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaqq[1429] params(1) in file: yap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqr[1430] params(1) in file: yap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqs[1431] params(1) in file: yap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqt[1432] params(1) in file: yap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqu[1433] params(1) in file: yap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqv[1434] params(1) in file: yap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqw[1435] params(1) in file: yap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqx[1436] params(1) in file: yap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaqy[1437] params(1) in file: yap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aarz[1438] params(1) in file: yap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aara[1439] params(1) in file: yap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aarb[1440] params(1) in file: yap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aarc[1441] params(1) in file: yap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aard[1442] params(1) in file: yap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aare[1443] params(1) in file: yap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aarf[1444] params(1) in file: yap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aarg[1445] params(1) in file: yap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aarh[1446] params(1) in file: yap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aari[1447] params(1) in file: yap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aarj[1448] params(1) in file: yap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aark[1449] params(1) in file: yap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aarl[1450] params(1) in file: yap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aarm[1451] params(1) in file: yap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aarn[1452] params(1) in file: yap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaro[1453] params(1) in file: yap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aarp[1454] params(1) in file: yap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aarq[1455] params(1) in file: yap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#yaf.yar.aarr[1456] params(0) in file: yap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3577 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#yaf.yar.aars[1457] params(1) in file: yap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu8 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3497 // <std#yaf.adve>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3581 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3562 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3562 // <std#string.at>   
47 [0x2f]:           call @2819 // <std#yaf.ybz.actw>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // xxz#xxa   
53 [0x35]:           shr adx, adx -> adx   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // xxz#xxa   
56 [0x38]:           skip @0 // pc = 56   
57 [0x39]:           dup    
58 [0x3a]:           newstr @108 // illegal char in string:    
59 [0x3b]:           call @3540 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3562 // <std#string.at>   
63 [0x3f]:           call @3573 // <std#string.operator+>   
64 [0x40]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu8 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3562 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu8 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu8 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#yaf.yar.aart[1458] params(0) in file: yap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // xxz#xxa   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aaru[1459] params(0) in file: yap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aarv[1460] params(0) in file: yap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // xxz#xxa   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aarw[1461] params(0) in file: yap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // xxz#xxa   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aarx[1462] params(0) in file: yap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // xxz#xxa   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aary[1463] params(0) in file: yap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // xxz#xxa   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aasz[1464] params(0) in file: yap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // xxz#xxa   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aasa[1465] params(0) in file: yap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // xxz#xxa   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aasb[1466] params(0) in file: yap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // xxz#xxa   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aasc[1467] params(0) in file: yap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // xxz#xxa   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.aasd[1468] params(0) in file: yap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // xxz#xxa   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#yaf.yar.aase[1469] params(0) in file: yap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#yaf.yar.aasf[1470] params(0) in file: yap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yar.aash[1471] params(1) in file: yap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#yaf.yar.aasi[1472] params(0) in file: yap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2117 // <std#yaf.yat.absw>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#yaf.yar.aasj[1473] params(1) in file: yap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aask[1474] params(1) in file: yap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasl[1475] params(1) in file: yap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasm[1476] params(1) in file: yap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasn[1477] params(1) in file: yap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaso[1478] params(1) in file: yap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasp[1479] params(1) in file: yap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasq[1480] params(1) in file: yap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasr[1481] params(1) in file: yap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aass[1482] params(1) in file: yap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aast[1483] params(1) in file: yap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasu[1484] params(1) in file: yap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasv[1485] params(1) in file: yap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasw[1486] params(1) in file: yap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasx[1487] params(1) in file: yap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aasy[1488] params(1) in file: yap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatz[1489] params(1) in file: yap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aata[1490] params(1) in file: yap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatb[1491] params(1) in file: yap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatc[1492] params(1) in file: yap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatd[1493] params(1) in file: yap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aate[1494] params(1) in file: yap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatf[1495] params(1) in file: yap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatg[1496] params(1) in file: yap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aath[1497] params(1) in file: yap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aati[1498] params(1) in file: yap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatj[1499] params(1) in file: yap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatk[1500] params(1) in file: yap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatl[1501] params(1) in file: yap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatm[1502] params(1) in file: yap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatn[1503] params(1) in file: yap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aato[1504] params(1) in file: yap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatp[1505] params(1) in file: yap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aatq[1506] params(1) in file: yap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatr[1507] params(1) in file: yap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aats[1508] params(1) in file: yap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatt[1509] params(1) in file: yap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatu[1510] params(1) in file: yap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatv[1511] params(1) in file: yap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatw[1512] params(1) in file: yap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aatx[1513] params(1) in file: yap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaty[1514] params(1) in file: yap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauz[1515] params(1) in file: yap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaua[1516] params(1) in file: yap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaub[1517] params(1) in file: yap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aauc[1518] params(1) in file: yap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaud[1519] params(1) in file: yap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaue[1520] params(1) in file: yap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauf[1521] params(1) in file: yap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaug[1522] params(1) in file: yap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauh[1523] params(1) in file: yap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaui[1524] params(1) in file: yap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauj[1525] params(1) in file: yap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauk[1526] params(1) in file: yap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaul[1527] params(1) in file: yap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaum[1528] params(1) in file: yap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaun[1529] params(1) in file: yap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aauo[1530] params(1) in file: yap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaup[1531] params(1) in file: yap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauq[1532] params(1) in file: yap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaur[1533] params(1) in file: yap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaus[1534] params(1) in file: yap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaut[1535] params(1) in file: yap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauu[1536] params(1) in file: yap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauv[1537] params(1) in file: yap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauw[1538] params(1) in file: yap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aaux[1539] params(1) in file: yap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aauy[1540] params(1) in file: yap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavz[1541] params(1) in file: yap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.aava[1542] params(1) in file: yap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavb[1543] params(1) in file: yap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavc[1544] params(1) in file: yap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavd[1545] params(1) in file: yap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aave[1546] params(1) in file: yap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavf[1547] params(1) in file: yap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavg[1548] params(1) in file: yap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavh[1549] params(1) in file: yap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavi[1550] params(1) in file: yap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavj[1551] params(1) in file: yap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.aavk[1552] params(1) in file: yap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavl[1553] params(1) in file: yap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aavm[1554] params(1) in file: yap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavn[1555] params(1) in file: yap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavo[1556] params(1) in file: yap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavp[1557] params(1) in file: yap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavq[1558] params(1) in file: yap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavr[1559] params(1) in file: yap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavs[1560] params(1) in file: yap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavt[1561] params(1) in file: yap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavu[1562] params(1) in file: yap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavv[1563] params(1) in file: yap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavw[1564] params(1) in file: yap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aavx[1565] params(1) in file: yap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aavy[1566] params(1) in file: yap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawz[1567] params(1) in file: yap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawa[1568] params(1) in file: yap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawb[1569] params(1) in file: yap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawc[1570] params(1) in file: yap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawd[1571] params(1) in file: yap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawe[1572] params(1) in file: yap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawf[1573] params(1) in file: yap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawg[1574] params(1) in file: yap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawh[1575] params(1) in file: yap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawi[1576] params(1) in file: yap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawj[1577] params(1) in file: yap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aawk[1578] params(1) in file: yap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawl[1579] params(1) in file: yap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawm[1580] params(1) in file: yap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawn[1581] params(1) in file: yap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawo[1582] params(1) in file: yap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawp[1583] params(1) in file: yap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawq[1584] params(1) in file: yap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawr[1585] params(1) in file: yap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaws[1586] params(1) in file: yap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawt[1587] params(1) in file: yap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawu[1588] params(1) in file: yap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawv[1589] params(1) in file: yap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaww[1590] params(1) in file: yap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawx[1591] params(1) in file: yap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aawy[1592] params(1) in file: yap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxz[1593] params(1) in file: yap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxa[1594] params(1) in file: yap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxb[1595] params(1) in file: yap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxc[1596] params(1) in file: yap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxd[1597] params(1) in file: yap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxe[1598] params(1) in file: yap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxf[1599] params(1) in file: yap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxg[1600] params(1) in file: yap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxh[1601] params(1) in file: yap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaxi[1602] params(1) in file: yap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxj[1603] params(1) in file: yap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxk[1604] params(1) in file: yap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxl[1605] params(1) in file: yap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxm[1606] params(1) in file: yap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxn[1607] params(1) in file: yap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxo[1608] params(1) in file: yap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxp[1609] params(1) in file: yap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxq[1610] params(1) in file: yap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxr[1611] params(1) in file: yap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxs[1612] params(1) in file: yap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxt[1613] params(1) in file: yap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aaxu[1614] params(1) in file: yap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxv[1615] params(1) in file: yap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxw[1616] params(1) in file: yap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxx[1617] params(1) in file: yap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaxy[1618] params(1) in file: yap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayz[1619] params(1) in file: yap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaya[1620] params(1) in file: yap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayb[1621] params(1) in file: yap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayc[1622] params(1) in file: yap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayd[1623] params(1) in file: yap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaye[1624] params(1) in file: yap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayf[1625] params(1) in file: yap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aayg[1626] params(1) in file: yap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayh[1627] params(1) in file: yap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayi[1628] params(1) in file: yap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayj[1629] params(1) in file: yap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayk[1630] params(1) in file: yap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayl[1631] params(1) in file: yap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aaym[1632] params(1) in file: yap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayn[1633] params(1) in file: yap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayo[1634] params(1) in file: yap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayp[1635] params(1) in file: yap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayq[1636] params(1) in file: yap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayr[1637] params(1) in file: yap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.aays[1638] params(1) in file: yap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayt[1639] params(1) in file: yap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayu[1640] params(1) in file: yap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayv[1641] params(1) in file: yap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayw[1642] params(1) in file: yap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayx[1643] params(1) in file: yap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.aayy[1644] params(1) in file: yap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzz[1645] params(1) in file: yap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abza[1646] params(1) in file: yap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzb[1647] params(1) in file: yap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzc[1648] params(1) in file: yap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzd[1649] params(1) in file: yap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.abze[1650] params(1) in file: yap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzf[1651] params(1) in file: yap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzg[1652] params(1) in file: yap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzh[1653] params(1) in file: yap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzi[1654] params(1) in file: yap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzj[1655] params(1) in file: yap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzk[1656] params(1) in file: yap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzl[1657] params(1) in file: yap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzm[1658] params(1) in file: yap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzn[1659] params(1) in file: yap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzo[1660] params(1) in file: yap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abzp[1661] params(1) in file: yap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.abzq[1662] params(1) in file: yap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.abzr[1663] params(1) in file: yap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.abzs[1664] params(1) in file: yap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#yaf.yar.abzt[1665] params(0) in file: yap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3573 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#yaf.yar.abzu[1666] params(1) in file: yap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov8 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3497 // <std#yaf.adve>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3581 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3562 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3562 // <std#string.at>   
47 [0x2f]:           call @2819 // <std#yaf.ybz.actw>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // xxz#xxa   
53 [0x35]:           shr adx, adx -> adx   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // xxz#xxa   
56 [0x38]:           skip @0 // pc = 56   
57 [0x39]:           dup    
58 [0x3a]:           newstr @108 // illegal char in string:    
59 [0x3b]:           call @3540 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3562 // <std#string.at>   
63 [0x3f]:           call @3573 // <std#string.operator+>   
64 [0x40]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov8 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3562 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov8 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov8 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#yaf.yar.abzv[1667] params(0) in file: yap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // xxz#xxa   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abzw[1668] params(0) in file: yap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abzx[1669] params(0) in file: yap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // xxz#xxa   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abzy[1670] params(0) in file: yap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // xxz#xxa   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abaz[1671] params(0) in file: yap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // xxz#xxa   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abaa[1672] params(0) in file: yap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // xxz#xxa   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abab[1673] params(0) in file: yap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // xxz#xxa   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abac[1674] params(0) in file: yap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // xxz#xxa   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abad[1675] params(0) in file: yap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // xxz#xxa   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abae[1676] params(0) in file: yap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // xxz#xxa   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abaf[1677] params(0) in file: yap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // xxz#xxa   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#yaf.yar.abag[1678] params(0) in file: yap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#yaf.yar.abah[1679] params(0) in file: yap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yar.abaj[1680] params(1) in file: yap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#yaf.yar.abak[1681] params(0) in file: yap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2117 // <std#yaf.yat.absw>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#yaf.yar.abal[1682] params(1) in file: yap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abam[1683] params(1) in file: yap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.aban[1684] params(1) in file: yap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abao[1685] params(1) in file: yap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abap[1686] params(1) in file: yap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abaq[1687] params(1) in file: yap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abar[1688] params(1) in file: yap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abas[1689] params(1) in file: yap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abat[1690] params(1) in file: yap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abau[1691] params(1) in file: yap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abav[1692] params(1) in file: yap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abaw[1693] params(1) in file: yap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abax[1694] params(1) in file: yap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abay[1695] params(1) in file: yap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbz[1696] params(1) in file: yap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abba[1697] params(1) in file: yap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbb[1698] params(1) in file: yap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbc[1699] params(1) in file: yap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbd[1700] params(1) in file: yap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbe[1701] params(1) in file: yap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbf[1702] params(1) in file: yap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbg[1703] params(1) in file: yap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbh[1704] params(1) in file: yap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbi[1705] params(1) in file: yap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbj[1706] params(1) in file: yap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbk[1707] params(1) in file: yap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbl[1708] params(1) in file: yap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbm[1709] params(1) in file: yap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbn[1710] params(1) in file: yap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbo[1711] params(1) in file: yap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbp[1712] params(1) in file: yap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbq[1713] params(1) in file: yap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbr[1714] params(1) in file: yap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.abbs[1715] params(1) in file: yap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbt[1716] params(1) in file: yap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbu[1717] params(1) in file: yap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbv[1718] params(1) in file: yap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbw[1719] params(1) in file: yap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abbx[1720] params(1) in file: yap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abby[1721] params(1) in file: yap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcz[1722] params(1) in file: yap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abca[1723] params(1) in file: yap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcb[1724] params(1) in file: yap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcc[1725] params(1) in file: yap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcd[1726] params(1) in file: yap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.abce[1727] params(1) in file: yap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcf[1728] params(1) in file: yap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcg[1729] params(1) in file: yap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abch[1730] params(1) in file: yap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abci[1731] params(1) in file: yap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcj[1732] params(1) in file: yap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abck[1733] params(1) in file: yap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcl[1734] params(1) in file: yap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcm[1735] params(1) in file: yap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcn[1736] params(1) in file: yap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abco[1737] params(1) in file: yap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcp[1738] params(1) in file: yap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.abcq[1739] params(1) in file: yap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcr[1740] params(1) in file: yap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcs[1741] params(1) in file: yap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abct[1742] params(1) in file: yap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcu[1743] params(1) in file: yap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcv[1744] params(1) in file: yap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcw[1745] params(1) in file: yap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcx[1746] params(1) in file: yap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abcy[1747] params(1) in file: yap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdz[1748] params(1) in file: yap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abda[1749] params(1) in file: yap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdb[1750] params(1) in file: yap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#yaf.yar.abdc[1751] params(1) in file: yap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdd[1752] params(1) in file: yap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abde[1753] params(1) in file: yap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdf[1754] params(1) in file: yap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdg[1755] params(1) in file: yap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdh[1756] params(1) in file: yap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdi[1757] params(1) in file: yap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdj[1758] params(1) in file: yap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdk[1759] params(1) in file: yap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdl[1760] params(1) in file: yap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#yaf.yar.abdm[1761] params(1) in file: yap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdn[1762] params(1) in file: yap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.abdo[1763] params(1) in file: yap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdp[1764] params(1) in file: yap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdq[1765] params(1) in file: yap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdr[1766] params(1) in file: yap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abds[1767] params(1) in file: yap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdt[1768] params(1) in file: yap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdu[1769] params(1) in file: yap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdv[1770] params(1) in file: yap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdw[1771] params(1) in file: yap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdx[1772] params(1) in file: yap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abdy[1773] params(1) in file: yap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abez[1774] params(1) in file: yap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.abea[1775] params(1) in file: yap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abeb[1776] params(1) in file: yap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abec[1777] params(1) in file: yap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abed[1778] params(1) in file: yap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abee[1779] params(1) in file: yap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abef[1780] params(1) in file: yap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abeg[1781] params(1) in file: yap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abeh[1782] params(1) in file: yap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abei[1783] params(1) in file: yap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abej[1784] params(1) in file: yap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abek[1785] params(1) in file: yap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abel[1786] params(1) in file: yap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.abem[1787] params(1) in file: yap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aben[1788] params(1) in file: yap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abeo[1789] params(1) in file: yap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abep[1790] params(1) in file: yap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abeq[1791] params(1) in file: yap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.aber[1792] params(1) in file: yap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abes[1793] params(1) in file: yap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abet[1794] params(1) in file: yap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abeu[1795] params(1) in file: yap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abev[1796] params(1) in file: yap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abew[1797] params(1) in file: yap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#yaf.yar.abex[1798] params(1) in file: yap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.abey[1799] params(1) in file: yap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfz[1800] params(1) in file: yap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfa[1801] params(1) in file: yap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfb[1802] params(1) in file: yap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfc[1803] params(1) in file: yap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfd[1804] params(1) in file: yap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfe[1805] params(1) in file: yap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abff[1806] params(1) in file: yap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfg[1807] params(1) in file: yap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfh[1808] params(1) in file: yap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfi[1809] params(1) in file: yap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfj[1810] params(1) in file: yap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.abfk[1811] params(1) in file: yap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfl[1812] params(1) in file: yap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfm[1813] params(1) in file: yap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfn[1814] params(1) in file: yap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfo[1815] params(1) in file: yap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfp[1816] params(1) in file: yap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfq[1817] params(1) in file: yap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfr[1818] params(1) in file: yap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfs[1819] params(1) in file: yap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abft[1820] params(1) in file: yap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfu[1821] params(1) in file: yap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfv[1822] params(1) in file: yap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.abfw[1823] params(1) in file: yap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfx[1824] params(1) in file: yap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abfy[1825] params(1) in file: yap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgz[1826] params(1) in file: yap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abga[1827] params(1) in file: yap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgb[1828] params(1) in file: yap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgc[1829] params(1) in file: yap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgd[1830] params(1) in file: yap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abge[1831] params(1) in file: yap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgf[1832] params(1) in file: yap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgg[1833] params(1) in file: yap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgh[1834] params(1) in file: yap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.abgi[1835] params(1) in file: yap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgj[1836] params(1) in file: yap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgk[1837] params(1) in file: yap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgl[1838] params(1) in file: yap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgm[1839] params(1) in file: yap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgn[1840] params(1) in file: yap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgo[1841] params(1) in file: yap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgp[1842] params(1) in file: yap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgq[1843] params(1) in file: yap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgr[1844] params(1) in file: yap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgs[1845] params(1) in file: yap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgt[1846] params(1) in file: yap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.abgu[1847] params(1) in file: yap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgv[1848] params(1) in file: yap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgw[1849] params(1) in file: yap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgx[1850] params(1) in file: yap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abgy[1851] params(1) in file: yap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhz[1852] params(1) in file: yap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abha[1853] params(1) in file: yap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhb[1854] params(1) in file: yap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhc[1855] params(1) in file: yap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhd[1856] params(1) in file: yap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhe[1857] params(1) in file: yap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhf[1858] params(1) in file: yap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.abhg[1859] params(1) in file: yap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhh[1860] params(1) in file: yap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhi[1861] params(1) in file: yap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhj[1862] params(1) in file: yap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhk[1863] params(1) in file: yap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhl[1864] params(1) in file: yap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhm[1865] params(1) in file: yap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhn[1866] params(1) in file: yap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abho[1867] params(1) in file: yap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhp[1868] params(1) in file: yap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhq[1869] params(1) in file: yap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#yaf.yar.abhr[1870] params(1) in file: yap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#yaf.yar.abhs[1871] params(1) in file: yap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.abht[1872] params(1) in file: yap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#yaf.yar.abhu[1873] params(1) in file: yap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std#yaf.yar.abhv[1874] params(0) in file: yap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3572 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#yaf.yar.abhw[1875] params(1) in file: yap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 istorel 0, fp+1   
2 [0x2]: line: 231 movi #1, ebx   
4 [0x4]:           movr cmt, ebx   
5 [0x5]:           jne 12   
6 [0x6]: line: 232 pushl 0   
7 [0x7]:           call @3497 // <std#yaf.adve>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   
11 [0xb]:           jmp @93   
12 [0xc]: line: 234 istorel 0, fp+2   
14 [0xe]: line: 235 istorel 0, fp+3   
16 [0x10]: line: 236 pushl 0   
17 [0x11]:           call @3581 // <std#string.size>   
18 [0x12]:           ipopl 4   
19 [0x13]: line: 238 pushl 0   
20 [0x14]:           istore 0   
22 [0x16]:           call @3562 // <std#string.at>   
23 [0x17]:           loadval ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           movi #45, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           test ecx, ebx   
29 [0x1d]:           jne 34   
30 [0x1e]: line: 239 istorel 1, fp+3   
32 [0x20]: line: 240 istorel 1, fp+2   
34 [0x22]:           nop   
35 [0x23]: line: 243 ipushl #2   
36 [0x24]:           loadl ebx, fp+4   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 83   
42 [0x2a]: line: 244 pushl 0   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           call @3562 // <std#string.at>   
45 [0x2d]:           call @2819 // <std#yaf.ybz.actw>   
46 [0x2e]:           loadval ebx   
47 [0x2f]:           not ebx, ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 64   
50 [0x32]: line: 245 new_class @0 // xxz#xxa   
51 [0x33]:           shr adx, adx -> adx   
52 [0x34]:           dup    
53 [0x35]:           new_class @0 // xxz#xxa   
54 [0x36]:           skip @0 // pc = 54   
55 [0x37]:           dup    
56 [0x38]:           newstr @108 // illegal char in string:    
57 [0x39]:           call @3540 // <std#string.string>   
58 [0x3a]:           pushl 0   
59 [0x3b]:           ipushl #2   
60 [0x3c]:           call @3562 // <std#string.at>   
61 [0x3d]:           call @3573 // <std#string.operator+>   
62 [0x3e]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
63 [0x3f]:           throw    
64 [0x40]:           nop   
65 [0x41]: line: 249 movi #10, ebx   
67 [0x43]:           mull ebx, fp@1   
68 [0x44]: line: 250 pushl 0   
69 [0x45]:           loadl ebx, fp+2   
70 [0x46]:           movr egx, ebx   
71 [0x47]:           inc ebx   
72 [0x48]:           smovr_2 ebx, fp+2   
73 [0x49]:           rstore egx   
74 [0x4a]:           call @3562 // <std#string.at>   
75 [0x4b]:           loadval ebx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           movi #48, ebx   
79 [0x4f]:           loadval ecx   
80 [0x50]:           sub ecx, ebx -> ebx   
81 [0x51]:           addl ebx, fp@1   
82 [0x52]:           jmp @35   
83 [0x53]: line: 252 loadl ebx, fp+3   
84 [0x54]:           movr cmt, ebx   
85 [0x55]:           jne 89   
86 [0x56]: line: 253 loadl ebx, fp+1   
87 [0x57]:           neg ebx, ebx   
88 [0x58]:           smovr_2 ebx, fp+1   
89 [0x59]:           nop   
90 [0x5a]: line: 254 loadl ebx, fp+1   
91 [0x5b]:           return_val ebx   
92 [0x5c]:           ret   
93 [0x5d]:           nop   


function: std#yaf.yar.abhx[1876] params(0) in file: yap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // xxz#xxa   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abhy[1877] params(0) in file: yap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abiz[1878] params(0) in file: yap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // xxz#xxa   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abia[1879] params(0) in file: yap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // xxz#xxa   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abib[1880] params(0) in file: yap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // xxz#xxa   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abic[1881] params(0) in file: yap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // xxz#xxa   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abid[1882] params(0) in file: yap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // xxz#xxa   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abie[1883] params(0) in file: yap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // xxz#xxa   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abif[1884] params(0) in file: yap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // xxz#xxa   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abig[1885] params(0) in file: yap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // xxz#xxa   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#yaf.yar.abih[1886] params(0) in file: yap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // xxz#xxa   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#yaf.yar.abii[1887] params(0) in file: yap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#yaf.yar.abij[1888] params(0) in file: yap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std#yaf.ykb.abik[1889] params(0) in file: ybd:4:8: note:  
		
		       ^



constructor: std#yaf.ykb.abil[1890] params(0) in file: ybd:3:10: note:  
		import std.io;
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std.io#ybq.ykb.abim[1891] params(0) in file: yce:4:8: note:  
			
		       ^



constructor: std.io#ybq.ykb.abin[1892] params(0) in file: yce:3:10: note:  
		public class thread_group : loopable<thread> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: xxz#xxa.xxd.abio[1893] params(0) in file: xwy:7:6: note:  
		class connection {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: xxz#xxa.xxg.abip[1894] params(2) in file: xwy:13:11: note:  
		    neuron(n_outputs: var, n_index: var) {
		          ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         popl 0   
2 [0x2]:         dup    
3 [0x3]:         call @3707 // <xxz#xxa.yah.aefd>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #1   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]: line: 14 istorel 0, fp+3   
11 [0xb]:          ipushl #3   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 44   
18 [0x12]: line: 15 movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          pushobj   
22 [0x16]:          new_class @0 // xxz#xxa   
23 [0x17]:          int 0x0   
24 [0x18]:          dup    
25 [0x19]:          call @1893 // <xxz#xxa.xxd.abio>   
26 [0x1a]:          call @3721 // <xxz#xxa.yah.aefr>   
27 [0x1b]: line: 16 call @3419 // <std#yaf.adsb>   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          call @3715 // <xxz#xxa.yah.aefl>   
33 [0x21]:          popobj2    
34 [0x22]:          movn #0   
36 [0x24]:          loadval ebx   
37 [0x25]:          movi #0, adx   
39 [0x27]:          rmov adx, ebx   
40 [0x28]:          loadl ebx, fp+3   
41 [0x29]:          inc ebx   
42 [0x2a]:          smovr_2 ebx, fp+3   
43 [0x2b]:          jmp @11   
44 [0x2c]: line: 19 ipushl #2   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #2   
48 [0x30]:          loadval ebx   
49 [0x31]:          movi #0, adx   
51 [0x33]:          rmov adx, ebx   
52 [0x34]:          ret   


xxz#xxa.ykb.abix[1895] params(0) in file: ykz:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: xxz#xxa.ykb.abiy[1896] params(0) in file: ykz:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: xxz#xxa.yah.abjz[1897] params(0) in file: yad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // xxz#xxa.xxg[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: xxz#xxa.yah.abja[1898] params(1) in file: yad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // xxz#xxa.xxg[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: xxz#xxa.yah.abjb[1899] params(1) in file: yad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @1910 // <xxz#xxa.yah.abjm>   
4 [0x4]:          ret   


function: xxz#xxa.yah.abjc[1900] params(0) in file: yad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: xxz#xxa.yah.abjd[1901] params(1) in file: yad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: xxz#xxa.yah.abje[1902] params(0) in file: yad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3352 // <std.io#ybq.adou>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: xxz#xxa.yah.abjf[1903] params(1) in file: yad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @1924 // <xxz#xxa.yah.abkp>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: xxz#xxa.yah.abjg[1904] params(1) in file: yad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @1924 // <xxz#xxa.yah.abkp>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: xxz#xxa.yah.abjh[1905] params(0) in file: yad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @1904 // <xxz#xxa.yah.abjg>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: xxz#xxa.yah.abji[1906] params(2) in file: yad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @1924 // <xxz#xxa.yah.abkp>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: xxz#xxa.yah.abjj[1907] params(0) in file: yad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3332 // <std.io#ybq.adoa>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3332 // <std.io#ybq.adoa>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: xxz#xxa.yah.abjk[1908] params(0) in file: yad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // xxz#xxa.xxg[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: xxz#xxa.yah.abjl[1909] params(1) in file: yad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3352 // <std.io#ybq.adou>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #2, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: xxz#xxa.yah.abjm[1910] params(1) in file: yad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3352 // <std.io#ybq.adou>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #2, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // xxz#xxa.xxg[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: xxz#xxa.yah.abjn[1911] params(1) in file: yad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @1907 // <xxz#xxa.yah.abjj>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: xxz#xxa.yah.abjo[1912] params(1) in file: yad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: xxz#xxa.yah.abjp[1913] params(0) in file: yad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: xxz#xxa.yah.abjq[1914] params(0) in file: yad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: xxz#xxa.yah.abjr[1915] params(2) in file: yad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @1924 // <xxz#xxa.yah.abkp>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @1911 // <xxz#xxa.yah.abjn>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @1907 // <xxz#xxa.yah.abjj>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: xxz#xxa.yah.abjv[1916] params(2) in file: yad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: xxz#xxa.yah.abjw[1917] params(1) in file: yad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @1921 // <xxz#xxa.yah.abkj>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: xxz#xxa.yah.abka[1918] params(2) in file: yad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @1921 // <xxz#xxa.yah.abkj>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: xxz#xxa.yah.abke[1919] params(2) in file: yad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: xxz#xxa.yah.abki[1920] params(1) in file: yad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: xxz#xxa.yah.abkj[1921] params(1) in file: yad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @1924 // <xxz#xxa.yah.abkp>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3342 // <std.io#ybq.adok>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @1913 // <xxz#xxa.yah.abjp>   
77 [0x4d]:           ret   


function: xxz#xxa.yah.abkn[1922] params(2) in file: yad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: xxz#xxa.yah.abko[1923] params(0) in file: yad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           call @3184 // <std#yaf.ybf.adhx>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @109 // [    
8 [0x8]:           call @3180 // <std#yaf.ybf.adht>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3176 // <std#yaf.ybf.adhp>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @110 // ,    
56 [0x38]:           call @3180 // <std#yaf.ybf.adht>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @111 //  ]   
64 [0x40]:           call @3180 // <std#yaf.ybf.adht>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3157 // <std#yaf.ybf.adgw>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: xxz#xxa.yah.abkp[1924] params(1) in file: yad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // Index:    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3572 // <std#string.operator+>   
7 [0x7]:           newstr @113 // , size:    
8 [0x8]:           call @3552 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3572 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: xxz#xxa.xxg.abkq[1925] params(1) in file: xwy:22:8: note:  
		    def feed_forward(prev_layer: layer) {
		       ^

0 [0x0]: line: 23 istorel 0, fp+2   
2 [0x2]: line: 24 istorel -1, fp+4   
4 [0x4]:          pushl 1   
5 [0x5]:          invoke_delegate 1895 { static=0, args=0 }   
7 [0x7]:          popl 5   
8 [0x8]:          iaddl 1, fp@4   
10 [0xa]:          movl 5   
11 [0xb]:          sizeof ecx   
12 [0xc]:          loadl ebx, fp+4   
13 [0xd]:          lt ebx, ecx   
14 [0xe]:          jne 47   
15 [0xf]:          movnd ebx   
16 [0x10]:          pushobj   
17 [0x11]:          popl 3   
18 [0x12]: line: 25 movl 3   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movl 3   
26 [0x1a]:          movn #1   
28 [0x1c]:          pushobj   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #2   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @3713 // <xxz#xxa.yah.aefj>   
37 [0x25]:          popobj2    
38 [0x26]:          movn #0   
40 [0x28]:          movi #0, adx   
42 [0x2a]:          iaload ebx, adx   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          mul ecx, ebx -> ebx   
45 [0x2d]:          addl ebx, fp@2   
46 [0x2e]:          jmp @8   
47 [0x2f]: line: 28 pushl 0   
48 [0x30]:          ipushl #2   
49 [0x31]:          call @1926 // <xxz#xxa.xxg.abkr>   
50 [0x32]:          movl 0   
51 [0x33]:          movn #0   
53 [0x35]:          loadval ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]:          ret   


function: xxz#xxa.xxg.abkr[1926] params(1) in file: xwy:31:8: note:  
		    def activate(sum: var) : var {
		       ^

0 [0x0]: line: 32 ipushl #1   
1 [0x1]:          call @1983 // <yzv#yzw.abns>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: xxz#xxa.xxg.abks[1927] params(1) in file: xwy:35:8: note:  
		    def calc_derivative(x : var) : var {
		       ^

0 [0x0]: line: 36 ldc ebx // 1   
1 [0x1]:          rstore ebx   
2 [0x2]:          ipushl #1   
3 [0x3]:          loadl ebx, fp+1   
4 [0x4]:          loadval ecx   
5 [0x5]:          mul ecx, ebx -> ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          sub ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: xxz#xxa.xxg.abkt[1928] params(1) in file: xwy:39:8: note:  
		    def calc_output_gradients(target_val: var) {
		       ^

0 [0x0]: line: 40 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          sub ecx, ebx -> ebx   
9 [0x9]:          smovr_2 ebx, fp+2   
10 [0xa]: line: 41 ipushl #2   
11 [0xb]:          pushl 0   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          movi #0, adx   
17 [0x11]:          iaload ebx, adx   
18 [0x12]:          rstore ebx   
19 [0x13]:          call @1927 // <xxz#xxa.xxg.abks>   
20 [0x14]:          loadval ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          mul ecx, ebx -> ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #3   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          ret   


function: xxz#xxa.xxg.abku[1929] params(1) in file: xwy:44:8: note:  
		    def calc_hidden_gradients(next_layer : layer) {
		       ^

0 [0x0]: line: 45 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @1930 // <xxz#xxa.xxg.abkv>   
3 [0x3]:          ipopl 2   
4 [0x4]: line: 46 ipushl #2   
5 [0x5]:          pushl 0   
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @1927 // <xxz#xxa.xxg.abks>   
14 [0xe]:          loadval ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          movl 0   
18 [0x12]:          movn #3   
20 [0x14]:          movi #0, adx   
22 [0x16]:          rmov adx, ebx   
23 [0x17]:          ret   


function: xxz#xxa.xxg.abkv[1930] params(1) in file: xwy:49:8: note:  
		    def sum_dow(next_layer: layer) : var {
		       ^

0 [0x0]: line: 50 istorel 0, fp+2   
2 [0x2]: line: 51 istorel 0, fp+3   
4 [0x4]:          ipushl #3   
5 [0x5]:          pushl 1   
6 [0x6]:          call @1914 // <xxz#xxa.yah.abjq>   
7 [0x7]:          loadval ebx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #1, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          sub ecx, ebx -> ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 47   
18 [0x12]: line: 52 movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          pushobj   
22 [0x16]:          ipushl #3   
23 [0x17]:          call @3713 // <xxz#xxa.yah.aefj>   
24 [0x18]:          popobj2    
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          pushl 1   
32 [0x20]:          ipushl #3   
33 [0x21]:          call @1903 // <xxz#xxa.yah.abjf>   
34 [0x22]:          popobj2    
35 [0x23]:          movn #3   
37 [0x25]:          movi #0, adx   
39 [0x27]:          iaload ebx, adx   
40 [0x28]:          loadval ecx   
41 [0x29]:          mul ecx, ebx -> ebx   
42 [0x2a]:          addl ebx, fp@2   
43 [0x2b]:          loadl ebx, fp+3   
44 [0x2c]:          inc ebx   
45 [0x2d]:          smovr_2 ebx, fp+3   
46 [0x2e]:          jmp @4   
47 [0x2f]: line: 55 loadl ebx, fp+2   
48 [0x30]:          return_val ebx   
49 [0x31]:          ret   


function: xxz#xxa.xxg.abkw[1931] params(1) in file: xwy:58:8: note:  
		    def update_input_weights(prev_layer: layer) {
		       ^

0 [0x0]: line: 59 istorel -1, fp+3   
2 [0x2]:          pushl 1   
3 [0x3]:          invoke_delegate 1895 { static=0, args=0 }   
5 [0x5]:          popl 4   
6 [0x6]:          iaddl 1, fp@3   
8 [0x8]:          movl 4   
9 [0x9]:          sizeof ecx   
10 [0xa]:          loadl ebx, fp+3   
11 [0xb]:          lt ebx, ecx   
12 [0xc]:          jne 116   
13 [0xd]:          movnd ebx   
14 [0xe]:          pushobj   
15 [0xf]:          popl 2   
16 [0x10]: line: 60 movl 2   
17 [0x11]:          movn #1   
19 [0x13]:          pushobj   
20 [0x14]:          movl 0   
21 [0x15]:          movn #2   
23 [0x17]:          movi #0, adx   
25 [0x19]:          iaload ebx, adx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          call @3713 // <xxz#xxa.yah.aefj>   
28 [0x1c]:          popobj2    
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          smovr_2 ebx, fp+5   
35 [0x23]: line: 62 movg @2 // @xxz#xxa.xxg   
36 [0x24]:          movn #0   
38 [0x26]:          movi #0, adx   
40 [0x28]:          iaload ebx, adx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movl 2   
43 [0x2b]:          movn #0   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          loadval ecx   
49 [0x31]:          mul ecx, ebx -> ebx   
50 [0x32]:          rstore ebx   
51 [0x33]:          movl 0   
52 [0x34]:          movn #3   
54 [0x36]:          movi #0, adx   
56 [0x38]:          iaload ebx, adx   
57 [0x39]:          loadval ecx   
58 [0x3a]:          mul ecx, ebx -> ebx   
59 [0x3b]:          rstore ebx   
60 [0x3c]:          movg @2 // @xxz#xxa.xxg   
61 [0x3d]:          movn #1   
63 [0x3f]:          movi #0, adx   
65 [0x41]:          iaload ebx, adx   
66 [0x42]:          rstore ebx   
67 [0x43]:          loadl ebx, fp+5   
68 [0x44]:          loadval ecx   
69 [0x45]:          mul ecx, ebx -> ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          add ecx, ebx -> ebx   
72 [0x48]:          smovr_2 ebx, fp+6   
73 [0x49]: line: 68 ipushl #6   
74 [0x4a]:          movl 2   
75 [0x4b]:          movn #1   
77 [0x4d]:          pushobj   
78 [0x4e]:          movl 0   
79 [0x4f]:          movn #2   
81 [0x51]:          movi #0, adx   
83 [0x53]:          iaload ebx, adx   
84 [0x54]:          rstore ebx   
85 [0x55]:          call @3713 // <xxz#xxa.yah.aefj>   
86 [0x56]:          popobj2    
87 [0x57]:          movn #1   
89 [0x59]:          loadval ebx   
90 [0x5a]:          movi #0, adx   
92 [0x5c]:          rmov adx, ebx   
93 [0x5d]: line: 69 ipushl #6   
94 [0x5e]:          movl 2   
95 [0x5f]:          movn #1   
97 [0x61]:          pushobj   
98 [0x62]:          movl 0   
99 [0x63]:          movn #2   
101 [0x65]:          movi #0, adx   
103 [0x67]:          iaload ebx, adx   
104 [0x68]:          rstore ebx   
105 [0x69]:          call @3713 // <xxz#xxa.yah.aefj>   
106 [0x6a]:          popobj2    
107 [0x6b]:          movn #0   
109 [0x6d]:          movi #0, adx   
111 [0x6f]:          iaload ecx, adx   
112 [0x70]:          loadval ebx   
113 [0x71]:          add ecx, ebx -> ebx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          jmp @6   
116 [0x74]:          ret   


constructor: xxz#xxa.xxg.abkx[1932] params(0) in file: xwy:12:6: note:  
		class neuron {
		     ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         popl 0   
2 [0x2]:         dup    
3 [0x3]:         call @3707 // <xxz#xxa.yah.aefd>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #1   
7 [0x7]:         popobj   
8 [0x8]:         ret   


xxz#xxa.ykb.ablf[1933] params(0) in file: ykz:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: xxz#xxa.ykb.ablg[1934] params(0) in file: ykz:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: xxz#xxa.yah.ablh[1935] params(0) in file: yad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          newarry ebx: 8   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: xxz#xxa.yah.abli[1936] params(1) in file: yad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          newarry ebx: 8   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]:          ret   


constructor: xxz#xxa.yah.ablj[1937] params(1) in file: yad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @1948 // <xxz#xxa.yah.ablu>   
4 [0x4]:          ret   


function: xxz#xxa.yah.ablk[1938] params(0) in file: yad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: xxz#xxa.yah.abll[1939] params(1) in file: yad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: xxz#xxa.yah.ablm[1940] params(0) in file: yad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3353 // <std.io#ybq.adov>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: xxz#xxa.yah.abln[1941] params(1) in file: yad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @1962 // <xxz#xxa.yah.abmx>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          return_val ebx   
37 [0x25]:          ret   


function: xxz#xxa.yah.ablo[1942] params(1) in file: yad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @1962 // <xxz#xxa.yah.abmx>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          return_val ebx   
37 [0x25]:          ret   


function: xxz#xxa.yah.ablp[1943] params(0) in file: yad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @1942 // <xxz#xxa.yah.ablo>   
14 [0xe]:          loadval ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: xxz#xxa.yah.ablq[1944] params(2) in file: yad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @1962 // <xxz#xxa.yah.abmx>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          smovr_2 ebx, fp+3   
37 [0x25]: line: 57 ipushl #2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          loadval ebx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 58 loadl ebx, fp+3   
49 [0x31]:          return_val ebx   
50 [0x32]:          ret   


function: xxz#xxa.yah.ablr[1945] params(0) in file: yad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3333 // <std.io#ybq.adob>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3333 // <std.io#ybq.adob>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: xxz#xxa.yah.abls[1946] params(0) in file: yad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          newarry ebx: 8   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 70 movi #0, ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]:          ret   


function: xxz#xxa.yah.ablt[1947] params(1) in file: yad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3353 // <std.io#ybq.adov>   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          popobj   
18 [0x12]: line: 75 movl 1   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          ret   


function: xxz#xxa.yah.ablu[1948] params(1) in file: yad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 25   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3353 // <std.io#ybq.adov>   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          popobj   
16 [0x10]: line: 81 movl 1   
17 [0x11]:          sizeof ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          jmp @40   
25 [0x19]: line: 83 movi #0, ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]: line: 84 movi #10, ebx   
35 [0x23]:          newarry ebx: 8   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          popobj   
40 [0x28]:          nop   
41 [0x29]:          ret   


function: xxz#xxa.yah.ablv[1949] params(1) in file: yad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @1945 // <xxz#xxa.yah.ablr>   
18 [0x12]:          nop   
19 [0x13]: line: 91 ipushl #1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          loadval ebx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]:          ret   


function: xxz#xxa.yah.ablw[1950] params(1) in file: yad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 34   
14 [0xe]: line: 96 ipushl #1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          loadval ecx   
25 [0x19]:          test ecx, ebx   
26 [0x1a]:          jne 30   
27 [0x1b]: line: 97 loadl ebx, fp+2   
28 [0x1c]:          return_val ebx   
29 [0x1d]:          ret   
30 [0x1e]:          nop   
31 [0x1f]:          iaddl 1, fp@2   
33 [0x21]:          jmp @2   
34 [0x22]: line: 101 istorel -1, fp+0   
36 [0x24]:           ret   


function: xxz#xxa.yah.ablx[1951] params(0) in file: yad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 istorel 0, fp+1   
16 [0x10]: line: 107 ipushl #1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           loadval ebx   
37 [0x25]:           rmov adx, ebx   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: xxz#xxa.yah.ably[1952] params(0) in file: yad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: xxz#xxa.yah.abmz[1953] params(2) in file: yad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @1962 // <xxz#xxa.yah.abmx>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           ipushl #2   
41 [0x29]:           call @1949 // <xxz#xxa.yah.ablv>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @1945 // <xxz#xxa.yah.ablr>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           iaload ebx, adx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           loadval ebx   
115 [0x73]:           rmov adx, ebx   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 ipushl #2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           loadval ebx   
131 [0x83]:           rmov adx, ebx   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: xxz#xxa.yah.abmd[1954] params(2) in file: yad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           rstore ebx   
25 [0x19]:           ipushl #1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           return_val ebx   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 istorel 0, fp+4   
48 [0x30]: line: 137 loadl ebx, fp+4   
49 [0x31]:           return_val ebx   
50 [0x32]:           ret   


function: xxz#xxa.yah.abme[1955] params(1) in file: yad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 35   
14 [0xe]: line: 142 ipushl #1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           loadval ecx   
25 [0x19]:           test ecx, ebx   
26 [0x1a]:           jne 31   
27 [0x1b]: line: 143 pushl 0   
28 [0x1c]:           ipushl #2   
29 [0x1d]:           call @1959 // <xxz#xxa.yah.abmr>   
30 [0x1e]: line: 144 ret   
31 [0x1f]:           nop   
32 [0x20]:           iaddl 1, fp@2   
34 [0x22]:           jmp @2   
35 [0x23]:           ret   


function: xxz#xxa.yah.abmi[1956] params(2) in file: yad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           ipushl #1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @1959 // <xxz#xxa.yah.abmr>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: xxz#xxa.yah.abmm[1957] params(2) in file: yad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           ipushl #1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 ipushl #1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           loadval ebx   
41 [0x29]:           rmov adx, ebx   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: xxz#xxa.yah.abmq[1958] params(1) in file: yad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           rstore ebx   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           iaload ebx, adx   
69 [0x45]:           rstore ebx   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           smovr_2 ebx, fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           iaload ebx, adx   
98 [0x62]:           rstore ebx   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           loadval ebx   
108 [0x6c]:           rmov adx, ebx   
109 [0x6d]: line: 176 ipushl #4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           loadval ebx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: xxz#xxa.yah.abmr[1959] params(1) in file: yad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @1962 // <xxz#xxa.yah.abmx>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3343 // <std.io#ybq.adol>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @1951 // <xxz#xxa.yah.ablx>   
77 [0x4d]:           ret   


function: xxz#xxa.yah.abmv[1960] params(2) in file: yad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           rstore ebx   
25 [0x19]:           ipushl #1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: xxz#xxa.yah.abmw[1961] params(0) in file: yad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           call @3184 // <std#yaf.ybf.adhx>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @109 // [    
8 [0x8]:           call @3180 // <std#yaf.ybf.adht>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           call @3175 // <std#yaf.ybf.adho>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @110 // ,    
56 [0x38]:           call @3180 // <std#yaf.ybf.adht>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @111 //  ]   
64 [0x40]:           call @3180 // <std#yaf.ybf.adht>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3157 // <std#yaf.ybf.adgw>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: xxz#xxa.yah.abmx[1962] params(1) in file: yad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // Index:    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3572 // <std#string.operator+>   
7 [0x7]:           newstr @113 // , size:    
8 [0x8]:           call @3552 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3572 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: xxz#xxa.xxn.abmy[1963] params(1) in file: xwy:82:7: note:  
		   net(topology: list<var>) {
		      ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         ipushl #0   
2 [0x2]:         dup    
3 [0x3]:         call @3737 // <xxz#xxa.yah.aehd>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]: line: 83 pushl 1   
10 [0xa]:          call @1952 // <xxz#xxa.yah.ably>   
11 [0xb]:          ipopl 2   
12 [0xc]: line: 84 istorel 0, fp+3   
14 [0xe]:          ipushl #3   
15 [0xf]:          loadl ebx, fp+2   
16 [0x10]:          loadval ecx   
17 [0x11]:          lt ecx, ebx   
18 [0x12]:          movr ebx, cmt   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 99   
21 [0x15]: line: 85 movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          pushobj   
25 [0x19]:          new_class @0 // xxz#xxa   
26 [0x1a]:          orl adx, 0   
27 [0x1b]:          dup    
28 [0x1c]:          call @1897 // <xxz#xxa.yah.abjz>   
29 [0x1d]:          call @3751 // <xxz#xxa.yah.aehr>   
30 [0x1e]: line: 87 ipushl #3   
31 [0x1f]:          ipushl #2   
32 [0x20]:          movi #1, ebx   
34 [0x22]:          loadval ecx   
35 [0x23]:          sub ecx, ebx -> ebx   
36 [0x24]:          loadval ecx   
37 [0x25]:          test ecx, ebx   
38 [0x26]:          movr ebx, cmt   
39 [0x27]:          skne ebx // pc = 43   
40 [0x28]:          movi #0, ebx   
42 [0x2a]:          skip @9 // pc = 51   
43 [0x2b]:          movl 1   
44 [0x2c]:          pushobj   
45 [0x2d]:          ipushl #3   
46 [0x2e]:          movi #1, ebx   
48 [0x30]:          loadval ecx   
49 [0x31]:          add ecx, ebx -> ebx   
50 [0x32]:          rstore ebx   
51 [0x33]:          call @1941 // <xxz#xxa.yah.abln>   
52 [0x34]:          ipopl 4   
53 [0x35]: line: 88 istorel 0, fp+5   
55 [0x37]:          ipushl #5   
56 [0x38]:          pushl 1   
57 [0x39]:          ipushl #3   
58 [0x3a]:          call @1941 // <xxz#xxa.yah.abln>   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          loadval ecx   
61 [0x3d]:          lte ecx, ebx   
62 [0x3e]:          movr ebx, cmt   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 81   
65 [0x41]: line: 89 movl 0   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @3745 // <xxz#xxa.yah.aehl>   
70 [0x46]:          new_class @0 // xxz#xxa   
71 [0x47]:          movi #112, adx   
73 [0x49]:          ipushl #4   
74 [0x4a]:          ipushl #5   
75 [0x4b]:          call @1894 // <xxz#xxa.xxg.abip>   
76 [0x4c]:          call @1911 // <xxz#xxa.yah.abjn>   
77 [0x4d]:          loadl ebx, fp+5   
78 [0x4e]:          inc ebx   
79 [0x4f]:          smovr_2 ebx, fp+5   
80 [0x50]:          jmp @55   
81 [0x51]: line: 92 istore 1   
83 [0x53]:          movl 0   
84 [0x54]:          movn #0   
86 [0x56]:          pushobj   
87 [0x57]:          call @3745 // <xxz#xxa.yah.aehl>   
88 [0x58]:          call @1905 // <xxz#xxa.yah.abjh>   
89 [0x59]:          popobj2    
90 [0x5a]:          movn #0   
92 [0x5c]:          loadval ebx   
93 [0x5d]:          movi #0, adx   
95 [0x5f]:          rmov adx, ebx   
96 [0x60]:          iaddl 1, fp@3   
98 [0x62]:          jmp @14   
99 [0x63]:          ret   


function: xxz#xxa.xxn.abnz[1964] params(1) in file: xwy:96:7: note:  
		   def feed_forward(input_vals: list<var>) {
		      ^

0 [0x0]: line: 97 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          pushl 1   
4 [0x4]:          call @1952 // <xxz#xxa.yah.ably>   
5 [0x5]:          loadval ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          lt ecx, ebx   
8 [0x8]:          movr ebx, cmt   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 33   
11 [0xb]: line: 98 pushl 1   
12 [0xc]:          ipushl #2   
13 [0xd]:          call @1941 // <xxz#xxa.yah.abln>   
14 [0xe]:          movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          istore 0   
20 [0x14]:          call @3743 // <xxz#xxa.yah.aehj>   
21 [0x15]:          ipushl #2   
22 [0x16]:          call @1903 // <xxz#xxa.yah.abjf>   
23 [0x17]:          popobj2    
24 [0x18]:          movn #0   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          iaddl 1, fp@2   
32 [0x20]:          jmp @2   
33 [0x21]: line: 101 istorel 1, fp+3   
35 [0x23]:           ipushl #3   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           call @3754 // <xxz#xxa.yah.aehu>   
41 [0x29]:           loadval ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           lt ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 97   
47 [0x2f]: line: 102 movl 0   
48 [0x30]:           movn #0   
50 [0x32]:           pushobj   
51 [0x33]:           ipushl #3   
52 [0x34]:           movi #1, ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           sub ecx, ebx -> ebx   
56 [0x38]:           rstore ebx   
57 [0x39]:           call @3743 // <xxz#xxa.yah.aehj>   
58 [0x3a]:           popobj2    
59 [0x3b]:           smovr_3 fp+4   
60 [0x3c]: line: 104 istorel 0, fp+5   
62 [0x3e]:           ipushl #5   
63 [0x3f]:           movl 0   
64 [0x40]:           movn #0   
66 [0x42]:           pushobj   
67 [0x43]:           ipushl #3   
68 [0x44]:           call @3743 // <xxz#xxa.yah.aehj>   
69 [0x45]:           call @1914 // <xxz#xxa.yah.abjq>   
70 [0x46]:           loadval ebx   
71 [0x47]:           rstore ebx   
72 [0x48]:           movi #1, ebx   
74 [0x4a]:           loadval ecx   
75 [0x4b]:           sub ecx, ebx -> ebx   
76 [0x4c]:           loadval ecx   
77 [0x4d]:           lt ecx, ebx   
78 [0x4e]:           movr ebx, cmt   
79 [0x4f]:           movr cmt, ebx   
80 [0x50]:           jne 94   
81 [0x51]: line: 105 movl 0   
82 [0x52]:           movn #0   
84 [0x54]:           pushobj   
85 [0x55]:           ipushl #3   
86 [0x56]:           call @3743 // <xxz#xxa.yah.aehj>   
87 [0x57]:           ipushl #5   
88 [0x58]:           call @1903 // <xxz#xxa.yah.abjf>   
89 [0x59]:           pushl 4   
90 [0x5a]:           call @1925 // <xxz#xxa.xxg.abkq>   
91 [0x5b]:           iaddl 1, fp@5   
93 [0x5d]:           jmp @62   
94 [0x5e]:           iaddl 1, fp@3   
96 [0x60]:           jmp @35   
97 [0x61]:           ret   


function: xxz#xxa.xxn.abna[1965] params(1) in file: xwy:110:7: note:  
		   def back_prop(target_vals: list<var>) {
		      ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           call @3745 // <xxz#xxa.yah.aehl>   
5 [0x5]:           popobj2    
6 [0x6]:           smovr_3 fp+2   
7 [0x7]: line: 112 istorel 0, fp+3   
9 [0x9]: line: 114 istorel 0, fp+4   
11 [0xb]:           ipushl #4   
12 [0xc]:           pushl 2   
13 [0xd]:           call @1914 // <xxz#xxa.yah.abjq>   
14 [0xe]:           loadval ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #1, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           sub ecx, ebx -> ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           lt ecx, ebx   
22 [0x16]:           movr ebx, cmt   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 51   
25 [0x19]: line: 115 pushl 1   
26 [0x1a]:           ipushl #4   
27 [0x1b]:           call @1941 // <xxz#xxa.yah.abln>   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           rstore ebx   
30 [0x1e]:           pushl 2   
31 [0x1f]:           ipushl #4   
32 [0x20]:           call @1903 // <xxz#xxa.yah.abjf>   
33 [0x21]:           popobj2    
34 [0x22]:           movn #0   
36 [0x24]:           movi #0, adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           loadval ecx   
40 [0x28]:           sub ecx, ebx -> ebx   
41 [0x29]:           smovr_2 ebx, fp+5   
42 [0x2a]: line: 116 ipushl #5   
43 [0x2b]:           loadl ebx, fp+5   
44 [0x2c]:           loadval ecx   
45 [0x2d]:           mul ecx, ebx -> ebx   
46 [0x2e]:           addl ebx, fp@3   
47 [0x2f]:           loadl ebx, fp+4   
48 [0x30]:           inc ebx   
49 [0x31]:           smovr_2 ebx, fp+4   
50 [0x32]:           jmp @11   
51 [0x33]: line: 119 pushl 2   
52 [0x34]:           call @1914 // <xxz#xxa.yah.abjq>   
53 [0x35]:           loadval ebx   
54 [0x36]:           rstore ebx   
55 [0x37]:           movi #1, ebx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           sub ecx, ebx -> ebx   
59 [0x3b]:           divl ebx, fp@3   
60 [0x3c]: line: 120 ipushl #3   
61 [0x3d]:           call @1992 // <yzv#yzw.abob>   
62 [0x3e]:           ipopl 3   
63 [0x3f]: line: 122 movl 0   
64 [0x40]:           movn #2   
66 [0x42]:           movi #0, adx   
68 [0x44]:           iaload ebx, adx   
69 [0x45]:           rstore ebx   
70 [0x46]:           movg @3 // @xxz#xxa.xxn   
71 [0x47]:           movn #0   
73 [0x49]:           movi #0, adx   
75 [0x4b]:           iaload ebx, adx   
76 [0x4c]:           loadval ecx   
77 [0x4d]:           mul ecx, ebx -> ebx   
78 [0x4e]:           rstore ebx   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           loadval ecx   
81 [0x51]:           add ecx, ebx -> ebx   
82 [0x52]:           rstore ebx   
83 [0x53]:           movg @3 // @xxz#xxa.xxn   
84 [0x54]:           movn #0   
86 [0x56]:           movi #0, adx   
88 [0x58]:           iaload ebx, adx   
89 [0x59]:           rstore ebx   
90 [0x5a]:           ldc ebx // 1   
91 [0x5b]:           loadval ecx   
92 [0x5c]:           add ecx, ebx -> ebx   
93 [0x5d]:           loadval ecx   
94 [0x5e]:           div ecx, ebx -> ebx   
95 [0x5f]:           movl 0   
96 [0x60]:           movn #2   
98 [0x62]:           movi #0, adx   
100 [0x64]:           rmov adx, ebx   
101 [0x65]: line: 126 istorel 0, fp+6   
103 [0x67]:           ipushl #6   
104 [0x68]:           pushl 2   
105 [0x69]:           call @1914 // <xxz#xxa.yah.abjq>   
106 [0x6a]:           loadval ebx   
107 [0x6b]:           rstore ebx   
108 [0x6c]:           movi #1, ebx   
110 [0x6e]:           loadval ecx   
111 [0x6f]:           sub ecx, ebx -> ebx   
112 [0x70]:           loadval ecx   
113 [0x71]:           lt ecx, ebx   
114 [0x72]:           movr ebx, cmt   
115 [0x73]:           movr cmt, ebx   
116 [0x74]:           jne 128   
117 [0x75]: line: 127 pushl 2   
118 [0x76]:           ipushl #6   
119 [0x77]:           call @1903 // <xxz#xxa.yah.abjf>   
120 [0x78]:           pushl 1   
121 [0x79]:           ipushl #6   
122 [0x7a]:           call @1941 // <xxz#xxa.yah.abln>   
123 [0x7b]:           call @1928 // <xxz#xxa.xxg.abkt>   
124 [0x7c]:           loadl ebx, fp+6   
125 [0x7d]:           inc ebx   
126 [0x7e]:           smovr_2 ebx, fp+6   
127 [0x7f]:           jmp @103   
128 [0x80]: line: 130 movl 0   
129 [0x81]:           movn #0   
131 [0x83]:           pushobj   
132 [0x84]:           call @3754 // <xxz#xxa.yah.aehu>   
133 [0x85]:           loadval ebx   
134 [0x86]:           rstore ebx   
135 [0x87]:           movi #2, ebx   
137 [0x89]:           loadval ecx   
138 [0x8a]:           sub ecx, ebx -> ebx   
139 [0x8b]:           smovr_2 ebx, fp+7   
140 [0x8c]:           ipushl #7   
141 [0x8d]:           movi #0, ebx   
143 [0x8f]:           loadval ecx   
144 [0x90]:           gt ecx, ebx   
145 [0x91]:           movr ebx, cmt   
146 [0x92]:           movr cmt, ebx   
147 [0x93]:           jne 193   
148 [0x94]: line: 131 movl 0   
149 [0x95]:           movn #0   
151 [0x97]:           pushobj   
152 [0x98]:           ipushl #7   
153 [0x99]:           call @3743 // <xxz#xxa.yah.aehj>   
154 [0x9a]:           popobj2    
155 [0x9b]:           smovr_3 fp+8   
156 [0x9c]: line: 132 movl 0   
157 [0x9d]:           movn #0   
159 [0x9f]:           pushobj   
160 [0xa0]:           ipushl #7   
161 [0xa1]:           movi #1, ebx   
163 [0xa3]:           loadval ecx   
164 [0xa4]:           add ecx, ebx -> ebx   
165 [0xa5]:           rstore ebx   
166 [0xa6]:           call @3743 // <xxz#xxa.yah.aehj>   
167 [0xa7]:           popobj2    
168 [0xa8]:           smovr_3 fp+9   
169 [0xa9]: line: 134 istorel 0, fp+10   
171 [0xab]:           ipushl #10   
172 [0xac]:           pushl 8   
173 [0xad]:           call @1914 // <xxz#xxa.yah.abjq>   
174 [0xae]:           loadval ebx   
175 [0xaf]:           loadval ecx   
176 [0xb0]:           lt ecx, ebx   
177 [0xb1]:           movr ebx, cmt   
178 [0xb2]:           movr cmt, ebx   
179 [0xb3]:           jne 189   
180 [0xb4]: line: 135 pushl 8   
181 [0xb5]:           ipushl #10   
182 [0xb6]:           call @1903 // <xxz#xxa.yah.abjf>   
183 [0xb7]:           pushl 9   
184 [0xb8]:           call @1929 // <xxz#xxa.xxg.abku>   
185 [0xb9]:           loadl ebx, fp+10   
186 [0xba]:           inc ebx   
187 [0xbb]:           smovr_2 ebx, fp+10   
188 [0xbc]:           jmp @171   
189 [0xbd]:           loadl ebx, fp+7   
190 [0xbe]:           dec ebx   
191 [0xbf]:           smovr_2 ebx, fp+7   
192 [0xc0]:           jmp @140   
193 [0xc1]: line: 139 movl 0   
194 [0xc2]:           movn #0   
196 [0xc4]:           pushobj   
197 [0xc5]:           call @3754 // <xxz#xxa.yah.aehu>   
198 [0xc6]:           loadval ebx   
199 [0xc7]:           rstore ebx   
200 [0xc8]:           movi #1, ebx   
202 [0xca]:           loadval ecx   
203 [0xcb]:           sub ecx, ebx -> ebx   
204 [0xcc]:           smovr_2 ebx, fp+11   
205 [0xcd]:           ipushl #11   
206 [0xce]:           movi #0, ebx   
208 [0xd0]:           loadval ecx   
209 [0xd1]:           gt ecx, ebx   
210 [0xd2]:           movr ebx, cmt   
211 [0xd3]:           movr cmt, ebx   
212 [0xd4]:           jne 263   
213 [0xd5]: line: 140 movl 0   
214 [0xd6]:           movn #0   
216 [0xd8]:           pushobj   
217 [0xd9]:           ipushl #11   
218 [0xda]:           call @3743 // <xxz#xxa.yah.aehj>   
219 [0xdb]:           popobj2    
220 [0xdc]:           smovr_3 fp+12   
221 [0xdd]: line: 141 movl 0   
222 [0xde]:           movn #0   
224 [0xe0]:           pushobj   
225 [0xe1]:           ipushl #11   
226 [0xe2]:           movi #1, ebx   
228 [0xe4]:           loadval ecx   
229 [0xe5]:           sub ecx, ebx -> ebx   
230 [0xe6]:           rstore ebx   
231 [0xe7]:           call @3743 // <xxz#xxa.yah.aehj>   
232 [0xe8]:           popobj2    
233 [0xe9]:           smovr_3 fp+13   
234 [0xea]: line: 143 istorel 0, fp+14   
236 [0xec]:           ipushl #14   
237 [0xed]:           pushl 12   
238 [0xee]:           call @1914 // <xxz#xxa.yah.abjq>   
239 [0xef]:           loadval ebx   
240 [0xf0]:           rstore ebx   
241 [0xf1]:           movi #1, ebx   
243 [0xf3]:           loadval ecx   
244 [0xf4]:           sub ecx, ebx -> ebx   
245 [0xf5]:           loadval ecx   
246 [0xf6]:           lt ecx, ebx   
247 [0xf7]:           movr ebx, cmt   
248 [0xf8]:           movr cmt, ebx   
249 [0xf9]:           jne 259   
250 [0xfa]: line: 144 pushl 12   
251 [0xfb]:           ipushl #14   
252 [0xfc]:           call @1903 // <xxz#xxa.yah.abjf>   
253 [0xfd]:           pushl 13   
254 [0xfe]:           call @1931 // <xxz#xxa.xxg.abkw>   
255 [0xff]:           loadl ebx, fp+14   
256 [0x100]:           inc ebx   
257 [0x101]:           smovr_2 ebx, fp+14   
258 [0x102]:           jmp @236   
259 [0x103]:           loadl ebx, fp+11   
260 [0x104]:           dec ebx   
261 [0x105]:           smovr_2 ebx, fp+11   
262 [0x106]:           jmp @205   
263 [0x107]:           ret   


function: xxz#xxa.xxn.abnb[1966] params(1) in file: xwy:149:7: note:  
		   def get_results(result_vals: list<var>) {
		      ^

0 [0x0]: line: 150 pushl 1   
1 [0x1]:           call @1946 // <xxz#xxa.yah.abls>   
2 [0x2]: line: 151 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3745 // <xxz#xxa.yah.aehl>   
10 [0xa]:           call @1914 // <xxz#xxa.yah.abjq>   
11 [0xb]:           loadval ebx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movi #1, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           sub ecx, ebx -> ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 42   
22 [0x16]: line: 152 pushl 1   
23 [0x17]:           movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           pushobj   
27 [0x1b]:           call @3745 // <xxz#xxa.yah.aehl>   
28 [0x1c]:           ipushl #2   
29 [0x1d]:           call @1903 // <xxz#xxa.yah.abjf>   
30 [0x1e]:           popobj2    
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           call @1949 // <xxz#xxa.yah.ablv>   
38 [0x26]:           loadl ebx, fp+2   
39 [0x27]:           inc ebx   
40 [0x28]:           smovr_2 ebx, fp+2   
41 [0x29]:           jmp @4   
42 [0x2a]:           ret   


constructor: xxz#xxa.xxn.abnc[1967] params(0) in file: xwy:81:6: note:  
		class net {
		     ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         ipushl #0   
2 [0x2]:         dup    
3 [0x3]:         call @3737 // <xxz#xxa.yah.aehd>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         ret   


function: xxz#xxa.abnd[1968] params(0) in file: xwy:162:4: note:  
		def main() {
		   ^

0 [0x0]: line: 163 call @3522 // <std#yaf.adwd>   
1 [0x1]:           loadval ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           movi #4, ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           shr ecx, ebx -> ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           call @3424 // <std#yaf.adsg>   
9 [0x9]: line: 164 new_class @0 // xxz#xxa   
10 [0xa]:           ret   
11 [0xb]:           dup    
12 [0xc]:           new_class @0 // xxz#xxa   
13 [0xd]:           rmov adx, adx   
14 [0xe]:           dup    
15 [0xf]:           movi #3, ebx   
17 [0x11]:           newarry ebx: 8   
18 [0x12]:           movi #2, ebx   
20 [0x14]:           movsl #0   
21 [0x15]:           movi #0, adx   
23 [0x17]:           rmov adx, ebx   
24 [0x18]:           movi #2, ebx   
26 [0x1a]:           movsl #0   
27 [0x1b]:           movi #1, adx   
29 [0x1d]:           rmov adx, ebx   
30 [0x1e]:           movi #1, ebx   
32 [0x20]:           movsl #0   
33 [0x21]:           movi #2, adx   
35 [0x23]:           rmov adx, ebx   
36 [0x24]:           call @1937 // <xxz#xxa.yah.ablj>   
37 [0x25]:           call @1963 // <xxz#xxa.xxn.abmy>   
38 [0x26]:           popobj2    
39 [0x27]:           smovr_3 fp+0   
40 [0x28]: line: 167 istorel 5000, fp+1   
42 [0x2a]:           ipushl #1   
43 [0x2b]:           movi #0, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           gte ecx, ebx   
47 [0x2f]:           movr ebx, cmt   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 111   
50 [0x32]: line: 168 new_class @0 // xxz#xxa   
51 [0x33]:           rmov adx, adx   
52 [0x34]:           dup    
53 [0x35]:           movi #2, ebx   
55 [0x37]:           newarry ebx: 8   
56 [0x38]:           call @3419 // <std#yaf.adsb>   
57 [0x39]:           call @1999 // <yzv#yzw.aboi>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movsl #0   
60 [0x3c]:           movi #0, adx   
62 [0x3e]:           rmov adx, ebx   
63 [0x3f]:           call @3419 // <std#yaf.adsb>   
64 [0x40]:           call @1999 // <yzv#yzw.aboi>   
65 [0x41]:           loadval ebx   
66 [0x42]:           movsl #0   
67 [0x43]:           movi #1, adx   
69 [0x45]:           rmov adx, ebx   
70 [0x46]:           call @1937 // <xxz#xxa.yah.ablj>   
71 [0x47]:           popobj2    
72 [0x48]:           smovr_3 fp+2   
73 [0x49]: line: 169 new_class @0 // xxz#xxa   
74 [0x4a]:           rmov adx, adx   
75 [0x4b]:           dup    
76 [0x4c]:           movi #1, ebx   
78 [0x4e]:           newarry ebx: 8   
79 [0x4f]:           pushl 2   
80 [0x50]:           istore 0   
82 [0x52]:           call @1941 // <xxz#xxa.yah.abln>   
83 [0x53]:           loadval ebx   
84 [0x54]:           rstore ebx   
85 [0x55]:           pushl 2   
86 [0x56]:           istore 1   
88 [0x58]:           call @1941 // <xxz#xxa.yah.abln>   
89 [0x59]:           loadval ebx   
90 [0x5a]:           loadval ecx   
91 [0x5b]:           xor ecx, ebx   
92 [0x5c]:           movr ebx, cmt   
93 [0x5d]:           movsl #0   
94 [0x5e]:           movi #0, adx   
96 [0x60]:           rmov adx, ebx   
97 [0x61]:           call @1937 // <xxz#xxa.yah.ablj>   
98 [0x62]:           popobj2    
99 [0x63]:           smovr_3 fp+3   
100 [0x64]: line: 170 pushl 0   
101 [0x65]:           pushl 2   
102 [0x66]:           call @1964 // <xxz#xxa.xxn.abnz>   
103 [0x67]: line: 171 pushl 0   
104 [0x68]:           pushl 3   
105 [0x69]:           call @1965 // <xxz#xxa.xxn.abna>   
106 [0x6a]:           loadl ebx, fp+1   
107 [0x6b]:           movr egx, ebx   
108 [0x6c]:           dec ebx   
109 [0x6d]:           smovr_2 ebx, fp+1   
110 [0x6e]:           jmp @42   
111 [0x6f]: line: 174 newstr @4 // ################ Exclusive or neural network ################   
112 [0x70]:           call @3502 // <std#yaf.advj>   
113 [0x71]: line: 175 newstr @5 // Test Results:   
114 [0x72]:           call @3502 // <std#yaf.advj>   
115 [0x73]: line: 177 istorel 0, fp+4   
117 [0x75]:           loadl ecx, fp+4   
118 [0x76]:           movi #50, ebx   
120 [0x78]:           lt ecx, ebx   
121 [0x79]:           movr ebx, cmt   
122 [0x7a]:           movr cmt, ebx   
123 [0x7b]:           jne 218   
124 [0x7c]: line: 178 new_class @0 // xxz#xxa   
125 [0x7d]:           rmov adx, adx   
126 [0x7e]:           dup    
127 [0x7f]:           call @1935 // <xxz#xxa.yah.ablh>   
128 [0x80]:           popobj2    
129 [0x81]:           smovr_3 fp+5   
130 [0x82]: line: 179 new_class @0 // xxz#xxa   
131 [0x83]:           rmov adx, adx   
132 [0x84]:           dup    
133 [0x85]:           call @1935 // <xxz#xxa.yah.ablh>   
134 [0x86]:           popobj2    
135 [0x87]:           smovr_3 fp+6   
136 [0x88]: line: 180 new_class @0 // xxz#xxa   
137 [0x89]:           rmov adx, adx   
138 [0x8a]:           dup    
139 [0x8b]:           call @1935 // <xxz#xxa.yah.ablh>   
140 [0x8c]:           popobj2    
141 [0x8d]:           smovr_3 fp+7   
142 [0x8e]: line: 181 call @3419 // <std#yaf.adsb>   
143 [0x8f]:           call @1999 // <yzv#yzw.aboi>   
144 [0x90]:           ipopl 8   
145 [0x91]: line: 182 call @3419 // <std#yaf.adsb>   
146 [0x92]:           call @1999 // <yzv#yzw.aboi>   
147 [0x93]:           ipopl 9   
148 [0x94]: line: 183 ipushl #8   
149 [0x95]:           loadl ebx, fp+9   
150 [0x96]:           loadval ecx   
151 [0x97]:           xor ecx, ebx   
152 [0x98]:           movr ebx, cmt   
153 [0x99]:           smovr_2 ebx, fp+10   
154 [0x9a]: line: 185 pushl 6   
155 [0x9b]:           ipushl #10   
156 [0x9c]:           call @1949 // <xxz#xxa.yah.ablv>   
157 [0x9d]: line: 186 pushl 5   
158 [0x9e]:           ipushl #8   
159 [0x9f]:           call @1949 // <xxz#xxa.yah.ablv>   
160 [0xa0]: line: 187 pushl 5   
161 [0xa1]:           ipushl #9   
162 [0xa2]:           call @1949 // <xxz#xxa.yah.ablv>   
163 [0xa3]: line: 188 pushl 0   
164 [0xa4]:           pushl 5   
165 [0xa5]:           call @1964 // <xxz#xxa.xxn.abnz>   
166 [0xa6]: line: 189 pushl 0   
167 [0xa7]:           pushl 7   
168 [0xa8]:           call @1966 // <xxz#xxa.xxn.abnb>   
169 [0xa9]: line: 191 new_class @0 // xxz#xxa   
170 [0xaa]:           skip @0 // pc = 170   
171 [0xab]:           dup    
172 [0xac]:           newstr @6 // 
test #   
173 [0xad]:           call @3540 // <std#string.string>   
174 [0xae]:           ipushl #4   
175 [0xaf]:           call @3572 // <std#string.operator+>   
176 [0xb0]:           call @3517 // <std#yaf.advy>   
177 [0xb1]: line: 192 new_class @0 // xxz#xxa   
178 [0xb2]:           skip @0 // pc = 178   
179 [0xb3]:           dup    
180 [0xb4]:           newstr @7 // input data:    
181 [0xb5]:           call @3540 // <std#string.string>   
182 [0xb6]:           ipushl #8   
183 [0xb7]:           call @3572 // <std#string.operator+>   
184 [0xb8]:           newstr @8 //  ^    
185 [0xb9]:           call @3552 // <std#string.operator+>   
186 [0xba]:           ipushl #9   
187 [0xbb]:           call @3572 // <std#string.operator+>   
188 [0xbc]:           call @3517 // <std#yaf.advy>   
189 [0xbd]: line: 193 new_class @0 // xxz#xxa   
190 [0xbe]:           skip @0 // pc = 190   
191 [0xbf]:           dup    
192 [0xc0]:           newstr @9 // target answer:    
193 [0xc1]:           call @3540 // <std#string.string>   
194 [0xc2]:           ipushl #10   
195 [0xc3]:           call @3572 // <std#string.operator+>   
196 [0xc4]:           call @3517 // <std#yaf.advy>   
197 [0xc5]: line: 194 new_class @0 // xxz#xxa   
198 [0xc6]:           skip @0 // pc = 198   
199 [0xc7]:           dup    
200 [0xc8]:           newstr @10 // ai result:    
201 [0xc9]:           call @3540 // <std#string.string>   
202 [0xca]:           pushl 7   
203 [0xcb]:           call @1940 // <xxz#xxa.yah.ablm>   
204 [0xcc]:           movi #0, ebx   
206 [0xce]:           popobj2    
207 [0xcf]:           movr adx, ebx   
208 [0xd0]:           chklen adx   
209 [0xd1]:           iaload ebx, adx   
210 [0xd2]:           rstore ebx   
211 [0xd3]:           call @1995 // <yzv#yzw.aboe>   
212 [0xd4]:           call @1999 // <yzv#yzw.aboi>   
213 [0xd5]:           call @3572 // <std#string.operator+>   
214 [0xd6]:           call @3517 // <std#yaf.advy>   
215 [0xd7]:           iaddl 1, fp@4   
217 [0xd9]:           jmp @117   
218 [0xda]:           ret   


constructor: xxt#xxu.xxw.abne[1969] params(0) in file: xxs:4:6: note:  
		class _class_ base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1975 // <xxt#xxu.xyv.abnk>   
2 [0x2]:         ret   


constructor: xxt#xxu.xyd.abnf[1970] params(0) in file: xxx:11:6: note:  
		class data_property base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1975 // <xxt#xxu.xyv.abnk>   
2 [0x2]:         ret   


constructor: xxt#xxu.xyg.abng[1971] params(0) in file: xye:4:6: note:  
		class function base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1975 // <xxt#xxu.xyv.abnk>   
2 [0x2]:         ret   


constructor: xxt#xxu.xyj.abnh[1972] params(0) in file: xyh:4:6: note:  
		class field {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: xxt#xxu.xyo.abni[1973] params(1) in file: xym:16:12: note:  
		    reflect(ref_obj : object) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 17 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          ret   


constructor: xxt#xxu.xyo.abnj[1974] params(0) in file: xym:3:6: note:  
		class reflect {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: xxt#xxu.xyv.abnk[1975] params(0) in file: xyt:4:6: note:  
		class data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: yzv#yzw.abnl[1976] params(1) in file: yzu:44:18: note:  
		public static def is_nan(v: var): var {
		                 ^

0 [0x0]: line: 45 ipushl #0   
1 [0x1]:          loadl ebx, fp+0   
2 [0x2]:          loadval ecx   
3 [0x3]:          tne ecx, ebx   
4 [0x4]:          return_val cmt   
5 [0x5]:          ret   


function: yzv#yzw.abnm[1977] params(1) in file: yzu:56:18: note:  
		public static def is_infinite(v: var): var {
		                 ^

0 [0x0]: line: 57 ipushl #0   
1 [0x1]:          ldc ebx // inf   
2 [0x2]:          loadval ecx   
3 [0x3]:          test ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          skpe ebx // pc = 11   
6 [0x6]:          ipushl #0   
7 [0x7]:          movi #-2147483648, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: yzv#yzw.abnn[1978] params(1) in file: yzu:60:4: note:  
		def sin(num: var) : var {
		   ^

0 [0x0]: line: 61 ipushl #0   
1 [0x1]:          istore 0   
3 [0x3]:          call @2000 // <yzv#yzw.aboj>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: yzv#yzw.abno[1979] params(1) in file: yzu:64:4: note:  
		def cos(num: var) : var {
		   ^

0 [0x0]: line: 65 ipushl #0   
1 [0x1]:          istore 1   
3 [0x3]:          call @2000 // <yzv#yzw.aboj>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: yzv#yzw.abnp[1980] params(1) in file: yzu:68:4: note:  
		def tan(num: var) : var {
		   ^

0 [0x0]: line: 69 ipushl #0   
1 [0x1]:          istore 2   
3 [0x3]:          call @2000 // <yzv#yzw.aboj>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: yzv#yzw.abnq[1981] params(1) in file: yzu:72:4: note:  
		def sinh(num: var) : var {
		   ^

0 [0x0]: line: 73 ipushl #0   
1 [0x1]:          istore 3   
3 [0x3]:          call @2000 // <yzv#yzw.aboj>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: yzv#yzw.abnr[1982] params(1) in file: yzu:76:4: note:  
		def cosh(num: var) : var {
		   ^

0 [0x0]: line: 77 ipushl #0   
1 [0x1]:          istore 4   
3 [0x3]:          call @2000 // <yzv#yzw.aboj>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: yzv#yzw.abns[1983] params(1) in file: yzu:80:4: note:  
		def tanh(num: var) : var {
		   ^

0 [0x0]: line: 81 ipushl #0   
1 [0x1]:          istore 5   
3 [0x3]:          call @2000 // <yzv#yzw.aboj>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: yzv#yzw.abnt[1984] params(1) in file: yzu:84:4: note:  
		def asin(num: var) : var {
		   ^

0 [0x0]: line: 85 ipushl #0   
1 [0x1]:          istore 6   
3 [0x3]:          call @2000 // <yzv#yzw.aboj>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: yzv#yzw.abnu[1985] params(1) in file: yzu:88:4: note:  
		def acos(num: var) : var {
		   ^

0 [0x0]: line: 89 ipushl #0   
1 [0x1]:          istore 7   
3 [0x3]:          call @2000 // <yzv#yzw.aboj>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: yzv#yzw.abnv[1986] params(1) in file: yzu:92:4: note:  
		def atan(num: var) : var {
		   ^

0 [0x0]: line: 93 ipushl #0   
1 [0x1]:          istore 8   
3 [0x3]:          call @2000 // <yzv#yzw.aboj>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: yzv#yzw.abnw[1987] params(2) in file: yzu:96:4: note:  
		def atan(num1: var, num2: var) : var {
		   ^

0 [0x0]: line: 97 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          istore 9   
4 [0x4]:          call @2001 // <yzv#yzw.abok>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: yzv#yzw.abnx[1988] params(1) in file: yzu:100:4: note:  
		def exp(num: var) : var {
		   ^

0 [0x0]: line: 101 ipushl #0   
1 [0x1]:           istore 10   
3 [0x3]:           call @2000 // <yzv#yzw.aboj>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: yzv#yzw.abny[1989] params(1) in file: yzu:104:4: note:  
		def log(num: var) : var {
		   ^

0 [0x0]: line: 105 ipushl #0   
1 [0x1]:           istore 11   
3 [0x3]:           call @2000 // <yzv#yzw.aboj>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: yzv#yzw.aboz[1990] params(1) in file: yzu:108:4: note:  
		def log10(num: var) : var {
		   ^

0 [0x0]: line: 109 ipushl #0   
1 [0x1]:           istore 12   
3 [0x3]:           call @2000 // <yzv#yzw.aboj>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: yzv#yzw.aboa[1991] params(2) in file: yzu:112:4: note:  
		def pow(num: var, exp: var) : var {
		   ^

0 [0x0]: line: 113 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 13   
4 [0x4]:           call @2001 // <yzv#yzw.abok>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: yzv#yzw.abob[1992] params(1) in file: yzu:116:4: note:  
		def sqrt(num: var) : var {
		   ^

0 [0x0]: line: 117 ipushl #0   
1 [0x1]:           istore 14   
3 [0x3]:           call @2000 // <yzv#yzw.aboj>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: yzv#yzw.aboc[1993] params(1) in file: yzu:120:4: note:  
		def ceil(num: var) : var {
		   ^

0 [0x0]: line: 121 ipushl #0   
1 [0x1]:           istore 15   
3 [0x3]:           call @2000 // <yzv#yzw.aboj>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: yzv#yzw.abod[1994] params(1) in file: yzu:124:4: note:  
		def floor(num: var) : var {
		   ^

0 [0x0]: line: 125 ipushl #0   
1 [0x1]:           istore 16   
3 [0x3]:           call @2000 // <yzv#yzw.aboj>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: yzv#yzw.aboe[1995] params(1) in file: yzu:128:4: note:  
		def abs(num: var) : var {
		   ^

0 [0x0]: line: 129 ipushl #0   
1 [0x1]:           call @1996 // <yzv#yzw.abof>   
2 [0x2]:           loadval ebx   
3 [0x3]:           return_val ebx   
4 [0x4]:           ret   


function: yzv#yzw.abof[1996] params(1) in file: yzu:132:12: note:  
		private def fabs(num: var) : var {
		           ^

0 [0x0]: line: 133 ipushl #0   
1 [0x1]:           istore 17   
3 [0x3]:           call @2000 // <yzv#yzw.aboj>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: yzv#yzw.abog[1997] params(2) in file: yzu:136:4: note:  
		def ldexp(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 137 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 18   
4 [0x4]:           call @2001 // <yzv#yzw.abok>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: yzv#yzw.aboh[1998] params(2) in file: yzu:140:4: note:  
		def fmod(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 141 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 19   
4 [0x4]:           call @2001 // <yzv#yzw.abok>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: yzv#yzw.aboi[1999] params(1) in file: yzu:144:4: note:  
		def round(num: var) : var {
		   ^

0 [0x0]: line: 145 loadl ebx, fp+0   
1 [0x1]:           mov64 ebx, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 146 loadl ebx, fp+1   
5 [0x5]:           subl ebx, fp@0   
6 [0x6]: line: 148 ipushl #0   
7 [0x7]:           ldc ebx // 0.5   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           movr ebx, cmt   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]:           ipushl #1   
14 [0xe]:           movi #1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           add ecx, ebx -> ebx   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   
20 [0x14]:           jmp @24   
21 [0x15]: line: 149 loadl ebx, fp+1   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   
24 [0x18]:           nop   


function: yzv#yzw.aboj[2000] params(2) in file: yzu:152:10: note:  
		local def math_proc(num: var, proc: var) : var {
		         ^

0 [0x0]: line: 153 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl ecx, fp+1   
2 [0x2]:           int 0x18   
3 [0x3]:           return_val cmt   
4 [0x4]:           ret   
5 [0x5]: line: 161 istorel 0, fp+0   : protected asm end
7 [0x7]:           ret   


function: yzv#yzw.abok[2001] params(3) in file: yzu:164:10: note:  
		local def math_proc(num:var, num2: var, proc: var) : var {
		         ^

0 [0x0]: line: 165 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl egx, fp+1   
2 [0x2]:           loadl ecx, fp+2   
3 [0x3]:           int 0x18   
4 [0x4]:           return_val cmt   
5 [0x5]:           ret   
6 [0x6]: line: 174 istorel 0, fp+0   : protected asm end
8 [0x8]:           ret   


function: std#yaf.yak.abol[2002] params(0) in file: yai:14:15: note:  
		    public def to_string() := new string("nil");
		              ^

0 [0x0]: line: 14 new_class @0 // xxz#xxa   
1 [0x1]:          skip @0 // pc = 1   
2 [0x2]:          dup    
3 [0x3]:          newstr @0 // nil   
4 [0x4]:          call @3540 // <std#string.string>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


constructor: std#yaf.yak.abom[2003] params(0) in file: yai:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yas.abon[2004] params(1) in file: yap:274:10: note:  
		    ulong(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.aboo[2005] params(1) in file: yap:275:10: note:  
		    ulong(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.abop[2006] params(1) in file: yap:276:10: note:  
		    ulong(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.aboq[2007] params(1) in file: yap:277:10: note:  
		    ulong(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.abor[2008] params(1) in file: yap:278:10: note:  
		    ulong(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.abos[2009] params(1) in file: yap:279:10: note:  
		    ulong(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.abot[2010] params(1) in file: yap:280:10: note:  
		    ulong(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.abou[2011] params(1) in file: yap:281:10: note:  
		    ulong(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.abov[2012] params(1) in file: yap:282:10: note:  
		    ulong(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.abow[2013] params(1) in file: yap:283:10: note:  
		    ulong(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.abox[2014] params(1) in file: yap:284:10: note:  
		    ulong(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#yaf.yar.ynt>   
9 [0x9]:         ret   


constructor: std#yaf.yas.aboy[2015] params(1) in file: yap:285:10: note:  
		    ulong(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @8 // <std#yaf.yar.ynt>   
3 [0x3]:         ret   


overload function: std#yaf.yas.abpz[2016] params(0) in file: yap:287:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 287 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#yaf.yas.abpa[2017] params(0) in file: yap:288:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 288 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yas.abpb[2018] params(1) in file: yap:289:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 289 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yas.abpc[2019] params(0) in file: yap:290:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 290 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yas.abpd[2020] params(1) in file: yap:291:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 291 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yas.abpe[2021] params(1) in file: yap:293:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 293 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpf[2022] params(1) in file: yap:294:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 294 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpg[2023] params(1) in file: yap:295:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 295 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abph[2024] params(1) in file: yap:296:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 296 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpi[2025] params(1) in file: yap:297:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 297 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpj[2026] params(1) in file: yap:298:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 298 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpk[2027] params(1) in file: yap:299:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 299 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpl[2028] params(1) in file: yap:300:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 300 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpm[2029] params(1) in file: yap:301:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 301 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpn[2030] params(1) in file: yap:302:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 302 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpo[2031] params(1) in file: yap:303:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 303 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpp[2032] params(1) in file: yap:304:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 304 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yas.abpq[2033] params(1) in file: yap:306:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 306 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpr[2034] params(1) in file: yap:307:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 307 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abps[2035] params(1) in file: yap:308:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 308 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpt[2036] params(1) in file: yap:309:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 309 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpu[2037] params(1) in file: yap:310:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 310 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpv[2038] params(1) in file: yap:311:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 311 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpw[2039] params(1) in file: yap:312:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 312 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpx[2040] params(1) in file: yap:313:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 313 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abpy[2041] params(1) in file: yap:314:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 314 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqz[2042] params(1) in file: yap:315:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 315 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqa[2043] params(1) in file: yap:316:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 316 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqb[2044] params(1) in file: yap:317:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 317 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yas.abqc[2045] params(1) in file: yap:319:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 319 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqd[2046] params(1) in file: yap:320:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 320 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqe[2047] params(1) in file: yap:321:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 321 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqf[2048] params(1) in file: yap:322:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 322 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqg[2049] params(1) in file: yap:323:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 323 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqh[2050] params(1) in file: yap:324:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 324 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqi[2051] params(1) in file: yap:325:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 325 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqj[2052] params(1) in file: yap:326:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 326 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqk[2053] params(1) in file: yap:327:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 327 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abql[2054] params(1) in file: yap:328:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 328 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqm[2055] params(1) in file: yap:329:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 329 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqn[2056] params(1) in file: yap:330:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 330 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yas.abqo[2057] params(1) in file: yap:332:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 332 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqp[2058] params(1) in file: yap:333:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 333 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqq[2059] params(1) in file: yap:334:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 334 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqr[2060] params(1) in file: yap:335:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 335 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqs[2061] params(1) in file: yap:336:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 336 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqt[2062] params(1) in file: yap:337:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 337 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqu[2063] params(1) in file: yap:338:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 338 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqv[2064] params(1) in file: yap:339:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 339 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqw[2065] params(1) in file: yap:340:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 340 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqx[2066] params(1) in file: yap:341:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 341 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abqy[2067] params(1) in file: yap:342:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 342 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrz[2068] params(1) in file: yap:343:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 343 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yas.abra[2069] params(1) in file: yap:345:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 345 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrb[2070] params(1) in file: yap:346:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 346 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrc[2071] params(1) in file: yap:347:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 347 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrd[2072] params(1) in file: yap:348:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 348 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abre[2073] params(1) in file: yap:349:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 349 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrf[2074] params(1) in file: yap:350:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 350 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrg[2075] params(1) in file: yap:351:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 351 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrh[2076] params(1) in file: yap:352:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 352 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abri[2077] params(1) in file: yap:353:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 353 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrj[2078] params(1) in file: yap:354:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 354 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrk[2079] params(1) in file: yap:355:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 355 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abrl[2080] params(1) in file: yap:356:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 356 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yas.abrm[2081] params(1) in file: yap:358:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 358 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abrn[2082] params(1) in file: yap:359:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 359 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abro[2083] params(1) in file: yap:360:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 360 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abrp[2084] params(1) in file: yap:361:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 361 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abrq[2085] params(1) in file: yap:362:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 362 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abrr[2086] params(1) in file: yap:363:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 363 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abrs[2087] params(1) in file: yap:364:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 364 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abrt[2088] params(1) in file: yap:365:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 365 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abru[2089] params(1) in file: yap:366:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 366 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abrv[2090] params(1) in file: yap:367:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 367 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abrw[2091] params(1) in file: yap:368:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 368 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yas.abrx[2092] params(1) in file: yap:369:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 369 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#yaf.yas.abry[2093] params(1) in file: yap:371:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 371 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absz[2094] params(1) in file: yap:372:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 372 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absa[2095] params(1) in file: yap:373:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 373 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absb[2096] params(1) in file: yap:374:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 374 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absc[2097] params(1) in file: yap:375:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 375 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absd[2098] params(1) in file: yap:376:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 376 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.abse[2099] params(1) in file: yap:377:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 377 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absf[2100] params(1) in file: yap:378:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 378 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absg[2101] params(1) in file: yap:379:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 379 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absh[2102] params(1) in file: yap:380:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 380 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absi[2103] params(1) in file: yap:381:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 381 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yas.absj[2104] params(1) in file: yap:382:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 382 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#yaf.yas.absk[2105] params(0) in file: yap:273:6: note:  
		class ulong base integer<_uint64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @216 // <std#yaf.yar.yvt>   
2 [0x2]:         ret   


constructor: std#yaf.yat.absl[2106] params(1) in file: yap:385:9: note:  
		    long(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.absm[2107] params(1) in file: yap:386:9: note:  
		    long(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.absn[2108] params(1) in file: yap:387:9: note:  
		    long(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.abso[2109] params(1) in file: yap:388:9: note:  
		    long(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.absp[2110] params(1) in file: yap:389:9: note:  
		    long(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.absq[2111] params(1) in file: yap:390:9: note:  
		    long(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.absr[2112] params(1) in file: yap:391:9: note:  
		    long(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.abss[2113] params(1) in file: yap:392:9: note:  
		    long(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.abst[2114] params(1) in file: yap:393:9: note:  
		    long(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.absu[2115] params(1) in file: yap:394:9: note:  
		    long(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.absv[2116] params(1) in file: yap:395:9: note:  
		    long(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#yaf.yar.yvv>   
9 [0x9]:         ret   


constructor: std#yaf.yat.absw[2117] params(1) in file: yap:396:9: note:  
		    long(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @217 // <std#yaf.yar.yvv>   
3 [0x3]:         ret   


overload function: std#yaf.yat.absx[2118] params(0) in file: yap:398:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 398 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#yaf.yat.absy[2119] params(0) in file: yap:399:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 399 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yat.abtz[2120] params(1) in file: yap:400:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 400 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yat.abta[2121] params(0) in file: yap:401:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 401 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yat.abtb[2122] params(1) in file: yap:402:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 402 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yat.abtc[2123] params(1) in file: yap:404:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 404 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtd[2124] params(1) in file: yap:405:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 405 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abte[2125] params(1) in file: yap:406:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 406 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtf[2126] params(1) in file: yap:407:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 407 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtg[2127] params(1) in file: yap:408:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 408 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abth[2128] params(1) in file: yap:409:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 409 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abti[2129] params(1) in file: yap:410:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 410 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtj[2130] params(1) in file: yap:411:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 411 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtk[2131] params(1) in file: yap:412:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 412 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtl[2132] params(1) in file: yap:413:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 413 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtm[2133] params(1) in file: yap:414:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 414 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtn[2134] params(1) in file: yap:415:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 415 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yat.abto[2135] params(1) in file: yap:417:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 417 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtp[2136] params(1) in file: yap:418:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 418 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtq[2137] params(1) in file: yap:419:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 419 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtr[2138] params(1) in file: yap:420:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 420 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abts[2139] params(1) in file: yap:421:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 421 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtt[2140] params(1) in file: yap:422:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 422 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtu[2141] params(1) in file: yap:423:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 423 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtv[2142] params(1) in file: yap:424:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 424 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtw[2143] params(1) in file: yap:425:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 425 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abtx[2144] params(1) in file: yap:426:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 426 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abty[2145] params(1) in file: yap:427:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 427 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuz[2146] params(1) in file: yap:428:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 428 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yat.abua[2147] params(1) in file: yap:430:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 430 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abub[2148] params(1) in file: yap:431:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 431 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuc[2149] params(1) in file: yap:432:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 432 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abud[2150] params(1) in file: yap:433:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 433 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abue[2151] params(1) in file: yap:434:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 434 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuf[2152] params(1) in file: yap:435:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 435 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abug[2153] params(1) in file: yap:436:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 436 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuh[2154] params(1) in file: yap:437:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 437 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abui[2155] params(1) in file: yap:438:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 438 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuj[2156] params(1) in file: yap:439:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 439 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuk[2157] params(1) in file: yap:440:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 440 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abul[2158] params(1) in file: yap:441:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 441 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yat.abum[2159] params(1) in file: yap:443:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 443 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abun[2160] params(1) in file: yap:444:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 444 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuo[2161] params(1) in file: yap:445:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 445 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abup[2162] params(1) in file: yap:446:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 446 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuq[2163] params(1) in file: yap:447:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 447 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abur[2164] params(1) in file: yap:448:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 448 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abus[2165] params(1) in file: yap:449:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 449 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abut[2166] params(1) in file: yap:450:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 450 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuu[2167] params(1) in file: yap:451:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 451 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuv[2168] params(1) in file: yap:452:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 452 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abuw[2169] params(1) in file: yap:453:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 453 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abux[2170] params(1) in file: yap:454:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 454 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yat.abuy[2171] params(1) in file: yap:456:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 456 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvz[2172] params(1) in file: yap:457:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 457 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abva[2173] params(1) in file: yap:458:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 458 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvb[2174] params(1) in file: yap:459:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 459 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvc[2175] params(1) in file: yap:460:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 460 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvd[2176] params(1) in file: yap:461:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 461 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abve[2177] params(1) in file: yap:462:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 462 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvf[2178] params(1) in file: yap:463:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 463 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvg[2179] params(1) in file: yap:464:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 464 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvh[2180] params(1) in file: yap:465:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 465 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvi[2181] params(1) in file: yap:466:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 466 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvj[2182] params(1) in file: yap:467:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 467 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yat.abvk[2183] params(1) in file: yap:469:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 469 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvl[2184] params(1) in file: yap:470:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 470 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvm[2185] params(1) in file: yap:471:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 471 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvn[2186] params(1) in file: yap:472:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 472 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvo[2187] params(1) in file: yap:473:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 473 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvp[2188] params(1) in file: yap:474:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 474 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvq[2189] params(1) in file: yap:475:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 475 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvr[2190] params(1) in file: yap:476:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 476 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvs[2191] params(1) in file: yap:477:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 477 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvt[2192] params(1) in file: yap:478:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 478 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvu[2193] params(1) in file: yap:479:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 479 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yat.abvv[2194] params(1) in file: yap:480:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 480 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#yaf.yat.abvw[2195] params(1) in file: yap:482:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 482 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvx[2196] params(1) in file: yap:483:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 483 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abvy[2197] params(1) in file: yap:484:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 484 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abwz[2198] params(1) in file: yap:485:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 485 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abwa[2199] params(1) in file: yap:486:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 486 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abwb[2200] params(1) in file: yap:487:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 487 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abwc[2201] params(1) in file: yap:488:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 488 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abwd[2202] params(1) in file: yap:489:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 489 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abwe[2203] params(1) in file: yap:490:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 490 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abwf[2204] params(1) in file: yap:491:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 491 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abwg[2205] params(1) in file: yap:492:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 492 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yat.abwh[2206] params(1) in file: yap:493:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 493 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#yaf.yat.abwi[2207] params(0) in file: yap:384:6: note:  
		class long base integer<_int64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @425 // <std#yaf.yar.azdv>   
2 [0x2]:         ret   


constructor: std#yaf.yau.abwj[2208] params(1) in file: yap:497:9: note:  
		    uint(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwk[2209] params(1) in file: yap:498:9: note:  
		    uint(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwl[2210] params(1) in file: yap:499:9: note:  
		    uint(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwm[2211] params(1) in file: yap:500:9: note:  
		    uint(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwn[2212] params(1) in file: yap:501:9: note:  
		    uint(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwo[2213] params(1) in file: yap:502:9: note:  
		    uint(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwp[2214] params(1) in file: yap:503:9: note:  
		    uint(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwq[2215] params(1) in file: yap:504:9: note:  
		    uint(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwr[2216] params(1) in file: yap:505:9: note:  
		    uint(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abws[2217] params(1) in file: yap:506:9: note:  
		    uint(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwt[2218] params(1) in file: yap:507:9: note:  
		    uint(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#yaf.yar.azdx>   
9 [0x9]:         ret   


constructor: std#yaf.yau.abwu[2219] params(1) in file: yap:508:9: note:  
		    uint(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @426 // <std#yaf.yar.azdx>   
3 [0x3]:         ret   


overload function: std#yaf.yau.abwv[2220] params(0) in file: yap:510:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 510 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#yaf.yau.abww[2221] params(0) in file: yap:511:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 511 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yau.abwx[2222] params(1) in file: yap:512:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 512 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yau.abwy[2223] params(0) in file: yap:513:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 513 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yau.abxz[2224] params(1) in file: yap:514:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 514 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yau.abxa[2225] params(1) in file: yap:516:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 516 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxb[2226] params(1) in file: yap:517:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 517 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxc[2227] params(1) in file: yap:518:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 518 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxd[2228] params(1) in file: yap:519:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 519 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxe[2229] params(1) in file: yap:520:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 520 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxf[2230] params(1) in file: yap:521:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 521 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxg[2231] params(1) in file: yap:522:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 522 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxh[2232] params(1) in file: yap:523:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 523 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxi[2233] params(1) in file: yap:524:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 524 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxj[2234] params(1) in file: yap:525:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 525 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxk[2235] params(1) in file: yap:526:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 526 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxl[2236] params(1) in file: yap:527:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 527 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yau.abxm[2237] params(1) in file: yap:529:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 529 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxn[2238] params(1) in file: yap:530:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 530 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxo[2239] params(1) in file: yap:531:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 531 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxp[2240] params(1) in file: yap:532:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 532 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxq[2241] params(1) in file: yap:533:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 533 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxr[2242] params(1) in file: yap:534:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 534 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxs[2243] params(1) in file: yap:535:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 535 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxt[2244] params(1) in file: yap:536:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 536 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxu[2245] params(1) in file: yap:537:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 537 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxv[2246] params(1) in file: yap:538:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 538 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxw[2247] params(1) in file: yap:539:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 539 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abxx[2248] params(1) in file: yap:540:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 540 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yau.abxy[2249] params(1) in file: yap:542:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 542 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyz[2250] params(1) in file: yap:543:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 543 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abya[2251] params(1) in file: yap:544:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 544 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyb[2252] params(1) in file: yap:545:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 545 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyc[2253] params(1) in file: yap:546:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 546 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyd[2254] params(1) in file: yap:547:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 547 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abye[2255] params(1) in file: yap:548:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 548 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyf[2256] params(1) in file: yap:549:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 549 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyg[2257] params(1) in file: yap:550:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 550 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyh[2258] params(1) in file: yap:551:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 551 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyi[2259] params(1) in file: yap:552:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 552 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyj[2260] params(1) in file: yap:553:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 553 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yau.abyk[2261] params(1) in file: yap:555:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 555 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyl[2262] params(1) in file: yap:556:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 556 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abym[2263] params(1) in file: yap:557:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 557 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyn[2264] params(1) in file: yap:558:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 558 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyo[2265] params(1) in file: yap:559:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 559 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyp[2266] params(1) in file: yap:560:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 560 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyq[2267] params(1) in file: yap:561:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 561 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyr[2268] params(1) in file: yap:562:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 562 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abys[2269] params(1) in file: yap:563:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 563 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyt[2270] params(1) in file: yap:564:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 564 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyu[2271] params(1) in file: yap:565:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 565 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyv[2272] params(1) in file: yap:566:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 566 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yau.abyw[2273] params(1) in file: yap:568:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 568 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyx[2274] params(1) in file: yap:569:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 569 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.abyy[2275] params(1) in file: yap:570:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 570 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczz[2276] params(1) in file: yap:571:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 571 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.acza[2277] params(1) in file: yap:572:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 572 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczb[2278] params(1) in file: yap:573:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 573 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczc[2279] params(1) in file: yap:574:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 574 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczd[2280] params(1) in file: yap:575:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 575 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.acze[2281] params(1) in file: yap:576:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 576 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczf[2282] params(1) in file: yap:577:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 577 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczg[2283] params(1) in file: yap:578:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 578 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczh[2284] params(1) in file: yap:579:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 579 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yau.aczi[2285] params(1) in file: yap:581:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 581 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczj[2286] params(1) in file: yap:582:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 582 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczk[2287] params(1) in file: yap:583:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 583 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczl[2288] params(1) in file: yap:584:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 584 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczm[2289] params(1) in file: yap:585:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 585 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczn[2290] params(1) in file: yap:586:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 586 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczo[2291] params(1) in file: yap:587:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 587 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczp[2292] params(1) in file: yap:588:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 588 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczq[2293] params(1) in file: yap:589:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 589 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczr[2294] params(1) in file: yap:590:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 590 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczs[2295] params(1) in file: yap:591:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 591 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yau.aczt[2296] params(1) in file: yap:592:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 592 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#yaf.yau.aczu[2297] params(1) in file: yap:594:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 594 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczv[2298] params(1) in file: yap:595:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 595 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczw[2299] params(1) in file: yap:596:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 596 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczx[2300] params(1) in file: yap:597:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 597 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.aczy[2301] params(1) in file: yap:598:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 598 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.acaz[2302] params(1) in file: yap:599:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 599 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.acaa[2303] params(1) in file: yap:600:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 600 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.acab[2304] params(1) in file: yap:601:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 601 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.acac[2305] params(1) in file: yap:602:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 602 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.acad[2306] params(1) in file: yap:603:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 603 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.acae[2307] params(1) in file: yap:604:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 604 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yau.acaf[2308] params(1) in file: yap:605:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 605 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#yaf.yau.acag[2309] params(0) in file: yap:496:6: note:  
		class uint base integer<_uint32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @634 // <std#yaf.yar.azlx>   
2 [0x2]:         ret   


constructor: std#yaf.yav.acah[2310] params(1) in file: yap:608:8: note:  
		    int(i : long) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acai[2311] params(1) in file: yap:609:8: note:  
		    int(i : int) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acaj[2312] params(1) in file: yap:610:8: note:  
		    int(i : short) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acak[2313] params(1) in file: yap:611:8: note:  
		    int(i : char) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acal[2314] params(1) in file: yap:612:8: note:  
		    int(i : byte) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acam[2315] params(1) in file: yap:613:8: note:  
		    int(i : bool) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acan[2316] params(1) in file: yap:614:8: note:  
		    int(i : ulong) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acao[2317] params(1) in file: yap:615:8: note:  
		    int(i : uint) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acap[2318] params(1) in file: yap:616:8: note:  
		    int(i : ushort) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acaq[2319] params(1) in file: yap:617:8: note:  
		    int(i : uchar) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acar[2320] params(1) in file: yap:618:8: note:  
		    int(i : double) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#yaf.yar.azmz>   
9 [0x9]:         ret   


constructor: std#yaf.yav.acas[2321] params(1) in file: yap:619:8: note:  
		    int(i : var) -> base(i) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @635 // <std#yaf.yar.azmz>   
3 [0x3]:         ret   


overload function: std#yaf.yav.acat[2322] params(0) in file: yap:621:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 621 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#yaf.yav.acau[2323] params(0) in file: yap:622:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 622 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yav.acav[2324] params(1) in file: yap:623:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 623 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yav.acaw[2325] params(0) in file: yap:624:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 624 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yav.acax[2326] params(1) in file: yap:625:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 625 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yav.acay[2327] params(1) in file: yap:627:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 627 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbz[2328] params(1) in file: yap:628:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 628 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acba[2329] params(1) in file: yap:629:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 629 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbb[2330] params(1) in file: yap:630:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 630 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbc[2331] params(1) in file: yap:631:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 631 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbd[2332] params(1) in file: yap:632:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 632 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbe[2333] params(1) in file: yap:633:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 633 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbf[2334] params(1) in file: yap:634:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 634 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbg[2335] params(1) in file: yap:635:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 635 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbh[2336] params(1) in file: yap:636:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 636 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbi[2337] params(1) in file: yap:637:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 637 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbj[2338] params(1) in file: yap:638:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 638 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yav.acbk[2339] params(1) in file: yap:640:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 640 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbl[2340] params(1) in file: yap:641:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 641 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbm[2341] params(1) in file: yap:642:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 642 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbn[2342] params(1) in file: yap:643:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 643 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbo[2343] params(1) in file: yap:644:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 644 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbp[2344] params(1) in file: yap:645:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 645 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbq[2345] params(1) in file: yap:646:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 646 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbr[2346] params(1) in file: yap:647:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 647 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbs[2347] params(1) in file: yap:648:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 648 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbt[2348] params(1) in file: yap:649:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 649 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbu[2349] params(1) in file: yap:650:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 650 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbv[2350] params(1) in file: yap:651:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 651 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yav.acbw[2351] params(1) in file: yap:653:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 653 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acbx[2352] params(1) in file: yap:654:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 654 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acby[2353] params(1) in file: yap:655:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 655 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accz[2354] params(1) in file: yap:656:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 656 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acca[2355] params(1) in file: yap:657:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 657 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accb[2356] params(1) in file: yap:658:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 658 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accc[2357] params(1) in file: yap:659:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 659 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accd[2358] params(1) in file: yap:660:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 660 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acce[2359] params(1) in file: yap:661:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 661 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accf[2360] params(1) in file: yap:662:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 662 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accg[2361] params(1) in file: yap:663:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 663 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acch[2362] params(1) in file: yap:664:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 664 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yav.acci[2363] params(1) in file: yap:666:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 666 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accj[2364] params(1) in file: yap:667:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 667 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acck[2365] params(1) in file: yap:668:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 668 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accl[2366] params(1) in file: yap:669:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 669 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accm[2367] params(1) in file: yap:670:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 670 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accn[2368] params(1) in file: yap:671:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 671 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acco[2369] params(1) in file: yap:672:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 672 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accp[2370] params(1) in file: yap:673:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 673 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accq[2371] params(1) in file: yap:674:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 674 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accr[2372] params(1) in file: yap:675:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 675 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accs[2373] params(1) in file: yap:676:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 676 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acct[2374] params(1) in file: yap:677:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 677 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yav.accu[2375] params(1) in file: yap:679:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 679 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accv[2376] params(1) in file: yap:680:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 680 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accw[2377] params(1) in file: yap:681:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 681 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accx[2378] params(1) in file: yap:682:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 682 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.accy[2379] params(1) in file: yap:683:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 683 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdz[2380] params(1) in file: yap:684:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 684 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acda[2381] params(1) in file: yap:685:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 685 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdb[2382] params(1) in file: yap:686:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 686 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdc[2383] params(1) in file: yap:687:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 687 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdd[2384] params(1) in file: yap:688:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 688 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acde[2385] params(1) in file: yap:689:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 689 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdf[2386] params(1) in file: yap:690:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 690 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yav.acdg[2387] params(1) in file: yap:692:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 692 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdh[2388] params(1) in file: yap:693:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 693 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdi[2389] params(1) in file: yap:694:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 694 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdj[2390] params(1) in file: yap:695:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 695 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdk[2391] params(1) in file: yap:696:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 696 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdl[2392] params(1) in file: yap:697:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 697 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdm[2393] params(1) in file: yap:698:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 698 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdn[2394] params(1) in file: yap:699:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 699 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdo[2395] params(1) in file: yap:700:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 700 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdp[2396] params(1) in file: yap:701:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 701 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdq[2397] params(1) in file: yap:702:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 702 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yav.acdr[2398] params(1) in file: yap:703:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 703 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#yaf.yav.acds[2399] params(1) in file: yap:705:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 705 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdt[2400] params(1) in file: yap:706:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 706 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdu[2401] params(1) in file: yap:707:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 707 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdv[2402] params(1) in file: yap:708:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 708 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdw[2403] params(1) in file: yap:709:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 709 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdx[2404] params(1) in file: yap:710:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 710 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acdy[2405] params(1) in file: yap:711:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 711 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acez[2406] params(1) in file: yap:712:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 712 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acea[2407] params(1) in file: yap:713:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 713 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.aceb[2408] params(1) in file: yap:714:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 714 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.acec[2409] params(1) in file: yap:715:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 715 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yav.aced[2410] params(1) in file: yap:716:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 716 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#yaf.yav.acee[2411] params(0) in file: yap:607:6: note:  
		class int base integer<_int32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @843 // <std#yaf.yar.azuz>   
2 [0x2]:         ret   


constructor: std#yaf.yaw.acef[2412] params(1) in file: yap:719:11: note:  
		    ushort(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.aceg[2413] params(1) in file: yap:720:11: note:  
		    ushort(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.aceh[2414] params(1) in file: yap:721:11: note:  
		    ushort(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.acei[2415] params(1) in file: yap:722:11: note:  
		    ushort(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.acej[2416] params(1) in file: yap:723:11: note:  
		    ushort(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.acek[2417] params(1) in file: yap:724:11: note:  
		    ushort(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.acel[2418] params(1) in file: yap:725:11: note:  
		    ushort(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.acem[2419] params(1) in file: yap:726:11: note:  
		    ushort(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.acen[2420] params(1) in file: yap:727:11: note:  
		    ushort(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.aceo[2421] params(1) in file: yap:728:11: note:  
		    ushort(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.acep[2422] params(1) in file: yap:729:11: note:  
		    ushort(i : double) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#yaf.yar.azub>   
9 [0x9]:         ret   


constructor: std#yaf.yaw.aceq[2423] params(1) in file: yap:730:11: note:  
		    ushort(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @844 // <std#yaf.yar.azub>   
3 [0x3]:         ret   


overload function: std#yaf.yaw.acer[2424] params(0) in file: yap:732:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 732 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#yaf.yaw.aces[2425] params(0) in file: yap:733:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 733 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yaw.acet[2426] params(1) in file: yap:734:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 734 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yaw.aceu[2427] params(0) in file: yap:735:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 735 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yaw.acev[2428] params(1) in file: yap:736:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 736 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yaw.acew[2429] params(1) in file: yap:738:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 738 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acex[2430] params(1) in file: yap:739:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 739 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acey[2431] params(1) in file: yap:740:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 740 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfz[2432] params(1) in file: yap:741:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 741 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfa[2433] params(1) in file: yap:742:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 742 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfb[2434] params(1) in file: yap:743:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 743 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfc[2435] params(1) in file: yap:744:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 744 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfd[2436] params(1) in file: yap:745:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 745 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfe[2437] params(1) in file: yap:746:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 746 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acff[2438] params(1) in file: yap:747:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 747 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfg[2439] params(1) in file: yap:748:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 748 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfh[2440] params(1) in file: yap:749:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 749 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yaw.acfi[2441] params(1) in file: yap:751:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 751 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfj[2442] params(1) in file: yap:752:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 752 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfk[2443] params(1) in file: yap:753:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 753 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfl[2444] params(1) in file: yap:754:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 754 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfm[2445] params(1) in file: yap:755:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 755 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfn[2446] params(1) in file: yap:756:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 756 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfo[2447] params(1) in file: yap:757:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 757 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfp[2448] params(1) in file: yap:758:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 758 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfq[2449] params(1) in file: yap:759:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 759 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfr[2450] params(1) in file: yap:760:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 760 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfs[2451] params(1) in file: yap:761:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 761 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acft[2452] params(1) in file: yap:762:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 762 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yaw.acfu[2453] params(1) in file: yap:764:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 764 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfv[2454] params(1) in file: yap:765:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 765 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfw[2455] params(1) in file: yap:766:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 766 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfx[2456] params(1) in file: yap:767:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 767 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acfy[2457] params(1) in file: yap:768:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 768 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgz[2458] params(1) in file: yap:769:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 769 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acga[2459] params(1) in file: yap:770:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 770 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgb[2460] params(1) in file: yap:771:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 771 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgc[2461] params(1) in file: yap:772:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 772 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgd[2462] params(1) in file: yap:773:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 773 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acge[2463] params(1) in file: yap:774:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 774 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgf[2464] params(1) in file: yap:775:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 775 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yaw.acgg[2465] params(1) in file: yap:777:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 777 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgh[2466] params(1) in file: yap:778:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 778 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgi[2467] params(1) in file: yap:779:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 779 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgj[2468] params(1) in file: yap:780:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 780 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgk[2469] params(1) in file: yap:781:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 781 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgl[2470] params(1) in file: yap:782:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 782 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgm[2471] params(1) in file: yap:783:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 783 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgn[2472] params(1) in file: yap:784:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 784 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgo[2473] params(1) in file: yap:785:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 785 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgp[2474] params(1) in file: yap:786:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 786 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgq[2475] params(1) in file: yap:787:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 787 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgr[2476] params(1) in file: yap:788:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 788 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yaw.acgs[2477] params(1) in file: yap:790:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 790 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgt[2478] params(1) in file: yap:791:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 791 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgu[2479] params(1) in file: yap:792:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 792 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgv[2480] params(1) in file: yap:793:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 793 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgw[2481] params(1) in file: yap:794:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 794 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgx[2482] params(1) in file: yap:795:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 795 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acgy[2483] params(1) in file: yap:796:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 796 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achz[2484] params(1) in file: yap:797:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 797 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acha[2485] params(1) in file: yap:798:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 798 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achb[2486] params(1) in file: yap:799:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 799 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achc[2487] params(1) in file: yap:800:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 800 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achd[2488] params(1) in file: yap:801:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 801 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yaw.ache[2489] params(1) in file: yap:803:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 803 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achf[2490] params(1) in file: yap:804:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 804 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achg[2491] params(1) in file: yap:805:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 805 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achh[2492] params(1) in file: yap:806:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 806 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achi[2493] params(1) in file: yap:807:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 807 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achj[2494] params(1) in file: yap:808:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 808 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achk[2495] params(1) in file: yap:809:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 809 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achl[2496] params(1) in file: yap:810:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 810 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achm[2497] params(1) in file: yap:811:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 811 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achn[2498] params(1) in file: yap:812:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 812 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.acho[2499] params(1) in file: yap:813:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 813 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yaw.achp[2500] params(1) in file: yap:814:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 814 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#yaf.yaw.achq[2501] params(1) in file: yap:816:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 816 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achr[2502] params(1) in file: yap:817:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 817 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achs[2503] params(1) in file: yap:818:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 818 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acht[2504] params(1) in file: yap:819:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 819 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achu[2505] params(1) in file: yap:820:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 820 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achv[2506] params(1) in file: yap:821:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 821 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achw[2507] params(1) in file: yap:822:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 822 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achx[2508] params(1) in file: yap:823:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 823 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.achy[2509] params(1) in file: yap:824:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 824 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.aciz[2510] params(1) in file: yap:825:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 825 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acia[2511] params(1) in file: yap:826:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 826 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yaw.acib[2512] params(1) in file: yap:827:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 827 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#yaf.yaw.acic[2513] params(0) in file: yap:718:6: note:  
		class ushort base integer<_uint16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1052 // <std#yaf.yar.aacb>   
2 [0x2]:         ret   


constructor: std#yaf.yax.acid[2514] params(1) in file: yap:830:10: note:  
		    short(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acie[2515] params(1) in file: yap:831:10: note:  
		    short(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acif[2516] params(1) in file: yap:832:10: note:  
		    short(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acig[2517] params(1) in file: yap:833:10: note:  
		    short(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acih[2518] params(1) in file: yap:834:10: note:  
		    short(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acii[2519] params(1) in file: yap:835:10: note:  
		    short(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acij[2520] params(1) in file: yap:836:10: note:  
		    short(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acik[2521] params(1) in file: yap:837:10: note:  
		    short(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acil[2522] params(1) in file: yap:838:10: note:  
		    short(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acim[2523] params(1) in file: yap:839:10: note:  
		    short(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acin[2524] params(1) in file: yap:840:10: note:  
		    short(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#yaf.yar.aacd>   
9 [0x9]:         ret   


constructor: std#yaf.yax.acio[2525] params(1) in file: yap:841:10: note:  
		    short(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1053 // <std#yaf.yar.aacd>   
3 [0x3]:         ret   


overload function: std#yaf.yax.acip[2526] params(0) in file: yap:843:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 843 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#yaf.yax.aciq[2527] params(0) in file: yap:844:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 844 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yax.acir[2528] params(1) in file: yap:845:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 845 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yax.acis[2529] params(0) in file: yap:846:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 846 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yax.acit[2530] params(1) in file: yap:847:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 847 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yax.aciu[2531] params(1) in file: yap:849:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 849 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aciv[2532] params(1) in file: yap:850:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 850 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aciw[2533] params(1) in file: yap:851:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 851 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acix[2534] params(1) in file: yap:852:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 852 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aciy[2535] params(1) in file: yap:853:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 853 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjz[2536] params(1) in file: yap:854:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 854 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acja[2537] params(1) in file: yap:855:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 855 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjb[2538] params(1) in file: yap:856:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 856 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjc[2539] params(1) in file: yap:857:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 857 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjd[2540] params(1) in file: yap:858:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 858 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acje[2541] params(1) in file: yap:859:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 859 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjf[2542] params(1) in file: yap:860:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 860 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yax.acjg[2543] params(1) in file: yap:862:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 862 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjh[2544] params(1) in file: yap:863:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 863 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acji[2545] params(1) in file: yap:864:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 864 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjj[2546] params(1) in file: yap:865:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 865 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjk[2547] params(1) in file: yap:866:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 866 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjl[2548] params(1) in file: yap:867:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 867 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjm[2549] params(1) in file: yap:868:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 868 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjn[2550] params(1) in file: yap:869:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 869 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjo[2551] params(1) in file: yap:870:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 870 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjp[2552] params(1) in file: yap:871:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 871 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjq[2553] params(1) in file: yap:872:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 872 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjr[2554] params(1) in file: yap:873:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 873 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yax.acjs[2555] params(1) in file: yap:875:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 875 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjt[2556] params(1) in file: yap:876:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 876 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acju[2557] params(1) in file: yap:877:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 877 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjv[2558] params(1) in file: yap:878:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 878 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjw[2559] params(1) in file: yap:879:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 879 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjx[2560] params(1) in file: yap:880:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 880 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acjy[2561] params(1) in file: yap:881:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 881 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackz[2562] params(1) in file: yap:882:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 882 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acka[2563] params(1) in file: yap:883:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 883 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackb[2564] params(1) in file: yap:884:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 884 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackc[2565] params(1) in file: yap:885:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 885 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackd[2566] params(1) in file: yap:886:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 886 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yax.acke[2567] params(1) in file: yap:888:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 888 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackf[2568] params(1) in file: yap:889:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 889 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackg[2569] params(1) in file: yap:890:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 890 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackh[2570] params(1) in file: yap:891:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 891 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acki[2571] params(1) in file: yap:892:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 892 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackj[2572] params(1) in file: yap:893:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 893 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackk[2573] params(1) in file: yap:894:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 894 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackl[2574] params(1) in file: yap:895:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 895 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackm[2575] params(1) in file: yap:896:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 896 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackn[2576] params(1) in file: yap:897:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 897 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acko[2577] params(1) in file: yap:898:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 898 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackp[2578] params(1) in file: yap:899:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 899 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yax.ackq[2579] params(1) in file: yap:901:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 901 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackr[2580] params(1) in file: yap:902:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 902 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acks[2581] params(1) in file: yap:903:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 903 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackt[2582] params(1) in file: yap:904:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 904 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acku[2583] params(1) in file: yap:905:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 905 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackv[2584] params(1) in file: yap:906:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 906 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackw[2585] params(1) in file: yap:907:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 907 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.ackx[2586] params(1) in file: yap:908:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 908 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acky[2587] params(1) in file: yap:909:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 909 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclz[2588] params(1) in file: yap:910:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 910 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acla[2589] params(1) in file: yap:911:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 911 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclb[2590] params(1) in file: yap:912:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 912 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yax.aclc[2591] params(1) in file: yap:914:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 914 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.acld[2592] params(1) in file: yap:915:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 915 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.acle[2593] params(1) in file: yap:916:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 916 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.aclf[2594] params(1) in file: yap:917:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 917 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.aclg[2595] params(1) in file: yap:918:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 918 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.aclh[2596] params(1) in file: yap:919:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 919 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.acli[2597] params(1) in file: yap:920:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 920 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.aclj[2598] params(1) in file: yap:921:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 921 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.aclk[2599] params(1) in file: yap:922:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 922 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.acll[2600] params(1) in file: yap:923:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 923 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.aclm[2601] params(1) in file: yap:924:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 924 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#yaf.yax.acln[2602] params(1) in file: yap:925:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 925 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#yaf.yax.aclo[2603] params(1) in file: yap:927:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 927 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclp[2604] params(1) in file: yap:928:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 928 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclq[2605] params(1) in file: yap:929:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 929 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclr[2606] params(1) in file: yap:930:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 930 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acls[2607] params(1) in file: yap:931:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 931 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclt[2608] params(1) in file: yap:932:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 932 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclu[2609] params(1) in file: yap:933:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 933 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclv[2610] params(1) in file: yap:934:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 934 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclw[2611] params(1) in file: yap:935:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 935 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.aclx[2612] params(1) in file: yap:936:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 936 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acly[2613] params(1) in file: yap:937:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 937 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yax.acmz[2614] params(1) in file: yap:938:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 938 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#yaf.yax.acma[2615] params(0) in file: yap:829:6: note:  
		class short base integer<_int16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1261 // <std#yaf.yar.aakd>   
2 [0x2]:         ret   


constructor: std#yaf.yay.acmb[2616] params(1) in file: yap:941:10: note:  
		    uchar(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acmc[2617] params(1) in file: yap:942:10: note:  
		    uchar(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acmd[2618] params(1) in file: yap:943:10: note:  
		    uchar(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acme[2619] params(1) in file: yap:944:10: note:  
		    uchar(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acmf[2620] params(1) in file: yap:945:10: note:  
		    uchar(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acmg[2621] params(1) in file: yap:946:10: note:  
		    uchar(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acmh[2622] params(1) in file: yap:947:10: note:  
		    uchar(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acmi[2623] params(1) in file: yap:948:10: note:  
		    uchar(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acmj[2624] params(1) in file: yap:949:10: note:  
		    uchar(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acmk[2625] params(1) in file: yap:950:10: note:  
		    uchar(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acml[2626] params(1) in file: yap:951:10: note:  
		    uchar(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#yaf.yar.aakf>   
9 [0x9]:         ret   


constructor: std#yaf.yay.acmm[2627] params(1) in file: yap:952:10: note:  
		    uchar(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1262 // <std#yaf.yar.aakf>   
3 [0x3]:         ret   


overload function: std#yaf.yay.acmn[2628] params(0) in file: yap:954:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 954 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#yaf.yay.acmo[2629] params(0) in file: yap:955:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 955 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yay.acmp[2630] params(1) in file: yap:956:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 956 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yay.acmq[2631] params(0) in file: yap:957:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 957 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#yaf.yay.acmr[2632] params(1) in file: yap:958:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 958 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#yaf.yay.acms[2633] params(1) in file: yap:960:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 960 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acmt[2634] params(1) in file: yap:961:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 961 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acmu[2635] params(1) in file: yap:962:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 962 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acmv[2636] params(1) in file: yap:963:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 963 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acmw[2637] params(1) in file: yap:964:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 964 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acmx[2638] params(1) in file: yap:965:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 965 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acmy[2639] params(1) in file: yap:966:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 966 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnz[2640] params(1) in file: yap:967:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 967 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acna[2641] params(1) in file: yap:968:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 968 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnb[2642] params(1) in file: yap:969:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 969 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnc[2643] params(1) in file: yap:970:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 970 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnd[2644] params(1) in file: yap:971:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 971 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yay.acne[2645] params(1) in file: yap:973:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 973 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnf[2646] params(1) in file: yap:974:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 974 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acng[2647] params(1) in file: yap:975:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 975 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnh[2648] params(1) in file: yap:976:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 976 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acni[2649] params(1) in file: yap:977:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 977 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnj[2650] params(1) in file: yap:978:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 978 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnk[2651] params(1) in file: yap:979:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 979 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnl[2652] params(1) in file: yap:980:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 980 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnm[2653] params(1) in file: yap:981:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 981 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnn[2654] params(1) in file: yap:982:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 982 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acno[2655] params(1) in file: yap:983:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 983 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnp[2656] params(1) in file: yap:984:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 984 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yay.acnq[2657] params(1) in file: yap:986:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 986 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnr[2658] params(1) in file: yap:987:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 987 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acns[2659] params(1) in file: yap:988:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 988 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnt[2660] params(1) in file: yap:989:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 989 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnu[2661] params(1) in file: yap:990:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 990 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnv[2662] params(1) in file: yap:991:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 991 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnw[2663] params(1) in file: yap:992:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 992 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acnx[2664] params(1) in file: yap:993:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 993 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acny[2665] params(1) in file: yap:994:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 994 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acoz[2666] params(1) in file: yap:995:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 995 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acoa[2667] params(1) in file: yap:996:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 996 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acob[2668] params(1) in file: yap:997:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 997 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#yaf.yay.acoc[2669] params(1) in file: yap:999:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 999 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#yaf.yay.acod[2670] params(1) in file: yap:1000:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1000 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acoe[2671] params(1) in file: yap:1001:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1001 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acof[2672] params(1) in file: yap:1002:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1002 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acog[2673] params(1) in file: yap:1003:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1003 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acoh[2674] params(1) in file: yap:1004:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1004 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acoi[2675] params(1) in file: yap:1005:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1005 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acoj[2676] params(1) in file: yap:1006:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1006 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acok[2677] params(1) in file: yap:1007:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1007 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acol[2678] params(1) in file: yap:1008:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1008 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acom[2679] params(1) in file: yap:1009:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1009 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acon[2680] params(1) in file: yap:1010:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1010 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.yay.acoo[2681] params(1) in file: yap:1012:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1012 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acop[2682] params(1) in file: yap:1013:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1013 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acoq[2683] params(1) in file: yap:1014:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1014 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acor[2684] params(1) in file: yap:1015:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1015 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acos[2685] params(1) in file: yap:1016:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1016 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acot[2686] params(1) in file: yap:1017:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1017 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acou[2687] params(1) in file: yap:1018:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1018 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acov[2688] params(1) in file: yap:1019:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1019 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acow[2689] params(1) in file: yap:1020:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1020 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acox[2690] params(1) in file: yap:1021:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1021 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acoy[2691] params(1) in file: yap:1022:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1022 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpz[2692] params(1) in file: yap:1023:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1023 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.yay.acpa[2693] params(1) in file: yap:1025:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1025 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpb[2694] params(1) in file: yap:1026:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1026 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpc[2695] params(1) in file: yap:1027:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1027 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpd[2696] params(1) in file: yap:1028:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1028 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpe[2697] params(1) in file: yap:1029:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1029 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpf[2698] params(1) in file: yap:1030:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1030 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpg[2699] params(1) in file: yap:1031:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1031 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acph[2700] params(1) in file: yap:1032:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1032 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpi[2701] params(1) in file: yap:1033:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1033 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpj[2702] params(1) in file: yap:1034:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1034 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpk[2703] params(1) in file: yap:1035:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1035 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yay.acpl[2704] params(1) in file: yap:1036:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1036 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#yaf.yay.acpm[2705] params(1) in file: yap:1038:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1038 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpn[2706] params(1) in file: yap:1039:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1039 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpo[2707] params(1) in file: yap:1040:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1040 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpp[2708] params(1) in file: yap:1041:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1041 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpq[2709] params(1) in file: yap:1042:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1042 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpr[2710] params(1) in file: yap:1043:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1043 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acps[2711] params(1) in file: yap:1044:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1044 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpt[2712] params(1) in file: yap:1045:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1045 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpu[2713] params(1) in file: yap:1046:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1046 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpv[2714] params(1) in file: yap:1047:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1047 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpw[2715] params(1) in file: yap:1048:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1048 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yay.acpx[2716] params(1) in file: yap:1049:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1049 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


constructor: std#yaf.yay.acpy[2717] params(0) in file: yap:940:6: note:  
		class uchar base integer<_uint8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1470 // <std#yaf.yar.aasf>   
2 [0x2]:         ret   


constructor: std#yaf.ybz.acqz[2718] params(1) in file: yap:1052:9: note:  
		    char(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqa[2719] params(1) in file: yap:1053:9: note:  
		    char(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqb[2720] params(1) in file: yap:1054:9: note:  
		    char(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqc[2721] params(1) in file: yap:1055:9: note:  
		    char(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqd[2722] params(1) in file: yap:1056:9: note:  
		    char(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqe[2723] params(1) in file: yap:1057:9: note:  
		    char(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqf[2724] params(1) in file: yap:1058:9: note:  
		    char(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqg[2725] params(1) in file: yap:1059:9: note:  
		    char(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqh[2726] params(1) in file: yap:1060:9: note:  
		    char(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqi[2727] params(1) in file: yap:1061:9: note:  
		    char(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqj[2728] params(1) in file: yap:1062:9: note:  
		    char(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybz.acqk[2729] params(1) in file: yap:1063:9: note:  
		    char(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1471 // <std#yaf.yar.aash>   
3 [0x3]:         ret   


overload function: std#yaf.ybz.acql[2730] params(0) in file: yap:1065:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1065 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#yaf.ybz.acqm[2731] params(0) in file: yap:1066:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1066 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            mov8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#yaf.ybz.acqn[2732] params(1) in file: yap:1067:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1067 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#yaf.ybz.acqo[2733] params(0) in file: yap:1068:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1068 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            mov8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#yaf.ybz.acqp[2734] params(1) in file: yap:1069:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1069 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#yaf.ybz.acqq[2735] params(1) in file: yap:1071:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1071 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acqr[2736] params(1) in file: yap:1072:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1072 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acqs[2737] params(1) in file: yap:1073:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1073 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acqt[2738] params(1) in file: yap:1074:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1074 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acqu[2739] params(1) in file: yap:1075:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1075 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acqv[2740] params(1) in file: yap:1076:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1076 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acqw[2741] params(1) in file: yap:1077:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1077 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acqx[2742] params(1) in file: yap:1078:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1078 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acqy[2743] params(1) in file: yap:1079:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1079 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrz[2744] params(1) in file: yap:1080:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1080 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acra[2745] params(1) in file: yap:1081:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1081 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrb[2746] params(1) in file: yap:1082:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1082 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.ybz.acrc[2747] params(1) in file: yap:1084:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1084 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrd[2748] params(1) in file: yap:1085:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1085 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acre[2749] params(1) in file: yap:1086:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1086 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrf[2750] params(1) in file: yap:1087:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1087 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrg[2751] params(1) in file: yap:1088:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1088 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrh[2752] params(1) in file: yap:1089:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1089 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acri[2753] params(1) in file: yap:1090:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1090 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrj[2754] params(1) in file: yap:1091:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1091 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrk[2755] params(1) in file: yap:1092:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1092 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrl[2756] params(1) in file: yap:1093:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1093 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrm[2757] params(1) in file: yap:1094:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1094 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrn[2758] params(1) in file: yap:1095:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1095 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.ybz.acro[2759] params(1) in file: yap:1097:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1097 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrp[2760] params(1) in file: yap:1098:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1098 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrq[2761] params(1) in file: yap:1099:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1099 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrr[2762] params(1) in file: yap:1100:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1100 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrs[2763] params(1) in file: yap:1101:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1101 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrt[2764] params(1) in file: yap:1102:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1102 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acru[2765] params(1) in file: yap:1103:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1103 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrv[2766] params(1) in file: yap:1104:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1104 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrw[2767] params(1) in file: yap:1105:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1105 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acrx[2768] params(1) in file: yap:1106:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1106 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acry[2769] params(1) in file: yap:1107:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1107 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsz[2770] params(1) in file: yap:1108:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1108 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.ybz.acsa[2771] params(1) in file: yap:1110:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1110 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsb[2772] params(1) in file: yap:1111:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1111 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsc[2773] params(1) in file: yap:1112:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1112 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsd[2774] params(1) in file: yap:1113:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1113 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acse[2775] params(1) in file: yap:1114:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1114 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsf[2776] params(1) in file: yap:1115:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1115 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsg[2777] params(1) in file: yap:1116:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1116 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsh[2778] params(1) in file: yap:1117:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1117 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsi[2779] params(1) in file: yap:1118:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1118 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsj[2780] params(1) in file: yap:1119:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1119 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsk[2781] params(1) in file: yap:1120:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1120 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsl[2782] params(1) in file: yap:1121:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1121 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.ybz.acsm[2783] params(1) in file: yap:1123:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1123 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsn[2784] params(1) in file: yap:1124:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1124 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acso[2785] params(1) in file: yap:1125:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1125 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsp[2786] params(1) in file: yap:1126:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1126 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsq[2787] params(1) in file: yap:1127:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1127 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsr[2788] params(1) in file: yap:1128:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1128 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acss[2789] params(1) in file: yap:1129:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1129 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acst[2790] params(1) in file: yap:1130:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1130 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsu[2791] params(1) in file: yap:1131:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1131 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsv[2792] params(1) in file: yap:1132:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1132 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsw[2793] params(1) in file: yap:1133:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1133 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acsx[2794] params(1) in file: yap:1134:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1134 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.ybz.acsy[2795] params(1) in file: yap:1136:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1136 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.actz[2796] params(1) in file: yap:1137:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1137 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.acta[2797] params(1) in file: yap:1138:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1138 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.actb[2798] params(1) in file: yap:1139:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1139 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.actc[2799] params(1) in file: yap:1140:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1140 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.actd[2800] params(1) in file: yap:1141:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1141 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.acte[2801] params(1) in file: yap:1142:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1142 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.actf[2802] params(1) in file: yap:1143:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1143 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.actg[2803] params(1) in file: yap:1144:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1144 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.acth[2804] params(1) in file: yap:1145:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1145 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.acti[2805] params(1) in file: yap:1146:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1146 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybz.actj[2806] params(1) in file: yap:1147:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1147 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#yaf.ybz.actk[2807] params(1) in file: yap:1149:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1149 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.actl[2808] params(1) in file: yap:1150:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1150 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.actm[2809] params(1) in file: yap:1151:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1151 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.actn[2810] params(1) in file: yap:1152:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1152 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acto[2811] params(1) in file: yap:1153:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1153 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.actp[2812] params(1) in file: yap:1154:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1154 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.actq[2813] params(1) in file: yap:1155:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1155 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.actr[2814] params(1) in file: yap:1156:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1156 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.acts[2815] params(1) in file: yap:1157:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1157 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.actt[2816] params(1) in file: yap:1158:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1158 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.actu[2817] params(1) in file: yap:1159:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1159 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.ybz.actv[2818] params(1) in file: yap:1160:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1160 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            mov8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#yaf.ybz.actw[2819] params(1) in file: yap:1162:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1163 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#yaf.ybz.actx[2820] params(1) in file: yap:1166:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1167 call @3462 // <ykk#ykl.ykr.adtv>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1168 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#yaf.ybz.acty[2821] params(1) in file: yap:1171:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1172 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#yaf.ybz.acuz[2822] params(1) in file: yap:1176:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1177 ipushl #0   
1 [0x1]:            call @2821 // <std#yaf.ybz.acty>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @2819 // <std#yaf.ybz.actw>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#yaf.ybz.acua[2823] params(1) in file: yap:1180:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1181 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1182 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1184 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#yaf.ybz.acub[2824] params(1) in file: yap:1187:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1188 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1189 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1191 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#yaf.ybz.acuc[2825] params(0) in file: yap:1051:6: note:  
		class char base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1679 // <std#yaf.yar.abah>   
2 [0x2]:         ret   


constructor: std#yaf.yba.acud[2826] params(1) in file: yap:1195:9: note:  
		    byte(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acue[2827] params(1) in file: yap:1196:9: note:  
		    byte(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acuf[2828] params(1) in file: yap:1197:9: note:  
		    byte(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acug[2829] params(1) in file: yap:1198:9: note:  
		    byte(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acuh[2830] params(1) in file: yap:1199:9: note:  
		    byte(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acui[2831] params(1) in file: yap:1200:9: note:  
		    byte(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acuj[2832] params(1) in file: yap:1201:9: note:  
		    byte(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acuk[2833] params(1) in file: yap:1202:9: note:  
		    byte(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acul[2834] params(1) in file: yap:1203:9: note:  
		    byte(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acum[2835] params(1) in file: yap:1204:9: note:  
		    byte(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acun[2836] params(1) in file: yap:1205:9: note:  
		    byte(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2627 // <std#yaf.yay.acmm>   
9 [0x9]:         ret   


constructor: std#yaf.yba.acuo[2837] params(1) in file: yap:1206:9: note:  
		    byte(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @2627 // <std#yaf.yay.acmm>   
3 [0x3]:         ret   


overload function: std#yaf.yba.acup[2838] params(0) in file: yap:1208:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1208 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#yaf.yba.acuq[2839] params(0) in file: yap:1209:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1209 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#yaf.yba.acur[2840] params(1) in file: yap:1210:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1210 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#yaf.yba.acus[2841] params(0) in file: yap:1211:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1211 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#yaf.yba.acut[2842] params(1) in file: yap:1212:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1212 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#yaf.yba.acuu[2843] params(1) in file: yap:1214:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1214 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acuv[2844] params(1) in file: yap:1215:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1215 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acuw[2845] params(1) in file: yap:1216:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1216 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acux[2846] params(1) in file: yap:1217:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1217 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acuy[2847] params(1) in file: yap:1218:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1218 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvz[2848] params(1) in file: yap:1219:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1219 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acva[2849] params(1) in file: yap:1220:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1220 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvb[2850] params(1) in file: yap:1221:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1221 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvc[2851] params(1) in file: yap:1222:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1222 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvd[2852] params(1) in file: yap:1223:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1223 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acve[2853] params(1) in file: yap:1224:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1224 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvf[2854] params(1) in file: yap:1225:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1225 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.yba.acvg[2855] params(1) in file: yap:1227:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1227 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvh[2856] params(1) in file: yap:1228:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1228 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvi[2857] params(1) in file: yap:1229:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1229 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvj[2858] params(1) in file: yap:1230:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1230 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvk[2859] params(1) in file: yap:1231:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1231 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvl[2860] params(1) in file: yap:1232:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1232 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvm[2861] params(1) in file: yap:1233:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1233 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvn[2862] params(1) in file: yap:1234:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1234 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvo[2863] params(1) in file: yap:1235:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1235 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvp[2864] params(1) in file: yap:1236:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1236 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvq[2865] params(1) in file: yap:1237:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1237 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvr[2866] params(1) in file: yap:1238:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1238 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.yba.acvs[2867] params(1) in file: yap:1240:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1240 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvt[2868] params(1) in file: yap:1241:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1241 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvu[2869] params(1) in file: yap:1242:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1242 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvv[2870] params(1) in file: yap:1243:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1243 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvw[2871] params(1) in file: yap:1244:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1244 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvx[2872] params(1) in file: yap:1245:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1245 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acvy[2873] params(1) in file: yap:1246:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1246 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwz[2874] params(1) in file: yap:1247:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1247 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwa[2875] params(1) in file: yap:1248:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1248 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwb[2876] params(1) in file: yap:1249:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1249 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwc[2877] params(1) in file: yap:1250:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1250 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwd[2878] params(1) in file: yap:1251:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1251 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.yba.acwe[2879] params(1) in file: yap:1253:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1253 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwf[2880] params(1) in file: yap:1254:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1254 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwg[2881] params(1) in file: yap:1255:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1255 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwh[2882] params(1) in file: yap:1256:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1256 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwi[2883] params(1) in file: yap:1257:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1257 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwj[2884] params(1) in file: yap:1258:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1258 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwk[2885] params(1) in file: yap:1259:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1259 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwl[2886] params(1) in file: yap:1260:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1260 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwm[2887] params(1) in file: yap:1261:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1261 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwn[2888] params(1) in file: yap:1262:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1262 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwo[2889] params(1) in file: yap:1263:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1263 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwp[2890] params(1) in file: yap:1264:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1264 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.yba.acwq[2891] params(1) in file: yap:1266:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1266 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwr[2892] params(1) in file: yap:1267:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1267 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acws[2893] params(1) in file: yap:1268:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1268 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwt[2894] params(1) in file: yap:1269:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1269 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwu[2895] params(1) in file: yap:1270:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1270 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwv[2896] params(1) in file: yap:1271:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1271 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acww[2897] params(1) in file: yap:1272:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1272 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwx[2898] params(1) in file: yap:1273:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1273 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acwy[2899] params(1) in file: yap:1274:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1274 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxz[2900] params(1) in file: yap:1275:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1275 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxa[2901] params(1) in file: yap:1276:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1276 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxb[2902] params(1) in file: yap:1277:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1277 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#yaf.yba.acxc[2903] params(1) in file: yap:1279:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1279 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxd[2904] params(1) in file: yap:1280:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1280 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxe[2905] params(1) in file: yap:1281:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1281 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxf[2906] params(1) in file: yap:1282:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1282 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxg[2907] params(1) in file: yap:1283:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1283 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxh[2908] params(1) in file: yap:1284:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1284 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxi[2909] params(1) in file: yap:1285:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1285 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxj[2910] params(1) in file: yap:1286:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1286 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxk[2911] params(1) in file: yap:1287:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1287 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxl[2912] params(1) in file: yap:1288:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1288 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxm[2913] params(1) in file: yap:1289:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1289 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.yba.acxn[2914] params(1) in file: yap:1290:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1290 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#yaf.yba.acxo[2915] params(1) in file: yap:1292:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1292 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxp[2916] params(1) in file: yap:1293:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1293 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxq[2917] params(1) in file: yap:1294:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1294 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxr[2918] params(1) in file: yap:1295:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1295 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxs[2919] params(1) in file: yap:1296:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1296 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxt[2920] params(1) in file: yap:1297:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1297 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxu[2921] params(1) in file: yap:1298:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1298 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxv[2922] params(1) in file: yap:1299:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1299 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxw[2923] params(1) in file: yap:1300:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1300 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxx[2924] params(1) in file: yap:1301:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1301 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acxy[2925] params(1) in file: yap:1302:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1302 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#yaf.yba.acyz[2926] params(1) in file: yap:1303:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1303 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#yaf.yba.acya[2927] params(1) in file: yap:1305:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1306 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#yaf.yba.acyb[2928] params(1) in file: yap:1309:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1310 call @3462 // <ykk#ykl.ykr.adtv>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1311 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#yaf.yba.acyc[2929] params(1) in file: yap:1314:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1315 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#yaf.yba.acyd[2930] params(1) in file: yap:1319:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1320 ipushl #0   
1 [0x1]:            call @2929 // <std#yaf.yba.acyc>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @2927 // <std#yaf.yba.acya>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#yaf.yba.acye[2931] params(1) in file: yap:1323:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1324 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1325 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1327 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#yaf.yba.acyf[2932] params(1) in file: yap:1330:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1331 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1332 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1334 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#yaf.yba.acyg[2933] params(0) in file: yap:1194:6: note:  
		class byte base uchar {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2717 // <std#yaf.yay.acpy>   
2 [0x2]:         ret   


constructor: std#yaf.ybb.acyh[2934] params(1) in file: yap:1338:9: note:  
		    bool(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acyi[2935] params(1) in file: yap:1339:9: note:  
		    bool(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acyj[2936] params(1) in file: yap:1340:9: note:  
		    bool(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acyk[2937] params(1) in file: yap:1341:9: note:  
		    bool(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acyl[2938] params(1) in file: yap:1342:9: note:  
		    bool(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acym[2939] params(1) in file: yap:1343:9: note:  
		    bool(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acyn[2940] params(1) in file: yap:1344:9: note:  
		    bool(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acyo[2941] params(1) in file: yap:1345:9: note:  
		    bool(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acyp[2942] params(1) in file: yap:1346:9: note:  
		    bool(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acyq[2943] params(1) in file: yap:1347:9: note:  
		    bool(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acyr[2944] params(1) in file: yap:1348:9: note:  
		    bool(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#yaf.yar.aash>   
9 [0x9]:         ret   


constructor: std#yaf.ybb.acys[2945] params(1) in file: yap:1349:9: note:  
		    bool(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1471 // <std#yaf.yar.aash>   
3 [0x3]:         ret   


overload function: std#yaf.ybb.acyt[2946] params(0) in file: yap:1351:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1351 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#yaf.ybb.acyu[2947] params(0) in file: yap:1352:8: note:  
		    def operator++() := (value = !value);
		       ^

0 [0x0]: line: 1352 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#yaf.ybb.acyv[2948] params(1) in file: yap:1353:8: note:  
		    def operator++(num : var) := (!value);
		       ^

0 [0x0]: line: 1353 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#yaf.ybb.acyw[2949] params(0) in file: yap:1354:8: note:  
		    def operator--() := (value = !value);
		       ^

0 [0x0]: line: 1354 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#yaf.ybb.acyx[2950] params(1) in file: yap:1355:8: note:  
		    def operator--(num : var) := (value = !value);
		       ^

0 [0x0]: line: 1355 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#yaf.ybb.acyy[2951] params(1) in file: yap:1357:8: note:  
		    def operator+=(num : ulong)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1357 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzz[2952] params(1) in file: yap:1358:8: note:  
		    def operator+=(num : long)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1358 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adza[2953] params(1) in file: yap:1359:8: note:  
		    def operator+=(num : uint)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1359 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzb[2954] params(1) in file: yap:1360:8: note:  
		    def operator+=(num : int)    := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1360 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzc[2955] params(1) in file: yap:1361:8: note:  
		    def operator+=(num : ushort) := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1361 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzd[2956] params(1) in file: yap:1362:8: note:  
		    def operator+=(num : short)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1362 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adze[2957] params(1) in file: yap:1363:8: note:  
		    def operator+=(num : uchar)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1363 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzf[2958] params(1) in file: yap:1364:8: note:  
		    def operator+=(num : char)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1364 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzg[2959] params(1) in file: yap:1365:8: note:  
		    def operator+=(num : byte)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1365 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzh[2960] params(1) in file: yap:1366:8: note:  
		    def operator+=(num : bool)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1366 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzi[2961] params(1) in file: yap:1367:8: note:  
		    def operator+=(num : double)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1367 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzj[2962] params(1) in file: yap:1368:8: note:  
		    def operator+=(num : var)    := check_value(value+=num);
		       ^

0 [0x0]: line: 1368 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            add ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3035 // <std#yaf.ybb.adce>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#yaf.ybb.adzk[2963] params(1) in file: yap:1370:8: note:  
		    def operator-=(num : ulong)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1370 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzl[2964] params(1) in file: yap:1371:8: note:  
		    def operator-=(num : long)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1371 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzm[2965] params(1) in file: yap:1372:8: note:  
		    def operator-=(num : uint)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1372 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzn[2966] params(1) in file: yap:1373:8: note:  
		    def operator-=(num : int)    := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1373 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzo[2967] params(1) in file: yap:1374:8: note:  
		    def operator-=(num : ushort) := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1374 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzp[2968] params(1) in file: yap:1375:8: note:  
		    def operator-=(num : short)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1375 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzq[2969] params(1) in file: yap:1376:8: note:  
		    def operator-=(num : uchar)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1376 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzr[2970] params(1) in file: yap:1377:8: note:  
		    def operator-=(num : char)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1377 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzs[2971] params(1) in file: yap:1378:8: note:  
		    def operator-=(num : byte)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1378 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzt[2972] params(1) in file: yap:1379:8: note:  
		    def operator-=(num : bool)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1379 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzu[2973] params(1) in file: yap:1380:8: note:  
		    def operator-=(num : double)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1380 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzv[2974] params(1) in file: yap:1381:8: note:  
		    def operator-=(num : var)    := check_value(value-=num);
		       ^

0 [0x0]: line: 1381 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            sub ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3035 // <std#yaf.ybb.adce>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#yaf.ybb.adzw[2975] params(1) in file: yap:1383:8: note:  
		    def operator*=(num : ulong)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1383 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzx[2976] params(1) in file: yap:1384:8: note:  
		    def operator*=(num : long)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1384 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adzy[2977] params(1) in file: yap:1385:8: note:  
		    def operator*=(num : uint)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1385 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adaz[2978] params(1) in file: yap:1386:8: note:  
		    def operator*=(num : int)    := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1386 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adaa[2979] params(1) in file: yap:1387:8: note:  
		    def operator*=(num : ushort) := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1387 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adab[2980] params(1) in file: yap:1388:8: note:  
		    def operator*=(num : short)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1388 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adac[2981] params(1) in file: yap:1389:8: note:  
		    def operator*=(num : uchar)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1389 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adad[2982] params(1) in file: yap:1390:8: note:  
		    def operator*=(num : char)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1390 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adae[2983] params(1) in file: yap:1391:8: note:  
		    def operator*=(num : byte)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1391 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adaf[2984] params(1) in file: yap:1392:8: note:  
		    def operator*=(num : bool)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1392 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adag[2985] params(1) in file: yap:1393:8: note:  
		    def operator*=(num : double)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1393 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adah[2986] params(1) in file: yap:1394:8: note:  
		    def operator*=(num : var)    := check_value(value*=num);
		       ^

0 [0x0]: line: 1394 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mul ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3035 // <std#yaf.ybb.adce>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#yaf.ybb.adai[2987] params(1) in file: yap:1396:8: note:  
		    def operator/=(num : ulong)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1396 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adaj[2988] params(1) in file: yap:1397:8: note:  
		    def operator/=(num : long)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1397 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adak[2989] params(1) in file: yap:1398:8: note:  
		    def operator/=(num : uint)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1398 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adal[2990] params(1) in file: yap:1399:8: note:  
		    def operator/=(num : int)    := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1399 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adam[2991] params(1) in file: yap:1400:8: note:  
		    def operator/=(num : ushort) := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1400 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adan[2992] params(1) in file: yap:1401:8: note:  
		    def operator/=(num : short)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1401 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adao[2993] params(1) in file: yap:1402:8: note:  
		    def operator/=(num : uchar)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1402 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adap[2994] params(1) in file: yap:1403:8: note:  
		    def operator/=(num : char)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1403 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adaq[2995] params(1) in file: yap:1404:8: note:  
		    def operator/=(num : byte)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1404 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adar[2996] params(1) in file: yap:1405:8: note:  
		    def operator/=(num : bool)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1405 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adas[2997] params(1) in file: yap:1406:8: note:  
		    def operator/=(num : double)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1406 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adat[2998] params(1) in file: yap:1407:8: note:  
		    def operator/=(num : var)    := check_value(value/=num);
		       ^

0 [0x0]: line: 1407 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            div ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3035 // <std#yaf.ybb.adce>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#yaf.ybb.adau[2999] params(1) in file: yap:1409:8: note:  
		    def operator%=(num : ulong)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1409 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adav[3000] params(1) in file: yap:1410:8: note:  
		    def operator%=(num : long)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1410 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adaw[3001] params(1) in file: yap:1411:8: note:  
		    def operator%=(num : uint)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1411 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adax[3002] params(1) in file: yap:1412:8: note:  
		    def operator%=(num : int)    := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1412 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.aday[3003] params(1) in file: yap:1413:8: note:  
		    def operator%=(num : ushort) := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1413 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbz[3004] params(1) in file: yap:1414:8: note:  
		    def operator%=(num : short)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1414 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adba[3005] params(1) in file: yap:1415:8: note:  
		    def operator%=(num : uchar)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1415 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbb[3006] params(1) in file: yap:1416:8: note:  
		    def operator%=(num : char)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1416 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbc[3007] params(1) in file: yap:1417:8: note:  
		    def operator%=(num : byte)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1417 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbd[3008] params(1) in file: yap:1418:8: note:  
		    def operator%=(num : bool)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1418 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbe[3009] params(1) in file: yap:1419:8: note:  
		    def operator%=(num : double)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1419 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbf[3010] params(1) in file: yap:1420:8: note:  
		    def operator%=(num : var)    := check_value(value%=num);
		       ^

0 [0x0]: line: 1420 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mod ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3035 // <std#yaf.ybb.adce>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#yaf.ybb.adbg[3011] params(1) in file: yap:1422:8: note:  
		    def operator&=(num : ulong)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1422 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbh[3012] params(1) in file: yap:1423:8: note:  
		    def operator&=(num : long)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1423 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbi[3013] params(1) in file: yap:1424:8: note:  
		    def operator&=(num : uint)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1424 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbj[3014] params(1) in file: yap:1425:8: note:  
		    def operator&=(num : int)    := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1425 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbk[3015] params(1) in file: yap:1426:8: note:  
		    def operator&=(num : ushort) := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1426 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbl[3016] params(1) in file: yap:1427:8: note:  
		    def operator&=(num : short)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1427 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbm[3017] params(1) in file: yap:1428:8: note:  
		    def operator&=(num : uchar)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1428 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbn[3018] params(1) in file: yap:1429:8: note:  
		    def operator&=(num : char)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1429 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbo[3019] params(1) in file: yap:1430:8: note:  
		    def operator&=(num : byte)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1430 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbp[3020] params(1) in file: yap:1431:8: note:  
		    def operator&=(num : bool)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1431 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbq[3021] params(1) in file: yap:1432:8: note:  
		    def operator&=(num : double)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1432 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3035 // <std#yaf.ybb.adce>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#yaf.ybb.adbr[3022] params(1) in file: yap:1433:8: note:  
		    def operator&=(num : var)    := check_value(value&=num);
		       ^

0 [0x0]: line: 1433 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            and ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            rstore cmt   
12 [0xc]:            call @3035 // <std#yaf.ybb.adce>   
13 [0xd]:            loadval ebx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#yaf.ybb.adbs[3023] params(1) in file: yap:1435:8: note:  
		    def operator|=(num : ulong)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1435 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbt[3024] params(1) in file: yap:1436:8: note:  
		    def operator|=(num : long)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1436 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbu[3025] params(1) in file: yap:1437:8: note:  
		    def operator|=(num : uint)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1437 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbv[3026] params(1) in file: yap:1438:8: note:  
		    def operator|=(num : int)    := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1438 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbw[3027] params(1) in file: yap:1439:8: note:  
		    def operator|=(num : ushort) := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1439 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adbx[3028] params(1) in file: yap:1440:8: note:  
		    def operator|=(num : short)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1440 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adby[3029] params(1) in file: yap:1441:8: note:  
		    def operator|=(num : uchar)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1441 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adcz[3030] params(1) in file: yap:1442:8: note:  
		    def operator|=(num : char)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1442 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adca[3031] params(1) in file: yap:1443:8: note:  
		    def operator|=(num : byte)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1443 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adcb[3032] params(1) in file: yap:1444:8: note:  
		    def operator|=(num : bool)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1444 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adcc[3033] params(1) in file: yap:1445:8: note:  
		    def operator|=(num : double)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1445 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3035 // <std#yaf.ybb.adce>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#yaf.ybb.adcd[3034] params(1) in file: yap:1446:8: note:  
		    def operator|=(num : var)    := check_value(value|=num);
		       ^

0 [0x0]: line: 1446 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            or ecx, ebx   
10 [0xa]:            mov8 cmt, cmt   
11 [0xb]:            rmov adx, cmt   
12 [0xc]:            rstore cmt   
13 [0xd]:            call @3035 // <std#yaf.ybb.adce>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


function: std#yaf.ybb.adce[3035] params(1) in file: yap:1448:8: note:  
		    def check_value(new_val: var) : var {
		       ^

0 [0x0]: line: 1449 loadl ebx, fp+1   
1 [0x1]:            skne ebx // pc = 5   
2 [0x2]:            movi #1, ebx   
4 [0x4]:            skip @2 // pc = 6   
5 [0x5]:            movi #0, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#yaf.ybb.adcf[3036] params(0) in file: yap:1452:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 1453 new_class @0 // xxz#xxa   
1 [0x1]:            skip @0 // pc = 1   
2 [0x2]:            dup    
3 [0x3]:            movl 0   
4 [0x4]:            movn #0   
6 [0x6]:            movi #0, adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            skne ebx // pc = 13   
10 [0xa]:            newstr @11 // true   
11 [0xb]:            popobj2    
12 [0xc]:            skip @2 // pc = 14   
13 [0xd]:            newstr @12 // false   
14 [0xe]:            popobj2    
15 [0xf]:            pushobj   
16 [0x10]:            call @3540 // <std#string.string>   
17 [0x11]:            popobj2    
18 [0x12]:            returnobj   
19 [0x13]:            ret   


constructor: std#yaf.ybb.adcg[3037] params(0) in file: yap:1337:6: note:  
		class bool base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1679 // <std#yaf.yar.abah>   
2 [0x2]:         ret   


constructor: std#yaf.ybc.adch[3038] params(1) in file: yap:1458:11: note:  
		    double(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adci[3039] params(1) in file: yap:1459:11: note:  
		    double(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adcj[3040] params(1) in file: yap:1460:11: note:  
		    double(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adck[3041] params(1) in file: yap:1461:11: note:  
		    double(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adcl[3042] params(1) in file: yap:1462:11: note:  
		    double(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adcm[3043] params(1) in file: yap:1463:11: note:  
		    double(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adcn[3044] params(1) in file: yap:1464:11: note:  
		    double(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adco[3045] params(1) in file: yap:1465:11: note:  
		    double(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adcp[3046] params(1) in file: yap:1466:11: note:  
		    double(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adcq[3047] params(1) in file: yap:1467:11: note:  
		    double(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adcr[3048] params(1) in file: yap:1468:11: note:  
		    double(i : double) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#yaf.yar.abaj>   
9 [0x9]:         ret   


constructor: std#yaf.ybc.adcs[3049] params(1) in file: yap:1469:11: note:  
		    double(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1680 // <std#yaf.yar.abaj>   
3 [0x3]:         ret   


overload function: std#yaf.ybc.adct[3050] params(0) in file: yap:1471:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1471 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#yaf.ybc.adcu[3051] params(0) in file: yap:1472:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1472 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movi #0, adx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            return_val ebx   
11 [0xb]:            ret   


overload function: std#yaf.ybc.adcv[3052] params(1) in file: yap:1473:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1473 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            movr ebx, egx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#yaf.ybc.adcw[3053] params(0) in file: yap:1474:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1474 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movi #0, adx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            return_val ebx   
11 [0xb]:            ret   


overload function: std#yaf.ybc.adcx[3054] params(1) in file: yap:1475:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1475 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            movr ebx, egx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#yaf.ybc.adcy[3055] params(1) in file: yap:1477:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1477 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addz[3056] params(1) in file: yap:1478:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1478 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adda[3057] params(1) in file: yap:1479:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1479 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addb[3058] params(1) in file: yap:1480:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1480 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addc[3059] params(1) in file: yap:1481:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1481 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addd[3060] params(1) in file: yap:1482:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1482 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adde[3061] params(1) in file: yap:1483:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1483 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addf[3062] params(1) in file: yap:1484:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1484 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addg[3063] params(1) in file: yap:1485:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1485 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addh[3064] params(1) in file: yap:1486:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1486 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addi[3065] params(1) in file: yap:1487:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1487 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addj[3066] params(1) in file: yap:1488:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1488 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#yaf.ybc.addk[3067] params(1) in file: yap:1490:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1490 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addl[3068] params(1) in file: yap:1491:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1491 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addm[3069] params(1) in file: yap:1492:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1492 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addn[3070] params(1) in file: yap:1493:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1493 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addo[3071] params(1) in file: yap:1494:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1494 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addp[3072] params(1) in file: yap:1495:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1495 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addq[3073] params(1) in file: yap:1496:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1496 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addr[3074] params(1) in file: yap:1497:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1497 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adds[3075] params(1) in file: yap:1498:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1498 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addt[3076] params(1) in file: yap:1499:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1499 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addu[3077] params(1) in file: yap:1500:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1500 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addv[3078] params(1) in file: yap:1501:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1501 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#yaf.ybc.addw[3079] params(1) in file: yap:1503:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1503 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addx[3080] params(1) in file: yap:1504:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1504 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.addy[3081] params(1) in file: yap:1505:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1505 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adez[3082] params(1) in file: yap:1506:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1506 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adea[3083] params(1) in file: yap:1507:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1507 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adeb[3084] params(1) in file: yap:1508:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1508 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adec[3085] params(1) in file: yap:1509:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1509 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.aded[3086] params(1) in file: yap:1510:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1510 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adee[3087] params(1) in file: yap:1511:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1511 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adef[3088] params(1) in file: yap:1512:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1512 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adeg[3089] params(1) in file: yap:1513:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1513 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adeh[3090] params(1) in file: yap:1514:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1514 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#yaf.ybc.adei[3091] params(1) in file: yap:1516:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1516 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adej[3092] params(1) in file: yap:1517:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1517 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adek[3093] params(1) in file: yap:1518:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1518 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adel[3094] params(1) in file: yap:1519:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1519 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adem[3095] params(1) in file: yap:1520:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1520 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.aden[3096] params(1) in file: yap:1521:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1521 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adeo[3097] params(1) in file: yap:1522:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1522 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adep[3098] params(1) in file: yap:1523:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1523 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adeq[3099] params(1) in file: yap:1524:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1524 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.ader[3100] params(1) in file: yap:1525:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1525 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.ades[3101] params(1) in file: yap:1526:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1526 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adet[3102] params(1) in file: yap:1527:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1527 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#yaf.ybc.adeu[3103] params(1) in file: yap:1529:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1529 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adev[3104] params(1) in file: yap:1530:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1530 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adew[3105] params(1) in file: yap:1531:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1531 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adex[3106] params(1) in file: yap:1532:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1532 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adey[3107] params(1) in file: yap:1533:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1533 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfz[3108] params(1) in file: yap:1534:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1534 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfa[3109] params(1) in file: yap:1535:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1535 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfb[3110] params(1) in file: yap:1536:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1536 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfc[3111] params(1) in file: yap:1537:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1537 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfd[3112] params(1) in file: yap:1538:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1538 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfe[3113] params(1) in file: yap:1539:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1539 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adff[3114] params(1) in file: yap:1540:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1540 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#yaf.ybc.adfg[3115] params(1) in file: yap:1542:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1542 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfh[3116] params(1) in file: yap:1543:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1543 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfi[3117] params(1) in file: yap:1544:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1544 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfj[3118] params(1) in file: yap:1545:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1545 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfk[3119] params(1) in file: yap:1546:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1546 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfl[3120] params(1) in file: yap:1547:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1547 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfm[3121] params(1) in file: yap:1548:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1548 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfn[3122] params(1) in file: yap:1549:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1549 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfo[3123] params(1) in file: yap:1550:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1550 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfp[3124] params(1) in file: yap:1551:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1551 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfq[3125] params(1) in file: yap:1552:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1552 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfr[3126] params(1) in file: yap:1553:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1553 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#yaf.ybc.adfs[3127] params(1) in file: yap:1555:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1555 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adft[3128] params(1) in file: yap:1556:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1556 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfu[3129] params(1) in file: yap:1557:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1557 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfv[3130] params(1) in file: yap:1558:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1558 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfw[3131] params(1) in file: yap:1559:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1559 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfx[3132] params(1) in file: yap:1560:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1560 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adfy[3133] params(1) in file: yap:1561:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1561 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adgz[3134] params(1) in file: yap:1562:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1562 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adga[3135] params(1) in file: yap:1563:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1563 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adgb[3136] params(1) in file: yap:1564:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1564 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adgc[3137] params(1) in file: yap:1565:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1565 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#yaf.ybc.adgd[3138] params(1) in file: yap:1566:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1566 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


constructor: std#yaf.ybc.adge[3139] params(0) in file: yap:1457:6: note:  
		class double base integer<var> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1888 // <std#yaf.yar.abij>   
2 [0x2]:         ret   


function: std#yaf.ybf.adgf[3140] params(1) in file: ybd:20:8: note:  
		    def set_resize_capacity(new_capacity: var) {
		       ^

0 [0x0]: line: 21 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


constructor: std#yaf.ybf.adgg[3141] params(1) in file: ybd:24:19: note:  
		    string_builder(str : _int8[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 25 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 57   
53 [0x35]: line: 26 pushl 0   
54 [0x36]:          pushl 1   
55 [0x37]:          call @3153 // <std#yaf.ybf.adgs>   
56 [0x38]:          pop   
57 [0x39]:          nop   
58 [0x3a]:          ret   


constructor: std#yaf.ybf.adgh[3142] params(1) in file: ybd:30:19: note:  
		    string_builder(ch: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 31 pushl 0   
49 [0x31]:          ipushl #1   
50 [0x32]:          call @3150 // <std#yaf.ybf.adgp>   
51 [0x33]:          pop   
52 [0x34]:          ret   


constructor: std#yaf.ybf.adgi[3143] params(1) in file: ybd:34:19: note:  
		    string_builder(str : char[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 35 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 111   
53 [0x35]: line: 36 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          sizeof ebx   
56 [0x38]:          rstore ebx   
57 [0x39]:          call @3147 // <std#yaf.ybf.adgm>   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 37 pushl 0   
63 [0x3f]:          movl 1   
64 [0x40]:          sizeof ebx   
65 [0x41]:          rstore ebx   
66 [0x42]:          call @3148 // <std#yaf.ybf.adgn>   
67 [0x43]:          nop   
68 [0x44]: line: 40 movl 1   
69 [0x45]:          sizeof ebx   
70 [0x46]:          newarry ebx: 8   
71 [0x47]:          movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          popobj   
75 [0x4b]: line: 41 istorel -1, fp+3   
77 [0x4d]:          pushl 1   
78 [0x4e]:          popl 4   
79 [0x4f]:          iaddl 1, fp@3   
81 [0x51]:          movl 4   
82 [0x52]:          sizeof ecx   
83 [0x53]:          loadl ebx, fp+3   
84 [0x54]:          lt ebx, ecx   
85 [0x55]:          jne 111   
86 [0x56]:          movnd ebx   
87 [0x57]:          pushobj   
88 [0x58]:          popl 2   
89 [0x59]: line: 42 pushl 2   
90 [0x5a]:          call @1678 // <std#yaf.yar.abag>   
91 [0x5b]:          movl 0   
92 [0x5c]:          movn #0   
94 [0x5e]:          pushobj   
95 [0x5f]:          movl 0   
96 [0x60]:          movn #3   
98 [0x62]:          movi #0, adx   
100 [0x64]:          iaload ebx, adx   
101 [0x65]:          inc ebx   
102 [0x66]:          movi #0, adx   
104 [0x68]:          rmov adx, ebx   
105 [0x69]:          popobj2    
106 [0x6a]:          movr adx, ebx   
107 [0x6b]:          chklen adx   
108 [0x6c]:          loadval ebx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          jmp @79   
111 [0x6f]:          nop   
112 [0x70]:          ret   


constructor: std#yaf.ybf.adgj[3144] params(1) in file: ybd:47:19: note:  
		    string_builder(str: string) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 48 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 58   
53 [0x35]: line: 49 pushl 0   
54 [0x36]:          pushl 1   
55 [0x37]:          call @3566 // <std#string.get_data>   
56 [0x38]:          call @3153 // <std#yaf.ybf.adgs>   
57 [0x39]:          pop   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


constructor: std#yaf.ybf.adgk[3145] params(1) in file: ybd:53:19: note:  
		    string_builder(str: string_builder) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 54 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 60   
53 [0x35]: line: 55 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          call @3153 // <std#yaf.ybf.adgs>   
59 [0x3b]:          pop   
60 [0x3c]:          nop   
61 [0x3d]:          ret   


constructor: std#yaf.ybf.adgl[3146] params(2) in file: ybd:59:19: note:  
		    string_builder(str : _int8[], offset: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 60 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 114   
53 [0x35]: line: 61 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          sizeof ebx   
56 [0x38]:          rstore ebx   
57 [0x39]:          loadl ebx, fp+2   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          sub ecx, ebx -> ebx   
60 [0x3c]:          rstore ebx   
61 [0x3d]:          call @3147 // <std#yaf.ybf.adgm>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 71   
66 [0x42]: line: 62 pushl 0   
67 [0x43]:          movl 1   
68 [0x44]:          sizeof ebx   
69 [0x45]:          rstore ebx   
70 [0x46]:          call @3148 // <std#yaf.ybf.adgn>   
71 [0x47]:          nop   
72 [0x48]: line: 65 pushl 1   
73 [0x49]:          movl 0   
74 [0x4a]:          movn #0   
76 [0x4c]:          pushobj   
77 [0x4d]:          movl 0   
78 [0x4e]:          movn #3   
80 [0x50]:          movi #0, adx   
82 [0x52]:          iaload ebx, adx   
83 [0x53]:          inc ebx   
84 [0x54]:          movi #0, adx   
86 [0x56]:          rmov adx, ebx   
87 [0x57]:          rstore ebx   
88 [0x58]:          ipushl #2   
89 [0x59]:          movl 1   
90 [0x5a]:          sizeof ebx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          call @3344 // <std.io#ybq.adom>   
93 [0x5d]: line: 66 movl 1   
94 [0x5e]:          sizeof ebx   
95 [0x5f]:          rstore ebx   
96 [0x60]:          loadl ebx, fp+2   
97 [0x61]:          loadval ecx   
98 [0x62]:          sub ecx, ebx -> ebx   
99 [0x63]:          rstore ebx   
100 [0x64]:          movi #1, ebx   
102 [0x66]:          loadval ecx   
103 [0x67]:          sub ecx, ebx -> ebx   
104 [0x68]:          rstore ebx   
105 [0x69]:          movl 0   
106 [0x6a]:          movn #3   
108 [0x6c]:          movi #0, adx   
110 [0x6e]:          iaload ecx, adx   
111 [0x6f]:          loadval ebx   
112 [0x70]:          add ecx, ebx -> ebx   
113 [0x71]:          rmov adx, ebx   
114 [0x72]:          nop   
115 [0x73]:          ret   


function: std#yaf.ybf.adgm[3147] params(1) in file: ybd:70:8: note:  
		    def space_available(space_required : var) : var {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          sizeof ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          lt ecx, ebx   
22 [0x16]:          return_val cmt   
23 [0x17]:          ret   


function: std#yaf.ybf.adgn[3148] params(1) in file: ybd:74:8: note:  
		    def expand(space_required : var) {
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          loadval ecx   
23 [0x17]:          add ecx, ebx -> ebx   
24 [0x18]:          smovr_2 ebx, fp+2   
25 [0x19]: line: 76 movl 0   
26 [0x1a]:          movn #0   
28 [0x1c]:          pushobj   
29 [0x1d]:          ipushl #2   
30 [0x1e]:          call @3334 // <std.io#ybq.adoc>   
31 [0x1f]:          ret   


function: std#yaf.ybf.adgo[3149] params(2) in file: ybd:79:8: note:  
		    def replace(pos : var, ch: _int8) : string_builder {
		       ^

0 [0x0]: line: 80 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          movr ebx, cmt   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 14   
10 [0xa]: line: 81 pushl 0   
11 [0xb]:          ipushl #1   
12 [0xc]:          call @3182 // <std#yaf.ybf.adhv>   
13 [0xd]:          throw    
14 [0xe]:          nop   
15 [0xf]: line: 84 ipushl #2   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+1   
21 [0x15]:          popobj2    
22 [0x16]:          movr adx, ebx   
23 [0x17]:          chklen adx   
24 [0x18]:          loadval ebx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 85 movl 0   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   


function: std#yaf.ybf.adgp[3150] params(1) in file: ybd:88:8: note:  
		    def append(ch: var) : string_builder
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 91 movi #255, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @41   
16 [0x10]:          movl 0   
17 [0x11]:          movn #3   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          rstore ebx   
23 [0x17]:          movi #1, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          add ecx, ebx -> ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          gte ecx, ebx   
34 [0x22]:          movr ebx, cmt   
35 [0x23]:          movr cmt, ebx   
36 [0x24]:          jne 41   
37 [0x25]: line: 93 pushl 0   
38 [0x26]:          istore 0   
40 [0x28]:          call @3148 // <std#yaf.ybf.adgn>   
41 [0x29]:          nop   
42 [0x2a]: line: 95 ipushl #1   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #0   
46 [0x2e]:          pushobj   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          sizeof ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movi #1, ebx   
54 [0x36]:          loadval ecx   
55 [0x37]:          sub ecx, ebx -> ebx   
56 [0x38]:          popobj2    
57 [0x39]:          movr adx, ebx   
58 [0x3a]:          chklen adx   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 96 movl 0   
62 [0x3e]:          returnobj   
63 [0x3f]:          ret   


function: std#yaf.ybf.adgq[3151] params(0) in file: ybd:99:8: note:  
		    def get_elements() := to_string().get_elements();
		       ^

0 [0x0]: line: 99 pushl 0   
1 [0x1]:          call @3157 // <std#yaf.ybf.adgw>   
2 [0x2]:          call @3567 // <std#string.get_elements>   
3 [0x3]:          popobj2    
4 [0x4]:          returnobj   
5 [0x5]:          ret   


function: std#yaf.ybf.adgr[3152] params(1) in file: ybd:101:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 101 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1678 // <std#yaf.yar.abag>   
3 [0x3]:           call @3150 // <std#yaf.ybf.adgp>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#yaf.ybf.adgs[3153] params(1) in file: ybd:103:8: note:  
		    def append(immstr: _int8[]) : string_builder
		       ^

0 [0x0]: line: 105 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 107 movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 29   
16 [0x10]: line: 108 movl 1   
17 [0x11]:           sizeof ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #255, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           newarry ebx: 8   
24 [0x18]:           movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           popobj   
28 [0x1c]:           jmp @43   
29 [0x1d]:           pushl 0   
30 [0x1e]:           movl 1   
31 [0x1f]:           sizeof ebx   
32 [0x20]:           rstore ebx   
33 [0x21]:           call @3147 // <std#yaf.ybf.adgm>   
34 [0x22]:           loadval ebx   
35 [0x23]:           not ebx, ebx   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 43   
38 [0x26]: line: 110 pushl 0   
39 [0x27]:           movl 1   
40 [0x28]:           sizeof ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @3148 // <std#yaf.ybf.adgn>   
43 [0x2b]:           nop   
44 [0x2c]: line: 112 pushl 1   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           movl 0   
50 [0x32]:           movn #3   
52 [0x34]:           movi #0, adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           inc ebx   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           rmov adx, ebx   
59 [0x3b]:           rstore ebx   
60 [0x3c]:           istore 0   
62 [0x3e]:           movl 1   
63 [0x3f]:           sizeof ebx   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3344 // <std.io#ybq.adom>   
66 [0x42]: line: 113 movl 1   
67 [0x43]:           sizeof ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movi #1, ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           sub ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 0   
75 [0x4b]:           movn #3   
77 [0x4d]:           movi #0, adx   
79 [0x4f]:           iaload ecx, adx   
80 [0x50]:           loadval ebx   
81 [0x51]:           add ecx, ebx -> ebx   
82 [0x52]:           rmov adx, ebx   
83 [0x53]: line: 114 movl 0   
84 [0x54]:           returnobj   
85 [0x55]:           ret   


function: std#yaf.ybf.adgt[3154] params(2) in file: ybd:117:8: note:  
		    def append(immstr: _int8[], len: var) : string_builder
		       ^

0 [0x0]: line: 119 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 120 loadl ecx, fp+2   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           lt ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 21   
15 [0xf]: line: 121 new_class @0 // xxz#xxa   
16 [0x10]:           mull adx, fp@0   
17 [0x11]:           dup    
18 [0x12]:           newstr @13 // length cannot be less than zero   
19 [0x13]:           call @3649 // <std#error.error>   
20 [0x14]:           throw    
21 [0x15]:           nop   
22 [0x16]: line: 123 ipushl #2   
23 [0x17]:           movl 1   
24 [0x18]:           sizeof ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           gt ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 48   
30 [0x1e]: line: 124 new_class @0 // xxz#xxa   
31 [0x1f]:           mull adx, fp@0   
32 [0x20]:           dup    
33 [0x21]:           new_class @0 // xxz#xxa   
34 [0x22]:           skip @0 // pc = 34   
35 [0x23]:           dup    
36 [0x24]:           newstr @14 // length of:    
37 [0x25]:           call @3540 // <std#string.string>   
38 [0x26]:           ipushl #2   
39 [0x27]:           call @3572 // <std#string.operator+>   
40 [0x28]:           newstr @15 //  is greater than the string:    
41 [0x29]:           call @3552 // <std#string.operator+>   
42 [0x2a]:           movl 1   
43 [0x2b]:           sizeof ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           call @3572 // <std#string.operator+>   
46 [0x2e]:           call @3650 // <std#error.error>   
47 [0x2f]:           throw    
48 [0x30]:           nop   
49 [0x31]: line: 126 movl 0   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           pushnull    
54 [0x36]:           itest ebx   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 68   
57 [0x39]: line: 127 ipushl #2   
58 [0x3a]:           movi #255, ebx   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           add ecx, ebx -> ebx   
62 [0x3e]:           newarry ebx: 8   
63 [0x3f]:           movl 0   
64 [0x40]:           movn #0   
66 [0x42]:           popobj   
67 [0x43]:           jmp @82   
68 [0x44]:           pushl 0   
69 [0x45]:           movl 1   
70 [0x46]:           sizeof ebx   
71 [0x47]:           rstore ebx   
72 [0x48]:           call @3147 // <std#yaf.ybf.adgm>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           not ebx, ebx   
75 [0x4b]:           movr cmt, ebx   
76 [0x4c]:           jne 82   
77 [0x4d]: line: 129 pushl 0   
78 [0x4e]:           movl 1   
79 [0x4f]:           sizeof ebx   
80 [0x50]:           rstore ebx   
81 [0x51]:           call @3148 // <std#yaf.ybf.adgn>   
82 [0x52]:           nop   
83 [0x53]: line: 131 pushl 1   
84 [0x54]:           movl 0   
85 [0x55]:           movn #0   
87 [0x57]:           pushobj   
88 [0x58]:           movl 0   
89 [0x59]:           movn #3   
91 [0x5b]:           movi #0, adx   
93 [0x5d]:           iaload ebx, adx   
94 [0x5e]:           inc ebx   
95 [0x5f]:           movi #0, adx   
97 [0x61]:           rmov adx, ebx   
98 [0x62]:           rstore ebx   
99 [0x63]:           istore 0   
101 [0x65]:           ipushl #2   
102 [0x66]:           call @3344 // <std.io#ybq.adom>   
103 [0x67]: line: 132 movl 1   
104 [0x68]:           sizeof ebx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           loadl ebx, fp+2   
107 [0x6b]:           loadval ecx   
108 [0x6c]:           sub ecx, ebx -> ebx   
109 [0x6d]:           rstore ebx   
110 [0x6e]:           movi #1, ebx   
112 [0x70]:           loadval ecx   
113 [0x71]:           sub ecx, ebx -> ebx   
114 [0x72]:           rstore ebx   
115 [0x73]:           movl 0   
116 [0x74]:           movn #3   
118 [0x76]:           movi #0, adx   
120 [0x78]:           iaload ecx, adx   
121 [0x79]:           loadval ebx   
122 [0x7a]:           add ecx, ebx -> ebx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]: line: 133 movl 0   
125 [0x7d]:           returnobj   
126 [0x7e]:           ret   


overload function: std#yaf.ybf.adgu[3155] params(1) in file: ybd:136:8: note:  
		    def operator+(immstr : _int8[]) : string_builder {
		       ^

0 [0x0]: line: 137 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3141 // <std#yaf.ybf.adgg>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 138 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 22   
15 [0xf]: line: 139 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           call @3153 // <std#yaf.ybf.adgs>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   
21 [0x15]:           jmp @28   
22 [0x16]: line: 141 pushl 2   
23 [0x17]:           newstr @16 // null   
24 [0x18]:           call @3153 // <std#yaf.ybf.adgs>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   
28 [0x1c]:           nop   


overload function: std#yaf.ybf.adgv[3156] params(1) in file: ybd:145:8: note:  
		    def operator+(obj : printable) : string_builder {
		       ^

0 [0x0]: line: 146 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3141 // <std#yaf.ybf.adgg>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 147 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 25   
15 [0xf]: line: 148 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           invoke_delegate 3657 { static=0, args=0 }   
19 [0x13]:           call @3566 // <std#string.get_data>   
20 [0x14]:           call @3153 // <std#yaf.ybf.adgs>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 150 pushl 2   
26 [0x1a]:           newstr @16 // null   
27 [0x1b]:           call @3153 // <std#yaf.ybf.adgs>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


function: std#yaf.ybf.adgw[3157] params(0) in file: ybd:153:8: note:  
		    def to_string() := new string(data, 0, cursor + 1);
		       ^

0 [0x0]: line: 153 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           istore 0   
9 [0x9]:           movl 0   
10 [0xa]:           movn #3   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #1, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           add ecx, ebx -> ebx   
20 [0x14]:           rstore ebx   
21 [0x15]:           call @3545 // <std#string.string>   
22 [0x16]:           popobj2    
23 [0x17]:           returnobj   
24 [0x18]:           ret   


overload function: std#yaf.ybf.adgx[3158] params(1) in file: ybd:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           tne ecx, ebx   
16 [0x10]:           jne 20   
17 [0x11]: line: 157 istorel 0, fp+0   
19 [0x13]:           ret   
20 [0x14]:           nop   
21 [0x15]: line: 159 istorel 0, fp+2   
23 [0x17]: line: 160 istorel -1, fp+4   
25 [0x19]:           pushl 1   
26 [0x1a]:           popl 5   
27 [0x1b]:           iaddl 1, fp@4   
29 [0x1d]:           movl 5   
30 [0x1e]:           sizeof ecx   
31 [0x1f]:           loadl ebx, fp+4   
32 [0x20]:           lt ebx, ecx   
33 [0x21]:           jne 58   
34 [0x22]:           iaload ecx, ebx   
35 [0x23]:           smovr_2 ecx, fp+3   
36 [0x24]: line: 161 ipushl #3   
37 [0x25]:           movl 0   
38 [0x26]:           movn #0   
40 [0x28]:           pushobj   
41 [0x29]:           loadl ebx, fp+2   
42 [0x2a]:           movr egx, ebx   
43 [0x2b]:           inc ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]:           movr ebx, egx   
46 [0x2e]:           popobj2    
47 [0x2f]:           movr adx, ebx   
48 [0x30]:           chklen adx   
49 [0x31]:           iaload ebx, adx   
50 [0x32]:           loadval ecx   
51 [0x33]:           tne ecx, ebx   
52 [0x34]:           jne 56   
53 [0x35]: line: 162 istorel 0, fp+0   
55 [0x37]:           ret   
56 [0x38]:           nop   
57 [0x39]:           jmp @27   
58 [0x3a]: line: 165 istorel 1, fp+0   
60 [0x3c]:           ret   


overload function: std#yaf.ybf.adgy[3159] params(1) in file: ybd:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           pushl 1   
13 [0xd]:           call @3566 // <std#string.get_data>   
14 [0xe]:           popobj2    
15 [0xf]:           sizeof ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           jne 22   
19 [0x13]: line: 170 istorel 0, fp+0   
21 [0x15]:           ret   
22 [0x16]:           nop   
23 [0x17]: line: 172 istorel 0, fp+2   
25 [0x19]: line: 173 istorel -1, fp+4   
27 [0x1b]:           pushl 1   
28 [0x1c]:           call @3566 // <std#string.get_data>   
29 [0x1d]:           popl 5   
30 [0x1e]:           iaddl 1, fp@4   
32 [0x20]:           movl 5   
33 [0x21]:           sizeof ecx   
34 [0x22]:           loadl ebx, fp+4   
35 [0x23]:           lt ebx, ecx   
36 [0x24]:           jne 61   
37 [0x25]:           iaload ecx, ebx   
38 [0x26]:           smovr_2 ecx, fp+3   
39 [0x27]: line: 174 ipushl #3   
40 [0x28]:           movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           pushobj   
44 [0x2c]:           loadl ebx, fp+2   
45 [0x2d]:           movr egx, ebx   
46 [0x2e]:           inc ebx   
47 [0x2f]:           smovr_2 ebx, fp+2   
48 [0x30]:           movr ebx, egx   
49 [0x31]:           popobj2    
50 [0x32]:           movr adx, ebx   
51 [0x33]:           chklen adx   
52 [0x34]:           iaload ebx, adx   
53 [0x35]:           loadval ecx   
54 [0x36]:           tne ecx, ebx   
55 [0x37]:           jne 59   
56 [0x38]: line: 175 istorel 0, fp+0   
58 [0x3a]:           ret   
59 [0x3b]:           nop   
60 [0x3c]:           jmp @30   
61 [0x3d]: line: 178 istorel 1, fp+0   
63 [0x3f]:           ret   


overload function: std#yaf.ybf.adhz[3160] params(1) in file: ybd:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3158 // <std#yaf.ybf.adgx>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#yaf.ybf.adha[3161] params(1) in file: ybd:184:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 184 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3159 // <std#yaf.ybf.adgy>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#yaf.ybf.adhb[3162] params(1) in file: ybd:186:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 188 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 20   
4 [0x4]: line: 189 movi #255, ebx   
6 [0x6]:           newarry ebx: 0   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           popobj   
11 [0xb]: line: 190 movi #-1, ebx   
13 [0xd]:           movl 0   
14 [0xe]:           movn #3   
16 [0x10]:           movi #0, adx   
18 [0x12]:           rmov adx, ebx   
19 [0x13]:           jmp @54   
20 [0x14]: line: 193 movl 1   
21 [0x15]:           sizeof ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #255, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           add ecx, ebx -> ebx   
27 [0x1b]:           newarry ebx: 0   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]: line: 194 movl 1   
33 [0x21]:           sizeof ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #3   
37 [0x25]:           movi #0, adx   
39 [0x27]:           rmov adx, ebx   
40 [0x28]: line: 195 pushl 1   
41 [0x29]:           movl 0   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           istore 0   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 1   
51 [0x33]:           sizeof ebx   
52 [0x34]:           rstore ebx   
53 [0x35]:           call @3344 // <std.io#ybq.adom>   
54 [0x36]:           nop   
55 [0x37]:           ret   


function: std#yaf.ybf.adhc[3163] params(1) in file: ybd:199:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 200 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 16   
12 [0xc]: line: 201 pushl 0   
13 [0xd]:           ipushl #1   
14 [0xe]:           call @3182 // <std#yaf.ybf.adhv>   
15 [0xf]:           throw    
16 [0x10]:           nop   
17 [0x11]: line: 202 movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+1   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           iaload ebx, adx   
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


overload function: std#yaf.ybf.adhd[3164] params(1) in file: ybd:205:8: note:  
		    def operator[](pos: var) : var {
		       ^

0 [0x0]: line: 206 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3163 // <std#yaf.ybf.adhc>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#yaf.ybf.adhe[3165] params(1) in file: ybd:209:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 210 ipushl #0   
1 [0x1]:           movg @27 // @std#yaf.ybf   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]: line: 211 ipushl #0   
10 [0xa]:           movi #102, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           tne ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skne ebx // pc = 20   
16 [0x10]:           ipushl #0   
17 [0x11]:           movi #70, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           tne ecx, ebx   
21 [0x15]:           jne 31   
22 [0x16]:           istore 0   
24 [0x18]:           movg @27 // @std#yaf.ybf   
25 [0x19]:           movn #1   
27 [0x1b]:           loadval ebx   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           rmov adx, ebx   
31 [0x1f]:           nop   
32 [0x20]:           ret   


function: std#yaf.ybf.adhf[3166] params(1) in file: ybd:214:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 215 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 26   
14 [0xe]: line: 216 new_class @0 // xxz#xxa   
15 [0xf]:           shr adx, adx -> adx   
16 [0x10]:           dup    
17 [0x11]:           new_class @0 // xxz#xxa   
18 [0x12]:           skip @0 // pc = 18   
19 [0x13]:           dup    
20 [0x14]:           newstr @17 // invalid precision:    
21 [0x15]:           call @3540 // <std#string.string>   
22 [0x16]:           ipushl #0   
23 [0x17]:           call @3572 // <std#string.operator+>   
24 [0x18]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 217 ipushl #0   
28 [0x1c]:           movg @27 // @std#yaf.ybf   
29 [0x1d]:           movn #1   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           ret   


function: std#yaf.ybf.adhg[3167] params(0) in file: ybd:220:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 222 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           skpe ebx // pc = 17   
7 [0x7]:           movl 0   
8 [0x8]:           movn #3   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           rstore ebx   
14 [0xe]:           movi #-1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           test ecx, ebx   
18 [0x12]:           jne 23   
19 [0x13]:           pushnull    
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 223 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           istore 0   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #3   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @3354 // <std.io#ybq.adow>   
43 [0x2b]:           popobj2    
44 [0x2c]:           returnobj   
45 [0x2d]:           ret   


function: std#yaf.ybf.adhh[3168] params(1) in file: ybd:227:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 228 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 22   
3 [0x3]:           movl 1   
4 [0x4]:           pushobj   
5 [0x5]:           call @3581 // <std#string.size>   
6 [0x6]:           loadval ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #3   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           add ecx, ebx -> ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           gt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 27   
24 [0x18]: line: 229 istorel 0, fp+0   
26 [0x1a]:           ret   
27 [0x1b]:           nop   
28 [0x1c]: line: 232 istorel 0, fp+2   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           pushl 1   
32 [0x20]:           call @3581 // <std#string.size>   
33 [0x21]:           loadval ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           lt ecx, ebx   
36 [0x24]:           movr ebx, cmt   
37 [0x25]:           movr cmt, ebx   
38 [0x26]:           jne 68   
39 [0x27]: line: 234 movl 0   
40 [0x28]:           movn #0   
42 [0x2a]:           pushobj   
43 [0x2b]:           loadl ebx, fp+2   
44 [0x2c]:           popobj2    
45 [0x2d]:           movr adx, ebx   
46 [0x2e]:           chklen adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movl 1   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           loadl ebx, fp+2   
54 [0x36]:           popobj2    
55 [0x37]:           movr adx, ebx   
56 [0x38]:           chklen adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           loadval ecx   
59 [0x3b]:           tne ecx, ebx   
60 [0x3c]:           jne 64   
61 [0x3d]: line: 235 istorel 0, fp+0   
63 [0x3f]:           ret   
64 [0x40]:           nop   
65 [0x41]:           iaddl 1, fp@2   
67 [0x43]:           jmp @30   
68 [0x44]: line: 237 istorel 1, fp+0   
70 [0x46]:           ret   


function: std#yaf.ybf.adhi[3169] params(1) in file: ybd:240:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 241 pushl 1   
1 [0x1]:           call @3581 // <std#string.size>   
2 [0x2]:           loadval ebx   
3 [0x3]:           rstore ebx   
4 [0x4]:           movl 0   
5 [0x5]:           movn #3   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #1, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 23   
20 [0x14]: line: 242 istorel 0, fp+0   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 245 istorel 0, fp+2   
26 [0x1a]: line: 246 istorel 0, fp+3   
28 [0x1c]:           ipushl #3   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #3   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #1, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           add ecx, ebx -> ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 112   
45 [0x2d]: line: 247 ipushl #3   
46 [0x2e]:           pushl 1   
47 [0x2f]:           call @3581 // <std#string.size>   
48 [0x30]:           loadval ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           add ecx, ebx -> ebx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 0   
53 [0x35]:           movn #3   
55 [0x37]:           movi #0, adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           rstore ebx   
59 [0x3b]:           movi #1, ebx   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           add ecx, ebx -> ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           lt ecx, ebx   
65 [0x41]:           movr ebx, cmt   
66 [0x42]:           movr cmt, ebx   
67 [0x43]:           jne 105   
68 [0x44]: line: 248 istorel 0, fp+4   
70 [0x46]:           ipushl #4   
71 [0x47]:           pushl 1   
72 [0x48]:           call @3581 // <std#string.size>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           loadval ecx   
75 [0x4b]:           lt ecx, ebx   
76 [0x4c]:           movr ebx, cmt   
77 [0x4d]:           movr cmt, ebx   
78 [0x4e]:           jne 101   
79 [0x4f]: line: 249 pushl 1   
80 [0x50]:           ipushl #4   
81 [0x51]:           call @3563 // <std#string.operator[>   
82 [0x52]:           loadval ebx   
83 [0x53]:           rstore ebx   
84 [0x54]:           movl 0   
85 [0x55]:           movn #0   
87 [0x57]:           pushobj   
88 [0x58]:           loadl ebx, fp+4   
89 [0x59]:           popobj2    
90 [0x5a]:           movr adx, ebx   
91 [0x5b]:           chklen adx   
92 [0x5c]:           iaload ebx, adx   
93 [0x5d]:           loadval ecx   
94 [0x5e]:           tne ecx, ebx   
95 [0x5f]:           jne 97   
96 [0x60]: line: 250 jmp @101   
97 [0x61]:           nop   
98 [0x62]:           iaddl 1, fp@4   
100 [0x64]:           jmp @70   
101 [0x65]: line: 253 istorel 1, fp+0   
103 [0x67]:           ret   
104 [0x68]:           jmp @108   
105 [0x69]: line: 254 istorel 0, fp+0   
107 [0x6b]:           ret   
108 [0x6c]:           nop   
109 [0x6d]:           iaddl 1, fp@3   
111 [0x6f]:           jmp @28   
112 [0x70]: line: 257 istorel 0, fp+0   
114 [0x72]:           ret   


function: std#yaf.ybf.adhj[3170] params(1) in file: ybd:260:8: note:  
		    def find(str: string_builder) : var {
		       ^

0 [0x0]: line: 261 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gt ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 262 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 265 istorel 0, fp+2   
27 [0x1b]: line: 266 istorel 0, fp+3   
29 [0x1d]:           ipushl #3   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #3   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           lt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 115   
46 [0x2e]: line: 267 ipushl #3   
47 [0x2f]:           movl 1   
48 [0x30]:           movn #0   
50 [0x32]:           sizeof ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           add ecx, ebx -> ebx   
53 [0x35]:           rstore ebx   
54 [0x36]:           movl 0   
55 [0x37]:           movn #3   
57 [0x39]:           movi #0, adx   
59 [0x3b]:           iaload ebx, adx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           lt ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 108   
70 [0x46]: line: 268 istorel 0, fp+4   
72 [0x48]:           ipushl #4   
73 [0x49]:           movl 1   
74 [0x4a]:           movn #0   
76 [0x4c]:           sizeof ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           lt ecx, ebx   
79 [0x4f]:           movr ebx, cmt   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 104   
82 [0x52]: line: 269 pushl 1   
83 [0x53]:           ipushl #4   
84 [0x54]:           call @3164 // <std#yaf.ybf.adhd>   
85 [0x55]:           loadval ebx   
86 [0x56]:           rstore ebx   
87 [0x57]:           movl 0   
88 [0x58]:           movn #0   
90 [0x5a]:           pushobj   
91 [0x5b]:           loadl ebx, fp+4   
92 [0x5c]:           popobj2    
93 [0x5d]:           movr adx, ebx   
94 [0x5e]:           chklen adx   
95 [0x5f]:           iaload ebx, adx   
96 [0x60]:           loadval ecx   
97 [0x61]:           tne ecx, ebx   
98 [0x62]:           jne 100   
99 [0x63]: line: 270 jmp @104   
100 [0x64]:           nop   
101 [0x65]:           iaddl 1, fp@4   
103 [0x67]:           jmp @72   
104 [0x68]: line: 273 istorel 1, fp+0   
106 [0x6a]:           ret   
107 [0x6b]:           jmp @111   
108 [0x6c]: line: 274 istorel 0, fp+0   
110 [0x6e]:           ret   
111 [0x6f]:           nop   
112 [0x70]:           iaddl 1, fp@3   
114 [0x72]:           jmp @29   
115 [0x73]: line: 277 istorel 0, fp+0   
117 [0x75]:           ret   


function: std#yaf.ybf.adhk[3171] params(1) in file: ybd:280:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 281 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gte ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 282 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 284 movl 0   
26 [0x1a]:           movn #3   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           movi #1, ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           add ecx, ebx -> ebx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movl 1   
38 [0x26]:           movn #0   
40 [0x28]:           sizeof ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           smovr_2 ebx, fp+2   
44 [0x2c]:           ipushl #2   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #3   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movi #1, ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           add ecx, ebx -> ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           lt ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 90   
61 [0x3d]: line: 285 movl 0   
62 [0x3e]:           movn #0   
64 [0x40]:           pushobj   
65 [0x41]:           loadl ebx, fp+2   
66 [0x42]:           popobj2    
67 [0x43]:           movr adx, ebx   
68 [0x44]:           chklen adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           rstore ebx   
71 [0x47]:           movl 1   
72 [0x48]:           movn #0   
74 [0x4a]:           pushobj   
75 [0x4b]:           loadl ebx, fp+2   
76 [0x4c]:           popobj2    
77 [0x4d]:           movr adx, ebx   
78 [0x4e]:           chklen adx   
79 [0x4f]:           iaload ebx, adx   
80 [0x50]:           loadval ecx   
81 [0x51]:           tne ecx, ebx   
82 [0x52]:           jne 86   
83 [0x53]: line: 286 istorel 0, fp+0   
85 [0x55]:           ret   
86 [0x56]:           nop   
87 [0x57]:           iaddl 1, fp@2   
89 [0x59]:           jmp @44   
90 [0x5a]: line: 289 istorel 1, fp+0   
92 [0x5c]:           ret   


overload function: std#yaf.ybf.adhl[3172] params(1) in file: ybd:292:8: note:  
		    def operator+(num : var) : string_builder {
		       ^

0 [0x0]: line: 293 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3141 // <std#yaf.ybf.adgg>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 294 pushl 2   
11 [0xb]:           pushl 0   
12 [0xc]:           ipushl #1   
13 [0xd]:           call @3174 // <std#yaf.ybf.adhn>   
14 [0xe]:           call @3178 // <std#yaf.ybf.adhr>   
15 [0xf]:           call @3153 // <std#yaf.ybf.adgs>   
16 [0x10]:           pop   
17 [0x11]: line: 295 movl 2   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#yaf.ybf.adhm[3173] params(0) in file: ybd:298:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 299 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std#yaf.ybf.adhn[3174] params(1) in file: ybd:302:8: note:  
		    def parse( number : var ) : string_builder
		       ^

0 [0x0]: line: 304 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           movg @27 // @std#yaf.ybf   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           ipushl #1   
11 [0xb]:           movg @27 // @std#yaf.ybf   
12 [0xc]:           movn #1   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @3498 // <std#yaf.advf>   
19 [0x13]:           call @3141 // <std#yaf.ybf.adgg>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#yaf.ybf.adho[3175] params(1) in file: ybd:307:8: note:  
		    def operator+=( num: var ) : string_builder
		       ^

0 [0x0]: line: 309 pushl 0   
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #1   
3 [0x3]:           call @3174 // <std#yaf.ybf.adhn>   
4 [0x4]:           call @3178 // <std#yaf.ybf.adhr>   
5 [0x5]:           call @3153 // <std#yaf.ybf.adgs>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#yaf.ybf.adhp[3176] params(1) in file: ybd:312:15: note:  
		    public def operator+=( obj: printable ) : string_builder
		              ^

0 [0x0]: line: 314 pushl 1   
1 [0x1]:           invoke_delegate 3657 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 315 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 15   
9 [0x9]:           movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           call @3566 // <std#string.get_data>   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           not ebx, ebx   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 25   
17 [0x11]: line: 316 pushl 0   
18 [0x12]:           pushl 2   
19 [0x13]:           call @3566 // <std#string.get_data>   
20 [0x14]:           call @3153 // <std#yaf.ybf.adgs>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 318 pushl 0   
26 [0x1a]:           newstr @16 // null   
27 [0x1b]:           call @3153 // <std#yaf.ybf.adgs>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


overload function: std#yaf.ybf.adhq[3177] params(1) in file: ybd:321:8: note:  
		    def operator+=( str: string ) : string_builder
		       ^

0 [0x0]: line: 323 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           call @3153 // <std#yaf.ybf.adgs>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#yaf.ybf.adhr[3178] params(0) in file: ybd:326:8: note:  
		    def get_data() : _int8[]{
		       ^

0 [0x0]: line: 327 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std#yaf.ybf.adhs[3179] params(1) in file: ybd:330:8: note:  
		    def operator+=( str: string_builder ) : string_builder
		       ^

0 [0x0]: line: 332 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @3153 // <std#yaf.ybf.adgs>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#yaf.ybf.adht[3180] params(1) in file: ybd:335:8: note:  
		    def operator+=( str: _int8[] ) : string_builder
		       ^

0 [0x0]: line: 337 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3153 // <std#yaf.ybf.adgs>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#yaf.ybf.adhu[3181] params(2) in file: ybd:340:15: note:  
		    public def substring(startPos: var, endPos: var) : string_builder {
		              ^

0 [0x0]: line: 341 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #1, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           add ecx, ebx -> ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gte ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skpe ebx // pc = 21   
16 [0x10]:           loadl ecx, fp+1   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           lt ecx, ebx   
20 [0x14]:           movr ebx, cmt   
21 [0x15]:           movr cmt, ebx   
22 [0x16]:           jne 27   
23 [0x17]: line: 342 pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3182 // <std#yaf.ybf.adhv>   
26 [0x1a]:           throw    
27 [0x1b]:           nop   
28 [0x1c]: line: 343 ipushl #2   
29 [0x1d]:           loadl ebx, fp+1   
30 [0x1e]:           loadval ecx   
31 [0x1f]:           lt ecx, ebx   
32 [0x20]:           movr ebx, cmt   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 51   
35 [0x23]: line: 344 new_class @0 // xxz#xxa   
36 [0x24]:           shr adx, adx -> adx   
37 [0x25]:           dup    
38 [0x26]:           new_class @0 // xxz#xxa   
39 [0x27]:           skip @0 // pc = 39   
40 [0x28]:           dup    
41 [0x29]:           newstr @18 // endPos:    
42 [0x2a]:           call @3540 // <std#string.string>   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           call @3572 // <std#string.operator+>   
45 [0x2d]:           newstr @19 //  cannot be less than the startPos:    
46 [0x2e]:           call @3552 // <std#string.operator+>   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @3572 // <std#string.operator+>   
49 [0x31]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
50 [0x32]:           throw    
51 [0x33]:           nop   
52 [0x34]: line: 348 new_class @0 // xxz#xxa   
53 [0x35]:           inc adx   
54 [0x36]:           dup    
55 [0x37]:           call @3184 // <std#yaf.ybf.adhx>   
56 [0x38]:           popobj2    
57 [0x39]:           smovr_3 fp+3   
58 [0x3a]: line: 349 movl 0   
59 [0x3b]:           movn #0   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           ipushl #2   
64 [0x40]:           call @3354 // <std.io#ybq.adow>   
65 [0x41]:           movl 3   
66 [0x42]:           movn #0   
68 [0x44]:           popobj   
69 [0x45]: line: 350 movl 3   
70 [0x46]:           returnobj   
71 [0x47]:           ret   


function: std#yaf.ybf.adhv[3182] params(1) in file: ybd:353:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 354 new_class @0 // xxz#xxa   
1 [0x1]:           skne adx // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           new_class @0 // xxz#xxa   
4 [0x4]:           skip @0 // pc = 4   
5 [0x5]:           dup    
6 [0x6]:           newstr @20 // Index out of bounds exception at:    
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @3572 // <std#string.operator+>   
10 [0xa]:           newstr @21 //  with size of:    
11 [0xb]:           call @3552 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #3   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #1, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @3572 // <std#string.operator+>   
25 [0x19]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
26 [0x1a]:           popobj2    
27 [0x1b]:           returnobj   
28 [0x1c]:           ret   


function: std#yaf.ybf.adhw[3183] params(0) in file: ybd:357:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 358 istorel 0, fp+1   
2 [0x2]: line: 359 istorel 1, fp+2   
4 [0x4]: line: 360 istorel -1, fp+4   
6 [0x6]: line: 361 movl 0   
7 [0x7]: line: 362 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 363 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 364 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 366 new_class @0 // xxz#xxa   
56 [0x38]:           sub adx, adx -> adx   
57 [0x39]:           dup    
58 [0x3a]:           ipushl #1   
59 [0x3b]:           call @2117 // <std#yaf.yat.absw>   
60 [0x3c]:           popobj2    
61 [0x3d]:           returnobj   
62 [0x3e]:           ret   


constructor: std#yaf.ybf.adhx[3184] params(0) in file: ybd:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          ret   


std.io#ybq.ybs.adhy[3185] params(1) in file: ybo:4:8: note:  
		    def uncaught_exception(err: throwable);
		       ^



constructor: std.io#ybq.ybs.adiz[3186] params(0) in file: ybo:3:10: note:  
		interface uncaught_exception_handler {
		         ^

0 [0x0]:         ret   


constructor: std.io#ybq.ybv.adia[3187] params(1) in file: ybt:23:9: note:  
		    file(path: string) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 24 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3191 // <std.io#ybq.ybv.adie>   
4 [0x4]:          ret   


constructor: std.io#ybq.ybv.adib[3188] params(1) in file: ybt:27:9: note:  
		    file(path: _int8[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 28 pushl 0   
2 [0x2]:          new_class @0 // xxz#xxa   
3 [0x3]:          skip @0 // pc = 3   
4 [0x4]:          dup    
5 [0x5]:          newstr @3 //    
6 [0x6]:          call @3540 // <std#string.string>   
7 [0x7]:          pushl 1   
8 [0x8]:          call @3552 // <std#string.operator+>   
9 [0x9]:          call @3191 // <std.io#ybq.ybv.adie>   
10 [0xa]:          ret   


function: std.io#ybq.ybv.adic[3189] params(0) in file: ybt:31:8: note:  
		    def get_name() : string {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 17   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3581 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 23   
19 [0x13]: line: 33 pushnull    
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   
23 [0x17]:          nop   
24 [0x18]: line: 36 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          call @3581 // <std#string.size>   
29 [0x1d]:          loadval ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movi #1, ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          sub ecx, ebx -> ebx   
35 [0x23]:          smovr_2 ebx, fp+1   
36 [0x24]:          ipushl #1   
37 [0x25]:          movi #0, ebx   
39 [0x27]:          loadval ecx   
40 [0x28]:          gt ecx, ebx   
41 [0x29]:          movr ebx, cmt   
42 [0x2a]:          movr cmt, ebx   
43 [0x2b]:          jne 86   
44 [0x2c]: line: 37 movl 0   
45 [0x2d]:          movn #0   
47 [0x2f]:          pushobj   
48 [0x30]:          ipushl #1   
49 [0x31]:          call @3563 // <std#string.operator[>   
50 [0x32]:          loadval ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movg @30 // @std.io#ybq.ybv   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          iaload ebx, adx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          test ecx, ebx   
60 [0x3c]:          jne 80   
61 [0x3d]: line: 38 movl 0   
62 [0x3e]:          movn #0   
64 [0x40]:          pushobj   
65 [0x41]:          ipushl #1   
66 [0x42]:          movi #1, ebx   
68 [0x44]:          loadval ecx   
69 [0x45]:          add ecx, ebx -> ebx   
70 [0x46]:          rstore ebx   
71 [0x47]:          movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          call @3581 // <std#string.size>   
76 [0x4c]:          call @3595 // <std#string.substring>   
77 [0x4d]:          popobj2    
78 [0x4e]:          returnobj   
79 [0x4f]:          ret   
80 [0x50]:          nop   
81 [0x51]:          loadl ebx, fp+1   
82 [0x52]:          movr egx, ebx   
83 [0x53]:          dec ebx   
84 [0x54]:          smovr_2 ebx, fp+1   
85 [0x55]:          jmp @36   
86 [0x56]: line: 42 movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          returnobj   
90 [0x5a]:          ret   


function: std.io#ybq.ybv.adid[3190] params(0) in file: ybt:45:8: note:  
		    def to_string() := path;
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#ybq.ybv.adie[3191] params(1) in file: ybt:47:5: note:  
			def update_path(path: string) {
		    ^

0 [0x0]: line: 48 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 10   
4 [0x4]: line: 49 new_class @0 // xxz#xxa   
5 [0x5]:          or adx, adx   
6 [0x6]:          dup    
7 [0x7]:          newstr @22 // file path cannot be null   
8 [0x8]:          call @3622 // <std#nullptr_exception.nullptr_exception>   
9 [0x9]:          throw    
10 [0xa]:          nop   
11 [0xb]: line: 51 pushl 1   
12 [0xc]:          call @3548 // <std#string.empty>   
13 [0xd]:          loadval ebx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 22   
16 [0x10]: line: 52 new_class @0 // xxz#xxa   
17 [0x11]:          or adx, adx   
18 [0x12]:          dup    
19 [0x13]:          newstr @23 // file path cannot be empty   
20 [0x14]:          call @3622 // <std#nullptr_exception.nullptr_exception>   
21 [0x15]:          throw    
22 [0x16]:          nop   
23 [0x17]: line: 53 movg @30 // @std.io#ybq.ybv   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          pushl 1   
28 [0x1c]:          invoke_delegate 3247 { static=0, args=1 }   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          popobj   
34 [0x22]:          ret   


function: std.io#ybq.ybv.adif[3192] params(0) in file: ybt:56:8: note:  
		    def get_parent_file() : file {
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 17   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3581 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 23   
19 [0x13]: line: 58 pushnull    
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   
23 [0x17]:          nop   
24 [0x18]: line: 61 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          call @3581 // <std#string.size>   
29 [0x1d]:          loadval ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movi #1, ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          sub ecx, ebx -> ebx   
35 [0x23]:          smovr_2 ebx, fp+1   
36 [0x24]:          ipushl #1   
37 [0x25]:          movi #0, ebx   
39 [0x27]:          loadval ecx   
40 [0x28]:          gt ecx, ebx   
41 [0x29]:          movr ebx, cmt   
42 [0x2a]:          movr cmt, ebx   
43 [0x2b]:          jne 87   
44 [0x2c]: line: 62 movl 0   
45 [0x2d]:          movn #0   
47 [0x2f]:          pushobj   
48 [0x30]:          ipushl #1   
49 [0x31]:          call @3563 // <std#string.operator[>   
50 [0x32]:          loadval ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movg @30 // @std.io#ybq.ybv   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          iaload ebx, adx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          test ecx, ebx   
60 [0x3c]:          jne 81   
61 [0x3d]: line: 63 new_class @0 // xxz#xxa   
62 [0x3e]:          brh   
63 [0x3f]:          dup    
64 [0x40]:          movl 0   
65 [0x41]:          movn #0   
67 [0x43]:          pushobj   
68 [0x44]:          istore 0   
70 [0x46]:          ipushl #1   
71 [0x47]:          movi #1, ebx   
73 [0x49]:          loadval ecx   
74 [0x4a]:          add ecx, ebx -> ebx   
75 [0x4b]:          rstore ebx   
76 [0x4c]:          call @3595 // <std#string.substring>   
77 [0x4d]:          call @3187 // <std.io#ybq.ybv.adia>   
78 [0x4e]:          popobj2    
79 [0x4f]:          returnobj   
80 [0x50]:          ret   
81 [0x51]:          nop   
82 [0x52]:          loadl ebx, fp+1   
83 [0x53]:          movr egx, ebx   
84 [0x54]:          dec ebx   
85 [0x55]:          smovr_2 ebx, fp+1   
86 [0x56]:          jmp @36   
87 [0x57]: line: 67 pushnull    
88 [0x58]:          popobj2    
89 [0x59]:          returnobj   
90 [0x5a]:          ret   


function: std.io#ybq.ybv.adig[3193] params(0) in file: ybt:70:8: note:  
		    def get_path() : string {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#ybq.ybv.adih[3194] params(0) in file: ybt:87:8: note:  
		    def get_absolute_path() : string {
		       ^

0 [0x0]: line: 88 movg @30 // @std.io#ybq.ybv   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @3248 // <std.io#ybq.ydj.adkl>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std.io#ybq.ybv.adii[3195] params(0) in file: ybt:96:8: note:  
		    def is_readable() : var {
		       ^

0 [0x0]: line: 97 movg @30 // @std.io#ybq.ybv   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          istore 4   
7 [0x7]:          invoke_delegate 3250 { static=0, args=2 }   
9 [0x9]:          loadval ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


function: std.io#ybq.ybv.adij[3196] params(0) in file: ybt:105:8: note:  
		    def is_writeable() : var {
		       ^

0 [0x0]: line: 106 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           invoke_delegate 3250 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#ybq.ybv.adik[3197] params(0) in file: ybt:114:8: note:  
		    def exists() : var {
		       ^

0 [0x0]: line: 115 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 0   
6 [0x6]:           rstore ebx   
7 [0x7]:           invoke_delegate 3250 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#ybq.ybv.adil[3198] params(0) in file: ybt:123:8: note:  
		    def is_directory() : var {
		       ^

0 [0x0]: line: 124 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 3249 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #4, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#ybq.ybv.adim[3199] params(0) in file: ybt:133:8: note:  
		    def is_file() : var {
		       ^

0 [0x0]: line: 134 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 3249 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #2, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#ybq.ybv.adin[3200] params(0) in file: ybt:145:8: note:  
		    def is_hidden() : var {
		       ^

0 [0x0]: line: 146 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 3249 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #128, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#ybq.ybv.adio[3201] params(0) in file: ybt:154:8: note:  
		    def last_modified() : var {
		       ^

0 [0x0]: line: 155 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 0   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @3252 // <std.io#ybq.ydj.adkp>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#ybq.ybv.adip[3202] params(0) in file: ybt:158:8: note:  
		    def last_status_changed() : var {
		       ^

0 [0x0]: line: 159 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @3252 // <std.io#ybq.ydj.adkp>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#ybq.ybv.adiq[3203] params(0) in file: ybt:162:8: note:  
		    def last_accessed() : var {
		       ^

0 [0x0]: line: 163 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           call @3252 // <std.io#ybq.ydj.adkp>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#ybq.ybv.adir[3204] params(0) in file: ybt:171:8: note:  
		    def length() : var {
		       ^

0 [0x0]: line: 172 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3253 // <std.io#ybq.ydj.adkq>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#ybq.ybv.adis[3205] params(0) in file: ybt:186:8: note:  
		    def create() {
		       ^

0 [0x0]: line: 187 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @3254 // <std.io#ybq.ydj.adkr>   
9 [0x9]:           ret   


function: std.io#ybq.ybv.adit[3206] params(0) in file: ybt:196:8: note:  
		    def delete() : var {
		       ^

0 [0x0]: line: 197 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3256 // <std.io#ybq.ydj.adkt>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#ybq.ybv.adiu[3207] params(0) in file: ybt:212:8: note:  
		    def list() : list<string> {
		       ^

0 [0x0]: line: 213 new_class @0 // xxz#xxa   
1 [0x1]:           return_val adx   
2 [0x2]:           dup    
3 [0x3]:           movg @30 // @std.io#ybq.ybv   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           pushl 0   
8 [0x8]:           call @3257 // <std.io#ybq.ydj.adku>   
9 [0x9]:           call @3663 // <std.io#ybq.yah.aebv>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


function: std.io#ybq.ybv.adiv[3208] params(0) in file: ybt:220:8: note:  
		    def mkdir() : var {
		       ^

0 [0x0]: line: 221 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3258 // <std.io#ybq.ydj.adkv>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#ybq.ybv.adiw[3209] params(1) in file: ybt:239:8: note:  
		    def rename(dest: file) : var {
		       ^

0 [0x0]: line: 240 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]: line: 241 new_class @0 // xxz#xxa   
5 [0x5]:           or adx, adx   
6 [0x6]:           dup    
7 [0x7]:           call @3624 // <std#nullptr_exception.nullptr_exception>   
8 [0x8]:           throw    
9 [0x9]:           nop   
10 [0xa]: line: 244 movg @30 // @std.io#ybq.ybv   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           pushl 0   
15 [0xf]:           pushl 1   
16 [0x10]:           call @3259 // <std.io#ybq.ydj.adkw>   
17 [0x11]:           ipopl 2   
18 [0x12]: line: 245 ipushl #2   
19 [0x13]:           movi #0, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           test ecx, ebx   
23 [0x17]:           jne 32   
24 [0x18]: line: 247 movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]:           nop   
33 [0x21]: line: 251 loadl ebx, fp+2   
34 [0x22]:           return_val ebx   
35 [0x23]:           ret   


function: std.io#ybq.ybv.adix[3210] params(1) in file: ybt:266:8: note:  
		    def set_last_modified(time: var) : var {
		       ^

0 [0x0]: line: 267 loadl ebx, fp+1   
1 [0x1]:           mov32 ebx, ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           movi #0, ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           lt ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 16   
10 [0xa]:           new_class @0 // xxz#xxa   
11 [0xb]:           shr adx, adx -> adx   
12 [0xc]:           dup    
13 [0xd]:           newstr @24 // Negative time   
14 [0xe]:           call @3607 // <std#illegal_argument_exception.illegal_argument_exception>   
15 [0xf]:           throw    
16 [0x10]:           nop   
17 [0x11]: line: 268 movg @30 // @std.io#ybq.ybv   
18 [0x12]:           movn #0   
20 [0x14]:           pushobj   
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3262 // <std.io#ybq.ydj.adlz>   
24 [0x18]:           loadval ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


function: std.io#ybq.ybv.adiy[3211] params(0) in file: ybt:279:8: note:  
		    def set_read_only() : var {
		       ^

0 [0x0]: line: 280 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3263 // <std.io#ybq.ydj.adla>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#ybq.ybv.adjz[3212] params(2) in file: ybt:288:8: note:  
		    def set_writable(writable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 289 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @3251 // <std.io#ybq.ydj.adko>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#ybq.ybv.adja[3213] params(1) in file: ybt:297:8: note:  
		    def set_writable(writable: var) : var {
		       ^

0 [0x0]: line: 298 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @3212 // <std.io#ybq.ybv.adjz>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#ybq.ybv.adjb[3214] params(2) in file: ybt:306:8: note:  
		    def set_readable(readable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 307 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 4   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @3251 // <std.io#ybq.ydj.adko>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#ybq.ybv.adjc[3215] params(1) in file: ybt:315:8: note:  
		    def set_readable(readable: var) : var {
		       ^

0 [0x0]: line: 316 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @3214 // <std.io#ybq.ybv.adjb>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#ybq.ybv.adjd[3216] params(2) in file: ybt:324:8: note:  
		    def set_executable(executable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 325 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @3251 // <std.io#ybq.ydj.adko>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#ybq.ybv.adje[3217] params(1) in file: ybt:333:8: note:  
		    def set_executable(executable: var) : var {
		       ^

0 [0x0]: line: 334 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @3216 // <std.io#ybq.ybv.adjd>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#ybq.ybv.adjf[3218] params(0) in file: ybt:342:8: note:  
		    def is_executable() : var {
		       ^

0 [0x0]: line: 343 movg @30 // @std.io#ybq.ybv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           invoke_delegate 3250 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#ybq.ybv.adjg[3219] params(0) in file: ybt:354:8: note:  
		    def get_total_space() : var {
		       ^

0 [0x0]: line: 355 ldc ebx // 0   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @3264 // <std.io#ybq.ydj.adlb>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#ybq.ybv.adjh[3220] params(0) in file: ybt:363:8: note:  
		    def get_free_space() : var {
		       ^

0 [0x0]: line: 364 ldc ebx // 1   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @3264 // <std.io#ybq.ydj.adlb>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#ybq.ybv.adji[3221] params(0) in file: ybt:386:8: note:  
		    def get_usable_space() : var {
		       ^

0 [0x0]: line: 387 istore 2   
2 [0x2]:           call @3264 // <std.io#ybq.ydj.adlb>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#ybq.ybv.adjj[3222] params(3) in file: ybt:393:22: note:  
		    private static def generate_temp_file(prefix: string, suffix: string, dir: file) : file
		                     ^

0 [0x0]: line: 405 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#ybq.ybv.adjk[3223] params(3) in file: ybt:414:15: note:  
		    static def create_temp_file(prefix: string, suffix: string,
		              ^

0 [0x0]: line: 437 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#ybq.ybv.adjl[3224] params(2) in file: ybt:448:15: note:  
		    static def create_temp_file(prefix: string, suffix: string) : file
		              ^

0 [0x0]: line: 451 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           pushnull    
3 [0x3]:           call @3223 // <std.io#ybq.ybv.adjk>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std.io#ybq.ybv.adjm[3225] params(0) in file: ybt:454:8: note:  
		    def read_all_text() := fs.read(self);
		       ^

0 [0x0]: line: 454 pushl 0   
1 [0x1]:           call @3260 // <std.io#ybq.ydj.adkx>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#ybq.ybv.adjn[3226] params(1) in file: ybt:456:8: note:  
		    def write(data: string) := fs.write(self, data);
		       ^

0 [0x0]: line: 456 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3261 // <std.io#ybq.ydj.adky>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#ybq.ybv.adjo[3227] params(0) in file: ybt:458:23: note:  
		    private static def get_file_system() : file_system {
		                      ^

0 [0x0]: line: 459 call @3462 // <ykk#ykl.ykr.adtv>   
1 [0x1]:           loadval ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 12   
4 [0x4]: line: 460 new_class @0 // xxz#xxa   
5 [0x5]:           ife   
6 [0x6]:           dup    
7 [0x7]:           call @3233 // <std.io#ybq.ycb.adju>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   
11 [0xb]:           jmp @19   
12 [0xc]: line: 462 new_class @0 // xxz#xxa   
13 [0xd]:           loadpc adx   
14 [0xe]:           dup    
15 [0xf]:           call @3376 // <std.io#ybq.yhp.adps>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   
19 [0x13]:           nop   


constructor: std.io#ybq.ybv.adjp[3228] params(0) in file: ybt:17:13: note:  
		public class file {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std.io#ybq.ycb.adjq[3229] params(0) in file: ycz:15:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#ybq.ycb.adjr[3230] params(1) in file: ycz:23:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 24 pushl 1   
1 [0x1]:          call @3581 // <std#string.size>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 25 istorel 0, fp+3   
5 [0x5]: line: 26 istorel 0, fp+4   
7 [0x7]:          ipushl #4   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 258   
14 [0xe]: line: 28 pushl 1   
15 [0xf]:          ipushl #4   
16 [0x10]:          call @3563 // <std#string.operator[>   
17 [0x11]:          loadval ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #47, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          test ecx, ebx   
23 [0x17]:          jne 112   
24 [0x18]: line: 29 ipushl #3   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          gt ecx, ebx   
29 [0x1d]:          movr ebx, cmt   
30 [0x1e]:          skne ebx // pc = 48   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #3   
36 [0x24]:          movi #1, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          sub ecx, ebx -> ebx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          iaload ebx, adx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #92, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          tne ecx, ebx   
49 [0x31]:          jne 66   
50 [0x32]: line: 30 istore 92   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          loadl ebx, fp+3   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          smovr_2 ebx, fp+3   
60 [0x3c]:          movr ebx, egx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          loadval ebx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          nop   
67 [0x43]: line: 32 ipushl #4   
68 [0x44]:          movi #1, ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          add ecx, ebx -> ebx   
72 [0x48]:          rstore ebx   
73 [0x49]:          loadl ebx, fp+2   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          lt ecx, ebx   
76 [0x4c]:          movr ebx, cmt   
77 [0x4d]:          skne ebx // pc = 92   
78 [0x4e]:          movl 1   
79 [0x4f]:          pushobj   
80 [0x50]:          ipushl #4   
81 [0x51]:          movi #1, ebx   
83 [0x53]:          loadval ecx   
84 [0x54]:          add ecx, ebx -> ebx   
85 [0x55]:          rstore ebx   
86 [0x56]:          call @3563 // <std#string.operator[>   
87 [0x57]:          loadval ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          movi #47, ebx   
91 [0x5b]:          loadval ecx   
92 [0x5c]:          test ecx, ebx   
93 [0x5d]:          jne 110   
94 [0x5e]: line: 33 iaddl 1, fp@4   
96 [0x60]: line: 34 pushl 1   
97 [0x61]:          ipushl #4   
98 [0x62]:          call @3563 // <std#string.operator[>   
99 [0x63]:          loadval ebx   
100 [0x64]:          rstore ebx   
101 [0x65]:          movi #47, ebx   
103 [0x67]:          loadval ecx   
104 [0x68]:          test ecx, ebx   
105 [0x69]:          je 94   
106 [0x6a]: line: 36 loadl ebx, fp+4   
107 [0x6b]:          movr egx, ebx   
108 [0x6c]:          dec ebx   
109 [0x6d]:          smovr_2 ebx, fp+4   
110 [0x6e]:          nop   
111 [0x6f]:          jmp @254   
112 [0x70]:          pushl 1   
113 [0x71]:          ipushl #4   
114 [0x72]:          call @3563 // <std#string.operator[>   
115 [0x73]:          loadval ebx   
116 [0x74]:          rstore ebx   
117 [0x75]:          movi #92, ebx   
119 [0x77]:          loadval ecx   
120 [0x78]:          test ecx, ebx   
121 [0x79]:          jne 237   
122 [0x7a]: line: 40 ipushl #4   
123 [0x7b]:          movi #1, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          add ecx, ebx -> ebx   
127 [0x7f]:          rstore ebx   
128 [0x80]:          loadl ebx, fp+2   
129 [0x81]:          loadval ecx   
130 [0x82]:          lt ecx, ebx   
131 [0x83]:          movr ebx, cmt   
132 [0x84]:          skne ebx // pc = 147   
133 [0x85]:          movl 1   
134 [0x86]:          pushobj   
135 [0x87]:          ipushl #4   
136 [0x88]:          movi #1, ebx   
138 [0x8a]:          loadval ecx   
139 [0x8b]:          add ecx, ebx -> ebx   
140 [0x8c]:          rstore ebx   
141 [0x8d]:          call @3563 // <std#string.operator[>   
142 [0x8e]:          loadval ebx   
143 [0x8f]:          rstore ebx   
144 [0x90]:          movi #92, ebx   
146 [0x92]:          loadval ecx   
147 [0x93]:          test ecx, ebx   
148 [0x94]:          jne 192   
149 [0x95]: line: 41 iaddl 1, fp@4   
151 [0x97]: line: 42 pushl 1   
152 [0x98]:          ipushl #4   
153 [0x99]:          call @3563 // <std#string.operator[>   
154 [0x9a]:          loadval ebx   
155 [0x9b]:          rstore ebx   
156 [0x9c]:          movi #92, ebx   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          test ecx, ebx   
160 [0xa0]:          je 149   
161 [0xa1]: line: 45 ipushl #3   
162 [0xa2]:          movi #0, ebx   
164 [0xa4]:          loadval ecx   
165 [0xa5]:          gt ecx, ebx   
166 [0xa6]:          movr ebx, cmt   
167 [0xa7]:          skne ebx // pc = 185   
168 [0xa8]:          movl 0   
169 [0xa9]:          movn #1   
171 [0xab]:          pushobj   
172 [0xac]:          ipushl #3   
173 [0xad]:          movi #1, ebx   
175 [0xaf]:          loadval ecx   
176 [0xb0]:          sub ecx, ebx -> ebx   
177 [0xb1]:          popobj2    
178 [0xb2]:          movr adx, ebx   
179 [0xb3]:          chklen adx   
180 [0xb4]:          iaload ebx, adx   
181 [0xb5]:          rstore ebx   
182 [0xb6]:          movi #92, ebx   
184 [0xb8]:          loadval ecx   
185 [0xb9]:          tne ecx, ebx   
186 [0xba]:          jne 191   
187 [0xbb]: line: 46 loadl ebx, fp+4   
188 [0xbc]:          movr egx, ebx   
189 [0xbd]:          dec ebx   
190 [0xbe]:          smovr_2 ebx, fp+4   
191 [0xbf]:          nop   
192 [0xc0]:          nop   
193 [0xc1]: line: 49 ipushl #3   
194 [0xc2]:          movi #0, ebx   
196 [0xc4]:          loadval ecx   
197 [0xc5]:          gt ecx, ebx   
198 [0xc6]:          movr ebx, cmt   
199 [0xc7]:          skne ebx // pc = 217   
200 [0xc8]:          movl 0   
201 [0xc9]:          movn #1   
203 [0xcb]:          pushobj   
204 [0xcc]:          ipushl #3   
205 [0xcd]:          movi #1, ebx   
207 [0xcf]:          loadval ecx   
208 [0xd0]:          sub ecx, ebx -> ebx   
209 [0xd1]:          popobj2    
210 [0xd2]:          movr adx, ebx   
211 [0xd3]:          chklen adx   
212 [0xd4]:          iaload ebx, adx   
213 [0xd5]:          rstore ebx   
214 [0xd6]:          movi #92, ebx   
216 [0xd8]:          loadval ecx   
217 [0xd9]:          tne ecx, ebx   
218 [0xda]:          jne 235   
219 [0xdb]: line: 50 istore 92   
221 [0xdd]:          movl 0   
222 [0xde]:          movn #1   
224 [0xe0]:          pushobj   
225 [0xe1]:          loadl ebx, fp+3   
226 [0xe2]:          movr egx, ebx   
227 [0xe3]:          inc ebx   
228 [0xe4]:          smovr_2 ebx, fp+3   
229 [0xe5]:          movr ebx, egx   
230 [0xe6]:          popobj2    
231 [0xe7]:          movr adx, ebx   
232 [0xe8]:          chklen adx   
233 [0xe9]:          loadval ebx   
234 [0xea]:          rmov adx, ebx   
235 [0xeb]:          nop   
236 [0xec]:          jmp @254   
237 [0xed]: line: 53 pushl 1   
238 [0xee]:          ipushl #4   
239 [0xef]:          call @3563 // <std#string.operator[>   
240 [0xf0]:          movl 0   
241 [0xf1]:          movn #1   
243 [0xf3]:          pushobj   
244 [0xf4]:          loadl ebx, fp+3   
245 [0xf5]:          movr egx, ebx   
246 [0xf6]:          inc ebx   
247 [0xf7]:          smovr_2 ebx, fp+3   
248 [0xf8]:          movr ebx, egx   
249 [0xf9]:          popobj2    
250 [0xfa]:          movr adx, ebx   
251 [0xfb]:          chklen adx   
252 [0xfc]:          loadval ebx   
253 [0xfd]:          rmov adx, ebx   
254 [0xfe]:          nop   
255 [0xff]:          iaddl 1, fp@4   
257 [0x101]:          jmp @7   
258 [0x102]: line: 56 new_class @0 // xxz#xxa   
259 [0x103]:          skip @0 // pc = 259   
260 [0x104]:          dup    
261 [0x105]:          movl 0   
262 [0x106]:          movn #1   
264 [0x108]:          pushobj   
265 [0x109]:          istore 0   
267 [0x10b]:          ipushl #3   
268 [0x10c]:          call @3545 // <std#string.string>   
269 [0x10d]:          popobj2    
270 [0x10e]:          returnobj   
271 [0x10f]:          ret   


function: std.io#ybq.ycb.adjs[3231] params(1) in file: ycz:64:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 65 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3566 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 66 istorel 0, fp+3   
9 [0x9]: line: 72 pushl 2   : protected asm start
10 [0xa]:          int 0x25   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 78 loadl ebx, fp+3   : protected asm end
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std.io#ybq.ycb.adjt[3232] params(2) in file: ycz:88:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 89 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3566 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 90 istorel 0, fp+4   
9 [0x9]: line: 93 ipushl #2   
10 [0xa]:          ldc ebx // 1   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 17   
14 [0xe]: line: 94 istorel -1, fp+0   
16 [0x10]:          ret   
17 [0x11]:          nop   
18 [0x12]: line: 100 pushl 3   : protected asm start
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           int 0x24   
21 [0x15]:           smovr_2 ebx, fp+4   
22 [0x16]: line: 107 loadl ebx, fp+4   : protected asm end
23 [0x17]:           return_val ebx   
24 [0x18]:           ret   


constructor: std.io#ybq.ycb.adju[3233] params(0) in file: ycz:11:16: note:  
		protected class win_fs base file_system {
		               ^

0 [0x0]:         movi #92, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx: 0   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


constructor: std.io#ybq.ycg.adjv[3234] params(1) in file: yce:5:21: note:  
			public thread_group(name : string) {
		                    ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         smovr_2 adx, fp+0   
2 [0x2]:         dup    
3 [0x3]:         call @3690 // <std.io#ybq.yao.aedt>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // xxz#xxa   
9 [0x9]:         rmov adx, adx   
10 [0xa]:         dup    
11 [0xb]:         call @1935 // <xxz#xxa.yah.ablh>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]: line: 6 pushl 1   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #2   
29 [0x1d]:         popobj   
30 [0x1e]: line: 7 movg @43 // @std.io#ybq.yhd   
31 [0x1f]:         movn #1   
33 [0x21]:         pushobj   
34 [0x22]:         movl 0   
35 [0x23]:         movn #3   
37 [0x25]:         popobj   
38 [0x26]:         ret   


constructor: std.io#ybq.ycg.adjw[3235] params(2) in file: yce:10:21: note:  
			public thread_group(name : string, priority : thread_priority) {
		                    ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         smovr_2 adx, fp+0   
2 [0x2]:         dup    
3 [0x3]:         call @3690 // <std.io#ybq.yao.aedt>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // xxz#xxa   
9 [0x9]:         rmov adx, adx   
10 [0xa]:         dup    
11 [0xb]:         call @1935 // <xxz#xxa.yah.ablh>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]: line: 11 pushl 1   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #2   
29 [0x1d]:          popobj   
30 [0x1e]: line: 12 pushl 2   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #3   
34 [0x22]:          popobj   
35 [0x23]:          ret   


function: std.io#ybq.ycg.adjx[3236] params(1) in file: yce:15:5: note:  
			def at(id : var) := handles.at(id);
		    ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          new_class @0 // xxz#xxa   
5 [0x5]:          div adx, adx -> adx   
6 [0x6]:          dup    
7 [0x7]:          ipushl #1   
8 [0x8]:          call @2321 // <std#yaf.yav.acas>   
9 [0x9]:          call @3694 // <std.io#ybq.yao.aedx>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io#ybq.ycg.adjy[3237] params(1) in file: yce:17:5: note:  
			def add(t : thread) {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 19 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @0 // xxz#xxa   
7 [0x7]:          div adx, adx -> adx   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          call @3404 // <std.io#thread.get_id>   
11 [0xb]:          call @2321 // <std#yaf.yav.acas>   
12 [0xc]:          pushl 1   
13 [0xd]:          call @3695 // <std.io#ybq.yao.aedy>   
14 [0xe]:          loadval ebx   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 24   
17 [0x11]: line: 20 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          pushl 1   
22 [0x16]:          call @3404 // <std.io#thread.get_id>   
23 [0x17]:          call @1949 // <xxz#xxa.yah.ablv>   
24 [0x18]:          nop   
25 [0x19]: line: 22 movl 0   
26 [0x1a]:          movn #4   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movr egx, ebx   
32 [0x20]:          dec ebx   
33 [0x21]:          movi #0, adx   
35 [0x23]:          rmov adx, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          _ulck   
38 [0x26]:          ret   


function: std.io#ybq.ycg.adkz[3238] params(0) in file: yce:26:5: note:  
			def size() := n_threads;
		    ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #4   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#ybq.ycg.adka[3239] params(0) in file: yce:27:5: note:  
			def get_name() := name;
		    ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#ybq.ycg.adkb[3240] params(0) in file: yce:28:5: note:  
			def get_priority() := default_priority;
		    ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#ybq.ycg.adkc[3241] params(1) in file: yce:29:5: note:  
			def remove(id : var) : var {
		    ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 31 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @0 // xxz#xxa   
7 [0x7]:          div adx, adx -> adx   
8 [0x8]:          dup    
9 [0x9]:          ipushl #1   
10 [0xa]:          call @2321 // <std#yaf.yav.acas>   
11 [0xb]:          call @3696 // <std.io#ybq.yao.aeez>   
12 [0xc]:          loadval ebx   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 37   
15 [0xf]: line: 32 movl 0   
16 [0x10]:          movn #4   
18 [0x12]:          movi #0, adx   
20 [0x14]:          iaload ebx, adx   
21 [0x15]:          movr egx, ebx   
22 [0x16]:          dec ebx   
23 [0x17]:          movi #0, adx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 33 movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          pushobj   
30 [0x1e]:          ipushl #1   
31 [0x1f]:          call @1955 // <xxz#xxa.yah.abme>   
32 [0x20]: line: 34 istorel 1, fp+0   
34 [0x22]:          movl 0   
35 [0x23]:          _ulck   
36 [0x24]:          ret   
37 [0x25]:          nop   
38 [0x26]: line: 37 istorel 0, fp+0   
40 [0x28]:          movl 0   
41 [0x29]:          _ulck   
42 [0x2a]:          ret   
43 [0x2b]:          movl 0   
44 [0x2c]:          _ulck   


function: std.io#ybq.ycg.adkd[3242] params(0) in file: yce:41:8: note:  
		    def get_elements() : thread[] {
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          call @1952 // <xxz#xxa.yah.ably>   
5 [0x5]:          loadval ebx   
6 [0x6]:          new_classarray ebx  // std.io#thread[]   
8 [0x8]:          popobj2    
9 [0x9]:          smovr_3 fp+1   
10 [0xa]: line: 43 istorel 0, fp+2   
12 [0xc]: line: 45 istorel -1, fp+4   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          pushobj   
18 [0x12]:          invoke_delegate 1933 { static=0, args=0 }   
20 [0x14]:          popl 5   
21 [0x15]:          iaddl 1, fp@4   
23 [0x17]:          movl 5   
24 [0x18]:          sizeof ecx   
25 [0x19]:          loadl ebx, fp+4   
26 [0x1a]:          lt ebx, ecx   
27 [0x1b]:          jne 52   
28 [0x1c]:          iaload ecx, ebx   
29 [0x1d]:          smovr_2 ecx, fp+3   
30 [0x1e]: line: 46 movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          pushobj   
34 [0x22]:          new_class @0 // xxz#xxa   
35 [0x23]:          div adx, adx -> adx   
36 [0x24]:          dup    
37 [0x25]:          ipushl #3   
38 [0x26]:          call @2321 // <std#yaf.yav.acas>   
39 [0x27]:          call @3694 // <std.io#ybq.yao.aedx>   
40 [0x28]:          pushl 1   
41 [0x29]:          loadl ebx, fp+2   
42 [0x2a]:          movr egx, ebx   
43 [0x2b]:          inc ebx   
44 [0x2c]:          smovr_2 ebx, fp+2   
45 [0x2d]:          movr ebx, egx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          popobj   
51 [0x33]:          jmp @21   
52 [0x34]: line: 49 movl 1   
53 [0x35]:          returnobj   
54 [0x36]:          ret   


function: std.io#ybq.ycg.adkg[3243] params(1) in file: yce:52:8: note:  
		    def find(find_func: (thread)(var)) : thread {
		       ^

0 [0x0]: line: 53 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          pushobj   
7 [0x7]:          call @1952 // <xxz#xxa.yah.ably>   
8 [0x8]:          loadval ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 49   
14 [0xe]: line: 54 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          new_class @0 // xxz#xxa   
19 [0x13]:          div adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          ipushl #2   
26 [0x1a]:          call @1942 // <xxz#xxa.yah.ablo>   
27 [0x1b]:          call @2321 // <std#yaf.yav.acas>   
28 [0x1c]:          call @3694 // <std.io#ybq.yao.aedx>   
29 [0x1d]:          popobj2    
30 [0x1e]:          smovr_3 fp+3   
31 [0x1f]: line: 55 movl 3   
32 [0x20]:          checknull   
33 [0x21]:          not ebx, ebx   
34 [0x22]:          skne ebx // pc = 40   
35 [0x23]:          ipushl #1   
36 [0x24]:          pushl 3   
37 [0x25]:          smov ebx, sp+[-1]   
38 [0x26]:          calld ebx   
39 [0x27]:          loadval ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 45   
42 [0x2a]: line: 56 movl 3   
43 [0x2b]:          returnobj   
44 [0x2c]:          ret   
45 [0x2d]:          nop   
46 [0x2e]:          iaddl 1, fp@2   
48 [0x30]:          jmp @2   
49 [0x31]: line: 60 pushnull    
50 [0x32]:          popobj2    
51 [0x33]:          returnobj   
52 [0x34]:          ret   


function: std.io#ybq.ycg.adkh[3244] params(0) in file: yce:63:5: note:  
			def kill_all() {
		    ^

0 [0x0]: line: 64 istorel -1, fp+2   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          invoke_delegate 1933 { static=0, args=0 }   
8 [0x8]:          popl 3   
9 [0x9]:          iaddl 1, fp@2   
11 [0xb]:          movl 3   
12 [0xc]:          sizeof ecx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          lt ebx, ecx   
15 [0xf]:          jne 31   
16 [0x10]:          iaload ecx, ebx   
17 [0x11]:          smovr_2 ecx, fp+1   
18 [0x12]: line: 65 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          new_class @0 // xxz#xxa   
23 [0x17]:          div adx, adx -> adx   
24 [0x18]:          dup    
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @2321 // <std#yaf.yav.acas>   
27 [0x1b]:          call @3694 // <std.io#ybq.yao.aedx>   
28 [0x1c]:          call @3394 // <std.io#thread.interrupt>   
29 [0x1d]:          pop   
30 [0x1e]:          jmp @9   
31 [0x1f]:          ret   


constructor: std.io#ybq.ycg.adki[3245] params(0) in file: yce:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         smovr_2 adx, fp+0   
2 [0x2]:         dup    
3 [0x3]:         call @3690 // <std.io#ybq.yao.aedt>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // xxz#xxa   
9 [0x9]:         rmov adx, adx   
10 [0xa]:         dup    
11 [0xb]:         call @1935 // <xxz#xxa.yah.ablh>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         ret   


std.io#ybq.ydj.adkj[3246] params(0) in file: ydh:18:8: note:  
		    def path_separator() : var;
		       ^



std.io#ybq.ydj.adkk[3247] params(1) in file: ydh:24:8: note:  
		    def normalize(path: string) : string;
		       ^



function: std.io#ybq.ydj.adkl[3248] params(1) in file: ydh:30:9: note:  
		     def resolve(f: file) : string {
		        ^

0 [0x0]: line: 32 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3566 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 38 pushl 2   : protected asm start
8 [0x8]:          int 0x20   
9 [0x9]:          popl 2   : protected asm end
10 [0xa]: line: 44 movl 2   
11 [0xb]:          checknull   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 29   
14 [0xe]: line: 45 new_class @0 // xxz#xxa   
15 [0xf]:          and adx, adx   
16 [0x10]:          dup    
17 [0x11]:          new_class @0 // xxz#xxa   
18 [0x12]:          skip @0 // pc = 18   
19 [0x13]:          dup    
20 [0x14]:          newstr @25 // file could not be resolved:    
21 [0x15]:          call @3540 // <std#string.string>   
22 [0x16]:          movl 1   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3555 // <std#string.operator+>   
27 [0x1b]:          call @3617 // <std#yaf.ymi.aezu>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 48 new_class @0 // xxz#xxa   
31 [0x1f]:          skip @0 // pc = 31   
32 [0x20]:          dup    
33 [0x21]:          newstr @3 //    
34 [0x22]:          call @3540 // <std#string.string>   
35 [0x23]:          pushl 2   
36 [0x24]:          call @3552 // <std#string.operator+>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   


std.io#ybq.ydj.adkm[3249] params(1) in file: ydh:67:9: note:  
		     def get_attributes(f: file) : var;
		        ^



std.io#ybq.ydj.adkn[3250] params(2) in file: ydh:81:9: note:  
		     def check_access(f: file, access: var) : var;
		        ^



function: std.io#ybq.ydj.adko[3251] params(4) in file: ydh:88:9: note:  
		     def set_permission(f: file, access: var, enable: var, owneronly: var) : var {
		        ^

0 [0x0]: line: 90 pushl 1   
1 [0x1]:          call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:          call @3566 // <std#string.get_data>   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+5   
5 [0x5]: line: 91 istorel 0, fp+6   
7 [0x7]: line: 93 call @3462 // <ykk#ykl.ykr.adtv>   
8 [0x8]:          loadval ebx   
9 [0x9]:          skne ebx // pc = 13   
10 [0xa]:          ipushl #2   
11 [0xb]:          ldc ebx // 1   
12 [0xc]:          loadval ecx   
13 [0xd]:          test ecx, ebx   
14 [0xe]:          jne 18   
15 [0xf]: line: 94 istorel -1, fp+0   
17 [0x11]:          ret   
18 [0x12]:          nop   
19 [0x13]: line: 100 pushl 5   : protected asm start
20 [0x14]:           loadl ebx, fp+2   
21 [0x15]:           loadl egx, fp+3   
22 [0x16]:           loadl ecx, fp+4   
23 [0x17]:           int 0x2e   
24 [0x18]:           smovr_2 ebx, fp+6   
25 [0x19]: line: 109 loadl ebx, fp+6   : protected asm end
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


function: std.io#ybq.ydj.adkp[3252] params(2) in file: ydh:121:9: note:  
		     def last_modified_time(f: file, stat_id: var) : var {
		        ^

0 [0x0]: line: 123 pushl 1   
1 [0x1]:           call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 124 istorel 0, fp+4   
7 [0x7]: line: 130 pushl 3   : protected asm start
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           int 0x26   
10 [0xa]:           smovr_2 ebx, fp+4   
11 [0xb]: line: 137 loadl ebx, fp+4   : protected asm end
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std.io#ybq.ydj.adkq[3253] params(1) in file: ydh:145:9: note:  
		     def get_length(f: file) : var {
		        ^

0 [0x0]: line: 147 pushl 1   
1 [0x1]:           call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 148 istorel 0, fp+3   
7 [0x7]: line: 154 pushl 2   : protected asm start
8 [0x8]:           int 0x27   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 160 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#ybq.ydj.adkr[3254] params(1) in file: ydh:170:8: note:  
		    def create_file(pathname: string) {
		       ^

0 [0x0]: line: 172 pushl 1   
1 [0x1]:           call @3566 // <std#string.get_data>   
2 [0x2]:           popobj2    
3 [0x3]:           smovr_3 fp+2   
4 [0x4]: line: 178 pushl 2   : protected asm start
5 [0x5]:           int 0x28   
6 [0x6]:           ret   : protected asm end


function: std.io#ybq.ydj.adks[3255] params(1) in file: ydh:188:16: note:  
		    private def delete_directory(f: file) : var {
		               ^

0 [0x0]: line: 190 pushl 1   
1 [0x1]:           call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 191 istorel 0, fp+3   
7 [0x7]: line: 197 pushl 2   : protected asm start
8 [0x8]:           int 0x2c   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 203 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#ybq.ydj.adkt[3256] params(1) in file: ydh:210:8: note:  
		    def delete(f: file) : var {
		       ^

0 [0x0]: line: 212 pushl 1   
1 [0x1]:           call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 213 istorel 0, fp+3   
7 [0x7]: line: 215 pushl 1   
8 [0x8]:           call @3198 // <std.io#ybq.ybv.adil>   
9 [0x9]:           loadval ebx   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 18   
12 [0xc]: line: 216 pushl 0   
13 [0xd]:           pushl 1   
14 [0xe]:           call @3255 // <std.io#ybq.ydj.adks>   
15 [0xf]:           loadval ebx   
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   
18 [0x12]:           nop   
19 [0x13]: line: 222 pushl 2   : protected asm start
20 [0x14]:           int 0x29   
21 [0x15]:           smovr_2 ebx, fp+3   
22 [0x16]: line: 228 loadl ebx, fp+3   : protected asm end
23 [0x17]:           return_val ebx   
24 [0x18]:           ret   


function: std.io#ybq.ydj.adku[3257] params(1) in file: ydh:236:8: note:  
		    def list(f: file) : string[] {
		       ^

0 [0x0]: line: 238 pushl 1   
1 [0x1]:           call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 239 movl 3   
6 [0x6]:           del   
7 [0x7]: line: 241 pushl 1   
8 [0x8]:           call @3198 // <std.io#ybq.ybv.adil>   
9 [0x9]:           loadval ebx   
10 [0xa]:           not ebx, ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 17   
13 [0xd]: line: 242 pushnull    
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 248 pushl 2   : protected asm start
19 [0x13]:           int 0x2a   
20 [0x14]:           popl 3   
21 [0x15]: line: 254 movl 3   : protected asm end
22 [0x16]:           returnobj   
23 [0x17]:           ret   


function: std.io#ybq.ydj.adkv[3258] params(1) in file: ydh:261:8: note:  
		    def create_directory(f: file) : var {
		       ^

0 [0x0]: line: 263 pushl 1   
1 [0x1]:           call @3193 // <std.io#ybq.ybv.adig>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 264 istorel 0, fp+3   
7 [0x7]: line: 270 pushl 2   : protected asm start
8 [0x8]:           int 0x2b   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 276 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#ybq.ydj.adkw[3259] params(2) in file: ydh:284:8: note:  
		    def rename(f1: file, f2: file) : var {
		       ^

0 [0x0]: line: 286 pushl 1   
1 [0x1]:           call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 287 pushl 2   
6 [0x6]:           call @3193 // <std.io#ybq.ybv.adig>   
7 [0x7]:           call @3566 // <std#string.get_data>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+4   
10 [0xa]: line: 288 istorel 0, fp+5   
12 [0xc]: line: 294 pushl 4   : protected asm start
13 [0xd]:           pushl 3   
14 [0xe]:           int 0x30   
15 [0xf]:           smovr_2 ebx, fp+5   
16 [0x10]: line: 301 loadl ebx, fp+5   : protected asm end
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


function: std.io#ybq.ydj.adkx[3260] params(1) in file: ydh:305:15: note:  
		    static def read(f: file) : string {
		              ^

0 [0x0]: line: 306 pushl 0   
1 [0x1]:           call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 307 movl 2   
6 [0x6]:           del   
7 [0x7]: line: 308 istorel 0, fp+3   
9 [0x9]: line: 314 pushl 1   : protected asm start
10 [0xa]:           int 0x2f   
11 [0xb]:           popl 2   
12 [0xc]: line: 320 movl 2   : protected asm end
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std.io#ybq.ydj.adky[3261] params(2) in file: ydh:324:15: note:  
		    static def write(f: file, data: string) : var {
		              ^

0 [0x0]: line: 325 pushl 0   
1 [0x1]:           call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 326 pushl 1   
6 [0x6]:           call @3566 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+3   
9 [0x9]: line: 327 istorel 0, fp+4   
11 [0xb]: line: 333 pushl 3   : protected asm start
12 [0xc]:           pushl 2   
13 [0xd]:           int 0x31   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 340 loadl ebx, fp+4   : protected asm end
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   


function: std.io#ybq.ydj.adlz[3262] params(2) in file: ydh:348:15: note:  
		    public def set_last_modified_time(f: file, time: var) : var {
		              ^

0 [0x0]: line: 350 pushl 1   
1 [0x1]:           call @3194 // <std.io#ybq.ybv.adih>   
2 [0x2]:           call @3566 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 351 istorel 0, fp+4   
7 [0x7]: line: 357 pushl 3   : protected asm start
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           int 0x2d   
10 [0xa]:           smovr_2 ebx, fp+4   
11 [0xb]: line: 364 loadl ebx, fp+4   : protected asm end
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std.io#ybq.ydj.adla[3263] params(1) in file: ydh:372:15: note:  
		    public def set_read_only(f: file) : var {
		              ^

0 [0x0]: line: 373 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           istore 2   
4 [0x4]:           movi #0, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           istore 1   
9 [0x9]:           call @3251 // <std.io#ybq.ydj.adko>   
10 [0xa]:           pop   
11 [0xb]: line: 374 pushl 0   
12 [0xc]:           pushl 1   
13 [0xd]:           istore 4   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           rstore ebx   
18 [0x12]:           istore 1   
20 [0x14]:           call @3251 // <std.io#ybq.ydj.adko>   
21 [0x15]:           loadval ebx   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   


function: std.io#ybq.ydj.adlb[3264] params(1) in file: ydh:382:15: note:  
		    static def get_space_available(request: var) : var {
		              ^

0 [0x0]: line: 384 istorel 0, fp+1   
2 [0x2]: line: 390 loadl ebx, fp+0   : protected asm start
3 [0x3]:           int 0x32   
4 [0x4]:           smovr_2 ebx, fp+1   
5 [0x5]: line: 396 loadl ebx, fp+1   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std.io#ybq.ydj.adlc[3265] params(0) in file: ydh:10:16: note:  
		protected class file_system {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: yed#yee.yeg.adld[3266] params(0) in file: yec:6:21: note:  
			private job_builder() {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: yed#yee.yeg.adle[3267] params(2) in file: yec:8:23: note:  
			protected job_builder(scheduled_job : job, master : job_master) {
		                      ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 pushl 1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         popobj   
6 [0x6]: line: 10 pushl 2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          popobj   
11 [0xb]: line: 12 movi #1, ebx   
13 [0xd]:          newobj_arry ebx   
14 [0xe]:          popobj2    
15 [0xf]:          smovr_3 fp+3   
16 [0x10]: line: 13 movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          pushobj   
20 [0x14]:          pushl 3   
21 [0x15]:          movi #0, ebx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          popobj   
28 [0x1c]: line: 14 pushl 3   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          movn #6   
34 [0x22]:          popobj   
35 [0x23]:          ret   


function: yed#yee.yeg.adlf[3268] params(1) in file: yec:17:5: note:  
			def with_timeout(mills_time : var) : job_builder {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 19 new_class @0 // xxz#xxa   
11 [0xb]:          skpe adx // pc = 11   
12 [0xc]:          dup    
13 [0xd]:          newstr @26 // cannot set a timeout on a job that's blocking the calling thread   
14 [0xe]:          call @3610 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 22 ipushl #1   
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          movn #9   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]: line: 23 istore 1   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          movn #8   
34 [0x22]:          loadval ebx   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 24 movl 0   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: yed#yee.yeg.adlg[3269] params(1) in file: yec:27:5: note:  
			def schedule(future : var) : job_builder {
		    ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #12   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 29 movl 0   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: yed#yee.yeg.adlh[3270] params(2) in file: yec:32:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 34 new_class @0 // xxz#xxa   
11 [0xb]:          skpe adx // pc = 11   
12 [0xc]:          dup    
13 [0xd]:          newstr @27 // cannot set a job recurring that's blocking the calling thread   
14 [0xe]:          call @3610 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 37 istore 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          movn #14   
24 [0x18]:          loadval ebx   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          rmov adx, ebx   
28 [0x1c]: line: 38 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          ipushl #1   
33 [0x21]:          pushl 2   
34 [0x22]:          call @3306 // <yed#yee.yew.adna>   
35 [0x23]: line: 39 movl 0   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: yed#yee.yeg.adli[3271] params(1) in file: yec:42:5: note:  
			def with_name(job_name : string) : job_builder {
		    ^

0 [0x0]: line: 43 pushl 1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #5   
6 [0x6]:          popobj   
7 [0x7]: line: 44 movl 0   
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: yed#yee.yeg.adlj[3272] params(1) in file: yec:47:5: note:  
			def with_args(args : object[]) : job_builder {
		    ^

0 [0x0]: line: 48 istore 1   
2 [0x2]:          movl 1   
3 [0x3]:          sizeof ebx   
4 [0x4]:          loadval ecx   
5 [0x5]:          add ecx, ebx -> ebx   
6 [0x6]:          newobj_arry ebx   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+2   
9 [0x9]: line: 49 movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          pushobj   
13 [0xd]:          pushl 2   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          movr adx, ebx   
18 [0x12]:          chklen adx   
19 [0x13]:          movnd adx   
20 [0x14]:          popobj   
21 [0x15]: line: 51 istorel 0, fp+3   
23 [0x17]: line: 52 istorel -1, fp+5   
25 [0x19]:          pushl 1   
26 [0x1a]:          popl 6   
27 [0x1b]:          iaddl 1, fp@5   
29 [0x1d]:          movl 6   
30 [0x1e]:          sizeof ecx   
31 [0x1f]:          loadl ebx, fp+5   
32 [0x20]:          lt ebx, ecx   
33 [0x21]:          jne 48   
34 [0x22]:          movnd ebx   
35 [0x23]:          pushobj   
36 [0x24]:          popl 4   
37 [0x25]: line: 53 pushl 4   
38 [0x26]:          pushl 2   
39 [0x27]:          loadl ebx, fp+3   
40 [0x28]:          inc ebx   
41 [0x29]:          smovr_2 ebx, fp+3   
42 [0x2a]:          popobj2    
43 [0x2b]:          movr adx, ebx   
44 [0x2c]:          chklen adx   
45 [0x2d]:          movnd adx   
46 [0x2e]:          popobj   
47 [0x2f]:          jmp @27   
48 [0x30]: line: 56 pushl 2   
49 [0x31]:          movl 0   
50 [0x32]:          movn #1   
52 [0x34]:          movn #6   
54 [0x36]:          popobj   
55 [0x37]: line: 57 movl 0   
56 [0x38]:          returnobj   
57 [0x39]:          ret   


function: yed#yee.yeg.adlk[3273] params(0) in file: yec:60:5: note:  
			def block() : job_builder {
		    ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #8   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 62 new_class @0 // xxz#xxa   
11 [0xb]:          skpe adx // pc = 11   
12 [0xc]:          dup    
13 [0xd]:          newstr @28 // cannot block calling thread on job that has a timeout   
14 [0xe]:          call @3610 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 65 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          movn #14   
22 [0x16]:          movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          movr cmt, ebx   
26 [0x1a]:          jne 33   
27 [0x1b]: line: 66 new_class @0 // xxz#xxa   
28 [0x1c]:          skpe adx // pc = 28   
29 [0x1d]:          dup    
30 [0x1e]:          newstr @29 // cannot block calling thread on a recurring job   
31 [0x1f]:          call @3610 // <std#illegal_state_exception.illegal_state_exception>   
32 [0x20]:          throw    
33 [0x21]:          nop   
34 [0x22]: line: 69 istore 1   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movn #16   
41 [0x29]:          loadval ebx   
42 [0x2a]:          movi #0, adx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]: line: 70 movl 0   
46 [0x2e]:          returnobj   
47 [0x2f]:          ret   


function: yed#yee.yeg.adll[3274] params(0) in file: yec:73:5: note:  
			def long_term() : job_builder {
		    ^

0 [0x0]: line: 74 istore 1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          movn #17   
7 [0x7]:          loadval ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]: line: 75 movl 0   
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: yed#yee.yeg.adln[3275] params(1) in file: yec:78:12: note:  
			public def operator=(main: ()()) : job {
		           ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @3297 // <yed#yee.yew.admo>   
6 [0x6]: line: 80 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @3284 // <yed#yee.yeo.adma>   
15 [0xf]: line: 81 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: yed#yee.yeg.adlp[3276] params(1) in file: yec:84:12: note:  
			public def operator=(main: (args : object[])()) : job {
		           ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @3298 // <yed#yee.yew.admq>   
6 [0x6]: line: 86 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @3284 // <yed#yee.yeo.adma>   
15 [0xf]: line: 87 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: yed#yee.yeg.adlr[3277] params(1) in file: yec:90:18: note:  
		    protected def operator=(main: (deferred : object, args : object[])()) : job {
		                 ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @3299 // <yed#yee.yew.adms>   
6 [0x6]: line: 92 movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          movn #14   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 22   
16 [0x10]: line: 93 new_class @0 // xxz#xxa   
17 [0x11]:          skpe adx // pc = 17   
18 [0x12]:          dup    
19 [0x13]:          newstr @30 // recurring jobs cannot be deferred tasks   
20 [0x14]:          call @3610 // <std#illegal_state_exception.illegal_state_exception>   
21 [0x15]:          throw    
22 [0x16]:          nop   
23 [0x17]: line: 96 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          call @3284 // <yed#yee.yeo.adma>   
32 [0x20]: line: 97 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          returnobj   
36 [0x24]:          ret   


overload function: yed#yee.yeg.adlt[3278] params(1) in file: yec:100:18: note:  
		    protected def operator=(main: (deferred : object)()) : job {
		                 ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #1   
5 [0x5]:           call @3300 // <yed#yee.yew.admu>   
6 [0x6]: line: 102 movl 0   
7 [0x7]:           movn #1   
9 [0x9]:           movn #14   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 22   
16 [0x10]: line: 103 new_class @0 // xxz#xxa   
17 [0x11]:           skpe adx // pc = 17   
18 [0x12]:           dup    
19 [0x13]:           newstr @30 // recurring jobs cannot be deferred tasks   
20 [0x14]:           call @3610 // <std#illegal_state_exception.illegal_state_exception>   
21 [0x15]:           throw    
22 [0x16]:           nop   
23 [0x17]: line: 106 movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           pushobj   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           call @3284 // <yed#yee.yeo.adma>   
32 [0x20]: line: 107 movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           returnobj   
36 [0x24]:           ret   


function: yed#yee.yeg.adlu[3279] params(0) in file: yec:110:12: note:  
			public def get_job() := scheduled_job;
		           ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


constructor: yed#yee.yeo.adlv[3280] params(0) in file: yem:7:12: note:  
			job_master() {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 8 new_class @0 // xxz#xxa   
2 [0x2]:         ifne   
3 [0x3]:         dup    
4 [0x4]:         new_class @0 // xxz#xxa   
5 [0x5]:         skip @0 // pc = 5   
6 [0x6]:         dup    
7 [0x7]:         newstr @31 // Long term jobs   
8 [0x8]:         call @3540 // <std#string.string>   
9 [0x9]:         movg @43 // @std.io#ybq.yhd   
10 [0xa]:         movn #0   
12 [0xc]:         pushobj   
13 [0xd]:         call @3235 // <std.io#ybq.ycg.adjw>   
14 [0xe]:         movl 0   
15 [0xf]:         movn #2   
17 [0x11]:         popobj   
18 [0x12]: line: 9 new_class @0 // xxz#xxa   
19 [0x13]:         ifne   
20 [0x14]:         dup    
21 [0x15]:         new_class @0 // xxz#xxa   
22 [0x16]:         skip @0 // pc = 22   
23 [0x17]:         dup    
24 [0x18]:         newstr @32 // Short term jobs   
25 [0x19]:         call @3540 // <std#string.string>   
26 [0x1a]:         movg @43 // @std.io#ybq.yhd   
27 [0x1b]:         movn #2   
29 [0x1d]:         pushobj   
30 [0x1e]:         call @3235 // <std.io#ybq.ycg.adjw>   
31 [0x1f]:         movl 0   
32 [0x20]:         movn #3   
34 [0x22]:         popobj   
35 [0x23]: line: 10 new_class @0 // xxz#xxa   
36 [0x24]:          itest adx   
37 [0x25]:          dup    
38 [0x26]:          call @3770 // <yed#yee.yix.aeji>   
39 [0x27]:          movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          popobj   
43 [0x2b]: line: 11 new_class @0 // xxz#xxa   
44 [0x2c]:          istorel 112, fp+0   
46 [0x2e]:          call @3698 // <yed#yee.yao.aeej>   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #1   
50 [0x32]:          popobj   
51 [0x33]:          ret   


overload function: yed#yee.yeo.adlx[3281] params(1) in file: yem:14:5: note:  
			def operator=(main: ()()) : job {
		    ^

0 [0x0]: line: 15 pushl 0   
1 [0x1]:          call @3282 // <yed#yee.yeo.adly>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 16 pushl 2   
5 [0x5]:          ipushl #1   
6 [0x6]:          call @3297 // <yed#yee.yew.admo>   
7 [0x7]: line: 17 pushl 0   
8 [0x8]:          pushl 2   
9 [0x9]:          call @3284 // <yed#yee.yeo.adma>   
10 [0xa]: line: 18 movl 2   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: yed#yee.yeo.adly[3282] params(0) in file: yem:21:15: note:  
			protected def create_job() := new job("job#${job.guid}");
		              ^

0 [0x0]: line: 21 new_class @0 // xxz#xxa   
1 [0x1]:          movsl #0   
2 [0x2]:          dup    
3 [0x3]:          new_class @0 // xxz#xxa   
4 [0x4]:          skip @0 // pc = 4   
5 [0x5]:          dup    
6 [0x6]:          newstr @1 // job#   
7 [0x7]:          call @3540 // <std#string.string>   
8 [0x8]:          movg @38 // @yed#yee.yew   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3572 // <std#string.operator+>   
16 [0x10]:          call @3289 // <yed#yee.yew.admf>   
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   


function: yed#yee.yeo.admz[3283] params(1) in file: yem:23:15: note:  
			protected def create_job(name : string) := new job(name);
		              ^

0 [0x0]: line: 23 new_class @0 // xxz#xxa   
1 [0x1]:          movsl #0   
2 [0x2]:          dup    
3 [0x3]:          pushl 1   
4 [0x4]:          call @3289 // <yed#yee.yew.admf>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: yed#yee.yeo.adma[3284] params(1) in file: yem:25:15: note:  
			protected def start_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 27 movl 0   
3 [0x3]:          movn #4   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          not ebx, ebx   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 20   
11 [0xb]: line: 28 call @3308 // <yed#yee.adnc>   
12 [0xc]: line: 29 movi #1, ebx   
14 [0xe]:          movl 0   
15 [0xf]:          movn #4   
17 [0x11]:          movi #0, adx   
19 [0x13]:          rmov adx, ebx   
20 [0x14]:          nop   
21 [0x15]:          movl 0   
22 [0x16]:          _ulck   
23 [0x17]: line: 33 movl 1   
24 [0x18]:          movn #12   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 48   
31 [0x1f]: line: 34 movl 1   
32 [0x20]:          movn #12   
34 [0x22]:          movi #0, adx   
36 [0x24]:          iaload ebx, adx   
37 [0x25]:          rstore ebx   
38 [0x26]:          call @3441 // <std#yaf.yji.adsx>   
39 [0x27]:          loadval ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          movl 1   
43 [0x2b]:          movn #12   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]:          nop   
49 [0x31]: line: 36 movl 1   
50 [0x32]:          movn #16   
52 [0x34]:          movi #0, adx   
54 [0x36]:          iaload ebx, adx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 60   
57 [0x39]: line: 37 pushl 1   
58 [0x3a]:          call @3315 // <yed#yee.adnj>   
59 [0x3b]:          jmp @66   
60 [0x3c]: line: 40 movl 0   
61 [0x3d]:          movn #0   
63 [0x3f]:          pushobj   
64 [0x40]:          pushl 1   
65 [0x41]:          call @3809 // <yed#yee.yix.aelq>   
66 [0x42]:          nop   
67 [0x43]:          ret   


function: yed#yee.yeo.admb[3285] params(1) in file: yem:44:15: note:  
			protected def get_host_controller(host: thread) := controllers.at(host);
		              ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 1   
5 [0x5]:          call @3702 // <yed#yee.yao.aeen>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: yed#yee.yeo.admc[3286] params(1) in file: yem:46:15: note:  
			protected def cleanup_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 47 movl 1   
1 [0x1]:          movn #7   
3 [0x3]:          del   
4 [0x4]: line: 48 movl 1   
5 [0x5]:          movn #4   
7 [0x7]:          del   
8 [0x8]: line: 49 movl 1   
9 [0x9]:          movn #13   
11 [0xb]:          del   
12 [0xc]: line: 50 movl 1   
13 [0xd]:          movn #6   
15 [0xf]:          del   
16 [0x10]: line: 51 movl 1   
17 [0x11]:          movn #5   
19 [0x13]:          del   
20 [0x14]: line: 53 movl 1   
21 [0x15]: line: 54 _lck    
22 [0x16]: line: 55 movl 1   
23 [0x17]:          movn #20   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3827 // <yed#yee.yah.aenk>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 53   
31 [0x1f]: line: 56 istorel -1, fp+3   
33 [0x21]:          movl 1   
34 [0x22]:          movn #20   
36 [0x24]:          pushobj   
37 [0x25]:          invoke_delegate 1891 { static=0, args=0 }   
39 [0x27]:          popl 4   
40 [0x28]:          iaddl 1, fp@3   
42 [0x2a]:          movl 4   
43 [0x2b]:          sizeof ecx   
44 [0x2c]:          loadl ebx, fp+3   
45 [0x2d]:          lt ebx, ecx   
46 [0x2e]:          jne 53   
47 [0x2f]:          movnd ebx   
48 [0x30]:          pushobj   
49 [0x31]:          popl 2   
50 [0x32]: line: 57 pushl 2   
51 [0x33]:          call @3451 // <std#yaf.yke.adtk>   
52 [0x34]:          jmp @40   
53 [0x35]:          nop   
54 [0x36]: line: 61 movl 1   
55 [0x37]:          movn #20   
57 [0x39]:          pushobj   
58 [0x3a]:          call @3835 // <yed#yee.yah.aens>   
59 [0x3b]:          movl 1   
60 [0x3c]:          _ulck   
61 [0x3d]: line: 64 movl 1   
62 [0x3e]:          _lck    
63 [0x3f]: line: 65 movl 1   
64 [0x40]:          movn #20   
66 [0x42]:          pushobj   
67 [0x43]:          call @3827 // <yed#yee.yah.aenk>   
68 [0x44]:          loadval ebx   
69 [0x45]:          not ebx, ebx   
70 [0x46]:          movr cmt, ebx   
71 [0x47]:          jne 75   
72 [0x48]: line: 66 movl 1   
73 [0x49]:          _ulck   
74 [0x4a]:          jmp @20   
75 [0x4b]:          nop   
76 [0x4c]:          movl 1   
77 [0x4d]:          _ulck   
78 [0x4e]: line: 70 movl 1   
79 [0x4f]:          movn #20   
81 [0x51]:          del   
82 [0x52]: line: 71 movl 0   
83 [0x53]:          movn #0   
85 [0x55]:          pushobj   
86 [0x56]:          pushl 1   
87 [0x57]:          istore 3873   
89 [0x59]:          call @3816 // <yed#yee.yix.aema>   
90 [0x5a]:          ret   


function: yed#yee.yeo.admd[3287] params(1) in file: yem:74:15: note:  
			protected def cancel_jobs_by_name(name: string) {
		              ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 76 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3812 // <yed#yee.yix.aelt>   
12 [0xc]:          loadval ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 45   
18 [0x12]: line: 77 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          ipushl #2   
23 [0x17]:          call @3775 // <yed#yee.yix.aejn>   
24 [0x18]:          popobj2    
25 [0x19]:          movn #5   
27 [0x1b]:          pushobj   
28 [0x1c]:          pushl 1   
29 [0x1d]:          call @3558 // <std#string.operator==>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 41   
33 [0x21]: line: 78 movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          ipushl #2   
38 [0x26]:          call @3817 // <yed#yee.yix.aemb>   
39 [0x27]: line: 79 istorel 0, fp+2   
41 [0x29]:          nop   
42 [0x2a]:          iaddl 1, fp@2   
44 [0x2c]:          jmp @6   
45 [0x2d]: line: 83 istorel -1, fp+4   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #3   
50 [0x32]:          pushobj   
51 [0x33]:          invoke_delegate 1891 { static=0, args=0 }   
53 [0x35]:          popl 5   
54 [0x36]:          iaddl 1, fp@4   
56 [0x38]:          movl 5   
57 [0x39]:          sizeof ecx   
58 [0x3a]:          loadl ebx, fp+4   
59 [0x3b]:          lt ebx, ecx   
60 [0x3c]:          jne 88   
61 [0x3d]:          movnd ebx   
62 [0x3e]:          pushobj   
63 [0x3f]:          popl 3   
64 [0x40]: line: 84 pushl 0   
65 [0x41]:          pushl 3   
66 [0x42]:          call @3285 // <yed#yee.yeo.admb>   
67 [0x43]:          popobj2    
68 [0x44]:          movn #0   
70 [0x46]:          smovr_3 fp+6   
71 [0x47]: line: 85 movl 6   
72 [0x48]:          checknull   
73 [0x49]:          not ebx, ebx   
74 [0x4a]:          skne ebx // pc = 82   
75 [0x4b]:          movl 6   
76 [0x4c]:          movn #5   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 1   
80 [0x50]:          call @3558 // <std#string.operator==>   
81 [0x51]:          loadval ebx   
82 [0x52]:          movr cmt, ebx   
83 [0x53]:          jne 86   
84 [0x54]: line: 86 pushl 6   
85 [0x55]:          call @3291 // <yed#yee.yew.admh>   
86 [0x56]:          nop   
87 [0x57]:          jmp @54   
88 [0x58]: line: 90 istorel -1, fp+8   
90 [0x5a]:          movl 0   
91 [0x5b]:          movn #2   
93 [0x5d]:          pushobj   
94 [0x5e]:          invoke_delegate 1891 { static=0, args=0 }   
96 [0x60]:          popl 9   
97 [0x61]:          iaddl 1, fp@8   
99 [0x63]:          movl 9   
100 [0x64]:          sizeof ecx   
101 [0x65]:          loadl ebx, fp+8   
102 [0x66]:          lt ebx, ecx   
103 [0x67]:          jne 142   
104 [0x68]:          movnd ebx   
105 [0x69]:          pushobj   
106 [0x6a]:          popl 7   
107 [0x6b]: line: 91 pushl 7   
108 [0x6c]:          movg @35 // @yed#yee   
109 [0x6d]:          movn #3   
111 [0x6f]:          pushobj   
112 [0x70]:          call @3416 // <std.io#thread.operator==>   
113 [0x71]:          loadval ebx   
114 [0x72]:          movr cmt, ebx   
115 [0x73]:          jne 117   
116 [0x74]:          jmp @97   
117 [0x75]:          nop   
118 [0x76]: line: 93 pushl 0   
119 [0x77]:          pushl 7   
120 [0x78]:          call @3285 // <yed#yee.yeo.admb>   
121 [0x79]:          popobj2    
122 [0x7a]:          movn #0   
124 [0x7c]:          smovr_3 fp+10   
125 [0x7d]: line: 94 movl 10   
126 [0x7e]:          checknull   
127 [0x7f]:          not ebx, ebx   
128 [0x80]:          skne ebx // pc = 136   
129 [0x81]:          movl 10   
130 [0x82]:          movn #5   
132 [0x84]:          pushobj   
133 [0x85]:          pushl 1   
134 [0x86]:          call @3558 // <std#string.operator==>   
135 [0x87]:          loadval ebx   
136 [0x88]:          movr cmt, ebx   
137 [0x89]:          jne 140   
138 [0x8a]: line: 95 pushl 10   
139 [0x8b]:          call @3291 // <yed#yee.yew.admh>   
140 [0x8c]:          nop   
141 [0x8d]:          jmp @97   
142 [0x8e]:          movl 0   
143 [0x8f]:          movn #0   
145 [0x91]:          _ulck   
146 [0x92]:          ret   


constructor: yed#yee.yew.adme[3288] params(0) in file: yeu:7:13: note:  
			private job() {}
		            ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @39 // @yed#yee.ygi   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @0 // xxz#xxa   
81 [0x51]:         isadd 0, sp+112   
83 [0x53]:         call @3824 // <yed#yee.yah.aenh>   
84 [0x54]:         movl 0   
85 [0x55]:         movn #20   
87 [0x57]:         popobj   
88 [0x58]:         pushl 0   
89 [0x59]:         ret   


constructor: yed#yee.yew.admf[3289] params(1) in file: yeu:9:5: note:  
			job(name : string) {
		    ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @39 // @yed#yee.ygi   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @0 // xxz#xxa   
81 [0x51]:         isadd 0, sp+112   
83 [0x53]:         call @3824 // <yed#yee.yah.aenh>   
84 [0x54]:         movl 0   
85 [0x55]:         movn #20   
87 [0x57]:         popobj   
88 [0x58]:         pushl 0   
89 [0x59]: line: 10 pushl 1   
90 [0x5a]:          movl 0   
91 [0x5b]:          movn #5   
93 [0x5d]:          popobj   
94 [0x5e]: line: 11 movg @35 // @yed#yee   
95 [0x5f]:          movn #5   
97 [0x61]:          _lck    
98 [0x62]: line: 12 movg @38 // @yed#yee.yew   
99 [0x63]:          movn #0   
101 [0x65]:          movi #0, adx   
103 [0x67]:          iaload ebx, adx   
104 [0x68]:          movr egx, ebx   
105 [0x69]:          inc ebx   
106 [0x6a]:          movi #0, adx   
108 [0x6c]:          rmov adx, ebx   
109 [0x6d]:          rstore egx   
110 [0x6e]:          movl 0   
111 [0x6f]:          movn #15   
113 [0x71]:          loadval ebx   
114 [0x72]:          movi #0, adx   
116 [0x74]:          rmov adx, ebx   
117 [0x75]:          movg @35 // @yed#yee   
118 [0x76]:          movn #5   
120 [0x78]:          _ulck   
121 [0x79]:          ret   


function: yed#yee.yew.admg[3290] params(0) in file: yeu:16:15: note:  
			protected def execute_async() : var {
		              ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          pushobj   
4 [0x4]:          movg @39 // @yed#yee.ygi   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @3430 // <std#yaf.yja.adsm>   
9 [0x9]:          loadval ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 82   
12 [0xc]: line: 18 pushl 0   
13 [0xd]:          movl 0   
14 [0xe]:          movn #19   
16 [0x10]:          movn #0   
18 [0x12]:          popobj   
19 [0x13]: line: 19 call @3441 // <std#yaf.yji.adsx>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #19   
23 [0x17]:          movn #1   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 21 movl 0   
30 [0x1e]:          movn #4   
32 [0x20]:          pushobj   
33 [0x21]:          call @3413 // <std.io#thread.is_active>   
34 [0x22]:          loadval ebx   
35 [0x23]:          not ebx, ebx   
36 [0x24]:          movr cmt, ebx   
37 [0x25]:          jne 72   
38 [0x26]: line: 22 movl 0   
39 [0x27]:          movn #4   
41 [0x29]:          pushobj   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          newobj_arry ebx   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #19   
48 [0x30]:          pushobj   
49 [0x31]:          movsl #-1   
50 [0x32]:          movn #0   
52 [0x34]:          popobj   
53 [0x35]:          call @3388 // <std.io#thread.start>   
54 [0x36]:          movg @33 // @std.io#ybq.ycp   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          call @3428 // <std#yaf.yja.adsk>   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 71   
62 [0x3e]: line: 24 movl 0   
63 [0x3f]:          movn #19   
65 [0x41]:          movn #0   
67 [0x43]:          del   
68 [0x44]: line: 25 istorel 2, fp+0   
70 [0x46]:          ret   
71 [0x47]:          nop   
72 [0x48]:          nop   
73 [0x49]: line: 29 movl 0   
74 [0x4a]:          movn #19   
76 [0x4c]:          pushobj   
77 [0x4d]:          call @3451 // <std#yaf.yke.adtk>   
78 [0x4e]: line: 30 istorel 0, fp+0   
80 [0x50]:          ret   
81 [0x51]:          jmp @97   
82 [0x52]:          movl 0   
83 [0x53]:          movn #18   
85 [0x55]:          pushobj   
86 [0x56]:          movg @39 // @yed#yee.ygi   
87 [0x57]:          movn #1   
89 [0x59]:          pushobj   
90 [0x5a]:          call @3430 // <std#yaf.yja.adsm>   
91 [0x5b]:          loadval ebx   
92 [0x5c]:          movr cmt, ebx   
93 [0x5d]:          jne 97   
94 [0x5e]: line: 32 istorel 1, fp+0   
96 [0x60]:          ret   
97 [0x61]:          nop   
98 [0x62]: line: 35 istorel 2, fp+0   
100 [0x64]:          ret   


function: yed#yee.yew.admh[3291] params(0) in file: yeu:38:12: note:  
			public def cancel() {
		           ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 40 movl 0   
3 [0x3]:          movn #18   
5 [0x5]:          pushobj   
6 [0x6]:          movg @39 // @yed#yee.ygi   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          call @3430 // <std#yaf.yja.adsm>   
11 [0xb]:          loadval ebx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 50   
14 [0xe]: line: 41 movg @39 // @yed#yee.ygi   
15 [0xf]:          movn #3   
17 [0x11]:          pushobj   
18 [0x12]:          movl 0   
19 [0x13]:          movn #18   
21 [0x15]:          popobj   
22 [0x16]: line: 43 call @3395 // <std.io#thread.current>   
23 [0x17]:          movl 0   
24 [0x18]:          movn #4   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 44   
31 [0x1f]: line: 44 movl 0   
32 [0x20]:          movn #4   
34 [0x22]:          pushobj   
35 [0x23]:          call @3394 // <std.io#thread.interrupt>   
36 [0x24]:          pop   
37 [0x25]: line: 45 movg @35 // @yed#yee   
38 [0x26]:          movn #5   
40 [0x28]:          pushobj   
41 [0x29]:          pushl 0   
42 [0x2a]:          call @3286 // <yed#yee.yeo.admc>   
43 [0x2b]:          jmp @49   
44 [0x2c]: line: 48 new_class @0 // xxz#xxa   
45 [0x2d]:          put adx   
46 [0x2e]:          dup    
47 [0x2f]:          call @3319 // <yed#yee.ygp.adnn>   
48 [0x30]:          throw    
49 [0x31]:          nop   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          ret   


function: yed#yee.yew.admi[3292] params(0) in file: yeu:54:15: note:  
			protected def cancel_future() {
		              ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 movl 0   
3 [0x3]:          movn #14   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 32   
10 [0xa]: line: 57 movl 0   
11 [0xb]:          movn #13   
13 [0xd]:          smovr_3 fp+1   
14 [0xe]: line: 58 movl 1   
15 [0xf]:          checknull   
16 [0x10]:          not ebx, ebx   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 32   
19 [0x13]: line: 59 pushl 1   
20 [0x14]:          call @3291 // <yed#yee.yew.admh>   
21 [0x15]: line: 60 movg @35 // @yed#yee   
22 [0x16]:          movn #5   
24 [0x18]:          pushobj   
25 [0x19]:          pushl 1   
26 [0x1a]:          call @3286 // <yed#yee.yeo.admc>   
27 [0x1b]: line: 62 movl 1   
28 [0x1c]:          movn #13   
30 [0x1e]:          smovr_3 fp+1   
31 [0x1f]:          jmp @14   
32 [0x20]:          nop   
33 [0x21]:          movl 0   
34 [0x22]:          _ulck   
35 [0x23]:          ret   


function: yed#yee.yew.admj[3293] params(0) in file: yeu:68:12: note:  
			public def join() {
		           ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #16   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          skpe ebx // pc = 28   
7 [0x7]:          movl 0   
8 [0x8]:          movn #18   
10 [0xa]:          pushobj   
11 [0xb]:          movg @39 // @yed#yee.ygi   
12 [0xc]:          movn #3   
14 [0xe]:          pushobj   
15 [0xf]:          call @3430 // <std#yaf.yja.adsm>   
16 [0x10]:          loadval ebx   
17 [0x11]:          skpe ebx // pc = 28   
18 [0x12]:          movl 0   
19 [0x13]:          movn #18   
21 [0x15]:          pushobj   
22 [0x16]:          movg @39 // @yed#yee.ygi   
23 [0x17]:          movn #2   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3430 // <std#yaf.yja.adsm>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 31   
30 [0x1e]: line: 72 ret   
31 [0x1f]:          nop   
32 [0x20]: line: 74 istorel 0, fp+1   
34 [0x22]: line: 75 movl 0   
35 [0x23]:          _lck    
36 [0x24]: line: 76 pushl 0   
37 [0x25]:          call @3303 // <yed#yee.yew.admx>   
38 [0x26]:          loadval ebx   
39 [0x27]:          not ebx, ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 50   
42 [0x2a]: line: 77 istorel 1, fp+1   
44 [0x2c]: line: 78 movl 0   
45 [0x2d]:          movn #20   
47 [0x2f]:          pushobj   
48 [0x30]:          call @3395 // <std.io#thread.current>   
49 [0x31]:          call @3838 // <yed#yee.yah.aenv>   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]: line: 82 loadl ebx, fp+1   
54 [0x36]:          movr cmt, ebx   
55 [0x37]:          jne 58   
56 [0x38]: line: 83 call @3395 // <std.io#thread.current>   
57 [0x39]:          call @3450 // <std#yaf.yke.adtj>   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


function: yed#yee.yew.admk[3294] params(0) in file: yeu:87:12: note:  
			public def get_state() := state;
		           ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: yed#yee.yew.adml[3295] params(0) in file: yeu:88:12: note:  
			public def get_name() := name;
		           ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #5   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: yed#yee.yew.admm[3296] params(0) in file: yeu:89:12: note:  
			public def get_id() := id;
		           ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


overload function: yed#yee.yew.admo[3297] params(1) in file: yeu:91:15: note:  
			protected def operator=(block: ()()) {
		              ^

0 [0x0]: line: 92 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: yed#yee.yew.admq[3298] params(1) in file: yeu:95:15: note:  
			protected def operator=(block: (args : object[])()) {
		              ^

0 [0x0]: line: 96 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: yed#yee.yew.adms[3299] params(1) in file: yeu:99:15: note:  
			protected def operator=(block: (deferred : object, args : object[])()) {
		              ^

0 [0x0]: line: 100 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #2   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


overload function: yed#yee.yew.admu[3300] params(1) in file: yeu:103:15: note:  
			protected def operator=(block: (deferred : object)()) {
		              ^

0 [0x0]: line: 104 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


function: yed#yee.yew.admv[3301] params(1) in file: yeu:107:22: note:  
			protected static def job_main(args : object[]) : var {
		                     ^

0 [0x0]: line: 108 pushl 0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           popobj2    
4 [0x4]:           movr adx, ebx   
5 [0x5]:           chklen adx   
6 [0x6]:           movnd adx   
7 [0x7]:           movi #41, cmt   
9 [0x9]:           cast cmt   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 110 pushl 1   
12 [0xc]: line: 111 call @3450 // <std#yaf.yke.adtj>   
13 [0xd]: line: 113 movl 1   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           pushnull    
18 [0x12]:           itest ebx   
19 [0x13]:           not ebx, ebx   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 105   
22 [0x16]: line: 114 movl 1   : try start: try block start
23 [0x17]: line: 115 movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           call @3302 // <yed#yee.yew.admw>   
27 [0x1b]:           jmp @100   : try block end
28 [0x1c]: line: 117 movg @39 // @yed#yee.ygi   : catch(yed#yee.ygp)
29 [0x1d]:           movn #3   
31 [0x1f]:           pushobj   
32 [0x20]:           movl 1   
33 [0x21]:           movn #0   
35 [0x23]:           movn #18   
37 [0x25]:           popobj   
38 [0x26]: line: 118 movg @35 // @yed#yee   
39 [0x27]:           movn #5   
41 [0x29]:           pushobj   
42 [0x2a]:           movl 1   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @3286 // <yed#yee.yeo.admc>   
47 [0x2f]:           jmp @100   
48 [0x30]: line: 120 movg @39 // @yed#yee.ygi   : catch(std#error)
49 [0x31]:           movn #3   
51 [0x33]:           pushobj   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           movn #18   
57 [0x39]:           popobj   
58 [0x3a]: line: 121 movg @35 // @yed#yee   
59 [0x3b]:           movn #5   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 1   
63 [0x3f]:           movn #0   
65 [0x41]:           pushobj   
66 [0x42]:           call @3286 // <yed#yee.yeo.admc>   
67 [0x43]: line: 122 movl 1   
68 [0x44]:           movn #0   
70 [0x46]:           del   
71 [0x47]: line: 123 pushl 2   
72 [0x48]:           throw    
73 [0x49]:           jmp @100   
74 [0x4a]: line: 125 movg @39 // @yed#yee.ygi   : catch(std#exception)
75 [0x4b]:           movn #3   
77 [0x4d]:           pushobj   
78 [0x4e]:           movl 1   
79 [0x4f]:           movn #0   
81 [0x51]:           movn #18   
83 [0x53]:           popobj   
84 [0x54]: line: 126 movg @35 // @yed#yee   
85 [0x55]:           movn #5   
87 [0x57]:           pushobj   
88 [0x58]:           movl 1   
89 [0x59]:           movn #0   
91 [0x5b]:           pushobj   
92 [0x5c]:           call @3286 // <yed#yee.yeo.admc>   
93 [0x5d]: line: 127 movl 1   
94 [0x5e]:           movn #0   
96 [0x60]:           del   
97 [0x61]: line: 128 pushl 3   
98 [0x62]:           throw    
99 [0x63]:           jmp @100   
100 [0x64]:           nop   : try end
101 [0x65]: line: 131 movl 1   
102 [0x66]:           movn #0   
104 [0x68]:           del   
105 [0x69]:           nop   
106 [0x6a]:           jmp @11   
107 [0x6b]: line: 135 istorel 0, fp+0   
109 [0x6d]:           ret   


function: yed#yee.yew.admw[3302] params(0) in file: yeu:138:15: note:  
			protected def execute() {
		              ^

0 [0x0]: line: 139 call @3441 // <std#yaf.yji.adsx>   
1 [0x1]:           movl 0   
2 [0x2]:           movn #10   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 140 movg @39 // @yed#yee.ygi   
9 [0x9]:           movn #1   
11 [0xb]:           pushobj   
12 [0xc]:           movl 0   
13 [0xd]:           movn #18   
15 [0xf]:           popobj   
16 [0x10]: line: 141 movl 0   
17 [0x11]:           movn #14   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 26   
24 [0x18]: line: 142 pushl 0   
25 [0x19]:           call @3307 // <yed#yee.yew.adnb>   
26 [0x1a]:           nop   
27 [0x1b]: line: 144 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 45   
35 [0x23]: line: 145 movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           movi #0, adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           loadval ebx   
43 [0x2b]:           calld ebx   
44 [0x2c]:           jmp @114   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #1   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 67   
53 [0x35]: line: 146 movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           iaload ebx, adx   
59 [0x3b]:           rstore ebx   
60 [0x3c]:           movl 0   
61 [0x3d]:           movn #6   
63 [0x3f]:           pushobj   
64 [0x40]:           smov ebx, sp+[-1]   
65 [0x41]:           calld ebx   
66 [0x42]:           jmp @114   
67 [0x43]:           movl 0   
68 [0x44]:           movn #2   
70 [0x46]:           movi #0, adx   
72 [0x48]:           iaload ebx, adx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 93   
75 [0x4b]: line: 147 movl 0   
76 [0x4c]:           movn #2   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movl 0   
83 [0x53]:           movn #7   
85 [0x55]:           pushobj   
86 [0x56]:           movl 0   
87 [0x57]:           movn #6   
89 [0x59]:           pushobj   
90 [0x5a]:           smov ebx, sp+[-2]   
91 [0x5b]:           calld ebx   
92 [0x5c]:           jmp @114   
93 [0x5d]:           movl 0   
94 [0x5e]:           movn #3   
96 [0x60]:           movi #0, adx   
98 [0x62]:           iaload ebx, adx   
99 [0x63]:           movr cmt, ebx   
100 [0x64]:           jne 114   
101 [0x65]: line: 148 movl 0   
102 [0x66]:           movn #3   
104 [0x68]:           movi #0, adx   
106 [0x6a]:           iaload ebx, adx   
107 [0x6b]:           rstore ebx   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #7   
111 [0x6f]:           pushobj   
112 [0x70]:           smov ebx, sp+[-1]   
113 [0x71]:           calld ebx   
114 [0x72]:           nop   
115 [0x73]: line: 151 movg @39 // @yed#yee.ygi   
116 [0x74]:           movn #2   
118 [0x76]:           pushobj   
119 [0x77]:           movl 0   
120 [0x78]:           movn #18   
122 [0x7a]:           popobj   
123 [0x7b]: line: 152 movg @35 // @yed#yee   
124 [0x7c]:           movn #5   
126 [0x7e]:           pushobj   
127 [0x7f]:           pushl 0   
128 [0x80]:           call @3286 // <yed#yee.yeo.admc>   
129 [0x81]:           ret   


function: yed#yee.yew.admx[3303] params(0) in file: yeu:155:8: note:  
		    def is_finished() := state == completed || state == cancelled;
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @39 // @yed#yee.ygi   
5 [0x5]:           movn #2   
7 [0x7]:           pushobj   
8 [0x8]:           call @3430 // <std#yaf.yja.adsm>   
9 [0x9]:           loadval ebx   
10 [0xa]:           skpe ebx // pc = 21   
11 [0xb]:           movl 0   
12 [0xc]:           movn #18   
14 [0xe]:           pushobj   
15 [0xf]:           movg @39 // @yed#yee.ygi   
16 [0x10]:           movn #3   
18 [0x12]:           pushobj   
19 [0x13]:           call @3430 // <std#yaf.yja.adsm>   
20 [0x14]:           loadval ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: yed#yee.yew.admy[3304] params(0) in file: yeu:156:8: note:  
		    def is_active() := state == active;
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @39 // @yed#yee.ygi   
5 [0x5]:           movn #1   
7 [0x7]:           pushobj   
8 [0x8]:           call @3430 // <std#yaf.yja.adsm>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: yed#yee.yew.adnz[3305] params(1) in file: yeu:158:15: note:  
		    public def update_timeout(tm: var) {
		              ^

0 [0x0]: line: 159 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #9   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


function: yed#yee.yew.adna[3306] params(2) in file: yeu:162:15: note:  
		    public def update_interval(tm: var, interval: time_unit) {
		              ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #14   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 15   
9 [0x9]: line: 164 new_class @0 // xxz#xxa   
10 [0xa]:           skpe adx // pc = 10   
11 [0xb]:           dup    
12 [0xc]:           newstr @33 // cannot set update restart interval on non-recurring job   
13 [0xd]:           call @3610 // <std#illegal_state_exception.illegal_state_exception>   
14 [0xe]:           throw    
15 [0xf]:           nop   
16 [0x10]: line: 166 movl 0   
17 [0x11]:           movn #18   
19 [0x13]:           pushobj   
20 [0x14]:           movg @39 // @yed#yee.ygi   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           call @3430 // <std#yaf.yja.adsm>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 34   
28 [0x1c]: line: 167 pushl 0   
29 [0x1d]:           call @3292 // <yed#yee.yew.admi>   
30 [0x1e]: line: 168 movl 0   
31 [0x1f]:           movn #13   
33 [0x21]:           del   
34 [0x22]:           nop   
35 [0x23]: line: 171 pushl 2   
36 [0x24]:           movg @50 // @std#yaf.yju   
37 [0x25]:           movn #3   
39 [0x27]:           pushobj   
40 [0x28]:           call @3430 // <std#yaf.yja.adsm>   
41 [0x29]:           loadval ebx   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 54   
44 [0x2c]: line: 172 ipushl #1   
45 [0x2d]:           call @3439 // <std#yaf.yji.adsv>   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #11   
49 [0x31]:           loadval ebx   
50 [0x32]:           movi #0, adx   
52 [0x34]:           rmov adx, ebx   
53 [0x35]:           jmp @113   
54 [0x36]:           pushl 2   
55 [0x37]:           movg @50 // @std#yaf.yju   
56 [0x38]:           movn #2   
58 [0x3a]:           pushobj   
59 [0x3b]:           call @3430 // <std#yaf.yja.adsm>   
60 [0x3c]:           loadval ebx   
61 [0x3d]:           movr cmt, ebx   
62 [0x3e]:           jne 75   
63 [0x3f]: line: 174 ipushl #1   
64 [0x40]:           movi #1000, ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           div ecx, ebx -> ebx   
68 [0x44]:           movl 0   
69 [0x45]:           movn #11   
71 [0x47]:           movi #0, adx   
73 [0x49]:           rmov adx, ebx   
74 [0x4a]:           jmp @113   
75 [0x4b]:           pushl 2   
76 [0x4c]:           movg @50 // @std#yaf.yju   
77 [0x4d]:           movn #1   
79 [0x4f]:           pushobj   
80 [0x50]:           call @3430 // <std#yaf.yja.adsm>   
81 [0x51]:           loadval ebx   
82 [0x52]:           movr cmt, ebx   
83 [0x53]:           jne 93   
84 [0x54]: line: 176 ipushl #1   
85 [0x55]:           movl 0   
86 [0x56]:           movn #11   
88 [0x58]:           loadval ebx   
89 [0x59]:           movi #0, adx   
91 [0x5b]:           rmov adx, ebx   
92 [0x5c]:           jmp @113   
93 [0x5d]:           pushl 2   
94 [0x5e]:           movg @50 // @std#yaf.yju   
95 [0x5f]:           movn #0   
97 [0x61]:           pushobj   
98 [0x62]:           call @3430 // <std#yaf.yja.adsm>   
99 [0x63]:           loadval ebx   
100 [0x64]:           movr cmt, ebx   
101 [0x65]:           jne 113   
102 [0x66]: line: 178 ipushl #1   
103 [0x67]:           movi #1000, ebx   
105 [0x69]:           loadval ecx   
106 [0x6a]:           mul ecx, ebx -> ebx   
107 [0x6b]:           movl 0   
108 [0x6c]:           movn #11   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           rmov adx, ebx   
113 [0x71]:           nop   
114 [0x72]: line: 181 movl 0   
115 [0x73]:           movn #18   
117 [0x75]:           pushobj   
118 [0x76]:           movg @39 // @yed#yee.ygi   
119 [0x77]:           movn #1   
121 [0x79]:           pushobj   
122 [0x7a]:           call @3430 // <std#yaf.yja.adsm>   
123 [0x7b]:           loadval ebx   
124 [0x7c]:           movr cmt, ebx   
125 [0x7d]:           jne 128   
126 [0x7e]: line: 182 pushl 0   
127 [0x7f]:           call @3307 // <yed#yee.yew.adnb>   
128 [0x80]:           nop   
129 [0x81]:           ret   


function: yed#yee.yew.adnb[3307] params(0) in file: yeu:185:18: note:  
		    protected def reschedule() {
		                 ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #11   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3441 // <std#yaf.yji.adsx>   
17 [0x11]:           loadval ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           sub ecx, ebx -> ebx   
20 [0x14]:           smovr_2 ebx, fp+1   
21 [0x15]: line: 188 call @3329 // <yed#yee.ygy.adnx>   
22 [0x16]:           movl 0   
23 [0x17]:           movn #5   
25 [0x19]:           pushobj   
26 [0x1a]:           call @3271 // <yed#yee.yeg.adli>   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #11   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movg @50 // @std#yaf.yju   
35 [0x23]:           movn #1   
37 [0x25]:           pushobj   
38 [0x26]:           call @3270 // <yed#yee.yeg.adlh>   
39 [0x27]:           popobj2    
40 [0x28]:           smovr_3 fp+2   
41 [0x29]: line: 192 movl 0   
42 [0x2a]:           movn #6   
44 [0x2c]:           sizeof ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movi #1, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           sub ecx, ebx -> ebx   
50 [0x32]:           newobj_arry ebx   
51 [0x33]:           popobj2    
52 [0x34]:           smovr_3 fp+3   
53 [0x35]: line: 193 istorel 0, fp+4   
55 [0x37]: line: 194 istorel 1, fp+5   
57 [0x39]:           ipushl #5   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #6   
61 [0x3d]:           sizeof ebx   
62 [0x3e]:           loadval ecx   
63 [0x3f]:           lt ecx, ebx   
64 [0x40]:           movr ebx, cmt   
65 [0x41]:           movr cmt, ebx   
66 [0x42]:           jne 91   
67 [0x43]: line: 195 movl 0   
68 [0x44]:           movn #6   
70 [0x46]:           pushobj   
71 [0x47]:           loadl ebx, fp+5   
72 [0x48]:           popobj2    
73 [0x49]:           movr adx, ebx   
74 [0x4a]:           chklen adx   
75 [0x4b]:           movnd adx   
76 [0x4c]:           pushobj   
77 [0x4d]:           pushl 3   
78 [0x4e]:           loadl ebx, fp+4   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+4   
82 [0x52]:           movr ebx, egx   
83 [0x53]:           popobj2    
84 [0x54]:           movr adx, ebx   
85 [0x55]:           chklen adx   
86 [0x56]:           movnd adx   
87 [0x57]:           popobj   
88 [0x58]:           iaddl 1, fp@5   
90 [0x5a]:           jmp @57   
91 [0x5b]: line: 198 movl 0   
92 [0x5c]:           movn #17   
94 [0x5e]:           movi #0, adx   
96 [0x60]:           iaload ebx, adx   
97 [0x61]:           movr cmt, ebx   
98 [0x62]:           jne 102   
99 [0x63]: line: 199 pushl 2   
100 [0x64]:           call @3274 // <yed#yee.yeg.adll>   
101 [0x65]:           pop   
102 [0x66]:           nop   
103 [0x67]: line: 200 pushl 2   
104 [0x68]:           pushl 3   
105 [0x69]:           call @3272 // <yed#yee.yeg.adlj>   
106 [0x6a]:           pop   
107 [0x6b]: line: 202 movl 0   
108 [0x6c]:           movn #0   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           iaload ebx, adx   
113 [0x71]:           movr cmt, ebx   
114 [0x72]:           jne 132   
115 [0x73]: line: 203 movl 0   
116 [0x74]:           movn #0   
118 [0x76]:           movi #0, adx   
120 [0x78]:           iaload ebx, adx   
121 [0x79]:           rstore ebx   
122 [0x7a]:           movl 2   
123 [0x7b]:           movn #1   
125 [0x7d]:           movn #0   
127 [0x7f]:           loadval ebx   
128 [0x80]:           movi #0, adx   
130 [0x82]:           rmov adx, ebx   
131 [0x83]:           jmp @206   
132 [0x84]:           movl 0   
133 [0x85]:           movn #1   
135 [0x87]:           movi #0, adx   
137 [0x89]:           iaload ebx, adx   
138 [0x8a]:           movr cmt, ebx   
139 [0x8b]:           jne 157   
140 [0x8c]: line: 204 movl 0   
141 [0x8d]:           movn #1   
143 [0x8f]:           movi #0, adx   
145 [0x91]:           iaload ebx, adx   
146 [0x92]:           rstore ebx   
147 [0x93]:           movl 2   
148 [0x94]:           movn #1   
150 [0x96]:           movn #1   
152 [0x98]:           loadval ebx   
153 [0x99]:           movi #0, adx   
155 [0x9b]:           rmov adx, ebx   
156 [0x9c]:           jmp @206   
157 [0x9d]:           movl 0   
158 [0x9e]:           movn #2   
160 [0xa0]:           movi #0, adx   
162 [0xa2]:           iaload ebx, adx   
163 [0xa3]:           movr cmt, ebx   
164 [0xa4]:           jne 182   
165 [0xa5]: line: 205 movl 0   
166 [0xa6]:           movn #2   
168 [0xa8]:           movi #0, adx   
170 [0xaa]:           iaload ebx, adx   
171 [0xab]:           rstore ebx   
172 [0xac]:           movl 2   
173 [0xad]:           movn #1   
175 [0xaf]:           movn #2   
177 [0xb1]:           loadval ebx   
178 [0xb2]:           movi #0, adx   
180 [0xb4]:           rmov adx, ebx   
181 [0xb5]:           jmp @206   
182 [0xb6]:           movl 0   
183 [0xb7]:           movn #3   
185 [0xb9]:           movi #0, adx   
187 [0xbb]:           iaload ebx, adx   
188 [0xbc]:           movr cmt, ebx   
189 [0xbd]:           jne 206   
190 [0xbe]: line: 206 movl 0   
191 [0xbf]:           movn #3   
193 [0xc1]:           movi #0, adx   
195 [0xc3]:           iaload ebx, adx   
196 [0xc4]:           rstore ebx   
197 [0xc5]:           movl 2   
198 [0xc6]:           movn #1   
200 [0xc8]:           movn #3   
202 [0xca]:           loadval ebx   
203 [0xcb]:           movi #0, adx   
205 [0xcd]:           rmov adx, ebx   
206 [0xce]:           nop   
207 [0xcf]: line: 209 ipushl #1   
208 [0xd0]:           movi #0, ebx   
210 [0xd2]:           loadval ecx   
211 [0xd3]:           gt ecx, ebx   
212 [0xd4]:           movr ebx, cmt   
213 [0xd5]:           movr cmt, ebx   
214 [0xd6]:           jne 219   
215 [0xd7]: line: 210 pushl 2   
216 [0xd8]:           ipushl #1   
217 [0xd9]:           call @3269 // <yed#yee.yeg.adlg>   
218 [0xda]:           pop   
219 [0xdb]:           nop   
220 [0xdc]: line: 211 movl 0   
221 [0xdd]:           movn #8   
223 [0xdf]:           movi #0, adx   
225 [0xe1]:           iaload ebx, adx   
226 [0xe2]:           movr cmt, ebx   
227 [0xe3]:           jne 238   
228 [0xe4]: line: 212 pushl 2   
229 [0xe5]:           movl 0   
230 [0xe6]:           movn #9   
232 [0xe8]:           movi #0, adx   
234 [0xea]:           iaload ebx, adx   
235 [0xeb]:           rstore ebx   
236 [0xec]:           call @3268 // <yed#yee.yeg.adlf>   
237 [0xed]:           pop   
238 [0xee]:           nop   
239 [0xef]: line: 214 movl 2   
240 [0xf0]:           movn #1   
242 [0xf2]:           pushobj   
243 [0xf3]:           movl 0   
244 [0xf4]:           movn #13   
246 [0xf6]:           popobj   
247 [0xf7]: line: 215 movl 2   
248 [0xf8]:           movn #0   
250 [0xfa]:           pushobj   
251 [0xfb]:           movl 2   
252 [0xfc]:           movn #1   
254 [0xfe]:           pushobj   
255 [0xff]:           call @3284 // <yed#yee.yeo.adma>   
256 [0x100]:           ret   


function: yed#yee.adnc[3308] params(0) in file: yfw:12:14: note:  
		protected def start_scheduler() {
		             ^

0 [0x0]: line: 13 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 14 movg @35 // @yed#yee   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 15 call @3309 // <yed#yee.adnd>   
17 [0x11]:          nop   
18 [0x12]: line: 16 new_class @0 // xxz#xxa   
19 [0x13]:          pushobj   
20 [0x14]:          dup    
21 [0x15]:          new_class @0 // xxz#xxa   
22 [0x16]:          skip @0 // pc = 22   
23 [0x17]:          dup    
24 [0x18]:          newstr @34 // task_scheduler   
25 [0x19]:          call @3540 // <std#string.string>   
26 [0x1a]:          istore 3312   
28 [0x1c]:          movg @35 // @yed#yee   
29 [0x1d]:          movn #5   
31 [0x1f]:          movn #2   
33 [0x21]:          pushobj   
34 [0x22]:          call @3386 // <std.io#thread.thread>   
35 [0x23]:          movg @35 // @yed#yee   
36 [0x24]:          movn #3   
38 [0x26]:          popobj   
39 [0x27]: line: 17 movg @35 // @yed#yee   
40 [0x28]:          movn #3   
42 [0x2a]:          pushobj   
43 [0x2b]:          pushnull    
44 [0x2c]:          call @3388 // <std.io#thread.start>   
45 [0x2d]:          pop   
46 [0x2e]:          movg @35 // @yed#yee   
47 [0x2f]:          movn #5   
49 [0x31]:          _ulck   
50 [0x32]:          ret   


function: yed#yee.adnd[3309] params(0) in file: yfw:21:12: note:  
		private def calculate_max_threads() {
		           ^

0 [0x0]: line: 22 call @3481 // <platform.kernel#yky.ylf.aduo>   
1 [0x1]:          ipopl 0   
2 [0x2]: line: 23 movi #2, ebx   
4 [0x4]:          mull ebx, fp@0   
5 [0x5]: line: 24 movi #4, ebx   
7 [0x7]:          subl ebx, fp@0   
8 [0x8]: line: 26 ipushl #0   
9 [0x9]:          movi #2, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 42   
16 [0x10]: line: 27 ipushl #0   
17 [0x11]:          ldc ebx // 0.75   
18 [0x12]:          loadval ecx   
19 [0x13]:          mul ecx, ebx -> ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          call @1999 // <yzv#yzw.aboi>   
22 [0x16]:          movg @35 // @yed#yee   
23 [0x17]:          movn #0   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 28 ipushl #0   
30 [0x1e]:          ldc ebx // 0.25   
31 [0x1f]:          loadval ecx   
32 [0x20]:          mul ecx, ebx -> ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @1999 // <yzv#yzw.aboi>   
35 [0x23]:          movg @35 // @yed#yee   
36 [0x24]:          movn #1   
38 [0x26]:          loadval ebx   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          nop   
43 [0x2b]: line: 31 movg @35 // @yed#yee   
44 [0x2c]:          movn #0   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          iaload ebx, adx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movi #0, ebx   
52 [0x34]:          loadval ecx   
53 [0x35]:          test ecx, ebx   
54 [0x36]:          jne 64   
55 [0x37]: line: 32 istore 1   
57 [0x39]:          movg @35 // @yed#yee   
58 [0x3a]:          movn #0   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]:          nop   
65 [0x41]: line: 34 movg @35 // @yed#yee   
66 [0x42]:          movn #1   
68 [0x44]:          movi #0, adx   
70 [0x46]:          iaload ebx, adx   
71 [0x47]:          rstore ebx   
72 [0x48]:          movi #0, ebx   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          test ecx, ebx   
76 [0x4c]:          jne 86   
77 [0x4d]: line: 35 istore 1   
79 [0x4f]:          movg @35 // @yed#yee   
80 [0x50]:          movn #1   
82 [0x52]:          loadval ebx   
83 [0x53]:          movi #0, adx   
85 [0x55]:          rmov adx, ebx   
86 [0x56]:          nop   
87 [0x57]: line: 36 movg @35 // @yed#yee   
88 [0x58]:          movn #0   
90 [0x5a]:          movi #0, adx   
92 [0x5c]:          iaload ebx, adx   
93 [0x5d]:          rstore ebx   
94 [0x5e]:          movg @35 // @yed#yee   
95 [0x5f]:          movn #1   
97 [0x61]:          movi #0, adx   
99 [0x63]:          iaload ebx, adx   
100 [0x64]:          loadval ecx   
101 [0x65]:          add ecx, ebx -> ebx   
102 [0x66]:          rstore ebx   
103 [0x67]:          movg @35 // @yed#yee   
104 [0x68]:          movn #2   
106 [0x6a]:          loadval ebx   
107 [0x6b]:          movi #0, adx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          ret   


function: yed#yee.adne[3310] params(1) in file: yfw:39:4: note:  
		def set_thread_max(max: var) {
		   ^

0 [0x0]: line: 40 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 41 movg @35 // @yed#yee   
5 [0x5]:          movn #3   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          not ebx, ebx   
11 [0xb]:          movr cmt, ebx   
12 [0xc]:          jne 19   
13 [0xd]: line: 42 new_class @0 // xxz#xxa   
14 [0xe]:          shr adx, adx -> adx   
15 [0xf]:          dup    
16 [0x10]:          newstr @37 // cannot modify max thread count after task library has started, try calling this before your first task   
17 [0x11]:          call @3607 // <std#illegal_argument_exception.illegal_argument_exception>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 46 ipushl #0   
21 [0x15]:          movi #2, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          gte ecx, ebx   
25 [0x19]:          movr ebx, cmt   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 116   
28 [0x1c]: line: 47 ipushl #0   
29 [0x1d]:          movi #2, ebx   
31 [0x1f]:          loadval ecx   
32 [0x20]:          gt ecx, ebx   
33 [0x21]:          movr ebx, cmt   
34 [0x22]:          movr cmt, ebx   
35 [0x23]:          jne 62   
36 [0x24]: line: 48 ipushl #0   
37 [0x25]:          ldc ebx // 0.75   
38 [0x26]:          loadval ecx   
39 [0x27]:          mul ecx, ebx -> ebx   
40 [0x28]:          rstore ebx   
41 [0x29]:          call @1999 // <yzv#yzw.aboi>   
42 [0x2a]:          movg @35 // @yed#yee   
43 [0x2b]:          movn #0   
45 [0x2d]:          loadval ebx   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          rmov adx, ebx   
49 [0x31]: line: 49 ipushl #0   
50 [0x32]:          ldc ebx // 0.25   
51 [0x33]:          loadval ecx   
52 [0x34]:          mul ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @1999 // <yzv#yzw.aboi>   
55 [0x37]:          movg @35 // @yed#yee   
56 [0x38]:          movn #1   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          rmov adx, ebx   
62 [0x3e]:          nop   
63 [0x3f]: line: 52 movg @35 // @yed#yee   
64 [0x40]:          movn #0   
66 [0x42]:          movi #0, adx   
68 [0x44]:          iaload ebx, adx   
69 [0x45]:          rstore ebx   
70 [0x46]:          movi #0, ebx   
72 [0x48]:          loadval ecx   
73 [0x49]:          test ecx, ebx   
74 [0x4a]:          jne 84   
75 [0x4b]: line: 53 istore 1   
77 [0x4d]:          movg @35 // @yed#yee   
78 [0x4e]:          movn #0   
80 [0x50]:          loadval ebx   
81 [0x51]:          movi #0, adx   
83 [0x53]:          rmov adx, ebx   
84 [0x54]:          nop   
85 [0x55]: line: 55 movg @35 // @yed#yee   
86 [0x56]:          movn #1   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          iaload ebx, adx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          movi #0, ebx   
94 [0x5e]:          loadval ecx   
95 [0x5f]:          test ecx, ebx   
96 [0x60]:          jne 106   
97 [0x61]: line: 56 istore 1   
99 [0x63]:          movg @35 // @yed#yee   
100 [0x64]:          movn #1   
102 [0x66]:          loadval ebx   
103 [0x67]:          movi #0, adx   
105 [0x69]:          rmov adx, ebx   
106 [0x6a]:          nop   
107 [0x6b]: line: 57 ipushl #0   
108 [0x6c]:          movg @35 // @yed#yee   
109 [0x6d]:          movn #2   
111 [0x6f]:          loadval ebx   
112 [0x70]:          movi #0, adx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          jmp @122   
116 [0x74]: line: 59 new_class @0 // xxz#xxa   
117 [0x75]:          shr adx, adx -> adx   
118 [0x76]:          dup    
119 [0x77]:          newstr @38 // cannot have less than 2 max threads   
120 [0x78]:          call @3607 // <std#illegal_argument_exception.illegal_argument_exception>   
121 [0x79]:          throw    
122 [0x7a]:          nop   
123 [0x7b]:          movg @35 // @yed#yee   
124 [0x7c]:          movn #5   
126 [0x7e]:          _ulck   
127 [0x7f]:          ret   


function: yed#yee.adnf[3311] params(0) in file: yfw:64:4: note:  
		def get_thread_max() : var {
		   ^

0 [0x0]: line: 65 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 66 movg @35 // @yed#yee   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 67 call @3309 // <yed#yee.adnd>   
17 [0x11]:          nop   
18 [0x12]: line: 68 movg @35 // @yed#yee   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          return_val ebx   
25 [0x19]:          movg @35 // @yed#yee   
26 [0x1a]:          movn #5   
28 [0x1c]:          _ulck   
29 [0x1d]:          ret   
30 [0x1e]:          movg @35 // @yed#yee   
31 [0x1f]:          movn #5   
33 [0x21]:          _ulck   


function: yed#yee.adng[3312] params(1) in file: yfw:72:12: note:  
		private def scheduler_main(args : object[]) : var
		           ^

0 [0x0]: line: 74 istorel 36000, fp+1   
2 [0x2]: line: 75 movg @35 // @yed#yee   
3 [0x3]: line: 76 movn #5   
5 [0x5]:          movn #0   
7 [0x7]:          smovr_3 fp+2   
8 [0x8]: line: 77 movi #1, ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 194   
12 [0xc]: line: 79 call @3400 // <std.io#thread.yield>   
13 [0xd]: line: 80 istorel 0, fp+3   
15 [0xf]:          ipushl #3   
16 [0x10]:          pushl 2   
17 [0x11]:          call @3812 // <yed#yee.yix.aelt>   
18 [0x12]:          loadval ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 173   
24 [0x18]: line: 81 pushl 2   
25 [0x19]:          ipushl #3   
26 [0x1a]:          call @3775 // <yed#yee.yix.aejn>   
27 [0x1b]:          popobj2    
28 [0x1c]:          smovr_3 fp+4   
29 [0x1d]: line: 83 movl 4   
30 [0x1e]:          movn #12   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movi #0, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          tne ecx, ebx   
40 [0x28]:          jne 85   
41 [0x29]: line: 84 call @3441 // <std#yaf.yji.adsx>   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          rstore ebx   
44 [0x2c]:          movl 4   
45 [0x2d]:          movn #12   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          iaload ebx, adx   
50 [0x32]:          loadval ecx   
51 [0x33]:          gte ecx, ebx   
52 [0x34]:          movr ebx, cmt   
53 [0x35]:          movr cmt, ebx   
54 [0x36]:          jne 83   
55 [0x37]: line: 85 movi #0, ebx   
57 [0x39]:          movl 4   
58 [0x3a]:          movn #12   
60 [0x3c]:          movi #0, adx   
62 [0x3e]:          rmov adx, ebx   
63 [0x3f]: line: 86 pushl 4   
64 [0x40]:          call @3316 // <yed#yee.adnk>   
65 [0x41]:          ipopl 5   
66 [0x42]: line: 88 loadl ebx, fp+5   
67 [0x43]:          skne ebx // pc = 75   
68 [0x44]:          movl 4   
69 [0x45]:          movn #8   
71 [0x47]:          movi #0, adx   
73 [0x49]:          iaload ebx, adx   
74 [0x4a]:          not ebx, ebx   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 82   
77 [0x4d]: line: 89 pushl 2   
78 [0x4e]:          pushl 4   
79 [0x4f]:          istore 3874   
81 [0x51]:          call @3816 // <yed#yee.yix.aema>   
82 [0x52]:          nop   
83 [0x53]:          nop   
84 [0x54]:          jmp @169   
85 [0x55]:          movl 4   
86 [0x56]:          movn #8   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          iaload ebx, adx   
91 [0x5b]:          movr cmt, ebx   
92 [0x5c]:          jne 158   
93 [0x5d]: line: 93 movl 4   
94 [0x5e]:          movn #4   
96 [0x60]:          pushobj   
97 [0x61]:          pushnull    
98 [0x62]:          itest ebx   
99 [0x63]:          movr cmt, ebx   
100 [0x64]:          jne 104   
101 [0x65]: line: 94 pushl 4   
102 [0x66]:          call @3316 // <yed#yee.adnk>   
103 [0x67]:          pop   
104 [0x68]:          nop   
105 [0x69]: line: 97 movl 4   
106 [0x6a]:          movn #18   
108 [0x6c]:          pushobj   
109 [0x6d]:          movg @39 // @yed#yee.ygi   
110 [0x6e]:          movn #1   
112 [0x70]:          pushobj   
113 [0x71]:          call @3430 // <std#yaf.yja.adsm>   
114 [0x72]:          loadval ebx   
115 [0x73]:          skne ebx // pc = 137   
116 [0x74]:          call @3441 // <std#yaf.yji.adsx>   
117 [0x75]:          loadval ebx   
118 [0x76]:          rstore ebx   
119 [0x77]:          movl 4   
120 [0x78]:          movn #10   
122 [0x7a]:          movi #0, adx   
124 [0x7c]:          iaload ebx, adx   
125 [0x7d]:          rstore ebx   
126 [0x7e]:          movl 4   
127 [0x7f]:          movn #9   
129 [0x81]:          movi #0, adx   
131 [0x83]:          iaload ebx, adx   
132 [0x84]:          loadval ecx   
133 [0x85]:          add ecx, ebx -> ebx   
134 [0x86]:          loadval ecx   
135 [0x87]:          gte ecx, ebx   
136 [0x88]:          movr ebx, cmt   
137 [0x89]:          movr cmt, ebx   
138 [0x8a]:          jne 156   
139 [0x8b]: line: 98 movl 4   
140 [0x8c]:          movn #13   
142 [0x8e]:          pushobj   
143 [0x8f]:          pushnull    
144 [0x90]:          itest ebx   
145 [0x91]:          movr cmt, ebx   
146 [0x92]:          jne 148   
147 [0x93]:          jmp @139   
148 [0x94]: line: 99 pushl 4   
149 [0x95]:          call @3291 // <yed#yee.yew.admh>   
150 [0x96]: line: 100 movg @35 // @yed#yee   
151 [0x97]:           movn #5   
153 [0x99]:           pushobj   
154 [0x9a]:           pushl 4   
155 [0x9b]:           call @3286 // <yed#yee.yeo.admc>   
156 [0x9c]:           nop   
157 [0x9d]:           jmp @169   
158 [0x9e]: line: 103 pushl 4   
159 [0x9f]:           call @3316 // <yed#yee.adnk>   
160 [0xa0]:           loadval ebx   
161 [0xa1]:           movr cmt, ebx   
162 [0xa2]:           jne 168   
163 [0xa3]: line: 104 pushl 2   
164 [0xa4]:           pushl 4   
165 [0xa5]:           istore 3875   
167 [0xa7]:           call @3816 // <yed#yee.yix.aema>   
168 [0xa8]:           nop   
169 [0xa9]:           nop   
170 [0xaa]:           iaddl 1, fp@3   
172 [0xac]:           jmp @15   
173 [0xad]: line: 109 loadl ebx, fp+1   
174 [0xae]:           movr egx, ebx   
175 [0xaf]:           dec ebx   
176 [0xb0]:           smovr_2 ebx, fp+1   
177 [0xb1]:           movr ebx, egx   
178 [0xb2]:           rstore ebx   
179 [0xb3]:           movi #0, ebx   
181 [0xb5]:           loadval ecx   
182 [0xb6]:           lte ecx, ebx   
183 [0xb7]:           movr ebx, cmt   
184 [0xb8]:           movr cmt, ebx   
185 [0xb9]:           jne 189   
186 [0xba]: line: 110 istorel 36000, fp+1   
188 [0xbc]: line: 111 call @3314 // <yed#yee.adni>   
189 [0xbd]:           nop   
190 [0xbe]: line: 114 istore 5   
192 [0xc0]:           call @3396 // <std.io#thread.sleep>   
193 [0xc1]:           jmp @8   
194 [0xc2]: line: 116 istorel 0, fp+0   
196 [0xc4]:           ret   


function: yed#yee.adnh[3313] params(1) in file: yfw:119:12: note:  
		private def get_host(long_running : var) : thread {
		           ^

0 [0x0]: line: 120 movl 1   
1 [0x1]:           del   
2 [0x2]: line: 121 loadl ebx, fp+0   
3 [0x3]:           movr cmt, ebx   
4 [0x4]:           jne 12   
5 [0x5]: line: 122 movg @35 // @yed#yee   
6 [0x6]:           movn #5   
8 [0x8]:           movn #2   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]:           jmp @18   
12 [0xc]: line: 124 movg @35 // @yed#yee   
13 [0xd]:           movn #5   
15 [0xf]:           movn #3   
17 [0x11]:           smovr_3 fp+1   
18 [0x12]:           nop   
19 [0x13]: line: 127 pushl 1   
20 [0x14]:           istore 3876   
22 [0x16]:           call @3243 // <std.io#ybq.ycg.adkg>   
23 [0x17]:           popobj2    
24 [0x18]:           smovr_3 fp+2   
25 [0x19]: line: 135 movl 2   
26 [0x1a]:           checknull   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 166   
29 [0x1d]: line: 136 loadl ebx, fp+0   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 99   
32 [0x20]: line: 137 movg @35 // @yed#yee   
33 [0x21]:           movn #1   
35 [0x23]:           movi #0, adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           movi #0, ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           gt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 97   
46 [0x2e]: line: 138 movg @35 // @yed#yee   
47 [0x2f]:           movn #1   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           movr egx, ebx   
53 [0x35]:           dec ebx   
54 [0x36]:           movi #0, adx   
56 [0x38]:           rmov adx, ebx   
57 [0x39]: line: 139 new_class @0 // xxz#xxa   
58 [0x3a]:           _putc adx   
59 [0x3b]:           dup    
60 [0x3c]:           call @3320 // <yed#yee.ygs.adno>   
61 [0x3d]:           popobj2    
62 [0x3e]:           smovr_3 fp+3   
63 [0x3f]: line: 140 new_class @0 // xxz#xxa   
64 [0x40]:           pushobj   
65 [0x41]:           dup    
66 [0x42]:           new_class @0 // xxz#xxa   
67 [0x43]:           skip @0 // pc = 67   
68 [0x44]:           dup    
69 [0x45]:           newstr @39 // long_term_worker_thread#   
70 [0x46]:           call @3540 // <std#string.string>   
71 [0x47]:           pushl 1   
72 [0x48]:           call @3238 // <std.io#ybq.ycg.adkz>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movi #1, ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           add ecx, ebx -> ebx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           call @3572 // <std#string.operator+>   
81 [0x51]:           istore 3301   
83 [0x53]:           pushl 1   
84 [0x54]:           call @3386 // <std.io#thread.thread>   
85 [0x55]:           popobj2    
86 [0x56]:           smovr_3 fp+2   
87 [0x57]: line: 141 movg @35 // @yed#yee   
88 [0x58]:           movn #5   
90 [0x5a]:           movn #1   
92 [0x5c]:           pushobj   
93 [0x5d]:           pushl 2   
94 [0x5e]:           pushl 3   
95 [0x5f]:           call @3703 // <yed#yee.yao.aeeo>   
96 [0x60]:           pop   
97 [0x61]:           nop   
98 [0x62]:           jmp @165   
99 [0x63]: line: 144 movg @35 // @yed#yee   
100 [0x64]:           movn #0   
102 [0x66]:           movi #0, adx   
104 [0x68]:           iaload ebx, adx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           movi #0, ebx   
108 [0x6c]:           loadval ecx   
109 [0x6d]:           gt ecx, ebx   
110 [0x6e]:           movr ebx, cmt   
111 [0x6f]:           movr cmt, ebx   
112 [0x70]:           jne 164   
113 [0x71]: line: 145 movg @35 // @yed#yee   
114 [0x72]:           movn #0   
116 [0x74]:           movi #0, adx   
118 [0x76]:           iaload ebx, adx   
119 [0x77]:           movr egx, ebx   
120 [0x78]:           dec ebx   
121 [0x79]:           movi #0, adx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]: line: 146 new_class @0 // xxz#xxa   
125 [0x7d]:           _putc adx   
126 [0x7e]:           dup    
127 [0x7f]:           call @3320 // <yed#yee.ygs.adno>   
128 [0x80]:           popobj2    
129 [0x81]:           smovr_3 fp+4   
130 [0x82]: line: 147 new_class @0 // xxz#xxa   
131 [0x83]:           pushobj   
132 [0x84]:           dup    
133 [0x85]:           new_class @0 // xxz#xxa   
134 [0x86]:           skip @0 // pc = 134   
135 [0x87]:           dup    
136 [0x88]:           newstr @40 // worker_thread#   
137 [0x89]:           call @3540 // <std#string.string>   
138 [0x8a]:           pushl 1   
139 [0x8b]:           call @3238 // <std.io#ybq.ycg.adkz>   
140 [0x8c]:           loadval ebx   
141 [0x8d]:           rstore ebx   
142 [0x8e]:           movi #1, ebx   
144 [0x90]:           loadval ecx   
145 [0x91]:           add ecx, ebx -> ebx   
146 [0x92]:           rstore ebx   
147 [0x93]:           call @3572 // <std#string.operator+>   
148 [0x94]:           istore 3301   
150 [0x96]:           pushl 1   
151 [0x97]:           call @3386 // <std.io#thread.thread>   
152 [0x98]:           popobj2    
153 [0x99]:           smovr_3 fp+2   
154 [0x9a]: line: 148 movg @35 // @yed#yee   
155 [0x9b]:           movn #5   
157 [0x9d]:           movn #1   
159 [0x9f]:           pushobj   
160 [0xa0]:           pushl 2   
161 [0xa1]:           pushl 4   
162 [0xa2]:           call @3703 // <yed#yee.yao.aeeo>   
163 [0xa3]:           pop   
164 [0xa4]:           nop   
165 [0xa5]:           nop   
166 [0xa6]:           nop   
167 [0xa7]: line: 153 movl 2   
168 [0xa8]:           returnobj   
169 [0xa9]:           ret   


function: yed#yee.adni[3314] params(0) in file: yfw:157:12: note:  
		private def kill_threads() {
		           ^

0 [0x0]: line: 158 movg @35 // @yed#yee   
1 [0x1]:           movn #5   
3 [0x3]:           movn #2   
5 [0x5]:           smovr_3 fp+0   
6 [0x6]: line: 160 call @3441 // <std#yaf.yji.adsx>   
7 [0x7]:           movg @35 // @yed#yee   
8 [0x8]:           movn #4   
10 [0xa]:           loadval ebx   
11 [0xb]:           movi #0, adx   
13 [0xd]:           rmov adx, ebx   
14 [0xe]: line: 161 pushl 0   
15 [0xf]:           istore 3877   
17 [0x11]:           call @3243 // <std.io#ybq.ycg.adkg>   
18 [0x12]:           popobj2    
19 [0x13]:           smovr_3 fp+1   
20 [0x14]: line: 170 movl 1   
21 [0x15]:           checknull   
22 [0x16]:           not ebx, ebx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 28   
25 [0x19]: line: 171 pushl 1   
26 [0x1a]:           call @3394 // <std.io#thread.interrupt>   
27 [0x1b]:           pop   
28 [0x1c]:           nop   
29 [0x1d]: line: 174 movg @35 // @yed#yee   
30 [0x1e]:           movn #5   
32 [0x20]:           movn #3   
34 [0x22]:           smovr_3 fp+0   
35 [0x23]: line: 176 pushl 0   
36 [0x24]:           istore 3878   
38 [0x26]:           call @3243 // <std.io#ybq.ycg.adkg>   
39 [0x27]:           popobj2    
40 [0x28]:           smovr_3 fp+1   
41 [0x29]: line: 183 movl 1   
42 [0x2a]:           checknull   
43 [0x2b]:           not ebx, ebx   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 49   
46 [0x2e]: line: 184 pushl 1   
47 [0x2f]:           call @3394 // <std.io#thread.interrupt>   
48 [0x30]:           pop   
49 [0x31]:           nop   
50 [0x32]:           ret   


function: yed#yee.adnj[3315] params(1) in file: yfw:188:14: note:  
		protected def execute_synchronous(scheduled_job : job) {
		             ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 35   
12 [0xc]: line: 190 movl 0   
13 [0xd]:           movn #12   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @3441 // <std#yaf.yji.adsx>   
20 [0x14]:           loadval ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           sub ecx, ebx -> ebx   
23 [0x17]:           smovr_2 ebx, fp+1   
24 [0x18]: line: 191 ipushl #1   
25 [0x19]:           movi #0, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           gt ecx, ebx   
29 [0x1d]:           movr ebx, cmt   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 34   
32 [0x20]:           ipushl #1   
33 [0x21]:           call @3396 // <std.io#thread.sleep>   
34 [0x22]:           nop   
35 [0x23]:           nop   
36 [0x24]: line: 193 pushl 0   
37 [0x25]:           call @3302 // <yed#yee.yew.admw>   
38 [0x26]:           ret   


function: yed#yee.adnk[3316] params(1) in file: yfw:196:14: note:  
		protected def execute_job(scheduled_job : job) : var {
		             ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #17   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @3313 // <yed#yee.adnh>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+1   
10 [0xa]: line: 199 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 55   
15 [0xf]: line: 200 pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #4   
19 [0x13]:           popobj   
20 [0x14]: line: 201 movg @35 // @yed#yee   
21 [0x15]:           movn #5   
23 [0x17]:           pushobj   
24 [0x18]:           pushl 1   
25 [0x19]:           call @3285 // <yed#yee.yeo.admb>   
26 [0x1a]:           movl 0   
27 [0x1b]:           movn #19   
29 [0x1d]:           popobj   
30 [0x1e]: line: 202 pushl 0   
31 [0x1f]:           call @3290 // <yed#yee.yew.admg>   
32 [0x20]:           loadval ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           tne ecx, ebx   
38 [0x26]:           jne 50   
39 [0x27]: line: 203 movl 0   
40 [0x28]:           movn #4   
42 [0x2a]:           del   
43 [0x2b]: line: 204 movl 0   
44 [0x2c]:           movn #19   
46 [0x2e]:           del   
47 [0x2f]: line: 205 istorel 0, fp+0   
49 [0x31]:           ret   
50 [0x32]:           nop   
51 [0x33]: line: 208 istorel 1, fp+0   
53 [0x35]:           ret   
54 [0x36]:           jmp @58   
55 [0x37]: line: 209 istorel 0, fp+0   
57 [0x39]:           ret   
58 [0x3a]:           nop   


constructor: yed#yee.ygp.adnl[3317] params(1) in file: ygn:4:34: note:  
		    public cancellation_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3625 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: yed#yee.ygp.adnm[3318] params(1) in file: ygn:5:34: note:  
		    public cancellation_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3626 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: yed#yee.ygp.adnn[3319] params(0) in file: ygn:3:6: note:  
		class cancellation_exception base runtime_except {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3627 // <std#runtime_exception.runtime_exception>   
2 [0x2]:         ret   


constructor: yed#yee.ygs.adno[3320] params(0) in file: ygq:5:6: note:  
		class job_controller {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: yed#yee.adnp[3321] params(0) in file: ygv:5:4: note:  
		def finish() {
		   ^

0 [0x0]: line: 6 new_class @0 // xxz#xxa   
1 [0x1]:         put adx   
2 [0x2]:         dup    
3 [0x3]:         call @3319 // <yed#yee.ygp.adnn>   
4 [0x4]:         throw    
5 [0x5]:         ret   


function: yed#yee.ygy.adnq[3322] params(1) in file: ygv:10:15: note:  
		    static def with_timeout(mills_time : var) : job_builder {
		              ^

0 [0x0]: line: 11 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3282 // <yed#yee.yeo.adly>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 12 new_class @0 // xxz#xxa   
8 [0x8]:          gte adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @35 // @yed#yee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3267 // <yed#yee.yeg.adle>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 13 pushl 2   
19 [0x13]:          ipushl #0   
20 [0x14]:          call @3268 // <yed#yee.yeg.adlf>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: yed#yee.ygy.adnr[3323] params(1) in file: ygv:16:15: note:  
		    static def schedule(future : var) : job_builder {
		              ^

0 [0x0]: line: 17 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3282 // <yed#yee.yeo.adly>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 18 new_class @0 // xxz#xxa   
8 [0x8]:          gte adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @35 // @yed#yee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3267 // <yed#yee.yeg.adle>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 19 pushl 2   
19 [0x13]:          ipushl #0   
20 [0x14]:          call @3269 // <yed#yee.yeg.adlg>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: yed#yee.ygy.adns[3324] params(1) in file: ygv:22:15: note:  
		    static def with_name(job_name : string) : job_builder {
		              ^

0 [0x0]: line: 23 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @3283 // <yed#yee.yeo.admz>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 24 new_class @0 // xxz#xxa   
9 [0x9]:          gte adx, adx   
10 [0xa]:          dup    
11 [0xb]:          pushl 1   
12 [0xc]:          movg @35 // @yed#yee   
13 [0xd]:          movn #5   
15 [0xf]:          pushobj   
16 [0x10]:          call @3267 // <yed#yee.yeg.adle>   
17 [0x11]:          popobj2    
18 [0x12]:          smovr_3 fp+2   
19 [0x13]: line: 25 pushl 2   
20 [0x14]:          pushl 0   
21 [0x15]:          call @3271 // <yed#yee.yeg.adli>   
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   


function: yed#yee.ygy.adnt[3325] params(1) in file: ygv:28:15: note:  
		    static def with_args(args : object[]) : job_builder {
		              ^

0 [0x0]: line: 29 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3282 // <yed#yee.yeo.adly>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 30 new_class @0 // xxz#xxa   
8 [0x8]:          gte adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @35 // @yed#yee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3267 // <yed#yee.yeg.adle>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 31 pushl 2   
19 [0x13]:          pushl 0   
20 [0x14]:          call @3272 // <yed#yee.yeg.adlj>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: yed#yee.ygy.adnu[3326] params(2) in file: ygv:34:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]: line: 35 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3282 // <yed#yee.yeo.adly>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 36 new_class @0 // xxz#xxa   
8 [0x8]:          gte adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 3   
11 [0xb]:          movg @35 // @yed#yee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3267 // <yed#yee.yeg.adle>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+4   
18 [0x12]: line: 37 pushl 4   
19 [0x13]:          ipushl #1   
20 [0x14]:          pushl 2   
21 [0x15]:          call @3270 // <yed#yee.yeg.adlh>   
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   


function: yed#yee.ygy.adnv[3327] params(0) in file: ygv:40:12: note:  
			static def block() : job_builder {
		           ^

0 [0x0]: line: 41 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3282 // <yed#yee.yeo.adly>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 42 new_class @0 // xxz#xxa   
8 [0x8]:          gte adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @35 // @yed#yee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3267 // <yed#yee.yeg.adle>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 43 pushl 1   
19 [0x13]:          call @3273 // <yed#yee.yeg.adlk>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: yed#yee.ygy.adnw[3328] params(0) in file: ygv:46:12: note:  
			static def long_term() : job_builder {
		           ^

0 [0x0]: line: 47 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3282 // <yed#yee.yeo.adly>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 48 new_class @0 // xxz#xxa   
8 [0x8]:          gte adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @35 // @yed#yee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3267 // <yed#yee.yeg.adle>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 49 pushl 1   
19 [0x13]:          call @3274 // <yed#yee.yeg.adll>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: yed#yee.ygy.adnx[3329] params(0) in file: ygv:52:15: note:  
		    static def builder() : job_builder {
		              ^

0 [0x0]: line: 53 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3282 // <yed#yee.yeo.adly>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 54 new_class @0 // xxz#xxa   
8 [0x8]:          gte adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @35 // @yed#yee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3267 // <yed#yee.yeg.adle>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 55 movl 1   
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: yed#yee.ygy.adny[3330] params(1) in file: ygv:58:19: note:  
			public static def cancel_all_jobs_by_name(name: string) {
		                  ^

0 [0x0]: line: 59 movg @35 // @yed#yee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @3287 // <yed#yee.yeo.admd>   
6 [0x6]:          ret   


constructor: yed#yee.ygy.adoz[3331] params(0) in file: ygv:9:6: note:  
		class task {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std.io#ybq.adoa[3332] params(2) in file: yhz:4:4: note:  
		def realloc(data: object[], size: var) {
		   ^

0 [0x0]: line: 5 pushl 0   : protected asm start
1 [0x1]:         ipushl #1   
2 [0x2]:         int 0x23   
3 [0x3]:         ret   : protected asm end


function: std.io#ybq.adob[3333] params(2) in file: yhz:12:4: note:  
		def realloc(data: var[], size: var) {
		   ^

0 [0x0]: line: 13 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#ybq.adoc[3334] params(2) in file: yhz:20:4: note:  
		def realloc(data: _int8[], size: var) {
		   ^

0 [0x0]: line: 21 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#ybq.adod[3335] params(2) in file: yhz:28:4: note:  
		def realloc(data: _int16[], size: var) {
		   ^

0 [0x0]: line: 29 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#ybq.adoe[3336] params(2) in file: yhz:36:4: note:  
		def realloc(data: _int32[], size: var) {
		   ^

0 [0x0]: line: 37 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#ybq.adof[3337] params(2) in file: yhz:44:4: note:  
		def realloc(data: _int64[], size: var) {
		   ^

0 [0x0]: line: 45 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#ybq.adog[3338] params(2) in file: yhz:52:4: note:  
		def realloc(data: _uint8[], size: var) {
		   ^

0 [0x0]: line: 53 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#ybq.adoh[3339] params(2) in file: yhz:60:4: note:  
		def realloc(data: _uint16[], size: var) {
		   ^

0 [0x0]: line: 61 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#ybq.adoi[3340] params(2) in file: yhz:68:4: note:  
		def realloc(data: _uint32[], size: var) {
		   ^

0 [0x0]: line: 69 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#ybq.adoj[3341] params(2) in file: yhz:76:4: note:  
		def realloc(data: _uint64[], size: var) {
		   ^

0 [0x0]: line: 77 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#ybq.adok[3342] params(5) in file: yhz:84:4: note:  
		def memcopy(src: object[], dest: object[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 85 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#ybq.adol[3343] params(5) in file: yhz:95:4: note:  
		def memcopy(src: var[], dest: var[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 96 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#ybq.adom[3344] params(5) in file: yhz:106:4: note:  
		def memcopy(src: _int8[], dest: _int8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 107 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#ybq.adon[3345] params(5) in file: yhz:117:4: note:  
		def memcopy(src: _int16[], dest: _int16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 118 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#ybq.adoo[3346] params(5) in file: yhz:128:4: note:  
		def memcopy(src: _int32[], dest: _int32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 129 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#ybq.adop[3347] params(5) in file: yhz:139:4: note:  
		def memcopy(src: _int64[], dest: _int64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 140 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#ybq.adoq[3348] params(5) in file: yhz:150:4: note:  
		def memcopy(src: _uint8[], dest: _uint8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 151 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#ybq.ador[3349] params(5) in file: yhz:161:4: note:  
		def memcopy(src: _uint16[], dest: _uint16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 162 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#ybq.ados[3350] params(5) in file: yhz:172:4: note:  
		def memcopy(src: _uint32[], dest: _uint32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 173 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#ybq.adot[3351] params(5) in file: yhz:183:4: note:  
		def memcopy(src: _uint64[], dest: _uint64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 184 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#ybq.adou[3352] params(3) in file: yhz:194:4: note:  
		def copy(src: object[], srcStart: var, srcEnd: var) : object[] {
		   ^

0 [0x0]: line: 195 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 204 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adov[3353] params(3) in file: yhz:207:4: note:  
		def copy(src: var[], srcStart: var, srcEnd: var) : var[] {
		   ^

0 [0x0]: line: 208 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 217 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adow[3354] params(3) in file: yhz:220:4: note:  
		def copy(src: _int8[], srcStart: var, srcEnd: var) : _int8[] {
		   ^

0 [0x0]: line: 221 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 230 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adox[3355] params(3) in file: yhz:233:4: note:  
		def copy(src: _int16[], srcStart: var, srcEnd: var) : _int16[] {
		   ^

0 [0x0]: line: 234 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 243 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adoy[3356] params(3) in file: yhz:246:4: note:  
		def copy(src: _int32[], srcStart: var, srcEnd: var) : _int32[] {
		   ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 256 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpz[3357] params(3) in file: yhz:259:4: note:  
		def copy(src: _uint8[], srcStart: var, srcEnd: var) : _uint8[] {
		   ^

0 [0x0]: line: 260 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 269 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpa[3358] params(3) in file: yhz:272:4: note:  
		def copy(src: _uint16[], srcStart: var, srcEnd: var) : _uint16[] {
		   ^

0 [0x0]: line: 273 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 282 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpb[3359] params(3) in file: yhz:285:4: note:  
		def copy(src: _uint32[], srcStart: var, srcEnd: var) : _uint32[] {
		   ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 295 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpc[3360] params(3) in file: yhz:298:4: note:  
		def copy(src: _uint64[], srcStart: var, srcEnd: var) : _uint64[] {
		   ^

0 [0x0]: line: 299 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 308 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpd[3361] params(3) in file: yhz:311:4: note:  
		def copy(src: _int64[], srcStart: var, srcEnd: var) : _int64[] {
		   ^

0 [0x0]: line: 312 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 321 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpe[3362] params(3) in file: yhz:325:4: note:  
		def invert(src: object[], start: var, len: var) : object[] {
		   ^

0 [0x0]: line: 326 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 335 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpf[3363] params(3) in file: yhz:338:4: note:  
		def invert(src: var[], start: var, len: var) : var[] {
		   ^

0 [0x0]: line: 339 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 348 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpg[3364] params(3) in file: yhz:351:4: note:  
		def invert(src: _int8[], start: var, len: var) : _int8[] {
		   ^

0 [0x0]: line: 352 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 361 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adph[3365] params(3) in file: yhz:364:4: note:  
		def invert(src: _int16[], start: var, len: var) : _int16[] {
		   ^

0 [0x0]: line: 365 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 374 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpi[3366] params(3) in file: yhz:377:4: note:  
		def invert(src: _int32[], start: var, len: var) : _int32[] {
		   ^

0 [0x0]: line: 378 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 387 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpj[3367] params(3) in file: yhz:390:4: note:  
		def invert(src: _int64[], start: var, len: var) : _int64[] {
		   ^

0 [0x0]: line: 391 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 400 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpk[3368] params(3) in file: yhz:403:4: note:  
		def invert(src: _uint8[], start: var, len: var) : _uint8[] {
		   ^

0 [0x0]: line: 404 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 413 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpl[3369] params(3) in file: yhz:416:4: note:  
		def invert(src: _uint16[], start: var, len: var) : _uint16[] {
		   ^

0 [0x0]: line: 417 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 426 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpm[3370] params(3) in file: yhz:429:4: note:  
		def invert(src: _uint32[], start: var, len: var) : _uint32[] {
		   ^

0 [0x0]: line: 430 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 439 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.adpn[3371] params(3) in file: yhz:442:4: note:  
		def invert(src: _uint64[], start: var, len: var) : _uint64[] {
		   ^

0 [0x0]: line: 443 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 452 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#ybq.yhp.adpo[3372] params(0) in file: yhn:12:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 13 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#ybq.yhp.adpp[3373] params(1) in file: yhn:20:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 21 pushl 1   
1 [0x1]:          call @3581 // <std#string.size>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 22 istorel 0, fp+3   
5 [0x5]: line: 23 istorel 0, fp+4   
7 [0x7]:          ipushl #4   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 265   
14 [0xe]: line: 25 pushl 1   
15 [0xf]:          ipushl #4   
16 [0x10]:          call @3563 // <std#string.operator[>   
17 [0x11]:          loadval ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #92, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          test ecx, ebx   
23 [0x17]:          jne 112   
24 [0x18]: line: 26 ipushl #3   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          gt ecx, ebx   
29 [0x1d]:          movr ebx, cmt   
30 [0x1e]:          skne ebx // pc = 48   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #3   
36 [0x24]:          movi #1, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          sub ecx, ebx -> ebx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          iaload ebx, adx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #47, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          tne ecx, ebx   
49 [0x31]:          jne 66   
50 [0x32]: line: 27 istore 47   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          loadl ebx, fp+3   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          smovr_2 ebx, fp+3   
60 [0x3c]:          movr ebx, egx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          loadval ebx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          nop   
67 [0x43]: line: 29 ipushl #4   
68 [0x44]:          movi #1, ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          add ecx, ebx -> ebx   
72 [0x48]:          rstore ebx   
73 [0x49]:          loadl ebx, fp+2   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          lt ecx, ebx   
76 [0x4c]:          movr ebx, cmt   
77 [0x4d]:          skne ebx // pc = 92   
78 [0x4e]:          movl 1   
79 [0x4f]:          pushobj   
80 [0x50]:          ipushl #4   
81 [0x51]:          movi #1, ebx   
83 [0x53]:          loadval ecx   
84 [0x54]:          add ecx, ebx -> ebx   
85 [0x55]:          rstore ebx   
86 [0x56]:          call @3563 // <std#string.operator[>   
87 [0x57]:          loadval ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          movi #92, ebx   
91 [0x5b]:          loadval ecx   
92 [0x5c]:          test ecx, ebx   
93 [0x5d]:          jne 110   
94 [0x5e]: line: 30 iaddl 1, fp@4   
96 [0x60]: line: 31 pushl 1   
97 [0x61]:          ipushl #4   
98 [0x62]:          call @3563 // <std#string.operator[>   
99 [0x63]:          loadval ebx   
100 [0x64]:          rstore ebx   
101 [0x65]:          movi #92, ebx   
103 [0x67]:          loadval ecx   
104 [0x68]:          test ecx, ebx   
105 [0x69]:          je 94   
106 [0x6a]: line: 33 loadl ebx, fp+4   
107 [0x6b]:          movr egx, ebx   
108 [0x6c]:          dec ebx   
109 [0x6d]:          smovr_2 ebx, fp+4   
110 [0x6e]:          nop   
111 [0x6f]:          jmp @261   
112 [0x70]:          pushl 1   
113 [0x71]:          ipushl #4   
114 [0x72]:          call @3563 // <std#string.operator[>   
115 [0x73]:          loadval ebx   
116 [0x74]:          rstore ebx   
117 [0x75]:          movi #47, ebx   
119 [0x77]:          loadval ecx   
120 [0x78]:          test ecx, ebx   
121 [0x79]:          jne 244   
122 [0x7a]: line: 37 ipushl #4   
123 [0x7b]:          movi #1, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          add ecx, ebx -> ebx   
127 [0x7f]:          rstore ebx   
128 [0x80]:          loadl ebx, fp+2   
129 [0x81]:          loadval ecx   
130 [0x82]:          lt ecx, ebx   
131 [0x83]:          movr ebx, cmt   
132 [0x84]:          skne ebx // pc = 147   
133 [0x85]:          movl 1   
134 [0x86]:          pushobj   
135 [0x87]:          ipushl #4   
136 [0x88]:          movi #1, ebx   
138 [0x8a]:          loadval ecx   
139 [0x8b]:          add ecx, ebx -> ebx   
140 [0x8c]:          rstore ebx   
141 [0x8d]:          call @3563 // <std#string.operator[>   
142 [0x8e]:          loadval ebx   
143 [0x8f]:          rstore ebx   
144 [0x90]:          movi #47, ebx   
146 [0x92]:          loadval ecx   
147 [0x93]:          test ecx, ebx   
148 [0x94]:          jne 192   
149 [0x95]: line: 38 iaddl 1, fp@4   
151 [0x97]: line: 39 pushl 1   
152 [0x98]:          ipushl #4   
153 [0x99]:          call @3563 // <std#string.operator[>   
154 [0x9a]:          loadval ebx   
155 [0x9b]:          rstore ebx   
156 [0x9c]:          movi #47, ebx   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          test ecx, ebx   
160 [0xa0]:          je 149   
161 [0xa1]: line: 42 ipushl #3   
162 [0xa2]:          movi #0, ebx   
164 [0xa4]:          loadval ecx   
165 [0xa5]:          gt ecx, ebx   
166 [0xa6]:          movr ebx, cmt   
167 [0xa7]:          skne ebx // pc = 185   
168 [0xa8]:          movl 0   
169 [0xa9]:          movn #1   
171 [0xab]:          pushobj   
172 [0xac]:          ipushl #3   
173 [0xad]:          movi #1, ebx   
175 [0xaf]:          loadval ecx   
176 [0xb0]:          sub ecx, ebx -> ebx   
177 [0xb1]:          popobj2    
178 [0xb2]:          movr adx, ebx   
179 [0xb3]:          chklen adx   
180 [0xb4]:          iaload ebx, adx   
181 [0xb5]:          rstore ebx   
182 [0xb6]:          movi #47, ebx   
184 [0xb8]:          loadval ecx   
185 [0xb9]:          tne ecx, ebx   
186 [0xba]:          jne 191   
187 [0xbb]: line: 43 loadl ebx, fp+4   
188 [0xbc]:          movr egx, ebx   
189 [0xbd]:          dec ebx   
190 [0xbe]:          smovr_2 ebx, fp+4   
191 [0xbf]:          nop   
192 [0xc0]:          nop   
193 [0xc1]: line: 46 ipushl #3   
194 [0xc2]:          movi #0, ebx   
196 [0xc4]:          loadval ecx   
197 [0xc5]:          test ecx, ebx   
198 [0xc6]:          movr ebx, cmt   
199 [0xc7]:          skpe ebx // pc = 224   
200 [0xc8]:          ipushl #3   
201 [0xc9]:          movi #0, ebx   
203 [0xcb]:          loadval ecx   
204 [0xcc]:          gt ecx, ebx   
205 [0xcd]:          movr ebx, cmt   
206 [0xce]:          skne ebx // pc = 224   
207 [0xcf]:          movl 0   
208 [0xd0]:          movn #1   
210 [0xd2]:          pushobj   
211 [0xd3]:          ipushl #3   
212 [0xd4]:          movi #1, ebx   
214 [0xd6]:          loadval ecx   
215 [0xd7]:          sub ecx, ebx -> ebx   
216 [0xd8]:          popobj2    
217 [0xd9]:          movr adx, ebx   
218 [0xda]:          chklen adx   
219 [0xdb]:          iaload ebx, adx   
220 [0xdc]:          rstore ebx   
221 [0xdd]:          movi #47, ebx   
223 [0xdf]:          loadval ecx   
224 [0xe0]:          tne ecx, ebx   
225 [0xe1]:          jne 242   
226 [0xe2]: line: 47 istore 47   
228 [0xe4]:          movl 0   
229 [0xe5]:          movn #1   
231 [0xe7]:          pushobj   
232 [0xe8]:          loadl ebx, fp+3   
233 [0xe9]:          movr egx, ebx   
234 [0xea]:          inc ebx   
235 [0xeb]:          smovr_2 ebx, fp+3   
236 [0xec]:          movr ebx, egx   
237 [0xed]:          popobj2    
238 [0xee]:          movr adx, ebx   
239 [0xef]:          chklen adx   
240 [0xf0]:          loadval ebx   
241 [0xf1]:          rmov adx, ebx   
242 [0xf2]:          nop   
243 [0xf3]:          jmp @261   
244 [0xf4]: line: 50 pushl 1   
245 [0xf5]:          ipushl #4   
246 [0xf6]:          call @3563 // <std#string.operator[>   
247 [0xf7]:          movl 0   
248 [0xf8]:          movn #1   
250 [0xfa]:          pushobj   
251 [0xfb]:          loadl ebx, fp+3   
252 [0xfc]:          movr egx, ebx   
253 [0xfd]:          inc ebx   
254 [0xfe]:          smovr_2 ebx, fp+3   
255 [0xff]:          movr ebx, egx   
256 [0x100]:          popobj2    
257 [0x101]:          movr adx, ebx   
258 [0x102]:          chklen adx   
259 [0x103]:          loadval ebx   
260 [0x104]:          rmov adx, ebx   
261 [0x105]:          nop   
262 [0x106]:          iaddl 1, fp@4   
264 [0x108]:          jmp @7   
265 [0x109]: line: 53 new_class @0 // xxz#xxa   
266 [0x10a]:          skip @0 // pc = 266   
267 [0x10b]:          dup    
268 [0x10c]:          movl 0   
269 [0x10d]:          movn #1   
271 [0x10f]:          pushobj   
272 [0x110]:          istore 0   
274 [0x112]:          ipushl #3   
275 [0x113]:          call @3545 // <std#string.string>   
276 [0x114]:          popobj2    
277 [0x115]:          returnobj   
278 [0x116]:          ret   


function: std.io#ybq.yhp.adpq[3374] params(1) in file: yhn:61:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 62 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3566 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 63 istorel 0, fp+3   
9 [0x9]: line: 69 pushl 2   : protected asm start
10 [0xa]:          int 0x25   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 75 loadl ebx, fp+3   : protected asm end
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std.io#ybq.yhp.adpr[3375] params(2) in file: yhn:85:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 86 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3566 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 87 istorel 0, fp+4   
9 [0x9]: line: 93 pushl 3   : protected asm start
10 [0xa]:          loadl ebx, fp+2   
11 [0xb]:          int 0x24   
12 [0xc]:          smovr_2 ebx, fp+4   
13 [0xd]: line: 100 loadl ebx, fp+4   : protected asm end
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


constructor: std.io#ybq.yhp.adps[3376] params(0) in file: yhn:8:16: note:  
		protected class unix_fs base file_system {
		               ^

0 [0x0]:         movi #47, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx: 0   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


function: std.io#ybq.adpt[3377] params(0) in file: yhs:5:4: note:  
		def _srt_thread_start() {
		   ^

0 [0x0]: line: 6 call @3474 // <platform.kernel#yky.ylf.aduh>   
1 [0x1]:         popobj2    
2 [0x2]:         smovr_3 fp+0   
3 [0x3]: line: 7 pushl 0   
4 [0x4]:         call @3451 // <std#yaf.yke.adtk>   
5 [0x5]: line: 9 movi #1, ebx   : protected asm start
7 [0x7]:         movi #0, egx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         movl 0   
12 [0xc]:         movn #5   
14 [0xe]:         rmov adx, egx   
15 [0xf]:         movl 0   
16 [0x10]:         movn #8   
18 [0x12]:         rmov adx, ebx   : protected asm end
19 [0x13]: line: 22 istorel 1, fp+1   
21 [0x15]: line: 23 movl 0   : try start: try block start
22 [0x16]: line: 25 movn #11   
24 [0x18]: line: 26 movi #0, adx   
26 [0x1a]:          iaload ebx, adx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3480 // <platform.kernel#yky.ylf.adun>   
29 [0x1d]:          smov ebx, sp+[-1]   
30 [0x1e]:          calld ebx   
31 [0x1f]:          ipopl 1   
32 [0x20]:          jmp @53   : try block end
33 [0x21]: line: 28 pushl 0   : catch(std#throwable)
34 [0x22]:          call @3415 // <std.io#thread.get_exception_handler>   
35 [0x23]:          pushnull    
36 [0x24]:          itest ebx   
37 [0x25]:          not ebx, ebx   
38 [0x26]:          movr cmt, ebx   
39 [0x27]:          jne 46   
40 [0x28]: line: 29 pushl 0   
41 [0x29]:          call @3415 // <std.io#thread.get_exception_handler>   
42 [0x2a]:          pushl 2   
43 [0x2b]:          invoke_delegate 3185 { static=0, args=1 }   
45 [0x2d]:          jmp @51   
46 [0x2e]: line: 31 pushl 0   
47 [0x2f]:          ipushl #1   
48 [0x30]:          call @3475 // <platform.kernel#yky.ylf.adui>   
49 [0x31]: line: 32 pushl 2   
50 [0x32]:          throw    
51 [0x33]:          nop   
52 [0x34]:          jmp @53   
53 [0x35]:          nop   : try end
54 [0x36]: line: 36 pushl 0   
55 [0x37]:          ipushl #1   
56 [0x38]:          call @3475 // <platform.kernel#yky.ylf.adui>   
57 [0x39]:          ret   


function: std.io#ybq.ycp.adpu[3378] params(1) in file: yhs:64:15: note:  
		    static def at(index: var) : thread_result {
		              ^

0 [0x0]: line: 65 ipushl #0   
1 [0x1]:          movg @33 // @std.io#ybq.ycp   
2 [0x2]:          movn #16   
4 [0x4]:          pushobj   
5 [0x5]:          call @3433 // <std#yaf.yja.adsp>   
6 [0x6]:          loadval ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          jne 29   
10 [0xa]: line: 66 movg @33 // @std.io#ybq.ycp   
11 [0xb]:          movn #17   
13 [0xd]:          pushobj   
14 [0xe]:          movg @33 // @std.io#ybq.ycp   
15 [0xf]:          movn #17   
17 [0x11]:          sizeof ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #1, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          sub ecx, ebx -> ebx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   
29 [0x1d]:          nop   
30 [0x1e]: line: 68 movg @33 // @std.io#ybq.ycp   
31 [0x1f]:          movn #17   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+0   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


constructor: std.io#ybq.ycp.adpv[3379] params(0) in file: yhs:39:7: note:  
		mutate thread_result {
		      ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3435 // <std#yaf.yja.adsr>   
2 [0x2]:         ret   


constructor: std.io#thread.thread[3380] params(0) in file: yhu:7:19: note:  
		    private thread() {} // the user must use standardized constructor
		                  ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         skip @0 // pc = 1   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3540 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]:         ret   


constructor: std.io#thread.thread[3381] params(2) in file: yhu:9:15: note:  
			public thread(name : string, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         skip @0 // pc = 1   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3540 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 10 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 11 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movg @32 // @std.io#ybq.ycg   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #7   
30 [0x1e]:          popobj   
31 [0x1f]: line: 13 movl 0   
32 [0x20]:          movn #7   
34 [0x22]:          pushobj   
35 [0x23]:          call @3240 // <std.io#ybq.ycg.adkb>   
36 [0x24]:          movl 0   
37 [0x25]:          movn #3   
39 [0x27]:          popobj   
40 [0x28]: line: 14 movi #-1, ebx   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 15 movg @45 // @std.io#thread   
49 [0x31]:          movn #0   
51 [0x33]:          movi #0, adx   
53 [0x35]:          iaload ebx, adx   
54 [0x36]:          movr egx, ebx   
55 [0x37]:          inc ebx   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          rmov adx, ebx   
59 [0x3b]:          rstore egx   
60 [0x3c]:          movl 0   
61 [0x3d]:          movn #2   
63 [0x3f]:          loadval ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]: line: 17 movl 0   
68 [0x44]:          movn #7   
70 [0x46]:          pushobj   
71 [0x47]:          pushl 0   
72 [0x48]:          call @3237 // <std.io#ybq.ycg.adjy>   
73 [0x49]:          ret   


constructor: std.io#thread.thread[3382] params(3) in file: yhu:20:15: note:  
			public thread(name : string, daemon: var, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         skip @0 // pc = 1   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3540 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 21 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 22 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 23 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 24 movg @32 // @std.io#ybq.ycg   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #7   
38 [0x26]:          popobj   
39 [0x27]: line: 25 movl 0   
40 [0x28]:          movn #7   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @3240 // <std.io#ybq.ycg.adkb>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 26 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 27 movg @45 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 29 movl 0   
76 [0x4c]:          movn #7   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @3237 // <std.io#ybq.ycg.adjy>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[3383] params(3) in file: yhu:32:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         skip @0 // pc = 1   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3540 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 33 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 34 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 35 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 36 movg @32 // @std.io#ybq.ycg   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #7   
38 [0x26]:          popobj   
39 [0x27]: line: 37 movl 0   
40 [0x28]:          movn #7   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @3240 // <std.io#ybq.ycg.adkb>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 38 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 39 movg @45 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 41 movl 0   
76 [0x4c]:          movn #7   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @3237 // <std.io#ybq.ycg.adjy>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[3384] params(4) in file: yhu:44:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         skip @0 // pc = 1   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3540 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 45 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 46 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 47 ipushl #4   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 48 ipushl #2   
32 [0x20]:          movl 0   
33 [0x21]:          movn #4   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 49 movg @32 // @std.io#ybq.ycg   
40 [0x28]:          movn #0   
42 [0x2a]:          pushobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #7   
46 [0x2e]:          popobj   
47 [0x2f]: line: 50 movl 0   
48 [0x30]:          movn #7   
50 [0x32]:          pushobj   
51 [0x33]:          call @3240 // <std.io#ybq.ycg.adkb>   
52 [0x34]:          movl 0   
53 [0x35]:          movn #3   
55 [0x37]:          popobj   
56 [0x38]: line: 51 movi #-1, ebx   
58 [0x3a]:          movl 0   
59 [0x3b]:          movn #1   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]: line: 52 movg @45 // @std.io#thread   
65 [0x41]:          movn #0   
67 [0x43]:          movi #0, adx   
69 [0x45]:          iaload ebx, adx   
70 [0x46]:          movr egx, ebx   
71 [0x47]:          inc ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]:          rstore egx   
76 [0x4c]:          movl 0   
77 [0x4d]:          movn #2   
79 [0x4f]:          loadval ebx   
80 [0x50]:          movi #0, adx   
82 [0x52]:          rmov adx, ebx   
83 [0x53]: line: 54 movl 0   
84 [0x54]:          movn #7   
86 [0x56]:          pushobj   
87 [0x57]:          pushl 0   
88 [0x58]:          call @3237 // <std.io#ybq.ycg.adjy>   
89 [0x59]:          ret   


constructor: std.io#thread.thread[3385] params(4) in file: yhu:57:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         skip @0 // pc = 1   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3540 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 58 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 59 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 60 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 61 pushl 4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #7   
35 [0x23]:          popobj   
36 [0x24]: line: 62 pushl 4   
37 [0x25]:          call @3240 // <std.io#ybq.ycg.adkb>   
38 [0x26]:          movl 0   
39 [0x27]:          movn #3   
41 [0x29]:          popobj   
42 [0x2a]: line: 63 movi #-1, ebx   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          rmov adx, ebx   
50 [0x32]: line: 64 movg @45 // @std.io#thread   
51 [0x33]:          movn #0   
53 [0x35]:          movi #0, adx   
55 [0x37]:          iaload ebx, adx   
56 [0x38]:          movr egx, ebx   
57 [0x39]:          inc ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]:          rstore egx   
62 [0x3e]:          movl 0   
63 [0x3f]:          movn #2   
65 [0x41]:          loadval ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]: line: 66 movl 0   
70 [0x46]:          movn #7   
72 [0x48]:          pushobj   
73 [0x49]:          pushl 0   
74 [0x4a]:          call @3237 // <std.io#ybq.ycg.adjy>   
75 [0x4b]:          ret   


constructor: std.io#thread.thread[3386] params(3) in file: yhu:69:18: note:  
		    public thread(name : string, main: (object[])(var), group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         skip @0 // pc = 1   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3540 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 70 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 71 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 72 pushl 3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #7   
27 [0x1b]:          popobj   
28 [0x1c]: line: 73 pushl 3   
29 [0x1d]:          call @3240 // <std.io#ybq.ycg.adkb>   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #3   
33 [0x21]:          popobj   
34 [0x22]: line: 74 movi #-1, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 75 movg @45 // @std.io#thread   
43 [0x2b]:          movn #0   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]:          rstore egx   
54 [0x36]:          movl 0   
55 [0x37]:          movn #2   
57 [0x39]:          loadval ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 77 movl 0   
62 [0x3e]:          movn #7   
64 [0x40]:          pushobj   
65 [0x41]:          pushl 0   
66 [0x42]:          call @3237 // <std.io#ybq.ycg.adjy>   
67 [0x43]:          ret   


constructor: std.io#thread.thread[3387] params(5) in file: yhu:80:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         skip @0 // pc = 1   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3540 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 81 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 82 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 83 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 84 ipushl #4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #10   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 85 pushl 5   
40 [0x28]:          movl 0   
41 [0x29]:          movn #7   
43 [0x2b]:          popobj   
44 [0x2c]: line: 86 pushl 5   
45 [0x2d]:          call @3240 // <std.io#ybq.ycg.adkb>   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #3   
49 [0x31]:          popobj   
50 [0x32]: line: 87 movi #-1, ebx   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          rmov adx, ebx   
58 [0x3a]: line: 88 movg @45 // @std.io#thread   
59 [0x3b]:          movn #0   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          iaload ebx, adx   
64 [0x40]:          movr egx, ebx   
65 [0x41]:          inc ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          rstore egx   
70 [0x46]:          movl 0   
71 [0x47]:          movn #2   
73 [0x49]:          loadval ebx   
74 [0x4a]:          movi #0, adx   
76 [0x4c]:          rmov adx, ebx   
77 [0x4d]: line: 90 movl 0   
78 [0x4e]:          movn #7   
80 [0x50]:          pushobj   
81 [0x51]:          pushl 0   
82 [0x52]:          call @3237 // <std.io#ybq.ycg.adjy>   
83 [0x53]:          ret   


function: std.io#thread.start[3388] params(1) in file: yhu:93:15: note:  
		    public def start(args : object[]) : thread_result {
		              ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #-1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 27   
12 [0xc]: line: 95 movl 0   
13 [0xd]:          movn #4   
15 [0xf]:          movi #0, adx   
17 [0x11]:          iaload ebx, adx   
18 [0x12]:          rstore ebx   
19 [0x13]:          call @3468 // <platform.kernel#yky.ylf.adub>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]:          nop   
28 [0x1c]: line: 96 pushl 0   
29 [0x1d]:          pushl 1   
30 [0x1e]:          call @3477 // <platform.kernel#yky.ylf.aduk>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   


function: std.io#thread.start[3389] params(0) in file: yhu:99:15: note:  
		    public def start() : thread_result {
		              ^

0 [0x0]: line: 100 pushl 0   
1 [0x1]:           pushnull    
2 [0x2]:           call @3388 // <std.io#thread.start>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std.io#thread.suspend[3390] params(0) in file: yhu:103:12: note:  
			public def suspend() : thread_result {
		           ^

0 [0x0]: line: 104 pushl 0   
1 [0x1]:           call @3469 // <platform.kernel#yky.ylf.aduc>   
2 [0x2]:           popobj2    
3 [0x3]:           smovr_3 fp+1   
4 [0x4]: line: 105 pushl 1   
5 [0x5]:           movg @33 // @std.io#ybq.ycp   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3430 // <std#yaf.yja.adsm>   
10 [0xa]:           loadval ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]: line: 106 movi #1, ebx   
15 [0xf]:           movl 0   
16 [0x10]:           movn #9   
18 [0x12]:           movi #0, adx   
20 [0x14]:           rmov adx, ebx   
21 [0x15]:           nop   
22 [0x16]: line: 107 movl 1   
23 [0x17]:           returnobj   
24 [0x18]:           ret   


function: std.io#thread.unsuspend[3391] params(0) in file: yhu:110:12: note:  
			public def unsuspend() : thread_result {
		           ^

0 [0x0]: line: 111 pushl 0   
1 [0x1]:           istore 0   
3 [0x3]:           call @3470 // <platform.kernel#yky.ylf.adud>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 112 pushl 1   
7 [0x7]:           movg @33 // @std.io#ybq.ycp   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @3430 // <std#yaf.yja.adsm>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 113 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #9   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 114 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.unsuspend_and_wait[3392] params(0) in file: yhu:117:12: note:  
			public def unsuspend_and_wait() : thread_result {
		           ^

0 [0x0]: line: 118 pushl 0   
1 [0x1]:           istore 1   
3 [0x3]:           call @3470 // <platform.kernel#yky.ylf.adud>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 119 pushl 1   
7 [0x7]:           movg @33 // @std.io#ybq.ycp   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @3430 // <std#yaf.yja.adsm>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 120 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #9   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 121 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.join[3393] params(0) in file: yhu:124:15: note:  
		    public def join() := vm.thread_join(self);
		              ^

0 [0x0]: line: 124 pushl 0   
1 [0x1]:           call @3472 // <platform.kernel#yky.ylf.aduf>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.interrupt[3394] params(0) in file: yhu:126:15: note:  
		    public def interrupt() := vm.kill(self);
		              ^

0 [0x0]: line: 126 pushl 0   
1 [0x1]:           call @3473 // <platform.kernel#yky.ylf.adug>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.current[3395] params(0) in file: yhu:128:22: note:  
		    public static def current() := vm.current_thread();
		                     ^

0 [0x0]: line: 128 call @3474 // <platform.kernel#yky.ylf.aduh>   
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#thread.sleep[3396] params(1) in file: yhu:130:22: note:  
		    public static def sleep(mills_time : var) := time.sleep(milliseconds, mills_time);
		                     ^

0 [0x0]: line: 130 movg @50 // @std#yaf.yju   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #0   
5 [0x5]:           call @3443 // <std#yaf.yji.adtz>   
6 [0x6]:           ret   


function: std.io#thread.suspend_for[3397] params(1) in file: yhu:132:22: note:  
		    public static def suspend_for(mills_time : var) {
		                     ^

0 [0x0]: line: 133 istore 1   
2 [0x2]:           call @3474 // <platform.kernel#yky.ylf.aduh>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #9   
6 [0x6]:           loadval ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]: line: 134 movg @50 // @std#yaf.yju   
11 [0xb]:           movn #1   
13 [0xd]:           pushobj   
14 [0xe]:           ipushl #0   
15 [0xf]:           call @3444 // <std#yaf.yji.adta>   
16 [0x10]: line: 135 istore 0   
18 [0x12]:           call @3474 // <platform.kernel#yky.ylf.aduh>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #9   
22 [0x16]:           loadval ebx   
23 [0x17]:           movi #0, adx   
25 [0x19]:           rmov adx, ebx   
26 [0x1a]:           ret   


function: std.io#thread.exit[3398] params(1) in file: yhu:138:22: note:  
		    public static def exit(code : var) {
		                     ^

0 [0x0]: line: 139 call @3395 // <std.io#thread.current>   
1 [0x1]:           ipushl #0   
2 [0x2]:           call @3475 // <platform.kernel#yky.ylf.adui>   
3 [0x3]: line: 140 hlt   : protected asm start
4 [0x4]:           ret   : protected asm end


function: std.io#thread.hash[3399] params(0) in file: yhu:143:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 144 new_class @0 // xxz#xxa   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #2   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           call @2117 // <std#yaf.yat.absw>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: std.io#thread.yield[3400] params(0) in file: yhu:147:22: note:  
		    public static def yield() := vm.thread_yield();
		                     ^

0 [0x0]: line: 147 call @3476 // <platform.kernel#yky.ylf.aduj>   
1 [0x1]:           ret   


function: std.io#thread.set_exception_handler[3401] params(1) in file: yhu:149:15: note:  
		    public def set_exception_handler(error_handler: uncaught_exception_handler) {
		              ^

0 [0x0]: line: 150 pushl 1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #12   
4 [0x4]:           popobj   
5 [0x5]:           ret   


function: std.io#thread.set_priority[3402] params(1) in file: yhu:153:15: note:  
		    public def set_priority(priority : thread_priority) : thread_result {
		              ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 155 pushl 1   
3 [0x3]:           movg @43 // @std.io#ybq.yhd   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3430 // <std#yaf.yja.adsm>   
8 [0x8]:           loadval ebx   
9 [0x9]:           movr cmt, ebx   
10 [0xa]:           je 29   
11 [0xb]:           pushl 1   
12 [0xc]:           movg @43 // @std.io#ybq.yhd   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @3430 // <std#yaf.yja.adsm>   
17 [0x11]:           loadval ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           je 29   
20 [0x14]:           pushl 1   
21 [0x15]:           movg @43 // @std.io#ybq.yhd   
22 [0x16]:           movn #2   
24 [0x18]:           pushobj   
25 [0x19]:           call @3430 // <std#yaf.yja.adsm>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 41   
29 [0x1d]: line: 159 pushl 0   
30 [0x1e]:           pushl 1   
31 [0x1f]:           call @3433 // <std#yaf.yja.adsp>   
32 [0x20]:           call @3478 // <platform.kernel#yky.ylf.adul>   
33 [0x21]:           popobj2    
34 [0x22]:           pushobj   
35 [0x23]:           movl 0   
36 [0x24]:           _ulck   
37 [0x25]:           popobj2    
38 [0x26]:           returnobj   
39 [0x27]:           ret   
40 [0x28]:           jmp @53   
41 [0x29]: line: 162 new_class @0 // xxz#xxa   
42 [0x2a]:           shr adx, adx -> adx   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @0 // xxz#xxa   
45 [0x2d]:           skip @0 // pc = 45   
46 [0x2e]:           dup    
47 [0x2f]:           newstr @41 // invalid thread priority    
48 [0x30]:           call @3540 // <std#string.string>   
49 [0x31]:           pushl 1   
50 [0x32]:           call @3554 // <std#string.operator+>   
51 [0x33]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
52 [0x34]:           throw    
53 [0x35]:           nop   
54 [0x36]:           movl 0   
55 [0x37]:           _ulck   


function: std.io#thread.remove_thread[3403] params(1) in file: yhu:168:16: note:  
		    private def remove_thread(t : thread) {
		               ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #7   
3 [0x3]:           pushobj   
4 [0x4]:           movl 1   
5 [0x5]:           movn #1   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @3241 // <std.io#ybq.ycg.adkc>   
12 [0xc]:           pop   
13 [0xd]:           ret   


function: std.io#thread.get_id[3404] params(0) in file: yhu:172:15: note:  
		    public def get_id() := id;
		              ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_native_handle[3405] params(0) in file: yhu:173:15: note:  
		    public def get_native_handle() := native_handle;
		              ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_stack_size[3406] params(0) in file: yhu:174:15: note:  
		    public def get_stack_size() := stack_size;
		              ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_name[3407] params(0) in file: yhu:175:15: note:  
		    public def get_name() := name;
		              ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #6   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.is_exited[3408] params(0) in file: yhu:176:15: note:  
		    public def is_exited() := exited;
		              ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #5   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_daemon[3409] params(0) in file: yhu:177:15: note:  
		    public def is_daemon() := daemon;
		              ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_started[3410] params(0) in file: yhu:178:15: note:  
		    public def is_started() := started;
		              ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_suspended[3411] params(0) in file: yhu:179:15: note:  
		    public def is_suspended() := suspended;
		              ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #9   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.set_main[3412] params(1) in file: yhu:180:12: note:  
			public def set_main(main: (object[])(var)) := self->main = main;
		           ^

0 [0x0]: line: 180 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #11   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std.io#thread.is_active[3413] params(0) in file: yhu:181:12: note:  
			public def is_active() := started && !exited;
		           ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           skne ebx // pc = 14   
7 [0x7]:           movl 0   
8 [0x8]:           movn #5   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


function: std.io#thread.get_exit_code[3414] params(0) in file: yhu:182:12: note:  
			public def get_exit_code() := exit_code;
		           ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_exception_handler[3415] params(0) in file: yhu:183:12: note:  
			public def get_exception_handler() := error_handler;
		           ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std.io#thread.operator==[3416] params(1) in file: yhu:185:15: note:  
		    public def operator==(t : thread) : var = native_handle==t.native_handle;
		              ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #1   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#ybq.adry[3417] params(1) in file: yil:4:4: note:  
		def critical_section(block : ()()) {
		   ^

0 [0x0]: line: 5 movg @28 // @std.io#ybq   : protected asm start: try start: try block start
1 [0x1]: line: 6 movn #0   
3 [0x3]:         _lck    
4 [0x4]: line: 11 ipushl #0   : protected asm end
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]:          jmp @8   : try block end
8 [0x8]:          movl 1   : try end
9 [0x9]:          del   
10 [0xa]: line: 13 movg @28 // @std.io#ybq   : protected asm start: finally start
11 [0xb]:          movn #0   
13 [0xd]:          _ulck   
14 [0xe]:          movl 1   : protected asm end
15 [0xf]:          checknull   
16 [0x10]:          je 19   
17 [0x11]:          pushobj   
18 [0x12]:          ret ERR   
19 [0x13]:          nop   : finally end
20 [0x14]:          ret   


function: std.io#ybq.adsa[3418] params(2) in file: yil:21:4: note:  
		def critical_section(block : ()(), lock_obj : object) {
		   ^

0 [0x0]: line: 22 movl 1   : protected asm start: try start: try block start
1 [0x1]: line: 23 _lck    
2 [0x2]: line: 27 ipushl #0   : protected asm end
3 [0x3]:          loadval ebx   
4 [0x4]:          calld ebx   
5 [0x5]:          jmp @6   : try block end
6 [0x6]:          movl 2   : try end
7 [0x7]:          del   
8 [0x8]: line: 29 movl 1   : protected asm start: finally start
9 [0x9]:          _ulck   
10 [0xa]:          movl 2   : protected asm end
11 [0xb]:          checknull   
12 [0xc]:          je 15   
13 [0xd]:          pushobj   
14 [0xe]:          ret ERR   
15 [0xf]:          nop   : finally end
16 [0x10]:          ret   


function: std#yaf.adsb[3419] params(0) in file: yio:6:4: note:  
		def rand() : var {
		   ^

0 [0x0]: line: 7 istore 0   
2 [0x2]:         movi #1, ebx   
4 [0x4]:         rstore ebx   
5 [0x5]:         call @3485 // <platform.kernel#yky.ylf.adus>   
6 [0x6]:         loadval ebx   
7 [0x7]:         return_val ebx   
8 [0x8]:         ret   


function: std#yaf.adsc[3420] params(2) in file: yio:10:4: note:  
		def rand_int(min: var, max: var) : var {
		   ^

0 [0x0]: line: 11 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          call @3483 // <platform.kernel#yky.ylf.aduq>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#yaf.adsd[3421] params(2) in file: yio:14:4: note:  
		def rand_double(min: var, max: var) : var {
		   ^

0 [0x0]: line: 15 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          call @3485 // <platform.kernel#yky.ylf.adus>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#yaf.adse[3422] params(0) in file: yio:18:4: note:  
		def rand_int() : var {
		   ^

0 [0x0]: line: 19 call @3482 // <platform.kernel#yky.ylf.adup>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#yaf.adsf[3423] params(0) in file: yio:22:4: note:  
		def rand_double() : var {
		   ^

0 [0x0]: line: 23 call @3484 // <platform.kernel#yky.ylf.adur>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#yaf.adsg[3424] params(1) in file: yio:26:4: note:  
		def set_seed(seed: var) {
		   ^

0 [0x0]: line: 27 ipushl #0   
1 [0x1]:          movg @14 // @std#yaf   
2 [0x2]:          movn #0   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 28 movg @14 // @std#yaf   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3486 // <platform.kernel#yky.ylf.adut>   
16 [0x10]:          ret   


constructor: std#yaf.yir.adsh[3425] params(0) in file: yio:32:5: note:  
		class tmp {
		    ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#yaf.yja.adsi[3426] params(1) in file: yiy:18:11: note:  
		    _enum_(ord : var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 19 ipushl #1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          mov64 ebx, ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          ret   


constructor: std#yaf.yja.adsj[3427] params(1) in file: yiy:22:11: note:  
		    _enum_(e : _enum_) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 23 movl 1   
2 [0x2]:          movn #1   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          mov64 ebx, ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]: line: 24 movl 1   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          istore 0   
20 [0x14]:          movl 1   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          call @3354 // <std.io#ybq.adow>   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          popobj   
30 [0x1e]:          ret   


overload function: std#yaf.yja.adsk[3428] params(1) in file: yiy:27:8: note:  
		    def operator!=(e : _enum_) : var {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yja.adsl[3429] params(1) in file: yiy:31:8: note:  
		    def operator!=(num : var) : var {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          tne ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


overload function: std#yaf.yja.adsm[3430] params(1) in file: yiy:35:8: note:  
		    def operator==(e : _enum_) : var {
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#yaf.yja.adsn[3431] params(1) in file: yiy:39:8: note:  
		    def operator==(num : var) : var {
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          test ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


function: std#yaf.yja.adso[3432] params(0) in file: yiy:43:8: note:  
		    def get_name() : _int8[] {
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std#yaf.yja.adsp[3433] params(0) in file: yiy:47:8: note:  
		    def get_ordinal() : _int64 {
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#yaf.yja.adsq[3434] params(0) in file: yiy:51:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 52 new_class @0 // xxz#xxa   
1 [0x1]:          skip @0 // pc = 1   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3540 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


constructor: std#yaf.yja.adsr[3435] params(0) in file: yiy:14:17: note:  
		stable ext class _enum_ {
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#yaf.yji.adss[3436] params(0) in file: yjg:9:15: note:  
		    static def nano_time() : var {
		              ^

0 [0x0]: line: 10 istorel 0, fp+0   
2 [0x2]: line: 12 int 0xb   : protected asm start
3 [0x3]:          smovr_2 bmr, fp+0   
4 [0x4]: line: 17 loadl ebx, fp+0   : protected asm end
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#yaf.yji.adst[3437] params(1) in file: yjg:20:15: note:  
		    static def get_os_time(tr: time_request)
		              ^

0 [0x0]: line: 21 pushl 0   
1 [0x1]:          call @3433 // <std#yaf.yja.adsp>   
2 [0x2]:          call @3471 // <platform.kernel#yky.ylf.adue>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#yaf.yji.adsu[3438] params(1) in file: yjg:23:15: note:  
		    static def nano_to_micro(nano: var) : var {
		              ^

0 [0x0]: line: 24 ipushl #0   
1 [0x1]:          movi #1000, ebx   
3 [0x3]:          loadval ecx   
4 [0x4]:          div ecx, ebx -> ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#yaf.yji.adsv[3439] params(1) in file: yjg:27:15: note:  
		    static def nano_to_mills(nano: var) : var {
		              ^

0 [0x0]: line: 28 ipushl #0   
1 [0x1]:          call @3438 // <std#yaf.yji.adsu>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#yaf.yji.adsw[3440] params(1) in file: yjg:31:22: note:  
		    public static def nano_to_secs(nano: var) : var {
		                     ^

0 [0x0]: line: 32 ipushl #0   
1 [0x1]:          call @3439 // <std#yaf.yji.adsv>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#yaf.yji.adsx[3441] params(0) in file: yjg:35:15: note:  
		    static def mills_time() : var {
		              ^

0 [0x0]: line: 36 call @3436 // <std#yaf.yji.adss>   
1 [0x1]:          call @3439 // <std#yaf.yji.adsv>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std#yaf.yji.adsy[3442] params(1) in file: yjg:39:15: note:  
		    static def sleep(time: var) {
		              ^

0 [0x0]: line: 40 movg @50 // @std#yaf.yju   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #0   
5 [0x5]:          call @3443 // <std#yaf.yji.adtz>   
6 [0x6]:          ret   


function: std#yaf.yji.adtz[3443] params(2) in file: yjg:43:15: note:  
		    static def sleep(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 44 loadl ecx, fp+1   
1 [0x1]:          movi #0, ebx   
3 [0x3]:          lt ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 19   
7 [0x7]: line: 45 new_class @0 // xxz#xxa   
8 [0x8]:          mull adx, fp@0   
9 [0x9]:          dup    
10 [0xa]:          new_class @0 // xxz#xxa   
11 [0xb]:          skip @0 // pc = 11   
12 [0xc]:          dup    
13 [0xd]:          newstr @42 // cannot sleep for negative time:    
14 [0xe]:          call @3540 // <std#string.string>   
15 [0xf]:          ipushl #1   
16 [0x10]:          call @3572 // <std#string.operator+>   
17 [0x11]:          call @3650 // <std#error.error>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 47 pushl 0   
21 [0x15]:          movg @50 // @std#yaf.yju   
22 [0x16]:          movn #0   
24 [0x18]:          pushobj   
25 [0x19]:          call @3430 // <std#yaf.yja.adsm>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 38   
29 [0x1d]: line: 48 ipushl #1   
30 [0x1e]:          movi #1000000, ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          mul ecx, ebx -> ebx   
34 [0x22]:          rstore ebx   
35 [0x23]:          call @3445 // <std#yaf.yji.adtb>   
36 [0x24]:          ipopl 1   
37 [0x25]:          jmp @68   
38 [0x26]:          pushl 0   
39 [0x27]:          movg @50 // @std#yaf.yju   
40 [0x28]:          movn #1   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @3430 // <std#yaf.yja.adsm>   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 56   
47 [0x2f]: line: 50 ipushl #1   
48 [0x30]:          movi #1000, ebx   
50 [0x32]:          loadval ecx   
51 [0x33]:          mul ecx, ebx -> ebx   
52 [0x34]:          rstore ebx   
53 [0x35]:          call @3445 // <std#yaf.yji.adtb>   
54 [0x36]:          ipopl 1   
55 [0x37]:          jmp @68   
56 [0x38]:          pushl 0   
57 [0x39]:          movg @50 // @std#yaf.yju   
58 [0x3a]:          movn #2   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @3430 // <std#yaf.yja.adsm>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 68   
65 [0x41]: line: 52 ipushl #1   
66 [0x42]:          call @3445 // <std#yaf.yji.adtb>   
67 [0x43]:          ipopl 1   
68 [0x44]:          nop   
69 [0x45]: line: 55 loadl ebx, fp+1   : protected asm start
70 [0x46]:          sleep ebx   
71 [0x47]:          ret   : protected asm end


function: std#yaf.yji.adta[3444] params(2) in file: yjg:61:15: note:  
		    static def wait(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 62 ipushl #1   
1 [0x1]:          movg @48 // @std#yaf.yji   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          tne ecx, ebx   
9 [0x9]:          jne 69   
10 [0xa]: line: 63 loadl ecx, fp+1   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          lt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 29   
17 [0x11]: line: 64 new_class @0 // xxz#xxa   
18 [0x12]:          mull adx, fp@0   
19 [0x13]:          dup    
20 [0x14]:          new_class @0 // xxz#xxa   
21 [0x15]:          skip @0 // pc = 21   
22 [0x16]:          dup    
23 [0x17]:          newstr @42 // cannot sleep for negative time:    
24 [0x18]:          call @3540 // <std#string.string>   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3572 // <std#string.operator+>   
27 [0x1b]:          call @3650 // <std#error.error>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 66 pushl 0   
31 [0x1f]:          movg @50 // @std#yaf.yju   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          call @3430 // <std#yaf.yja.adsm>   
36 [0x24]:          loadval ebx   
37 [0x25]:          movr cmt, ebx   
38 [0x26]:          jne 43   
39 [0x27]: line: 67 movi #1000, ebx   
41 [0x29]:          mull ebx, fp@1   
42 [0x2a]:          jmp @68   
43 [0x2b]:          pushl 0   
44 [0x2c]:          movg @50 // @std#yaf.yju   
45 [0x2d]:          movn #2   
47 [0x2f]:          pushobj   
48 [0x30]:          call @3430 // <std#yaf.yja.adsm>   
49 [0x31]:          loadval ebx   
50 [0x32]:          movr cmt, ebx   
51 [0x33]:          jne 56   
52 [0x34]: line: 69 movi #1000, ebx   
54 [0x36]:          divl ebx, fp@1   
55 [0x37]:          jmp @68   
56 [0x38]:          pushl 0   
57 [0x39]:          movg @50 // @std#yaf.yju   
58 [0x3a]:          movn #3   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @3430 // <std#yaf.yja.adsm>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 68   
65 [0x41]: line: 71 movi #1000000, ebx   
67 [0x43]:          divl ebx, fp@1   
68 [0x44]:          nop   
69 [0x45]:          nop   
70 [0x46]: line: 75 loadl adx, fp+1   : protected asm start
71 [0x47]:          int 0x14   
72 [0x48]:          ret   : protected asm end


function: std#yaf.yji.adtb[3445] params(1) in file: yjg:87:23: note:  
		    private static def adjust_time(usec: var) : var {
		                      ^

0 [0x0]: line: 89 call @3462 // <ykk#ykl.ykr.adtv>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 11   
4 [0x4]: line: 90 ipushl #0   
5 [0x5]:          movi #1000, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          div ecx, ebx -> ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   
11 [0xb]:          nop   
12 [0xc]: line: 93 loadl ebx, fp+0   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#yaf.yji.adtd[3446] params(2) in file: yjg:96:15: note:  
		    static def measure(tm_unit: time_unit, block: ()()) : var {
		              ^

0 [0x0]: line: 97 call @3436 // <std#yaf.yji.adss>   
1 [0x1]:          ipopl 2   
2 [0x2]:          istorel 0, fp+3   
4 [0x4]: line: 98 ipushl #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]: line: 99 call @3436 // <std#yaf.yji.adss>   
8 [0x8]:          ipopl 3   
9 [0x9]: line: 101 pushl 0   
10 [0xa]:           movg @50 // @std#yaf.yju   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           call @3430 // <std#yaf.yja.adsm>   
15 [0xf]:           loadval ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 103 ipushl #2   
19 [0x13]:           call @3440 // <std#yaf.yji.adsw>   
20 [0x14]:           ipopl 2   
21 [0x15]: line: 104 ipushl #3   
22 [0x16]:           call @3440 // <std#yaf.yji.adsw>   
23 [0x17]:           ipopl 3   
24 [0x18]:           jmp @56   
25 [0x19]:           pushl 0   
26 [0x1a]:           movg @50 // @std#yaf.yju   
27 [0x1b]:           movn #1   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @3430 // <std#yaf.yja.adsm>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 41   
34 [0x22]: line: 107 ipushl #2   
35 [0x23]:           call @3439 // <std#yaf.yji.adsv>   
36 [0x24]:           ipopl 2   
37 [0x25]: line: 108 ipushl #3   
38 [0x26]:           call @3439 // <std#yaf.yji.adsv>   
39 [0x27]:           ipopl 3   
40 [0x28]:           jmp @56   
41 [0x29]:           pushl 0   
42 [0x2a]:           movg @50 // @std#yaf.yju   
43 [0x2b]:           movn #2   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @3430 // <std#yaf.yja.adsm>   
47 [0x2f]:           loadval ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 56   
50 [0x32]: line: 111 ipushl #2   
51 [0x33]:           call @3438 // <std#yaf.yji.adsu>   
52 [0x34]:           ipopl 2   
53 [0x35]: line: 112 ipushl #3   
54 [0x36]:           call @3438 // <std#yaf.yji.adsu>   
55 [0x37]:           ipopl 3   
56 [0x38]:           nop   
57 [0x39]: line: 116 ipushl #3   
58 [0x3a]:           loadl ebx, fp+2   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           sub ecx, ebx -> ebx   
61 [0x3d]:           return_val ebx   
62 [0x3e]:           ret   


function: std#yaf.yji.adtg[3447] params(3) in file: yjg:119:15: note:  
		    static def measure(tm_unit: time_unit, args: object[], block: (object[])()) : var {
		              ^

0 [0x0]: line: 120 call @3436 // <std#yaf.yji.adss>   
1 [0x1]:           ipopl 3   
2 [0x2]:           istorel 0, fp+4   
4 [0x4]: line: 121 ipushl #2   
5 [0x5]:           pushl 1   
6 [0x6]:           smov ebx, sp+[-1]   
7 [0x7]:           calld ebx   
8 [0x8]: line: 122 call @3436 // <std#yaf.yji.adss>   
9 [0x9]:           ipopl 4   
10 [0xa]: line: 124 pushl 0   
11 [0xb]:           movg @50 // @std#yaf.yju   
12 [0xc]:           movn #0   
14 [0xe]:           pushobj   
15 [0xf]:           call @3430 // <std#yaf.yja.adsm>   
16 [0x10]:           loadval ebx   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 26   
19 [0x13]: line: 126 ipushl #3   
20 [0x14]:           call @3440 // <std#yaf.yji.adsw>   
21 [0x15]:           ipopl 3   
22 [0x16]: line: 127 ipushl #4   
23 [0x17]:           call @3440 // <std#yaf.yji.adsw>   
24 [0x18]:           ipopl 4   
25 [0x19]:           jmp @57   
26 [0x1a]:           pushl 0   
27 [0x1b]:           movg @50 // @std#yaf.yju   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           call @3430 // <std#yaf.yja.adsm>   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 42   
35 [0x23]: line: 130 ipushl #3   
36 [0x24]:           call @3439 // <std#yaf.yji.adsv>   
37 [0x25]:           ipopl 3   
38 [0x26]: line: 131 ipushl #4   
39 [0x27]:           call @3439 // <std#yaf.yji.adsv>   
40 [0x28]:           ipopl 4   
41 [0x29]:           jmp @57   
42 [0x2a]:           pushl 0   
43 [0x2b]:           movg @50 // @std#yaf.yju   
44 [0x2c]:           movn #2   
46 [0x2e]:           pushobj   
47 [0x2f]:           call @3430 // <std#yaf.yja.adsm>   
48 [0x30]:           loadval ebx   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 57   
51 [0x33]: line: 134 ipushl #3   
52 [0x34]:           call @3438 // <std#yaf.yji.adsu>   
53 [0x35]:           ipopl 3   
54 [0x36]: line: 135 ipushl #4   
55 [0x37]:           call @3438 // <std#yaf.yji.adsu>   
56 [0x38]:           ipopl 4   
57 [0x39]:           nop   
58 [0x3a]: line: 139 ipushl #4   
59 [0x3b]:           loadl ebx, fp+3   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           sub ecx, ebx -> ebx   
62 [0x3e]:           return_val ebx   
63 [0x3f]:           ret   


constructor: std#yaf.yji.adth[3448] params(0) in file: yjg:6:6: note:  
		class time {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#yaf.yke.adti[3449] params(0) in file: ykc:13:15: note:  
		    public def to_string() := new string();
		              ^

0 [0x0]: line: 13 new_class @0 // xxz#xxa   
1 [0x1]:          skip @0 // pc = 1   
2 [0x2]:          dup    
3 [0x3]:          call @3598 // <std#string.string>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#yaf.yke.adtj[3450] params(0) in file: ykc:15:8: note:  
		    def wait() {
		       ^

0 [0x0]: line: 16 pushl 0   : protected asm start
1 [0x1]:          int 0x3c   
2 [0x2]:          ret   : protected asm end


function: std#yaf.yke.adtk[3451] params(0) in file: ykc:22:8: note:  
		    def notify() {
		       ^

0 [0x0]: line: 23 pushl 0   : protected asm start
1 [0x1]:          int 0x3d   
2 [0x2]:          ret   : protected asm end


function: std#yaf.yke.adtl[3452] params(1) in file: ykc:29:8: note:  
		    def notify(mills: var) {
		       ^

0 [0x0]: line: 30 pushl 0   : protected asm start
1 [0x1]:          loadl ebx, fp+1   
2 [0x2]:          int 0x3e   
3 [0x3]:          ret   : protected asm end


function: std#yaf.yke.adtm[3453] params(0) in file: ykc:37:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 39 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          istore 0   
5 [0x5]:          call @2117 // <std#yaf.yat.absw>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std#yaf.yke.adtn[3454] params(0) in file: ykc:42:8: note:  
		    def guid() : long {
		       ^

0 [0x0]: line: 44 new_class @0 // xxz#xxa   
1 [0x1]:          sub adx, adx -> adx   
2 [0x2]:          dup    
3 [0x3]:          movg @14 // @std#yaf   
4 [0x4]:          movn #1   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr egx, ebx   
10 [0xa]:          inc ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]:          rstore egx   
15 [0xf]:          call @2117 // <std#yaf.yat.absw>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


constructor: std#yaf.yke.adto[3455] params(0) in file: ykc:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         ret   


std#yaf.yki.adtp[3456] params(0) in file: ykg:11:8: note:  
		    def hash() : long;
		       ^



std#yaf.yki.adtq[3457] params(0) in file: ykg:12:8: note:  
		    def guid() : long;
		       ^



constructor: std#yaf.yki.adtr[3458] params(0) in file: ykg:10:10: note:  
		interface unique {
		         ^

0 [0x0]:         ret   


function: ykk#ykl.adts[3459] params(1) in file: ykj:5:4: note:  
		def load_library(name: string) {
		   ^

0 [0x0]: line: 6 pushl 0   
1 [0x1]:         call @3492 // <platform.kernel#yky.yli.advz>   
2 [0x2]:         ret   


function: ykk#ykl.adtt[3460] params(1) in file: ykj:9:4: note:  
		def free_library(name: string): var {
		   ^

0 [0x0]: line: 10 pushl 0   
1 [0x1]:          call @3493 // <platform.kernel#yky.yli.adva>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: ykk#ykl.adtu[3461] params(2) in file: ykj:13:4: note:  
		def link(name: string, library: string): var {
		   ^

0 [0x0]: line: 14 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @3494 // <platform.kernel#yky.yli.advb>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: ykk#ykl.ykr.adtv[3462] params(0) in file: ykp:9:15: note:  
		    static def is_windows() : var {
		              ^

0 [0x0]: line: 10 movg @54 // @ykk#ykl.ykr   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @43 // win   
5 [0x5]:          call @3557 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: ykk#ykl.ykr.adtw[3463] params(0) in file: ykp:13:15: note:  
		    static def is_linux() : var {
		              ^

0 [0x0]: line: 14 movg @54 // @ykk#ykl.ykr   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @44 // posix   
5 [0x5]:          call @3557 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: ykk#ykl.ykr.adtx[3464] params(0) in file: ykp:3:6: note:  
		class build {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: platform.kernel#stack_state.stack_state[3465] params(0) in file: ykw:3:6: note:  
		class stack_state {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform.kernel#yky.ylf.aduz[3466] params(0) in file: yld:6:15: note:  
		    static def get_frame_info() : stack_state {
		              ^

0 [0x0]: line: 7 int 0x35   : protected asm start
1 [0x1]:         popobj2    
2 [0x2]:         returnobj   
3 [0x3]:         ret   
4 [0x4]: line: 13 pushnull    : protected asm end
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: platform.kernel#yky.ylf.adua[3467] params(1) in file: yld:16:15: note:  
		    static def get_stack_trace(info : stack_state) : string {
		              ^

0 [0x0]: line: 17 pushl 0   : protected asm start
1 [0x1]:          int 0x36   
2 [0x2]:          popobj2    
3 [0x3]:          returnobj   
4 [0x4]:          ret   
5 [0x5]: line: 24 pushnull    : protected asm end
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: platform.kernel#yky.ylf.adub[3468] params(1) in file: yld:27:15: note:  
		    static def thread_create(daemon: var) : var {
		              ^

0 [0x0]: line: 28 istorel 0, fp+1   
2 [0x2]: line: 29 movi #3377, adx   : protected asm start
4 [0x4]:          loadl ebx, fp+0   
5 [0x5]:          int 0x10   
6 [0x6]:          smovr_2 ebx, fp+1   
7 [0x7]: line: 36 loadl ebx, fp+1   : protected asm end
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: platform.kernel#yky.ylf.aduc[3469] params(1) in file: yld:39:15: note:  
		    static def suspend(t: thread) : thread_result {
		              ^

0 [0x0]: line: 40 pushl 0   
1 [0x1]:          call @3405 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 41 istorel 0, fp+2   
5 [0x5]: line: 43 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0x12   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 49 ipushl #2   : protected asm end
9 [0x9]:          call @3378 // <std.io#ybq.ycp.adpu>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#yky.ylf.adud[3470] params(2) in file: yld:52:15: note:  
		    static def unsuspend(t: thread, wait: var) : thread_result {
		              ^

0 [0x0]: line: 53 pushl 0   
1 [0x1]:          call @3405 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 54 istorel 0, fp+3   
5 [0x5]: line: 56 loadl adx, fp+2   : protected asm start
6 [0x6]:          loadl ebx, fp+1   
7 [0x7]:          int 0x13   
8 [0x8]:          smovr_2 cmt, fp+3   
9 [0x9]: line: 63 ipushl #3   : protected asm end
10 [0xa]:          call @3378 // <std.io#ybq.ycp.adpu>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


function: platform.kernel#yky.ylf.adue[3471] params(1) in file: yld:66:15: note:  
		    static def get_os_time(tr : var) : var {
		              ^

0 [0x0]: line: 67 istorel 0, fp+1   
2 [0x2]: line: 68 loadl ebx, fp+0   : protected asm start
3 [0x3]:          int 0x2   
4 [0x4]:          smovr_2 bmr, fp+1   
5 [0x5]: line: 74 loadl ebx, fp+1   : protected asm end
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: platform.kernel#yky.ylf.aduf[3472] params(1) in file: yld:77:15: note:  
		    static def thread_join(t: thread) : thread_result {
		              ^

0 [0x0]: line: 78 pushl 0   
1 [0x1]:          call @3405 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 79 istorel 0, fp+2   
5 [0x5]: line: 81 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xd   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 87 ipushl #2   : protected asm end
9 [0x9]:          call @3378 // <std.io#ybq.ycp.adpu>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#yky.ylf.adug[3473] params(1) in file: yld:90:15: note:  
		    static def kill(t: thread) : thread_result {
		              ^

0 [0x0]: line: 91 pushl 0   
1 [0x1]:          call @3405 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 92 istorel 0, fp+2   
5 [0x5]: line: 94 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xe   
7 [0x7]:          smovr_2 cmt, fp+2   : protected asm end
8 [0x8]: line: 100 pushl 0   
9 [0x9]:           istore 1   
11 [0xb]:           call @3475 // <platform.kernel#yky.ylf.adui>   
12 [0xc]: line: 101 ipushl #2   
13 [0xd]:           call @3378 // <std.io#ybq.ycp.adpu>   
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   


function: platform.kernel#yky.ylf.aduh[3474] params(0) in file: yld:104:15: note:  
		    static def current_thread() : thread {
		              ^

0 [0x0]: line: 105 int 0x15   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 112 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#yky.ylf.adui[3475] params(2) in file: yld:115:15: note:  
		    static def exit_thread(t: thread, code: var) {
		              ^

0 [0x0]: line: 116 movi #1, ebx   : protected asm start
2 [0x2]:           movi #0, egx   
4 [0x4]:           movi #-1, ecx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #5   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movl 0   
13 [0xd]:           movn #8   
15 [0xf]:           rmov adx, egx   
16 [0x10]:           loadl egx, fp+1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           rmov adx, egx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           rmov adx, ecx   
25 [0x19]:           ret   : protected asm end


function: platform.kernel#yky.ylf.aduj[3476] params(0) in file: yld:140:15: note:  
		    static def thread_yield() {
		              ^

0 [0x0]: line: 141 int 0x1c   : protected asm start
1 [0x1]:           ret   : protected asm end


function: platform.kernel#yky.ylf.aduk[3477] params(2) in file: yld:146:15: note:  
		    static def thread_start(t: thread, args: object[]) : thread_result {
		              ^

0 [0x0]: line: 147 pushl 0   
1 [0x1]:           call @3405 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 148 pushl 0   
4 [0x4]:           call @3406 // <std.io#thread.get_stack_size>   
5 [0x5]:           ipopl 3   
6 [0x6]: line: 149 istorel 0, fp+4   
8 [0x8]: line: 151 loadl ebx, fp+3   : protected asm start
9 [0x9]:           loadl adx, fp+2   
10 [0xa]:           pushl 1   
11 [0xb]:           pushl 0   
12 [0xc]:           int 0xc   
13 [0xd]:           smovr_2 cmt, fp+4   
14 [0xe]: line: 160 ipushl #4   : protected asm end
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           jne 22   
20 [0x14]: line: 161 pushl 0   
21 [0x15]:           call @3450 // <std#yaf.yke.adtj>   
22 [0x16]:           nop   
23 [0x17]: line: 164 ipushl #4   
24 [0x18]:           call @3378 // <std.io#ybq.ycp.adpu>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   


function: platform.kernel#yky.ylf.adul[3478] params(2) in file: yld:167:15: note:  
		    static def set_thread_priority(t: thread, priority: var) : thread_result {
		              ^

0 [0x0]: line: 168 pushl 0   
1 [0x1]:           call @3405 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 169 istorel 0, fp+3   
5 [0x5]: line: 171 loadl adx, fp+2   : protected asm start
6 [0x6]:           loadl egx, fp+1   
7 [0x7]:           int 0x11   
8 [0x8]:           smovr_2 cmt, fp+3   
9 [0x9]: line: 178 ipushl #3   : protected asm end
10 [0xa]:           call @3378 // <std.io#ybq.ycp.adpu>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: platform.kernel#yky.ylf.adum[3479] params(1) in file: yld:181:15: note:  
		    static def set_thread(t: thread) {
		              ^

0 [0x0]: line: 182 pushl 0   : protected asm start
1 [0x1]:           int 0x17   
2 [0x2]:           ret   : protected asm end


function: platform.kernel#yky.ylf.adun[3480] params(0) in file: yld:188:15: note:  
		    static def thread_args() : object[] {
		              ^

0 [0x0]: line: 189 int 0x16   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 196 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#yky.ylf.aduo[3481] params(0) in file: yld:199:15: note:  
		    static def cores() : var {
		              ^

0 [0x0]: line: 200 istorel 0, fp+0   
2 [0x2]: line: 202 int 0x38   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 207 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#yky.ylf.adup[3482] params(0) in file: yld:210:15: note:  
		    static def random_int() : var {
		              ^

0 [0x0]: line: 211 istorel 0, fp+0   
2 [0x2]: line: 213 int 0x19   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 218 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#yky.ylf.aduq[3483] params(2) in file: yld:221:15: note:  
		    static def random_int(min: var, max : var) : var {
		              ^

0 [0x0]: line: 222 istorel 0, fp+2   
2 [0x2]: line: 224 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x3f   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 231 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#yky.ylf.adur[3484] params(0) in file: yld:234:15: note:  
		    static def random_double() : var {
		              ^

0 [0x0]: line: 235 istorel 0, fp+0   
2 [0x2]: line: 237 int 0x40   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 242 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#yky.ylf.adus[3485] params(2) in file: yld:245:15: note:  
		    static def random_double(min: var, max : var) : var {
		              ^

0 [0x0]: line: 246 istorel 0, fp+2   
2 [0x2]: line: 248 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x41   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 255 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#yky.ylf.adut[3486] params(1) in file: yld:258:15: note:  
		    static def random_seed(seed : var) {
		              ^

0 [0x0]: line: 259 loadl adx, fp+0   : protected asm start
1 [0x1]:           int 0x42   
2 [0x2]:           ret   : protected asm end


constructor: platform.kernel#yky.ylf.aduu[3487] params(0) in file: yld:5:6: note:  
		class vm {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform.kernel#yky.yli.aduv[3488] params(0) in file: ylg:13:15: note:  
		    static def tls_init() {}
		              ^

0 [0x0]: line: 13 ret   


function: platform.kernel#yky.yli.aduw[3489] params(0) in file: ylg:14:23: note:  
		    private static def static_init() {}
		                      ^

0 [0x0]: line: 14 new_class @0 // xxz#xxa   
1 [0x1]:          cast adx   
2 [0x2]:          movg @6 // @xxt#xxu.xyz   
3 [0x3]:          movn #0   
5 [0x5]:          popobj   
6 [0x6]:          newstr @50 // class_property   
7 [0x7]:          movg @6 // @xxt#xxu.xyz   
8 [0x8]:          movn #0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]:          movi #22396, ebx   
15 [0xf]:          movg @6 // @xxt#xxu.xyz   
16 [0x10]:          movn #0   
18 [0x12]:          movn #1   
20 [0x14]:          movi #0, adx   
22 [0x16]:          rmov adx, ebx   
23 [0x17]:          new_class @0 // xxz#xxa   
24 [0x18]:          cast adx   
25 [0x19]:          movg @6 // @xxt#xxu.xyz   
26 [0x1a]:          movn #1   
28 [0x1c]:          popobj   
29 [0x1d]:          newstr @51 // field_property   
30 [0x1e]:          movg @6 // @xxt#xxu.xyz   
31 [0x1f]:          movn #1   
33 [0x21]:          movn #0   
35 [0x23]:          popobj   
36 [0x24]:          movi #22397, ebx   
38 [0x26]:          movg @6 // @xxt#xxu.xyz   
39 [0x27]:          movn #1   
41 [0x29]:          movn #1   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]:          new_class @0 // xxz#xxa   
47 [0x2f]:          cast adx   
48 [0x30]:          movg @6 // @xxt#xxu.xyz   
49 [0x31]:          movn #2   
51 [0x33]:          popobj   
52 [0x34]:          newstr @52 // function_property   
53 [0x35]:          movg @6 // @xxt#xxu.xyz   
54 [0x36]:          movn #2   
56 [0x38]:          movn #0   
58 [0x3a]:          popobj   
59 [0x3b]:          movi #22398, ebx   
61 [0x3d]:          movg @6 // @xxt#xxu.xyz   
62 [0x3e]:          movn #2   
64 [0x40]:          movn #1   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          new_class @0 // xxz#xxa   
70 [0x46]:          movu16 adx, adx   
71 [0x47]:          movg @12 // @xxt#xxu.yzc   
72 [0x48]:          movn #0   
74 [0x4a]:          popobj   
75 [0x4b]:          newstr @53 // int8   
76 [0x4c]:          movg @12 // @xxt#xxu.yzc   
77 [0x4d]:          movn #0   
79 [0x4f]:          movn #0   
81 [0x51]:          popobj   
82 [0x52]:          movi #0, ebx   
84 [0x54]:          movg @12 // @xxt#xxu.yzc   
85 [0x55]:          movn #0   
87 [0x57]:          movn #1   
89 [0x59]:          movi #0, adx   
91 [0x5b]:          rmov adx, ebx   
92 [0x5c]:          new_class @0 // xxz#xxa   
93 [0x5d]:          movu16 adx, adx   
94 [0x5e]:          movg @12 // @xxt#xxu.yzc   
95 [0x5f]:          movn #1   
97 [0x61]:          popobj   
98 [0x62]:          newstr @54 // int16   
99 [0x63]:          movg @12 // @xxt#xxu.yzc   
100 [0x64]:          movn #1   
102 [0x66]:          movn #0   
104 [0x68]:          popobj   
105 [0x69]:          movi #1, ebx   
107 [0x6b]:          movg @12 // @xxt#xxu.yzc   
108 [0x6c]:          movn #1   
110 [0x6e]:          movn #1   
112 [0x70]:          movi #0, adx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          new_class @0 // xxz#xxa   
116 [0x74]:          movu16 adx, adx   
117 [0x75]:          movg @12 // @xxt#xxu.yzc   
118 [0x76]:          movn #2   
120 [0x78]:          popobj   
121 [0x79]:          newstr @55 // int32   
122 [0x7a]:          movg @12 // @xxt#xxu.yzc   
123 [0x7b]:          movn #2   
125 [0x7d]:          movn #0   
127 [0x7f]:          popobj   
128 [0x80]:          movi #2, ebx   
130 [0x82]:          movg @12 // @xxt#xxu.yzc   
131 [0x83]:          movn #2   
133 [0x85]:          movn #1   
135 [0x87]:          movi #0, adx   
137 [0x89]:          rmov adx, ebx   
138 [0x8a]:          new_class @0 // xxz#xxa   
139 [0x8b]:          movu16 adx, adx   
140 [0x8c]:          movg @12 // @xxt#xxu.yzc   
141 [0x8d]:          movn #3   
143 [0x8f]:          popobj   
144 [0x90]:          newstr @56 // int64   
145 [0x91]:          movg @12 // @xxt#xxu.yzc   
146 [0x92]:          movn #3   
148 [0x94]:          movn #0   
150 [0x96]:          popobj   
151 [0x97]:          movi #3, ebx   
153 [0x99]:          movg @12 // @xxt#xxu.yzc   
154 [0x9a]:          movn #3   
156 [0x9c]:          movn #1   
158 [0x9e]:          movi #0, adx   
160 [0xa0]:          rmov adx, ebx   
161 [0xa1]:          new_class @0 // xxz#xxa   
162 [0xa2]:          movu16 adx, adx   
163 [0xa3]:          movg @12 // @xxt#xxu.yzc   
164 [0xa4]:          movn #4   
166 [0xa6]:          popobj   
167 [0xa7]:          newstr @57 // uint8   
168 [0xa8]:          movg @12 // @xxt#xxu.yzc   
169 [0xa9]:          movn #4   
171 [0xab]:          movn #0   
173 [0xad]:          popobj   
174 [0xae]:          movi #4, ebx   
176 [0xb0]:          movg @12 // @xxt#xxu.yzc   
177 [0xb1]:          movn #4   
179 [0xb3]:          movn #1   
181 [0xb5]:          movi #0, adx   
183 [0xb7]:          rmov adx, ebx   
184 [0xb8]:          new_class @0 // xxz#xxa   
185 [0xb9]:          movu16 adx, adx   
186 [0xba]:          movg @12 // @xxt#xxu.yzc   
187 [0xbb]:          movn #5   
189 [0xbd]:          popobj   
190 [0xbe]:          newstr @58 // uint16   
191 [0xbf]:          movg @12 // @xxt#xxu.yzc   
192 [0xc0]:          movn #5   
194 [0xc2]:          movn #0   
196 [0xc4]:          popobj   
197 [0xc5]:          movi #5, ebx   
199 [0xc7]:          movg @12 // @xxt#xxu.yzc   
200 [0xc8]:          movn #5   
202 [0xca]:          movn #1   
204 [0xcc]:          movi #0, adx   
206 [0xce]:          rmov adx, ebx   
207 [0xcf]:          new_class @0 // xxz#xxa   
208 [0xd0]:          movu16 adx, adx   
209 [0xd1]:          movg @12 // @xxt#xxu.yzc   
210 [0xd2]:          movn #6   
212 [0xd4]:          popobj   
213 [0xd5]:          newstr @59 // uint32   
214 [0xd6]:          movg @12 // @xxt#xxu.yzc   
215 [0xd7]:          movn #6   
217 [0xd9]:          movn #0   
219 [0xdb]:          popobj   
220 [0xdc]:          movi #6, ebx   
222 [0xde]:          movg @12 // @xxt#xxu.yzc   
223 [0xdf]:          movn #6   
225 [0xe1]:          movn #1   
227 [0xe3]:          movi #0, adx   
229 [0xe5]:          rmov adx, ebx   
230 [0xe6]:          new_class @0 // xxz#xxa   
231 [0xe7]:          movu16 adx, adx   
232 [0xe8]:          movg @12 // @xxt#xxu.yzc   
233 [0xe9]:          movn #7   
235 [0xeb]:          popobj   
236 [0xec]:          newstr @60 // uint64   
237 [0xed]:          movg @12 // @xxt#xxu.yzc   
238 [0xee]:          movn #7   
240 [0xf0]:          movn #0   
242 [0xf2]:          popobj   
243 [0xf3]:          movi #7, ebx   
245 [0xf5]:          movg @12 // @xxt#xxu.yzc   
246 [0xf6]:          movn #7   
248 [0xf8]:          movn #1   
250 [0xfa]:          movi #0, adx   
252 [0xfc]:          rmov adx, ebx   
253 [0xfd]:          new_class @0 // xxz#xxa   
254 [0xfe]:          movu16 adx, adx   
255 [0xff]:          movg @12 // @xxt#xxu.yzc   
256 [0x100]:          movn #8   
258 [0x102]:          popobj   
259 [0x103]:          newstr @61 // fnptr   
260 [0x104]:          movg @12 // @xxt#xxu.yzc   
261 [0x105]:          movn #8   
263 [0x107]:          movn #0   
265 [0x109]:          popobj   
266 [0x10a]:          movi #8, ebx   
268 [0x10c]:          movg @12 // @xxt#xxu.yzc   
269 [0x10d]:          movn #8   
271 [0x10f]:          movn #1   
273 [0x111]:          movi #0, adx   
275 [0x113]:          rmov adx, ebx   
276 [0x114]:          new_class @0 // xxz#xxa   
277 [0x115]:          movu16 adx, adx   
278 [0x116]:          movg @12 // @xxt#xxu.yzc   
279 [0x117]:          movn #9   
281 [0x119]:          popobj   
282 [0x11a]:          newstr @62 // _var   
283 [0x11b]:          movg @12 // @xxt#xxu.yzc   
284 [0x11c]:          movn #9   
286 [0x11e]:          movn #0   
288 [0x120]:          popobj   
289 [0x121]:          movi #9, ebx   
291 [0x123]:          movg @12 // @xxt#xxu.yzc   
292 [0x124]:          movn #9   
294 [0x126]:          movn #1   
296 [0x128]:          movi #0, adx   
298 [0x12a]:          rmov adx, ebx   
299 [0x12b]:          new_class @0 // xxz#xxa   
300 [0x12c]:          movu16 adx, adx   
301 [0x12d]:          movg @12 // @xxt#xxu.yzc   
302 [0x12e]:          movn #10   
304 [0x130]:          popobj   
305 [0x131]:          newstr @63 // _object   
306 [0x132]:          movg @12 // @xxt#xxu.yzc   
307 [0x133]:          movn #10   
309 [0x135]:          movn #0   
311 [0x137]:          popobj   
312 [0x138]:          movi #10, ebx   
314 [0x13a]:          movg @12 // @xxt#xxu.yzc   
315 [0x13b]:          movn #10   
317 [0x13d]:          movn #1   
319 [0x13f]:          movi #0, adx   
321 [0x141]:          rmov adx, ebx   
322 [0x142]:          new_class @0 // xxz#xxa   
323 [0x143]:          movu16 adx, adx   
324 [0x144]:          movg @12 // @xxt#xxu.yzc   
325 [0x145]:          movn #11   
327 [0x147]:          popobj   
328 [0x148]:          newstr @64 // _class   
329 [0x149]:          movg @12 // @xxt#xxu.yzc   
330 [0x14a]:          movn #11   
332 [0x14c]:          movn #0   
334 [0x14e]:          popobj   
335 [0x14f]:          movi #11, ebx   
337 [0x151]:          movg @12 // @xxt#xxu.yzc   
338 [0x152]:          movn #11   
340 [0x154]:          movn #1   
342 [0x156]:          movi #0, adx   
344 [0x158]:          rmov adx, ebx   
345 [0x159]:          new_class @0 // xxz#xxa   
346 [0x15a]:          movu16 adx, adx   
347 [0x15b]:          movg @12 // @xxt#xxu.yzc   
348 [0x15c]:          movn #12   
350 [0x15e]:          popobj   
351 [0x15f]:          newstr @65 // method   
352 [0x160]:          movg @12 // @xxt#xxu.yzc   
353 [0x161]:          movn #12   
355 [0x163]:          movn #0   
357 [0x165]:          popobj   
358 [0x166]:          movi #12, ebx   
360 [0x168]:          movg @12 // @xxt#xxu.yzc   
361 [0x169]:          movn #12   
363 [0x16b]:          movn #1   
365 [0x16d]:          movi #0, adx   
367 [0x16f]:          rmov adx, ebx   
368 [0x170]:          new_class @0 // xxz#xxa   
369 [0x171]:          movu16 adx, adx   
370 [0x172]:          movg @12 // @xxt#xxu.yzc   
371 [0x173]:          movn #13   
373 [0x175]:          popobj   
374 [0x176]:          newstr @66 // _nil   
375 [0x177]:          movg @12 // @xxt#xxu.yzc   
376 [0x178]:          movn #13   
378 [0x17a]:          movn #0   
380 [0x17c]:          popobj   
381 [0x17d]:          movi #13, ebx   
383 [0x17f]:          movg @12 // @xxt#xxu.yzc   
384 [0x180]:          movn #13   
386 [0x182]:          movn #1   
388 [0x184]:          movi #0, adx   
390 [0x186]:          rmov adx, ebx   
391 [0x187]:          new_class @0 // xxz#xxa   
392 [0x188]:          movu16 adx, adx   
393 [0x189]:          movg @12 // @xxt#xxu.yzc   
394 [0x18a]:          movn #14   
396 [0x18c]:          popobj   
397 [0x18d]:          newstr @67 // any   
398 [0x18e]:          movg @12 // @xxt#xxu.yzc   
399 [0x18f]:          movn #14   
401 [0x191]:          movn #0   
403 [0x193]:          popobj   
404 [0x194]:          movi #14, ebx   
406 [0x196]:          movg @12 // @xxt#xxu.yzc   
407 [0x197]:          movn #14   
409 [0x199]:          movn #1   
411 [0x19b]:          movi #0, adx   
413 [0x19d]:          rmov adx, ebx   
414 [0x19e]:          new_class @0 // xxz#xxa   
415 [0x19f]:          movu16 adx, adx   
416 [0x1a0]:          movg @12 // @xxt#xxu.yzc   
417 [0x1a1]:          movn #15   
419 [0x1a3]:          popobj   
420 [0x1a4]:          newstr @68 // untyped   
421 [0x1a5]:          movg @12 // @xxt#xxu.yzc   
422 [0x1a6]:          movn #15   
424 [0x1a8]:          movn #0   
426 [0x1aa]:          popobj   
427 [0x1ab]:          movi #15, ebx   
429 [0x1ad]:          movg @12 // @xxt#xxu.yzc   
430 [0x1ae]:          movn #15   
432 [0x1b0]:          movn #1   
434 [0x1b2]:          movi #0, adx   
436 [0x1b4]:          rmov adx, ebx   
437 [0x1b5]:          new_class @0 // xxz#xxa   
438 [0x1b6]:          movu16 adx, adx   
439 [0x1b7]:          movg @12 // @xxt#xxu.yzc   
440 [0x1b8]:          movn #16   
442 [0x1ba]:          popobj   
443 [0x1bb]:          newstr @69 // undefined   
444 [0x1bc]:          movg @12 // @xxt#xxu.yzc   
445 [0x1bd]:          movn #16   
447 [0x1bf]:          movn #0   
449 [0x1c1]:          popobj   
450 [0x1c2]:          movi #16, ebx   
452 [0x1c4]:          movg @12 // @xxt#xxu.yzc   
453 [0x1c5]:          movn #16   
455 [0x1c7]:          movn #1   
457 [0x1c9]:          movi #0, adx   
459 [0x1cb]:          rmov adx, ebx   
460 [0x1cc]:          new_class @0 // xxz#xxa   
461 [0x1cd]:          lt adx, adx   
462 [0x1ce]:          movg @33 // @std.io#ybq.ycp   
463 [0x1cf]:          movn #0   
465 [0x1d1]:          popobj   
466 [0x1d2]:          newstr @70 // result_ok   
467 [0x1d3]:          movg @33 // @std.io#ybq.ycp   
468 [0x1d4]:          movn #0   
470 [0x1d6]:          movn #0   
472 [0x1d8]:          popobj   
473 [0x1d9]:          movi #0, ebx   
475 [0x1db]:          movg @33 // @std.io#ybq.ycp   
476 [0x1dc]:          movn #0   
478 [0x1de]:          movn #1   
480 [0x1e0]:          movi #0, adx   
482 [0x1e2]:          rmov adx, ebx   
483 [0x1e3]:          new_class @0 // xxz#xxa   
484 [0x1e4]:          lt adx, adx   
485 [0x1e5]:          movg @33 // @std.io#ybq.ycp   
486 [0x1e6]:          movn #1   
488 [0x1e8]:          popobj   
489 [0x1e9]:          newstr @71 // result_ill_thread_start   
490 [0x1ea]:          movg @33 // @std.io#ybq.ycp   
491 [0x1eb]:          movn #1   
493 [0x1ed]:          movn #0   
495 [0x1ef]:          popobj   
496 [0x1f0]:          movi #1, ebx   
498 [0x1f2]:          movg @33 // @std.io#ybq.ycp   
499 [0x1f3]:          movn #1   
501 [0x1f5]:          movn #1   
503 [0x1f7]:          movi #0, adx   
505 [0x1f9]:          rmov adx, ebx   
506 [0x1fa]:          new_class @0 // xxz#xxa   
507 [0x1fb]:          lt adx, adx   
508 [0x1fc]:          movg @33 // @std.io#ybq.ycp   
509 [0x1fd]:          movn #2   
511 [0x1ff]:          popobj   
512 [0x200]:          newstr @72 // result_thread_running   
513 [0x201]:          movg @33 // @std.io#ybq.ycp   
514 [0x202]:          movn #2   
516 [0x204]:          movn #0   
518 [0x206]:          popobj   
519 [0x207]:          movi #2, ebx   
521 [0x209]:          movg @33 // @std.io#ybq.ycp   
522 [0x20a]:          movn #2   
524 [0x20c]:          movn #1   
526 [0x20e]:          movi #0, adx   
528 [0x210]:          rmov adx, ebx   
529 [0x211]:          new_class @0 // xxz#xxa   
530 [0x212]:          lt adx, adx   
531 [0x213]:          movg @33 // @std.io#ybq.ycp   
532 [0x214]:          movn #3   
534 [0x216]:          popobj   
535 [0x217]:          newstr @73 // result_thread_terminated   
536 [0x218]:          movg @33 // @std.io#ybq.ycp   
537 [0x219]:          movn #3   
539 [0x21b]:          movn #0   
541 [0x21d]:          popobj   
542 [0x21e]:          movi #3, ebx   
544 [0x220]:          movg @33 // @std.io#ybq.ycp   
545 [0x221]:          movn #3   
547 [0x223]:          movn #1   
549 [0x225]:          movi #0, adx   
551 [0x227]:          rmov adx, ebx   
552 [0x228]:          new_class @0 // xxz#xxa   
553 [0x229]:          lt adx, adx   
554 [0x22a]:          movg @33 // @std.io#ybq.ycp   
555 [0x22b]:          movn #4   
557 [0x22d]:          popobj   
558 [0x22e]:          newstr @74 // result_invalid_stack_size   
559 [0x22f]:          movg @33 // @std.io#ybq.ycp   
560 [0x230]:          movn #4   
562 [0x232]:          movn #0   
564 [0x234]:          popobj   
565 [0x235]:          movi #4, ebx   
567 [0x237]:          movg @33 // @std.io#ybq.ycp   
568 [0x238]:          movn #4   
570 [0x23a]:          movn #1   
572 [0x23c]:          movi #0, adx   
574 [0x23e]:          rmov adx, ebx   
575 [0x23f]:          new_class @0 // xxz#xxa   
576 [0x240]:          lt adx, adx   
577 [0x241]:          movg @33 // @std.io#ybq.ycp   
578 [0x242]:          movn #5   
580 [0x244]:          popobj   
581 [0x245]:          newstr @75 // result_thread_not_started   
582 [0x246]:          movg @33 // @std.io#ybq.ycp   
583 [0x247]:          movn #5   
585 [0x249]:          movn #0   
587 [0x24b]:          popobj   
588 [0x24c]:          movi #5, ebx   
590 [0x24e]:          movg @33 // @std.io#ybq.ycp   
591 [0x24f]:          movn #5   
593 [0x251]:          movn #1   
595 [0x253]:          movi #0, adx   
597 [0x255]:          rmov adx, ebx   
598 [0x256]:          new_class @0 // xxz#xxa   
599 [0x257]:          lt adx, adx   
600 [0x258]:          movg @33 // @std.io#ybq.ycp   
601 [0x259]:          movn #6   
603 [0x25b]:          popobj   
604 [0x25c]:          newstr @76 // result_ill_thread_join   
605 [0x25d]:          movg @33 // @std.io#ybq.ycp   
606 [0x25e]:          movn #6   
608 [0x260]:          movn #0   
610 [0x262]:          popobj   
611 [0x263]:          movi #6, ebx   
613 [0x265]:          movg @33 // @std.io#ybq.ycp   
614 [0x266]:          movn #6   
616 [0x268]:          movn #1   
618 [0x26a]:          movi #0, adx   
620 [0x26c]:          rmov adx, ebx   
621 [0x26d]:          new_class @0 // xxz#xxa   
622 [0x26e]:          lt adx, adx   
623 [0x26f]:          movg @33 // @std.io#ybq.ycp   
624 [0x270]:          movn #7   
626 [0x272]:          popobj   
627 [0x273]:          newstr @77 // result_thread_join_failed   
628 [0x274]:          movg @33 // @std.io#ybq.ycp   
629 [0x275]:          movn #7   
631 [0x277]:          movn #0   
633 [0x279]:          popobj   
634 [0x27a]:          movi #7, ebx   
636 [0x27c]:          movg @33 // @std.io#ybq.ycp   
637 [0x27d]:          movn #7   
639 [0x27f]:          movn #1   
641 [0x281]:          movi #0, adx   
643 [0x283]:          rmov adx, ebx   
644 [0x284]:          new_class @0 // xxz#xxa   
645 [0x285]:          lt adx, adx   
646 [0x286]:          movg @33 // @std.io#ybq.ycp   
647 [0x287]:          movn #8   
649 [0x289]:          popobj   
650 [0x28a]:          newstr @78 // result_ill_thread_interrupt   
651 [0x28b]:          movg @33 // @std.io#ybq.ycp   
652 [0x28c]:          movn #8   
654 [0x28e]:          movn #0   
656 [0x290]:          popobj   
657 [0x291]:          movi #8, ebx   
659 [0x293]:          movg @33 // @std.io#ybq.ycp   
660 [0x294]:          movn #8   
662 [0x296]:          movn #1   
664 [0x298]:          movi #0, adx   
666 [0x29a]:          rmov adx, ebx   
667 [0x29b]:          new_class @0 // xxz#xxa   
668 [0x29c]:          lt adx, adx   
669 [0x29d]:          movg @33 // @std.io#ybq.ycp   
670 [0x29e]:          movn #9   
672 [0x2a0]:          popobj   
673 [0x2a1]:          newstr @79 // result_thread_interrupt_failed   
674 [0x2a2]:          movg @33 // @std.io#ybq.ycp   
675 [0x2a3]:          movn #9   
677 [0x2a5]:          movn #0   
679 [0x2a7]:          popobj   
680 [0x2a8]:          movi #9, ebx   
682 [0x2aa]:          movg @33 // @std.io#ybq.ycp   
683 [0x2ab]:          movn #9   
685 [0x2ad]:          movn #1   
687 [0x2af]:          movi #0, adx   
689 [0x2b1]:          rmov adx, ebx   
690 [0x2b2]:          new_class @0 // xxz#xxa   
691 [0x2b3]:          lt adx, adx   
692 [0x2b4]:          movg @33 // @std.io#ybq.ycp   
693 [0x2b5]:          movn #10   
695 [0x2b7]:          popobj   
696 [0x2b8]:          newstr @80 // result_ill_thread_destroy   
697 [0x2b9]:          movg @33 // @std.io#ybq.ycp   
698 [0x2ba]:          movn #10   
700 [0x2bc]:          movn #0   
702 [0x2be]:          popobj   
703 [0x2bf]:          movi #10, ebx   
705 [0x2c1]:          movg @33 // @std.io#ybq.ycp   
706 [0x2c2]:          movn #10   
708 [0x2c4]:          movn #1   
710 [0x2c6]:          movi #0, adx   
712 [0x2c8]:          rmov adx, ebx   
713 [0x2c9]:          new_class @0 // xxz#xxa   
714 [0x2ca]:          lt adx, adx   
715 [0x2cb]:          movg @33 // @std.io#ybq.ycp   
716 [0x2cc]:          movn #11   
718 [0x2ce]:          popobj   
719 [0x2cf]:          newstr @81 // result_thread_create_failed   
720 [0x2d0]:          movg @33 // @std.io#ybq.ycp   
721 [0x2d1]:          movn #11   
723 [0x2d3]:          movn #0   
725 [0x2d5]:          popobj   
726 [0x2d6]:          movi #11, ebx   
728 [0x2d8]:          movg @33 // @std.io#ybq.ycp   
729 [0x2d9]:          movn #11   
731 [0x2db]:          movn #1   
733 [0x2dd]:          movi #0, adx   
735 [0x2df]:          rmov adx, ebx   
736 [0x2e0]:          new_class @0 // xxz#xxa   
737 [0x2e1]:          lt adx, adx   
738 [0x2e2]:          movg @33 // @std.io#ybq.ycp   
739 [0x2e3]:          movn #12   
741 [0x2e5]:          popobj   
742 [0x2e6]:          newstr @82 // result_no_thread_id   
743 [0x2e7]:          movg @33 // @std.io#ybq.ycp   
744 [0x2e8]:          movn #12   
746 [0x2ea]:          movn #0   
748 [0x2ec]:          popobj   
749 [0x2ed]:          movi #12, ebx   
751 [0x2ef]:          movg @33 // @std.io#ybq.ycp   
752 [0x2f0]:          movn #12   
754 [0x2f2]:          movn #1   
756 [0x2f4]:          movi #0, adx   
758 [0x2f6]:          rmov adx, ebx   
759 [0x2f7]:          new_class @0 // xxz#xxa   
760 [0x2f8]:          lt adx, adx   
761 [0x2f9]:          movg @33 // @std.io#ybq.ycp   
762 [0x2fa]:          movn #13   
764 [0x2fc]:          popobj   
765 [0x2fd]:          newstr @83 // result_thread_destroy_failed   
766 [0x2fe]:          movg @33 // @std.io#ybq.ycp   
767 [0x2ff]:          movn #13   
769 [0x301]:          movn #0   
771 [0x303]:          popobj   
772 [0x304]:          movi #13, ebx   
774 [0x306]:          movg @33 // @std.io#ybq.ycp   
775 [0x307]:          movn #13   
777 [0x309]:          movn #1   
779 [0x30b]:          movi #0, adx   
781 [0x30d]:          rmov adx, ebx   
782 [0x30e]:          new_class @0 // xxz#xxa   
783 [0x30f]:          lt adx, adx   
784 [0x310]:          movg @33 // @std.io#ybq.ycp   
785 [0x311]:          movn #14   
787 [0x313]:          popobj   
788 [0x314]:          newstr @84 // result_ill_priority_set   
789 [0x315]:          movg @33 // @std.io#ybq.ycp   
790 [0x316]:          movn #14   
792 [0x318]:          movn #0   
794 [0x31a]:          popobj   
795 [0x31b]:          movi #14, ebx   
797 [0x31d]:          movg @33 // @std.io#ybq.ycp   
798 [0x31e]:          movn #14   
800 [0x320]:          movn #1   
802 [0x322]:          movi #0, adx   
804 [0x324]:          rmov adx, ebx   
805 [0x325]:          new_class @0 // xxz#xxa   
806 [0x326]:          lt adx, adx   
807 [0x327]:          movg @33 // @std.io#ybq.ycp   
808 [0x328]:          movn #15   
810 [0x32a]:          popobj   
811 [0x32b]:          newstr @85 // result_ill_thread_suspend   
812 [0x32c]:          movg @33 // @std.io#ybq.ycp   
813 [0x32d]:          movn #15   
815 [0x32f]:          movn #0   
817 [0x331]:          popobj   
818 [0x332]:          movi #15, ebx   
820 [0x334]:          movg @33 // @std.io#ybq.ycp   
821 [0x335]:          movn #15   
823 [0x337]:          movn #1   
825 [0x339]:          movi #0, adx   
827 [0x33b]:          rmov adx, ebx   
828 [0x33c]:          new_class @0 // xxz#xxa   
829 [0x33d]:          lt adx, adx   
830 [0x33e]:          movg @33 // @std.io#ybq.ycp   
831 [0x33f]:          movn #16   
833 [0x341]:          popobj   
834 [0x342]:          newstr @86 // result_max_spin   
835 [0x343]:          movg @33 // @std.io#ybq.ycp   
836 [0x344]:          movn #16   
838 [0x346]:          movn #0   
840 [0x348]:          popobj   
841 [0x349]:          movi #255, ebx   
843 [0x34b]:          movg @33 // @std.io#ybq.ycp   
844 [0x34c]:          movn #16   
846 [0x34e]:          movn #1   
848 [0x350]:          movi #0, adx   
850 [0x352]:          rmov adx, ebx   
851 [0x353]:          new_class @0 // xxz#xxa   
852 [0x354]:          lt adx, adx   
853 [0x355]:          movg @33 // @std.io#ybq.ycp   
854 [0x356]:          movn #17   
856 [0x358]:          popobj   
857 [0x359]:          newstr @87 // enums   
858 [0x35a]:          movg @33 // @std.io#ybq.ycp   
859 [0x35b]:          movn #17   
861 [0x35d]:          movn #0   
863 [0x35f]:          popobj   
864 [0x360]:          movi #256, ebx   
866 [0x362]:          movg @33 // @std.io#ybq.ycp   
867 [0x363]:          movn #17   
869 [0x365]:          movn #1   
871 [0x367]:          movi #0, adx   
873 [0x369]:          rmov adx, ebx   
874 [0x36a]:          new_class @0 // xxz#xxa   
875 [0x36b]:          sizeof adx   
876 [0x36c]:          movg @39 // @yed#yee.ygi   
877 [0x36d]:          movn #0   
879 [0x36f]:          popobj   
880 [0x370]:          newstr @88 // created   
881 [0x371]:          movg @39 // @yed#yee.ygi   
882 [0x372]:          movn #0   
884 [0x374]:          movn #0   
886 [0x376]:          popobj   
887 [0x377]:          movi #-1, ebx   
889 [0x379]:          movg @39 // @yed#yee.ygi   
890 [0x37a]:          movn #0   
892 [0x37c]:          movn #1   
894 [0x37e]:          movi #0, adx   
896 [0x380]:          rmov adx, ebx   
897 [0x381]:          new_class @0 // xxz#xxa   
898 [0x382]:          sizeof adx   
899 [0x383]:          movg @39 // @yed#yee.ygi   
900 [0x384]:          movn #1   
902 [0x386]:          popobj   
903 [0x387]:          newstr @89 // active   
904 [0x388]:          movg @39 // @yed#yee.ygi   
905 [0x389]:          movn #1   
907 [0x38b]:          movn #0   
909 [0x38d]:          popobj   
910 [0x38e]:          movi #0, ebx   
912 [0x390]:          movg @39 // @yed#yee.ygi   
913 [0x391]:          movn #1   
915 [0x393]:          movn #1   
917 [0x395]:          movi #0, adx   
919 [0x397]:          rmov adx, ebx   
920 [0x398]:          new_class @0 // xxz#xxa   
921 [0x399]:          sizeof adx   
922 [0x39a]:          movg @39 // @yed#yee.ygi   
923 [0x39b]:          movn #2   
925 [0x39d]:          popobj   
926 [0x39e]:          newstr @90 // completed   
927 [0x39f]:          movg @39 // @yed#yee.ygi   
928 [0x3a0]:          movn #2   
930 [0x3a2]:          movn #0   
932 [0x3a4]:          popobj   
933 [0x3a5]:          movi #1, ebx   
935 [0x3a7]:          movg @39 // @yed#yee.ygi   
936 [0x3a8]:          movn #2   
938 [0x3aa]:          movn #1   
940 [0x3ac]:          movi #0, adx   
942 [0x3ae]:          rmov adx, ebx   
943 [0x3af]:          new_class @0 // xxz#xxa   
944 [0x3b0]:          sizeof adx   
945 [0x3b1]:          movg @39 // @yed#yee.ygi   
946 [0x3b2]:          movn #3   
948 [0x3b4]:          popobj   
949 [0x3b5]:          newstr @91 // cancelled   
950 [0x3b6]:          movg @39 // @yed#yee.ygi   
951 [0x3b7]:          movn #3   
953 [0x3b9]:          movn #0   
955 [0x3bb]:          popobj   
956 [0x3bc]:          movi #2, ebx   
958 [0x3be]:          movg @39 // @yed#yee.ygi   
959 [0x3bf]:          movn #3   
961 [0x3c1]:          movn #1   
963 [0x3c3]:          movi #0, adx   
965 [0x3c5]:          rmov adx, ebx   
966 [0x3c6]:          new_class @0 // xxz#xxa   
967 [0x3c7]:          jmp @0   
968 [0x3c8]:          movg @43 // @std.io#ybq.yhd   
969 [0x3c9]:          movn #0   
971 [0x3cb]:          popobj   
972 [0x3cc]:          newstr @92 // min_priority   
973 [0x3cd]:          movg @43 // @std.io#ybq.yhd   
974 [0x3ce]:          movn #0   
976 [0x3d0]:          movn #0   
978 [0x3d2]:          popobj   
979 [0x3d3]:          movi #1, ebx   
981 [0x3d5]:          movg @43 // @std.io#ybq.yhd   
982 [0x3d6]:          movn #0   
984 [0x3d8]:          movn #1   
986 [0x3da]:          movi #0, adx   
988 [0x3dc]:          rmov adx, ebx   
989 [0x3dd]:          new_class @0 // xxz#xxa   
990 [0x3de]:          jmp @0   
991 [0x3df]:          movg @43 // @std.io#ybq.yhd   
992 [0x3e0]:          movn #1   
994 [0x3e2]:          popobj   
995 [0x3e3]:          newstr @93 // norm_priority   
996 [0x3e4]:          movg @43 // @std.io#ybq.yhd   
997 [0x3e5]:          movn #1   
999 [0x3e7]:          movn #0   
1001 [0x3e9]:          popobj   
1002 [0x3ea]:          movi #4, ebx   
1004 [0x3ec]:          movg @43 // @std.io#ybq.yhd   
1005 [0x3ed]:          movn #1   
1007 [0x3ef]:          movn #1   
1009 [0x3f1]:          movi #0, adx   
1011 [0x3f3]:          rmov adx, ebx   
1012 [0x3f4]:          new_class @0 // xxz#xxa   
1013 [0x3f5]:          jmp @0   
1014 [0x3f6]:          movg @43 // @std.io#ybq.yhd   
1015 [0x3f7]:          movn #2   
1017 [0x3f9]:          popobj   
1018 [0x3fa]:          newstr @94 // max_priority   
1019 [0x3fb]:          movg @43 // @std.io#ybq.yhd   
1020 [0x3fc]:          movn #2   
1022 [0x3fe]:          movn #0   
1024 [0x400]:          popobj   
1025 [0x401]:          movi #6, ebx   
1027 [0x403]:          movg @43 // @std.io#ybq.yhd   
1028 [0x404]:          movn #2   
1030 [0x406]:          movn #1   
1032 [0x408]:          movi #0, adx   
1034 [0x40a]:          rmov adx, ebx   
1035 [0x40b]:          new_class @0 // xxz#xxa   
1036 [0x40c]:          movn #25399   
1038 [0x40e]:          movn #0   
1040 [0x410]:          popobj   
1041 [0x411]:          newstr @95 // tm_seconds   
1042 [0x412]:          movg @49 // @std#yaf.yjk   
1043 [0x413]:          movn #0   
1045 [0x415]:          movn #0   
1047 [0x417]:          popobj   
1048 [0x418]:          movi #0, ebx   
1050 [0x41a]:          movg @49 // @std#yaf.yjk   
1051 [0x41b]:          movn #0   
1053 [0x41d]:          movn #1   
1055 [0x41f]:          movi #0, adx   
1057 [0x421]:          rmov adx, ebx   
1058 [0x422]:          new_class @0 // xxz#xxa   
1059 [0x423]:          movn #25399   
1061 [0x425]:          movn #1   
1063 [0x427]:          popobj   
1064 [0x428]:          newstr @96 // tm_minutes   
1065 [0x429]:          movg @49 // @std#yaf.yjk   
1066 [0x42a]:          movn #1   
1068 [0x42c]:          movn #0   
1070 [0x42e]:          popobj   
1071 [0x42f]:          movi #1, ebx   
1073 [0x431]:          movg @49 // @std#yaf.yjk   
1074 [0x432]:          movn #1   
1076 [0x434]:          movn #1   
1078 [0x436]:          movi #0, adx   
1080 [0x438]:          rmov adx, ebx   
1081 [0x439]:          new_class @0 // xxz#xxa   
1082 [0x43a]:          movn #25399   
1084 [0x43c]:          movn #2   
1086 [0x43e]:          popobj   
1087 [0x43f]:          newstr @97 // tm_hour   
1088 [0x440]:          movg @49 // @std#yaf.yjk   
1089 [0x441]:          movn #2   
1091 [0x443]:          movn #0   
1093 [0x445]:          popobj   
1094 [0x446]:          movi #2, ebx   
1096 [0x448]:          movg @49 // @std#yaf.yjk   
1097 [0x449]:          movn #2   
1099 [0x44b]:          movn #1   
1101 [0x44d]:          movi #0, adx   
1103 [0x44f]:          rmov adx, ebx   
1104 [0x450]:          new_class @0 // xxz#xxa   
1105 [0x451]:          movn #25399   
1107 [0x453]:          movn #3   
1109 [0x455]:          popobj   
1110 [0x456]:          newstr @98 // tm_mday   
1111 [0x457]:          movg @49 // @std#yaf.yjk   
1112 [0x458]:          movn #3   
1114 [0x45a]:          movn #0   
1116 [0x45c]:          popobj   
1117 [0x45d]:          movi #3, ebx   
1119 [0x45f]:          movg @49 // @std#yaf.yjk   
1120 [0x460]:          movn #3   
1122 [0x462]:          movn #1   
1124 [0x464]:          movi #0, adx   
1126 [0x466]:          rmov adx, ebx   
1127 [0x467]:          new_class @0 // xxz#xxa   
1128 [0x468]:          movn #25399   
1130 [0x46a]:          movn #4   
1132 [0x46c]:          popobj   
1133 [0x46d]:          newstr @99 // tm_mon   
1134 [0x46e]:          movg @49 // @std#yaf.yjk   
1135 [0x46f]:          movn #4   
1137 [0x471]:          movn #0   
1139 [0x473]:          popobj   
1140 [0x474]:          movi #4, ebx   
1142 [0x476]:          movg @49 // @std#yaf.yjk   
1143 [0x477]:          movn #4   
1145 [0x479]:          movn #1   
1147 [0x47b]:          movi #0, adx   
1149 [0x47d]:          rmov adx, ebx   
1150 [0x47e]:          new_class @0 // xxz#xxa   
1151 [0x47f]:          movn #25399   
1153 [0x481]:          movn #5   
1155 [0x483]:          popobj   
1156 [0x484]:          newstr @100 // tm_year   
1157 [0x485]:          movg @49 // @std#yaf.yjk   
1158 [0x486]:          movn #5   
1160 [0x488]:          movn #0   
1162 [0x48a]:          popobj   
1163 [0x48b]:          movi #5, ebx   
1165 [0x48d]:          movg @49 // @std#yaf.yjk   
1166 [0x48e]:          movn #5   
1168 [0x490]:          movn #1   
1170 [0x492]:          movi #0, adx   
1172 [0x494]:          rmov adx, ebx   
1173 [0x495]:          new_class @0 // xxz#xxa   
1174 [0x496]:          movn #25399   
1176 [0x498]:          movn #6   
1178 [0x49a]:          popobj   
1179 [0x49b]:          newstr @101 // tm_wday   
1180 [0x49c]:          movg @49 // @std#yaf.yjk   
1181 [0x49d]:          movn #6   
1183 [0x49f]:          movn #0   
1185 [0x4a1]:          popobj   
1186 [0x4a2]:          movi #6, ebx   
1188 [0x4a4]:          movg @49 // @std#yaf.yjk   
1189 [0x4a5]:          movn #6   
1191 [0x4a7]:          movn #1   
1193 [0x4a9]:          movi #0, adx   
1195 [0x4ab]:          rmov adx, ebx   
1196 [0x4ac]:          new_class @0 // xxz#xxa   
1197 [0x4ad]:          movn #25399   
1199 [0x4af]:          movn #7   
1201 [0x4b1]:          popobj   
1202 [0x4b2]:          newstr @102 // tm_yday   
1203 [0x4b3]:          movg @49 // @std#yaf.yjk   
1204 [0x4b4]:          movn #7   
1206 [0x4b6]:          movn #0   
1208 [0x4b8]:          popobj   
1209 [0x4b9]:          movi #7, ebx   
1211 [0x4bb]:          movg @49 // @std#yaf.yjk   
1212 [0x4bc]:          movn #7   
1214 [0x4be]:          movn #1   
1216 [0x4c0]:          movi #0, adx   
1218 [0x4c2]:          rmov adx, ebx   
1219 [0x4c3]:          new_class @0 // xxz#xxa   
1220 [0x4c4]:          movn #25399   
1222 [0x4c6]:          movn #8   
1224 [0x4c8]:          popobj   
1225 [0x4c9]:          newstr @103 // tm_isdst   
1226 [0x4ca]:          movg @49 // @std#yaf.yjk   
1227 [0x4cb]:          movn #8   
1229 [0x4cd]:          movn #0   
1231 [0x4cf]:          popobj   
1232 [0x4d0]:          movi #8, ebx   
1234 [0x4d2]:          movg @49 // @std#yaf.yjk   
1235 [0x4d3]:          movn #8   
1237 [0x4d5]:          movn #1   
1239 [0x4d7]:          movi #0, adx   
1241 [0x4d9]:          rmov adx, ebx   
1242 [0x4da]:          new_class @0 // xxz#xxa   
1243 [0x4db]:          sleep adx   
1244 [0x4dc]:          movg @50 // @std#yaf.yju   
1245 [0x4dd]:          movn #0   
1247 [0x4df]:          popobj   
1248 [0x4e0]:          newstr @104 // seconds   
1249 [0x4e1]:          movg @50 // @std#yaf.yju   
1250 [0x4e2]:          movn #0   
1252 [0x4e4]:          movn #0   
1254 [0x4e6]:          popobj   
1255 [0x4e7]:          movi #0, ebx   
1257 [0x4e9]:          movg @50 // @std#yaf.yju   
1258 [0x4ea]:          movn #0   
1260 [0x4ec]:          movn #1   
1262 [0x4ee]:          movi #0, adx   
1264 [0x4f0]:          rmov adx, ebx   
1265 [0x4f1]:          new_class @0 // xxz#xxa   
1266 [0x4f2]:          sleep adx   
1267 [0x4f3]:          movg @50 // @std#yaf.yju   
1268 [0x4f4]:          movn #1   
1270 [0x4f6]:          popobj   
1271 [0x4f7]:          newstr @105 // milliseconds   
1272 [0x4f8]:          movg @50 // @std#yaf.yju   
1273 [0x4f9]:          movn #1   
1275 [0x4fb]:          movn #0   
1277 [0x4fd]:          popobj   
1278 [0x4fe]:          movi #1, ebx   
1280 [0x500]:          movg @50 // @std#yaf.yju   
1281 [0x501]:          movn #1   
1283 [0x503]:          movn #1   
1285 [0x505]:          movi #0, adx   
1287 [0x507]:          rmov adx, ebx   
1288 [0x508]:          new_class @0 // xxz#xxa   
1289 [0x509]:          sleep adx   
1290 [0x50a]:          movg @50 // @std#yaf.yju   
1291 [0x50b]:          movn #2   
1293 [0x50d]:          popobj   
1294 [0x50e]:          newstr @106 // microseconds   
1295 [0x50f]:          movg @50 // @std#yaf.yju   
1296 [0x510]:          movn #2   
1298 [0x512]:          movn #0   
1300 [0x514]:          popobj   
1301 [0x515]:          movi #2, ebx   
1303 [0x517]:          movg @50 // @std#yaf.yju   
1304 [0x518]:          movn #2   
1306 [0x51a]:          movn #1   
1308 [0x51c]:          movi #0, adx   
1310 [0x51e]:          rmov adx, ebx   
1311 [0x51f]:          new_class @0 // xxz#xxa   
1312 [0x520]:          sleep adx   
1313 [0x521]:          movg @50 // @std#yaf.yju   
1314 [0x522]:          movn #3   
1316 [0x524]:          popobj   
1317 [0x525]:          newstr @107 // nanoseconds   
1318 [0x526]:          movg @50 // @std#yaf.yju   
1319 [0x527]:          movn #3   
1321 [0x529]:          movn #0   
1323 [0x52b]:          popobj   
1324 [0x52c]:          movi #3, ebx   
1326 [0x52e]:          movg @50 // @std#yaf.yju   
1327 [0x52f]:          movn #3   
1329 [0x531]:          movn #1   
1331 [0x533]:          movi #0, adx   
1333 [0x535]:          rmov adx, ebx   
1334 [0x536]:          movg @58 // @platform.kernel#yky.yli   
1335 [0x537]:          movn #2   
1337 [0x539]:          movi #0, adx   
1339 [0x53b]:          movi #1968, ebx   
1341 [0x53d]:          rmov adx, ebx   
1342 [0x53e]:          call @3859 // <xxz#xxa.xxg.aept>   
1343 [0x53f]:          call @3860 // <xxz#xxa.xxn.aepu>   
1344 [0x540]:          call @3861 // <std#yaf.yak.aepv>   
1345 [0x541]:          call @3862 // <std#yaf.ybf.aepw>   
1346 [0x542]:          call @3863 // <std.io#ybq.ybv.aepx>   
1347 [0x543]:          call @3864 // <std.io#ybq.ycg.aepy>   
1348 [0x544]:          call @3865 // <yed#yee.yew.aeqz>   
1349 [0x545]:          call @3866 // <yed#yee.aeqa>   
1350 [0x546]:          call @3867 // <std.io#ybq.aeqb>   
1351 [0x547]:          call @3868 // <std#yaf.yji.aeqc>   
1352 [0x548]:          call @3869 // <std#yaf.aeqd>   
1353 [0x549]:          call @3870 // <std#string.$03internal_static_init>   
1354 [0x54a]:          call @3871 // <std.io#ybq.ycp.aeqf>   
1355 [0x54b]:          call @3872 // <std#yaf.yir.aeqy>   
1356 [0x54c]:          ret   


function: platform.kernel#yky.yli.adux[3490] params(1) in file: ylg:16:15: note:  
		    static def exit(value: var) {
		              ^

0 [0x0]: line: 17 ipushl #0   : protected asm start
1 [0x1]:          int 0x1d   
2 [0x2]:          ret   : protected asm end


function: platform.kernel#yky.yli.aduy[3491] params(1) in file: ylg:23:23: note:  
		    private static def get_lib_path(name: string) : _int8[] {
		                      ^

0 [0x0]: line: 24 call @3462 // <ykk#ykl.ykr.adtv>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 9   
4 [0x4]: line: 25 pushl 0   
5 [0x5]:          newstr @45 // .dll   
6 [0x6]:          call @3594 // <std#string.operator+=>   
7 [0x7]:          pop   
8 [0x8]:          jmp @13   
9 [0x9]: line: 27 pushl 0   
10 [0xa]:          newstr @46 // .so   
11 [0xb]:          call @3594 // <std#string.operator+=>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]: line: 30 new_class @0 // xxz#xxa   
15 [0xf]:          brh   
16 [0x10]:          dup    
17 [0x11]:          pushl 0   
18 [0x12]:          call @3187 // <std.io#ybq.ybv.adia>   
19 [0x13]:          call @3194 // <std.io#ybq.ybv.adih>   
20 [0x14]:          call @3566 // <std#string.get_data>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: platform.kernel#yky.yli.advz[3492] params(1) in file: ylg:33:15: note:  
		    static def load_library(name: string) {
		              ^

0 [0x0]: line: 34 pushl 0   
1 [0x1]:          call @3491 // <platform.kernel#yky.yli.aduy>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 35 pushl 1   : protected asm start
5 [0x5]:          int 0x39   
6 [0x6]:          ret   : protected asm end


function: platform.kernel#yky.yli.adva[3493] params(1) in file: ylg:41:15: note:  
		    static def free_library(name: string): var {
		              ^

0 [0x0]: line: 42 pushl 0   
1 [0x1]:          call @3491 // <platform.kernel#yky.yli.aduy>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 43 istorel 0, fp+2   
6 [0x6]: line: 44 pushl 1   : protected asm start
7 [0x7]:          int 0x3a   
8 [0x8]:          smovr_2 ebx, fp+2   
9 [0x9]: line: 50 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: platform.kernel#yky.yli.advb[3494] params(2) in file: ylg:53:15: note:  
		    static def link_func(name: string, library: string): var {
		              ^

0 [0x0]: line: 54 pushl 0   
1 [0x1]:          call @3491 // <platform.kernel#yky.yli.aduy>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 55 pushl 0   
5 [0x5]:          call @3566 // <std#string.get_data>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+3   
8 [0x8]: line: 56 istorel 0, fp+4   
10 [0xa]: line: 57 pushl 3   : protected asm start
11 [0xb]:          pushl 2   
12 [0xc]:          int 0x3b   
13 [0xd]:          smovr_2 ebx, fp+4   
14 [0xe]: line: 64 loadl ebx, fp+4   : protected asm end
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: platform.kernel#yky.yli.advc[3495] params(1) in file: ylg:67:23: note:  
		    private static def srt_init(args: object[]) : var {
		                      ^

0 [0x0]: line: 68 new_class @0 // xxz#xxa   
1 [0x1]:          skip @0 // pc = 1   
2 [0x2]:          dup    
3 [0x3]:          newstr @3 //    
4 [0x4]:          call @3540 // <std#string.string>   
5 [0x5]:          pushl 0   
6 [0x6]:          movi #0, ebx   
8 [0x8]:          popobj2    
9 [0x9]:          movr adx, ebx   
10 [0xa]:          chklen adx   
11 [0xb]:          movnd adx   
12 [0xc]:          vcast 0 -> []   
13 [0xd]:          pushobj   
14 [0xe]:          call @3552 // <std#string.operator+>   
15 [0xf]:          movg @54 // @ykk#ykl.ykr   
16 [0x10]:          movn #1   
18 [0x12]:          popobj   
19 [0x13]: line: 69 new_class @0 // xxz#xxa   
20 [0x14]:          skip @0 // pc = 20   
21 [0x15]:          dup    
22 [0x16]:          newstr @3 //    
23 [0x17]:          call @3540 // <std#string.string>   
24 [0x18]:          pushl 0   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          popobj2    
28 [0x1c]:          movr adx, ebx   
29 [0x1d]:          chklen adx   
30 [0x1e]:          movnd adx   
31 [0x1f]:          vcast 0 -> []   
32 [0x20]:          pushobj   
33 [0x21]:          call @3552 // <std#string.operator+>   
34 [0x22]:          movg @54 // @ykk#ykl.ykr   
35 [0x23]:          movn #3   
37 [0x25]:          popobj   
38 [0x26]: line: 70 new_class @0 // xxz#xxa   
39 [0x27]:          skip @0 // pc = 39   
40 [0x28]:          dup    
41 [0x29]:          newstr @3 //    
42 [0x2a]:          call @3540 // <std#string.string>   
43 [0x2b]:          pushl 0   
44 [0x2c]:          movi #2, ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          vcast 0 -> []   
51 [0x33]:          pushobj   
52 [0x34]:          call @3552 // <std#string.operator+>   
53 [0x35]:          movg @54 // @ykk#ykl.ykr   
54 [0x36]:          movn #2   
56 [0x38]:          popobj   
57 [0x39]: line: 71 new_class @0 // xxz#xxa   
58 [0x3a]:          skip @0 // pc = 58   
59 [0x3b]:          dup    
60 [0x3c]:          newstr @3 //    
61 [0x3d]:          call @3540 // <std#string.string>   
62 [0x3e]:          pushl 0   
63 [0x3f]:          movi #3, ebx   
65 [0x41]:          popobj2    
66 [0x42]:          movr adx, ebx   
67 [0x43]:          chklen adx   
68 [0x44]:          movnd adx   
69 [0x45]:          vcast 0 -> []   
70 [0x46]:          pushobj   
71 [0x47]:          call @3552 // <std#string.operator+>   
72 [0x48]:          movg @54 // @ykk#ykl.ykr   
73 [0x49]:          movn #0   
75 [0x4b]:          popobj   
76 [0x4c]: line: 73 call @3489 // <platform.kernel#yky.yli.aduw>   
77 [0x4d]: line: 74 pushl 0   
78 [0x4e]: line: 76 movi #4, ebx   
80 [0x50]:          popobj2    
81 [0x51]:          movr adx, ebx   
82 [0x52]:          chklen adx   
83 [0x53]:          movnd adx   
84 [0x54]:          movi #45, cmt   
86 [0x56]:          cast cmt   
87 [0x57]:          smovr_3 fp+1   
88 [0x58]: line: 77 pushl 1   
89 [0x59]:          call @3479 // <platform.kernel#yky.ylf.adum>   
90 [0x5a]: line: 79 movg @43 // @std.io#ybq.yhd   
91 [0x5b]:          movn #2   
93 [0x5d]:          smovr_3 fp+2   
94 [0x5e]: line: 80 movg @32 // @std.io#ybq.ycg   
95 [0x5f]:          movn #0   
97 [0x61]:          pushobj   
98 [0x62]:          pushl 1   
99 [0x63]:          call @3237 // <std.io#ybq.ycg.adjy>   
100 [0x64]: line: 82 movg @32 // @std.io#ybq.ycg   : protected asm start
101 [0x65]:          movn #0   
103 [0x67]:          pushobj   
104 [0x68]:          movl 1   
105 [0x69]:          movn #7   
107 [0x6b]:          popobj   
108 [0x6c]:          movl 2   
109 [0x6d]:          pushobj   
110 [0x6e]:          movl 1   
111 [0x6f]:          movn #3   
113 [0x71]:          popobj   
114 [0x72]: line: 99 movl 0   : protected asm end
115 [0x73]: line: 100 sizeof ebx   
116 [0x74]:           rstore ebx   
117 [0x75]:           movi #5, ebx   
119 [0x77]:           loadval ecx   
120 [0x78]:           sub ecx, ebx -> ebx   
121 [0x79]:           new_classarray ebx  // std#string[]   
123 [0x7b]:           popobj2    
124 [0x7c]:           smovr_3 fp+3   
125 [0x7d]: line: 101 istorel 0, fp+4   
127 [0x7f]: line: 103 istorel 5, fp+5   
129 [0x81]:           ipushl #5   
130 [0x82]:           movl 0   
131 [0x83]:           sizeof ebx   
132 [0x84]:           loadval ecx   
133 [0x85]:           lt ecx, ebx   
134 [0x86]:           movr ebx, cmt   
135 [0x87]:           movr cmt, ebx   
136 [0x88]:           jne 163   
137 [0x89]: line: 104 new_class @0 // xxz#xxa   
138 [0x8a]:           skip @0 // pc = 138   
139 [0x8b]:           dup    
140 [0x8c]:           pushl 0   
141 [0x8d]:           loadl ebx, fp+5   
142 [0x8e]:           popobj2    
143 [0x8f]:           movr adx, ebx   
144 [0x90]:           chklen adx   
145 [0x91]:           movnd adx   
146 [0x92]:           vcast 0 -> []   
147 [0x93]:           pushobj   
148 [0x94]:           call @3540 // <std#string.string>   
149 [0x95]:           pushl 3   
150 [0x96]:           loadl ebx, fp+4   
151 [0x97]:           movr egx, ebx   
152 [0x98]:           inc ebx   
153 [0x99]:           smovr_2 ebx, fp+4   
154 [0x9a]:           movr ebx, egx   
155 [0x9b]:           popobj2    
156 [0x9c]:           movr adx, ebx   
157 [0x9d]:           chklen adx   
158 [0x9e]:           movnd adx   
159 [0x9f]:           popobj   
160 [0xa0]:           iaddl 1, fp@5   
162 [0xa2]:           jmp @129   
163 [0xa3]: line: 107 istorel 0, fp+6   
165 [0xa5]: line: 108 movg @58 // @platform.kernel#yky.yli   
166 [0xa6]:           movn #0   
168 [0xa8]:           movi #0, adx   
170 [0xaa]:           iaload ebx, adx   
171 [0xab]:           rstore ebx   
172 [0xac]:           movi #0, ebx   
174 [0xae]:           loadval ecx   
175 [0xaf]:           tne ecx, ebx   
176 [0xb0]:           jne 189   
177 [0xb1]: line: 109 movg @58 // @platform.kernel#yky.yli   
178 [0xb2]:           movn #0   
180 [0xb4]:           movi #0, adx   
182 [0xb6]:           iaload ebx, adx   
183 [0xb7]:           rstore ebx   
184 [0xb8]:           pushl 3   
185 [0xb9]:           smov ebx, sp+[-1]   
186 [0xba]:           calld ebx   
187 [0xbb]:           ipopl 6   
188 [0xbc]:           jmp @256   
189 [0xbd]:           movg @58 // @platform.kernel#yky.yli   
190 [0xbe]:           movn #1   
192 [0xc0]:           movi #0, adx   
194 [0xc2]:           iaload ebx, adx   
195 [0xc3]:           rstore ebx   
196 [0xc4]:           movi #0, ebx   
198 [0xc6]:           loadval ecx   
199 [0xc7]:           tne ecx, ebx   
200 [0xc8]:           jne 212   
201 [0xc9]: line: 110 movg @58 // @platform.kernel#yky.yli   
202 [0xca]:           movn #1   
204 [0xcc]:           movi #0, adx   
206 [0xce]:           iaload ebx, adx   
207 [0xcf]:           rstore ebx   
208 [0xd0]:           pushl 3   
209 [0xd1]:           smov ebx, sp+[-1]   
210 [0xd2]:           calld ebx   
211 [0xd3]:           jmp @256   
212 [0xd4]:           movg @58 // @platform.kernel#yky.yli   
213 [0xd5]:           movn #2   
215 [0xd7]:           movi #0, adx   
217 [0xd9]:           iaload ebx, adx   
218 [0xda]:           rstore ebx   
219 [0xdb]:           movi #0, ebx   
221 [0xdd]:           loadval ecx   
222 [0xde]:           tne ecx, ebx   
223 [0xdf]:           jne 234   
224 [0xe0]: line: 111 movg @58 // @platform.kernel#yky.yli   
225 [0xe1]:           movn #2   
227 [0xe3]:           movi #0, adx   
229 [0xe5]:           iaload ebx, adx   
230 [0xe6]:           rstore ebx   
231 [0xe7]:           loadval ebx   
232 [0xe8]:           calld ebx   
233 [0xe9]:           jmp @256   
234 [0xea]:           movg @58 // @platform.kernel#yky.yli   
235 [0xeb]:           movn #3   
237 [0xed]:           movi #0, adx   
239 [0xef]:           iaload ebx, adx   
240 [0xf0]:           rstore ebx   
241 [0xf1]:           movi #0, ebx   
243 [0xf3]:           loadval ecx   
244 [0xf4]:           tne ecx, ebx   
245 [0xf5]:           jne 256   
246 [0xf6]: line: 112 movg @58 // @platform.kernel#yky.yli   
247 [0xf7]:           movn #3   
249 [0xf9]:           movi #0, adx   
251 [0xfb]:           iaload ebx, adx   
252 [0xfc]:           rstore ebx   
253 [0xfd]:           loadval ebx   
254 [0xfe]:           calld ebx   
255 [0xff]:           ipopl 6   
256 [0x100]:           nop   
257 [0x101]: line: 115 loadl ebx, fp+6   
258 [0x102]:           return_val ebx   
259 [0x103]:           ret   


constructor: platform.kernel#yky.yli.advd[3496] params(0) in file: ylg:6:6: note:  
		class platform
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#yaf.adve[3497] params(1) in file: ylq:3:4: note:  
		def strtod(str: string) : var {
		   ^

0 [0x0]: line: 4 pushl 0   
1 [0x1]:         call @3566 // <std#string.get_data>   
2 [0x2]:         popobj2    
3 [0x3]:         smovr_3 fp+1   
4 [0x4]: line: 5 istorel 0, fp+2   
6 [0x6]: line: 7 pushl 1   : protected asm start
7 [0x7]:         int 0x43   
8 [0x8]:         smovr_2 ebx, fp+2   
9 [0x9]: line: 13 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#yaf.advf[3498] params(3) in file: ylq:16:4: note:  
		def snprintf(fmt: var, num: var, precision: var) : var[] {
		   ^

0 [0x0]: line: 17 loadl egx, fp+0   : protected asm start
1 [0x1]:          loadl ebx, fp+1   
2 [0x2]:          loadl ecx, fp+2   
3 [0x3]:          int 0x1   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]: line: 26 pushnull    : protected asm end
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#yaf.advg[3499] params(1) in file: ylq:29:4: note:  
		def print(data: _int8[]) {
		   ^

0 [0x0]: line: 30 pushl 0   
1 [0x1]:          call @3527 // <std#yaf.adwi>   
2 [0x2]:          ret   


function: std#yaf.advh[3500] params(1) in file: ylq:33:4: note:  
		def print(str: string) {
		   ^

0 [0x0]: line: 34 pushl 0   
1 [0x1]:          call @3566 // <std#string.get_data>   
2 [0x2]:          call @3527 // <std#yaf.adwi>   
3 [0x3]:          ret   


function: std#yaf.advi[3501] params(1) in file: ylq:37:4: note:  
		def println(data: var[]) {
		   ^

0 [0x0]: line: 38 pushl 0   
1 [0x1]:          call @3530 // <std#yaf.adwl>   
2 [0x2]: line: 39 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advj[3502] params(1) in file: ylq:42:4: note:  
		def println(data: _int8[]) {
		   ^

0 [0x0]: line: 43 pushl 0   
1 [0x1]:          call @3527 // <std#yaf.adwi>   
2 [0x2]: line: 44 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advk[3503] params(1) in file: ylq:47:4: note:  
		def println(data: _int16[]) {
		   ^

0 [0x0]: line: 48 pushl 0   
1 [0x1]:          call @3531 // <std#yaf.adwm>   
2 [0x2]: line: 49 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advl[3504] params(1) in file: ylq:52:4: note:  
		def println(data: _int32[]) {
		   ^

0 [0x0]: line: 53 pushl 0   
1 [0x1]:          call @3532 // <std#yaf.adwn>   
2 [0x2]: line: 54 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advm[3505] params(1) in file: ylq:57:4: note:  
		def println(data: _int64[]) {
		   ^

0 [0x0]: line: 58 pushl 0   
1 [0x1]:          call @3533 // <std#yaf.adwo>   
2 [0x2]: line: 59 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advn[3506] params(1) in file: ylq:62:4: note:  
		def println(data: _uint8[]) {
		   ^

0 [0x0]: line: 63 pushl 0   
1 [0x1]:          call @3534 // <std#yaf.adwp>   
2 [0x2]: line: 64 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advo[3507] params(1) in file: ylq:67:4: note:  
		def println(data: _uint16[]) {
		   ^

0 [0x0]: line: 68 pushl 0   
1 [0x1]:          call @3535 // <std#yaf.adwq>   
2 [0x2]: line: 69 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advp[3508] params(1) in file: ylq:72:4: note:  
		def println(data: _uint32[]) {
		   ^

0 [0x0]: line: 73 pushl 0   
1 [0x1]:          call @3536 // <std#yaf.adwr>   
2 [0x2]: line: 74 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advq[3509] params(1) in file: ylq:77:4: note:  
		def println(data: _uint64[]) {
		   ^

0 [0x0]: line: 78 pushl 0   
1 [0x1]:          call @3537 // <std#yaf.adws>   
2 [0x2]: line: 79 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advr[3510] params(1) in file: ylq:82:4: note:  
		def println(data: var) {
		   ^

0 [0x0]: line: 83 ipushl #0   
1 [0x1]:          call @3528 // <std#yaf.adwj>   
2 [0x2]: line: 84 istore 10   
4 [0x4]:          call @3529 // <std#yaf.adwk>   
5 [0x5]:          ret   


function: std#yaf.advs[3511] params(0) in file: ylq:87:4: note:  
		def println() {
		   ^

0 [0x0]: line: 88 istore 10   
2 [0x2]:          call @3529 // <std#yaf.adwk>   
3 [0x3]:          ret   


function: std#yaf.advt[3512] params(1) in file: ylq:91:4: note:  
		def println(e: _enum_) {
		   ^

0 [0x0]: line: 92 pushl 0   
1 [0x1]:          call @3432 // <std#yaf.yja.adso>   
2 [0x2]:          call @3527 // <std#yaf.adwi>   
3 [0x3]: line: 93 istore 10   
5 [0x5]:          call @3529 // <std#yaf.adwk>   
6 [0x6]:          ret   


function: std#yaf.advu[3513] params(0) in file: ylq:96:4: note:  
		def read_line() : string {
		   ^

0 [0x0]: line: 97 istorel 0, fp+0   
2 [0x2]: line: 98 new_class @0 // xxz#xxa   
3 [0x3]:          skip @0 // pc = 3   
4 [0x4]:          dup    
5 [0x5]:          newstr @3 //    
6 [0x6]:          call @3540 // <std#string.string>   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+1   
9 [0x9]: line: 100 call @3515 // <std#yaf.advw>   
10 [0xa]:           loadval ebx   
11 [0xb]:           mov8 ebx, ebx   
12 [0xc]:           smovr_2 ebx, fp+0   
13 [0xd]: line: 101 ipushl #0   
14 [0xe]:           movi #13, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skne ebx // pc = 24   
20 [0x14]:           ipushl #0   
21 [0x15]:           movi #10, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           tne ecx, ebx   
25 [0x19]:           jne 35   
26 [0x1a]: line: 102 pushl 1   
27 [0x1b]:           ipushl #0   
28 [0x1c]:           call @3547 // <std#string.append>   
29 [0x1d]:           pop   
30 [0x1e]: line: 103 call @3515 // <std#yaf.advw>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           mov8 ebx, ebx   
33 [0x21]:           smovr_2 ebx, fp+0   
34 [0x22]:           jmp @13   
35 [0x23]: line: 106 movl 1   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: std#yaf.advv[3514] params(0) in file: ylq:109:4: note:  
		def read_passwd() : string {
		   ^

0 [0x0]: line: 110 istorel 0, fp+0   
2 [0x2]: line: 111 new_class @0 // xxz#xxa   
3 [0x3]:           skip @0 // pc = 3   
4 [0x4]:           dup    
5 [0x5]:           newstr @3 //    
6 [0x6]:           call @3540 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 113 call @3516 // <std#yaf.advx>   
10 [0xa]:           loadval ebx   
11 [0xb]:           mov8 ebx, ebx   
12 [0xc]:           smovr_2 ebx, fp+0   
13 [0xd]: line: 114 ipushl #0   
14 [0xe]:           movi #13, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skne ebx // pc = 24   
20 [0x14]:           ipushl #0   
21 [0x15]:           movi #10, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           tne ecx, ebx   
25 [0x19]:           jne 35   
26 [0x1a]: line: 115 pushl 1   
27 [0x1b]:           ipushl #0   
28 [0x1c]:           call @3547 // <std#string.append>   
29 [0x1d]:           pop   
30 [0x1e]: line: 116 call @3516 // <std#yaf.advx>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           mov8 ebx, ebx   
33 [0x21]:           smovr_2 ebx, fp+0   
34 [0x22]:           jmp @13   
35 [0x23]: line: 119 movl 1   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: std#yaf.advw[3515] params(0) in file: ylq:122:4: note:  
		def read_char() : var {
		   ^

0 [0x0]: line: 123 istore 0   
2 [0x2]:           call @3539 // <std#yaf.adwu>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#yaf.advx[3516] params(0) in file: ylq:126:4: note:  
		def read_raw_char() : var {
		   ^

0 [0x0]: line: 127 istore 1   
2 [0x2]:           call @3539 // <std#yaf.adwu>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#yaf.advy[3517] params(1) in file: ylq:130:4: note:  
		def println(str: string) {
		   ^

0 [0x0]: line: 131 pushl 0   
1 [0x1]:           call @3566 // <std#string.get_data>   
2 [0x2]:           call @3527 // <std#yaf.adwi>   
3 [0x3]: line: 132 istore 10   
5 [0x5]:           call @3529 // <std#yaf.adwk>   
6 [0x6]:           ret   


function: std#yaf.adwz[3518] params(1) in file: ylq:135:4: note:  
		def println(o: printable) {
		   ^

0 [0x0]: line: 136 pushl 0   
1 [0x1]:           invoke_delegate 3657 { static=0, args=0 }   
3 [0x3]:           call @3566 // <std#string.get_data>   
4 [0x4]:           call @3527 // <std#yaf.adwi>   
5 [0x5]: line: 137 istore 10   
7 [0x7]:           call @3529 // <std#yaf.adwk>   
8 [0x8]:           ret   


function: std#yaf.adwa[3519] params(1) in file: ylq:140:4: note:  
		def print(o: printable) {
		   ^

0 [0x0]: line: 141 pushl 0   
1 [0x1]:           invoke_delegate 3657 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3527 // <std#yaf.adwi>   
8 [0x8]:           ret   


function: std#yaf.adwb[3520] params(1) in file: ylq:144:4: note:  
		def print(data: var) {
		   ^

0 [0x0]: line: 145 ipushl #0   
1 [0x1]:           call @3528 // <std#yaf.adwj>   
2 [0x2]:           ret   


function: std#yaf.adwc[3521] params(0) in file: ylq:148:4: note:  
		def flush() {
		   ^

0 [0x0]: line: 149 int 0x34   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#yaf.adwd[3522] params(0) in file: ylq:152:4: note:  
		def utc_mills_time() : var {
		   ^

0 [0x0]: line: 153 call @3441 // <std#yaf.yji.adsx>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#yaf.adwe[3523] params(0) in file: ylq:156:4: note:  
		def nano_time() : var {
		   ^

0 [0x0]: line: 157 call @3436 // <std#yaf.yji.adss>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#yaf.adwf[3524] params(0) in file: ylq:160:4: note:  
		def exit() {
		   ^

0 [0x0]: line: 161 int 0x1d   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#yaf.adwg[3525] params(1) in file: ylq:164:4: note:  
		def sizeOf(data: object) : var {
		   ^

0 [0x0]: line: 165 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 171 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#yaf.adwh[3526] params(1) in file: ylq:174:4: note:  
		def sizeOf(data: object[]) : var {
		   ^

0 [0x0]: line: 175 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 181 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#yaf.adwi[3527] params(1) in file: ylq:184:10: note:  
		local def print_chars(str: _int8[]) {
		         ^

0 [0x0]: line: 185 istorel -1, fp+2   
2 [0x2]:           pushl 0   
3 [0x3]:           popl 3   
4 [0x4]:           iaddl 1, fp@2   
6 [0x6]:           movl 3   
7 [0x7]:           sizeof ecx   
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           lt ebx, ecx   
10 [0xa]:           jne 16   
11 [0xb]:           iaload ecx, ebx   
12 [0xc]:           smovr_2 ecx, fp+1   
13 [0xd]: line: 186 loadl ebx, fp+1   : protected asm start
14 [0xe]:           _putc ebx   
15 [0xf]:           jmp @4   : protected asm end
16 [0x10]:           ret   


function: std#yaf.adwj[3528] params(1) in file: ylq:193:10: note:  
		local def print_num(val: var) {
		         ^

0 [0x0]: line: 194 loadl ebx, fp+0   : protected asm start
1 [0x1]:           put ebx   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adwk[3529] params(1) in file: ylq:200:10: note:  
		local def print_char(val: _int8) {
		         ^

0 [0x0]: line: 201 loadl ebx, fp+0   : protected asm start
1 [0x1]:           _putc ebx   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adwl[3530] params(1) in file: ylq:207:10: note:  
		local def print_numbers(str: var[]) {
		         ^

0 [0x0]: line: 208 movi #91, ebx   : protected asm start
2 [0x2]:           movi #32, ecx   
4 [0x4]:           _putc ebx   
5 [0x5]:           _putc ecx   
6 [0x6]: line: 214 istorel 0, fp+1   : protected asm end
8 [0x8]:           ipushl #1   
9 [0x9]:           movl 0   
10 [0xa]:           sizeof ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 48   
16 [0x10]: line: 215 pushl 0   
17 [0x11]:           loadl ebx, fp+1   
18 [0x12]:           popobj2    
19 [0x13]:           movr adx, ebx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           smovr_2 ebx, fp+2   
23 [0x17]: line: 216 loadl ebx, fp+2   : protected asm start
24 [0x18]:           put ebx   
25 [0x19]: line: 221 ipushl #1   : protected asm end
26 [0x1a]:           movi #1, ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           add ecx, ebx -> ebx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movl 0   
32 [0x20]:           sizeof ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           lt ecx, ebx   
35 [0x23]:           movr ebx, cmt   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 44   
38 [0x26]: line: 222 movi #44, ebx   : protected asm start
40 [0x28]:           movi #32, ecx   
42 [0x2a]:           _putc ebx   
43 [0x2b]:           _putc ecx   
44 [0x2c]:           nop   : protected asm end
45 [0x2d]:           iaddl 1, fp@1   
47 [0x2f]:           jmp @8   
48 [0x30]: line: 230 movi #32, ebx   : protected asm start
50 [0x32]:           movi #93, ecx   
52 [0x34]:           _putc ebx   
53 [0x35]:           _putc ecx   
54 [0x36]:           ret   : protected asm end


function: std#yaf.adwm[3531] params(1) in file: ylq:238:10: note:  
		local def print_numbers(str: _int16[]) {
		         ^

0 [0x0]: line: 239 pushl 0   : protected asm start
1 [0x1]:           call @3530 // <std#yaf.adwl>   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adwn[3532] params(1) in file: ylq:245:10: note:  
		local def print_numbers(str: _int32[]) {
		         ^

0 [0x0]: line: 246 pushl 0   : protected asm start
1 [0x1]:           call @3530 // <std#yaf.adwl>   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adwo[3533] params(1) in file: ylq:252:10: note:  
		local def print_numbers(str: _int64[]) {
		         ^

0 [0x0]: line: 253 pushl 0   : protected asm start
1 [0x1]:           call @3530 // <std#yaf.adwl>   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adwp[3534] params(1) in file: ylq:259:10: note:  
		local def print_numbers(str: _uint8[]) {
		         ^

0 [0x0]: line: 260 pushl 0   : protected asm start
1 [0x1]:           call @3530 // <std#yaf.adwl>   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adwq[3535] params(1) in file: ylq:266:10: note:  
		local def print_numbers(str: _uint16[]) {
		         ^

0 [0x0]: line: 267 pushl 0   : protected asm start
1 [0x1]:           call @3530 // <std#yaf.adwl>   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adwr[3536] params(1) in file: ylq:273:10: note:  
		local def print_numbers(str: _uint32[]) {
		         ^

0 [0x0]: line: 274 pushl 0   : protected asm start
1 [0x1]:           call @3530 // <std#yaf.adwl>   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adws[3537] params(1) in file: ylq:280:10: note:  
		local def print_numbers(str: _uint64[]) {
		         ^

0 [0x0]: line: 281 pushl 0   : protected asm start
1 [0x1]:           call @3530 // <std#yaf.adwl>   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adwt[3538] params(1) in file: ylq:287:10: note:  
		local def print_chars(str: _int16[]) {
		         ^

0 [0x0]: line: 288 pushl 0   : protected asm start
1 [0x1]:           call @3527 // <std#yaf.adwi>   
2 [0x2]:           ret   : protected asm end


function: std#yaf.adwu[3539] params(1) in file: ylq:294:10: note:  
		local def read_ch(hide: var) : var {
		         ^

0 [0x0]: line: 295 loadl cmt, fp+0   : protected asm start
1 [0x1]:           get ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 301 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


constructor: std#string.string[3540] params(1) in file: yls:10:11: note:  
		    string(str : _int8[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 11 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 10   
6 [0x6]: line: 12 pushl 0   
7 [0x7]:          pushl 1   
8 [0x8]:          call @3550 // <std#string.append>   
9 [0x9]:          pop   
10 [0xa]:          nop   
11 [0xb]:          ret   


constructor: std#string.string[3541] params(1) in file: yls:16:11: note:  
		    string(ch: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 17 pushl 0   
2 [0x2]:          ipushl #1   
3 [0x3]:          call @3547 // <std#string.append>   
4 [0x4]:          pop   
5 [0x5]:          ret   


constructor: std#string.string[3542] params(1) in file: yls:20:11: note:  
		    string(str : char[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 21 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 46   
6 [0x6]: line: 22 movl 1   
7 [0x7]:          sizeof ebx   
8 [0x8]:          newarry ebx: 8   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]: line: 23 istorel 0, fp+2   
15 [0xf]: line: 24 istorel -1, fp+4   
17 [0x11]:          pushl 1   
18 [0x12]:          popl 5   
19 [0x13]:          iaddl 1, fp@4   
21 [0x15]:          movl 5   
22 [0x16]:          sizeof ecx   
23 [0x17]:          loadl ebx, fp+4   
24 [0x18]:          lt ebx, ecx   
25 [0x19]:          jne 46   
26 [0x1a]:          movnd ebx   
27 [0x1b]:          pushobj   
28 [0x1c]:          popl 3   
29 [0x1d]: line: 25 pushl 3   
30 [0x1e]:          call @1678 // <std#yaf.yar.abag>   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          movr egx, ebx   
37 [0x25]:          inc ebx   
38 [0x26]:          smovr_2 ebx, fp+2   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]:          jmp @19   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


constructor: std#string.string[3543] params(1) in file: yls:30:11: note:  
		    string(str: string) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 31 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 13   
6 [0x6]: line: 32 pushl 0   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3550 // <std#string.append>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]:          ret   


constructor: std#string.string[3544] params(2) in file: yls:36:11: note:  
		    string(str : _int8[], offset: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 37 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 16   
6 [0x6]: line: 38 pushl 1   
7 [0x7]:          ipushl #2   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3354 // <std.io#ybq.adow>   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]:          nop   
17 [0x11]:          ret   


constructor: std#string.string[3545] params(3) in file: yls:42:11: note:  
		    string(str : _int8[], start: var, end: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 43 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          skne ebx // pc = 15   
5 [0x5]:          ipushl #3   
6 [0x6]:          loadl ebx, fp+2   
7 [0x7]:          loadval ecx   
8 [0x8]:          sub ecx, ebx -> ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #0, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          gt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 36   
17 [0x11]: line: 44 ipushl #3   
18 [0x12]:          loadl ebx, fp+2   
19 [0x13]:          loadval ecx   
20 [0x14]:          sub ecx, ebx -> ebx   
21 [0x15]:          newarry ebx: 0   
22 [0x16]:          movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          popobj   
26 [0x1a]: line: 45 pushl 1   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          pushobj   
31 [0x1f]:          istore 0   
33 [0x21]:          ipushl #2   
34 [0x22]:          ipushl #3   
35 [0x23]:          call @3344 // <std.io#ybq.adom>   
36 [0x24]:          nop   
37 [0x25]:          ret   


function: std#string.replace[3546] params(2) in file: yls:49:8: note:  
		    def replace(pos : var, ch: _int8) : string {
		       ^

0 [0x0]: line: 50 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          movr ebx, cmt   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 14   
10 [0xa]: line: 51 pushl 0   
11 [0xb]:          ipushl #1   
12 [0xc]:          call @3596 // <std#string.bounds_error>   
13 [0xd]:          throw    
14 [0xe]:          nop   
15 [0xf]: line: 54 ipushl #2   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+1   
21 [0x15]:          popobj2    
22 [0x16]:          movr adx, ebx   
23 [0x17]:          chklen adx   
24 [0x18]:          loadval ebx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 55 movl 0   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   


function: std#string.append[3547] params(1) in file: yls:58:8: note:  
		    def append(ch: var) : string
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 61 movi #1, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @31   
16 [0x10]: line: 63 movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          add ecx, ebx -> ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3334 // <std.io#ybq.adoc>   
31 [0x1f]:          nop   
32 [0x20]: line: 65 ipushl #1   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          movl 0   
38 [0x26]:          movn #0   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          sub ecx, ebx -> ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          loadval ebx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 66 movl 0   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: std#string.empty[3548] params(0) in file: yls:69:8: note:  
		    def empty() := sizeof(data)==0;
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          sizeof ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          movi #0, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          return_val cmt   
10 [0xa]:          ret   


function: std#string.append[3549] params(1) in file: yls:71:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 71 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @1678 // <std#yaf.yar.abag>   
3 [0x3]:          call @3547 // <std#string.append>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#string.append[3550] params(1) in file: yls:73:8: note:  
		    def append(immstr: _int8[]) : string
		       ^

0 [0x0]: line: 75 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 77 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          sizeof ebx   
12 [0xc]:          smovr_2 ebx, fp+2   
13 [0xd]: line: 79 movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          pushnull    
18 [0x12]:          itest ebx   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 29   
21 [0x15]: line: 80 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          newarry ebx: 0   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          popobj   
28 [0x1c]:          jmp @44   
29 [0x1d]: line: 82 movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          pushobj   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movl 1   
39 [0x27]:          sizeof ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          call @3334 // <std.io#ybq.adoc>   
44 [0x2c]:          nop   
45 [0x2d]: line: 84 pushl 1   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #0   
49 [0x31]:          pushobj   
50 [0x32]:          ipushl #2   
51 [0x33]:          istore 0   
53 [0x35]:          movl 1   
54 [0x36]:          sizeof ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          call @3344 // <std.io#ybq.adom>   
57 [0x39]: line: 85 movl 0   
58 [0x3a]:          returnobj   
59 [0x3b]:          ret   


function: std#string.append[3551] params(2) in file: yls:88:8: note:  
		    def append(immstr: _int8[], len: var) : string
		       ^

0 [0x0]: line: 90 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 91 loadl ecx, fp+2   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          lt ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 21   
15 [0xf]: line: 92 new_class @0 // xxz#xxa   
16 [0x10]:          mull adx, fp@0   
17 [0x11]:          dup    
18 [0x12]:          newstr @13 // length cannot be less than zero   
19 [0x13]:          call @3649 // <std#error.error>   
20 [0x14]:          throw    
21 [0x15]:          nop   
22 [0x16]: line: 94 ipushl #2   
23 [0x17]:          movl 1   
24 [0x18]:          sizeof ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          gt ecx, ebx   
27 [0x1b]:          movr ebx, cmt   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 48   
30 [0x1e]: line: 95 new_class @0 // xxz#xxa   
31 [0x1f]:          mull adx, fp@0   
32 [0x20]:          dup    
33 [0x21]:          new_class @0 // xxz#xxa   
34 [0x22]:          skip @0 // pc = 34   
35 [0x23]:          dup    
36 [0x24]:          newstr @14 // length of:    
37 [0x25]:          call @3540 // <std#string.string>   
38 [0x26]:          ipushl #2   
39 [0x27]:          call @3572 // <std#string.operator+>   
40 [0x28]:          newstr @15 //  is greater than the string:    
41 [0x29]:          call @3552 // <std#string.operator+>   
42 [0x2a]:          movl 1   
43 [0x2b]:          sizeof ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          call @3572 // <std#string.operator+>   
46 [0x2e]:          call @3650 // <std#error.error>   
47 [0x2f]:          throw    
48 [0x30]:          nop   
49 [0x31]: line: 97 movl 0   
50 [0x32]:          movn #0   
52 [0x34]:          sizeof ebx   
53 [0x35]:          smovr_2 ebx, fp+3   
54 [0x36]: line: 99 movl 0   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          pushnull    
59 [0x3b]:          itest ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 69   
62 [0x3e]: line: 100 loadl ebx, fp+2   
63 [0x3f]:           newarry ebx: 8   
64 [0x40]:           movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           popobj   
68 [0x44]:           jmp @83   
69 [0x45]: line: 102 movl 0   
70 [0x46]:           movn #0   
72 [0x48]:           pushobj   
73 [0x49]:           movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           sizeof ebx   
77 [0x4d]:           rstore ebx   
78 [0x4e]:           loadl ebx, fp+2   
79 [0x4f]:           loadval ecx   
80 [0x50]:           add ecx, ebx -> ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           call @3334 // <std.io#ybq.adoc>   
83 [0x53]:           nop   
84 [0x54]: line: 104 pushl 1   
85 [0x55]:           movl 0   
86 [0x56]:           movn #0   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           istore 0   
92 [0x5c]:           ipushl #2   
93 [0x5d]:           call @3344 // <std.io#ybq.adom>   
94 [0x5e]: line: 105 movl 0   
95 [0x5f]:           returnobj   
96 [0x60]:           ret   


overload function: std#string.operator+[3552] params(1) in file: yls:108:8: note:  
		    def operator+(immstr : _int8[]) : string {
		       ^

0 [0x0]: line: 109 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 110 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 22   
15 [0xf]: line: 111 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           call @3550 // <std#string.append>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   
21 [0x15]:           jmp @25   
22 [0x16]: line: 113 movl 2   
23 [0x17]:           returnobj   
24 [0x18]:           ret   
25 [0x19]:           nop   


function: std#string.to_lower[3553] params(0) in file: yls:116:8: note:  
		    def to_lower() : string {
		       ^

0 [0x0]: line: 117 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           call @3598 // <std#string.string>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 118 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           pushnull    
11 [0xb]:           itest ebx   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 88   
15 [0xf]: line: 119 movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           istore 0   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           sizeof ebx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           call @3354 // <std.io#ybq.adow>   
27 [0x1b]:           movl 1   
28 [0x1c]:           movn #0   
30 [0x1e]:           popobj   
31 [0x1f]: line: 121 istorel 0, fp+2   
33 [0x21]: line: 122 istorel -1, fp+4   
35 [0x23]:           movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           pushobj   
39 [0x27]:           popl 5   
40 [0x28]:           iaddl 1, fp@4   
42 [0x2a]:           movl 5   
43 [0x2b]:           sizeof ecx   
44 [0x2c]:           loadl ebx, fp+4   
45 [0x2d]:           lt ebx, ecx   
46 [0x2e]:           jne 88   
47 [0x2f]:           iaload ecx, ebx   
48 [0x30]:           smovr_2 ecx, fp+3   
49 [0x31]: line: 123 istore 65   
51 [0x33]:           loadl ebx, fp+3   
52 [0x34]:           loadval ecx   
53 [0x35]:           lte ecx, ebx   
54 [0x36]:           movr ebx, cmt   
55 [0x37]:           skne ebx // pc = 62   
56 [0x38]:           ipushl #3   
57 [0x39]:           movi #90, ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           lte ecx, ebx   
61 [0x3d]:           movr ebx, cmt   
62 [0x3e]:           movr cmt, ebx   
63 [0x3f]:           jne 84   
64 [0x40]: line: 124 istore 97   
66 [0x42]:           ipushl #3   
67 [0x43]:           movi #65, ebx   
69 [0x45]:           loadval ecx   
70 [0x46]:           sub ecx, ebx -> ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           add ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 1   
75 [0x4b]:           movn #0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+2   
79 [0x4f]:           popobj2    
80 [0x50]:           movr adx, ebx   
81 [0x51]:           chklen adx   
82 [0x52]:           loadval ebx   
83 [0x53]:           rmov adx, ebx   
84 [0x54]:           nop   
85 [0x55]: line: 125 iaddl 1, fp@2   
87 [0x57]:           jmp @40   
88 [0x58]:           nop   
89 [0x59]: line: 129 movl 1   
90 [0x5a]:           returnobj   
91 [0x5b]:           ret   


overload function: std#string.operator+[3554] params(1) in file: yls:132:8: note:  
		    def operator+(obj : printable) : string {
		       ^

0 [0x0]: line: 133 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 134 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 43   
15 [0xf]: line: 135 pushl 1   
16 [0x10]:           invoke_delegate 3657 { static=0, args=0 }   
18 [0x12]:           popobj2    
19 [0x13]:           smovr_3 fp+3   
20 [0x14]: line: 136 movl 3   
21 [0x15]:           checknull   
22 [0x16]:           not ebx, ebx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 35   
25 [0x19]: line: 137 pushl 2   
26 [0x1a]:           movl 3   
27 [0x1b]:           movn #0   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @3550 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           jmp @41   
35 [0x23]: line: 139 pushl 2   
36 [0x24]:           newstr @16 // null   
37 [0x25]:           call @3550 // <std#string.append>   
38 [0x26]:           popobj2    
39 [0x27]:           returnobj   
40 [0x28]:           ret   
41 [0x29]:           nop   
42 [0x2a]:           jmp @49   
43 [0x2b]: line: 142 pushl 2   
44 [0x2c]:           newstr @16 // null   
45 [0x2d]:           call @3550 // <std#string.append>   
46 [0x2e]:           popobj2    
47 [0x2f]:           returnobj   
48 [0x30]:           ret   
49 [0x31]:           nop   


overload function: std#string.operator+[3555] params(1) in file: yls:145:7: note:  
		   def operator+(str : string) : string {
		      ^

0 [0x0]: line: 146 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 147 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 25   
15 [0xf]: line: 148 pushl 2   
16 [0x10]:           movl 1   
17 [0x11]:           movn #0   
19 [0x13]:           pushobj   
20 [0x14]:           call @3550 // <std#string.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 150 pushl 2   
26 [0x1a]:           newstr @16 // null   
27 [0x1b]:           call @3550 // <std#string.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


function: std#string.to_string[3556] params(0) in file: yls:153:8: note:  
		    def to_string() := new string(data);
		       ^

0 [0x0]: line: 153 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator==[3557] params(1) in file: yls:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           sizeof ebx   
7 [0x7]:           loadval ecx   
8 [0x8]:           tne ecx, ebx   
9 [0x9]:           jne 13   
10 [0xa]: line: 157 istorel 0, fp+0   
12 [0xc]:           ret   
13 [0xd]:           nop   
14 [0xe]: line: 159 istorel 0, fp+2   
16 [0x10]: line: 160 istorel -1, fp+4   
18 [0x12]:           pushl 1   
19 [0x13]:           popl 5   
20 [0x14]:           iaddl 1, fp@4   
22 [0x16]:           movl 5   
23 [0x17]:           sizeof ecx   
24 [0x18]:           loadl ebx, fp+4   
25 [0x19]:           lt ebx, ecx   
26 [0x1a]:           jne 51   
27 [0x1b]:           iaload ecx, ebx   
28 [0x1c]:           smovr_2 ecx, fp+3   
29 [0x1d]: line: 161 ipushl #3   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           pushobj   
34 [0x22]:           loadl ebx, fp+2   
35 [0x23]:           movr egx, ebx   
36 [0x24]:           inc ebx   
37 [0x25]:           smovr_2 ebx, fp+2   
38 [0x26]:           movr ebx, egx   
39 [0x27]:           popobj2    
40 [0x28]:           movr adx, ebx   
41 [0x29]:           chklen adx   
42 [0x2a]:           iaload ebx, adx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           tne ecx, ebx   
45 [0x2d]:           jne 49   
46 [0x2e]: line: 162 istorel 0, fp+0   
48 [0x30]:           ret   
49 [0x31]:           nop   
50 [0x32]:           jmp @20   
51 [0x33]: line: 165 istorel 1, fp+0   
53 [0x35]:           ret   


overload function: std#string.operator==[3558] params(1) in file: yls:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 15   
12 [0xc]: line: 170 istorel 0, fp+0   
14 [0xe]:           ret   
15 [0xf]:           nop   
16 [0x10]: line: 172 istorel 0, fp+2   
18 [0x12]: line: 173 istorel -1, fp+4   
20 [0x14]:           movl 1   
21 [0x15]:           movn #0   
23 [0x17]:           pushobj   
24 [0x18]:           popl 5   
25 [0x19]:           iaddl 1, fp@4   
27 [0x1b]:           movl 5   
28 [0x1c]:           sizeof ecx   
29 [0x1d]:           loadl ebx, fp+4   
30 [0x1e]:           lt ebx, ecx   
31 [0x1f]:           jne 56   
32 [0x20]:           iaload ecx, ebx   
33 [0x21]:           smovr_2 ecx, fp+3   
34 [0x22]: line: 174 ipushl #3   
35 [0x23]:           movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           pushobj   
39 [0x27]:           loadl ebx, fp+2   
40 [0x28]:           movr egx, ebx   
41 [0x29]:           inc ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]:           movr ebx, egx   
44 [0x2c]:           popobj2    
45 [0x2d]:           movr adx, ebx   
46 [0x2e]:           chklen adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           loadval ecx   
49 [0x31]:           tne ecx, ebx   
50 [0x32]:           jne 54   
51 [0x33]: line: 175 istorel 0, fp+0   
53 [0x35]:           ret   
54 [0x36]:           nop   
55 [0x37]:           jmp @25   
56 [0x38]: line: 178 istorel 1, fp+0   
58 [0x3a]:           ret   


overload function: std#string.operator!=[3559] params(1) in file: yls:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3557 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator!=[3560] params(1) in file: yls:183:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 183 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3558 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator=[3561] params(1) in file: yls:185:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 187 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           del   
8 [0x8]:           jmp @20   
9 [0x9]: line: 189 pushl 1   
10 [0xa]:           istore 0   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @3354 // <std.io#ybq.adow>   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           popobj   
20 [0x14]:           nop   
21 [0x15]:           ret   


function: std#string.at[3562] params(1) in file: yls:192:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 193 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 14   
10 [0xa]: line: 194 pushl 0   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3596 // <std#string.bounds_error>   
13 [0xd]:           throw    
14 [0xe]:           nop   
15 [0xf]: line: 195 movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+1   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           return_val ebx   
25 [0x19]:           ret   


overload function: std#string.operator[[3563] params(1) in file: yls:198:8: note:  
		    def operator[](pos: var) := at(pos);
		       ^

0 [0x0]: line: 198 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3562 // <std#string.at>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.fmt[3564] params(1) in file: yls:200:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 201 ipushl #0   
1 [0x1]:           movg @59 // @std#string   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           ret   


function: std#string.set_precision[3565] params(1) in file: yls:204:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 205 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 26   
14 [0xe]: line: 206 new_class @0 // xxz#xxa   
15 [0xf]:           shr adx, adx -> adx   
16 [0x10]:           dup    
17 [0x11]:           new_class @0 // xxz#xxa   
18 [0x12]:           skip @0 // pc = 18   
19 [0x13]:           dup    
20 [0x14]:           newstr @17 // invalid precision:    
21 [0x15]:           call @3540 // <std#string.string>   
22 [0x16]:           ipushl #0   
23 [0x17]:           call @3572 // <std#string.operator+>   
24 [0x18]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 207 ipushl #0   
28 [0x1c]:           movg @59 // @std#string   
29 [0x1d]:           movn #1   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           ret   


function: std#string.get_data[3566] params(0) in file: yls:210:8: note:  
		    def get_data() := data;
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.get_elements[3567] params(0) in file: yls:212:8: note:  
		    def get_elements() := data;
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.to_array[3568] params(0) in file: yls:214:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 12   
8 [0x8]:           pushnull    
9 [0x9]:           popobj2    
10 [0xa]:           returnobj   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 217 movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           istore 0   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           sizeof ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @3354 // <std.io#ybq.adow>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   


function: std#string.starts_with[3569] params(1) in file: yls:221:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 222 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 15   
3 [0x3]:           movl 1   
4 [0x4]:           movn #0   
6 [0x6]:           sizeof ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           sizeof ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 20   
17 [0x11]: line: 223 istorel 0, fp+0   
19 [0x13]:           ret   
20 [0x14]:           nop   
21 [0x15]: line: 226 istorel 0, fp+2   
23 [0x17]:           ipushl #2   
24 [0x18]:           movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           sizeof ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           lt ecx, ebx   
30 [0x1e]:           movr ebx, cmt   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 62   
33 [0x21]: line: 228 movl 0   
34 [0x22]:           movn #0   
36 [0x24]:           pushobj   
37 [0x25]:           loadl ebx, fp+2   
38 [0x26]:           popobj2    
39 [0x27]:           movr adx, ebx   
40 [0x28]:           chklen adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 1   
44 [0x2c]:           movn #0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+2   
48 [0x30]:           popobj2    
49 [0x31]:           movr adx, ebx   
50 [0x32]:           chklen adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           tne ecx, ebx   
54 [0x36]:           jne 58   
55 [0x37]: line: 229 istorel 0, fp+0   
57 [0x39]:           ret   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @23   
62 [0x3e]: line: 231 istorel 1, fp+0   
64 [0x40]:           ret   


function: std#string.find[3570] params(1) in file: yls:235:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 236 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 17   
14 [0xe]: line: 237 istorel 0, fp+0   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 240 istorel 0, fp+2   
20 [0x14]: line: 241 istorel 0, fp+3   
22 [0x16]:           ipushl #3   
23 [0x17]:           movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           sizeof ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           lt ecx, ebx   
29 [0x1d]:           movr ebx, cmt   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 99   
32 [0x20]: line: 242 ipushl #3   
33 [0x21]:           movl 1   
34 [0x22]:           movn #0   
36 [0x24]:           sizeof ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           add ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           sizeof ebx   
44 [0x2c]:           loadval ecx   
45 [0x2d]:           lt ecx, ebx   
46 [0x2e]:           movr ebx, cmt   
47 [0x2f]:           movr cmt, ebx   
48 [0x30]:           jne 92   
49 [0x31]: line: 243 istorel 0, fp+4   
51 [0x33]:           ipushl #4   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           sizeof ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           lt ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 88   
61 [0x3d]: line: 244 movl 1   
62 [0x3e]:           movn #0   
64 [0x40]:           pushobj   
65 [0x41]:           loadl ebx, fp+4   
66 [0x42]:           popobj2    
67 [0x43]:           movr adx, ebx   
68 [0x44]:           chklen adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           rstore ebx   
71 [0x47]:           movl 0   
72 [0x48]:           movn #0   
74 [0x4a]:           pushobj   
75 [0x4b]:           loadl ebx, fp+4   
76 [0x4c]:           popobj2    
77 [0x4d]:           movr adx, ebx   
78 [0x4e]:           chklen adx   
79 [0x4f]:           iaload ebx, adx   
80 [0x50]:           loadval ecx   
81 [0x51]:           tne ecx, ebx   
82 [0x52]:           jne 84   
83 [0x53]: line: 245 jmp @88   
84 [0x54]:           nop   
85 [0x55]:           iaddl 1, fp@4   
87 [0x57]:           jmp @51   
88 [0x58]: line: 248 istorel 1, fp+0   
90 [0x5a]:           ret   
91 [0x5b]:           jmp @95   
92 [0x5c]: line: 249 istorel 0, fp+0   
94 [0x5e]:           ret   
95 [0x5f]:           nop   
96 [0x60]:           iaddl 1, fp@3   
98 [0x62]:           jmp @22   
99 [0x63]: line: 252 istorel 0, fp+0   
101 [0x65]:           ret   


function: std#string.ends_with[3571] params(1) in file: yls:255:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 256 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 17   
14 [0xe]: line: 257 istorel 0, fp+0   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 259 istorel 0, fp+2   
20 [0x14]: line: 260 movl 0   
21 [0x15]:           movn #0   
23 [0x17]:           sizeof ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           movl 1   
26 [0x1a]:           movn #0   
28 [0x1c]:           sizeof ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           sub ecx, ebx -> ebx   
31 [0x1f]:           smovr_2 ebx, fp+3   
32 [0x20]:           ipushl #3   
33 [0x21]:           movl 0   
34 [0x22]:           movn #0   
36 [0x24]:           sizeof ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 75   
42 [0x2a]: line: 261 movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           loadl ebx, fp+3   
47 [0x2f]:           popobj2    
48 [0x30]:           movr adx, ebx   
49 [0x31]:           chklen adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           loadl ebx, fp+2   
57 [0x39]:           movr egx, ebx   
58 [0x3a]:           inc ebx   
59 [0x3b]:           smovr_2 ebx, fp+2   
60 [0x3c]:           movr ebx, egx   
61 [0x3d]:           popobj2    
62 [0x3e]:           movr adx, ebx   
63 [0x3f]:           chklen adx   
64 [0x40]:           iaload ebx, adx   
65 [0x41]:           loadval ecx   
66 [0x42]:           tne ecx, ebx   
67 [0x43]:           jne 71   
68 [0x44]: line: 262 istorel 0, fp+0   
70 [0x46]:           ret   
71 [0x47]:           nop   
72 [0x48]:           iaddl 1, fp@3   
74 [0x4a]:           jmp @32   
75 [0x4b]: line: 265 istorel 1, fp+0   
77 [0x4d]:           ret   


overload function: std#string.operator+[3572] params(1) in file: yls:268:8: note:  
		    def operator+(num : var) : string {
		       ^

0 [0x0]: line: 269 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 270 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3582 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3550 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 271 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3573] params(1) in file: yls:274:8: note:  
		    def operator+(num : _int8) : string {
		       ^

0 [0x0]: line: 275 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 276 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3547 // <std#string.append>   
13 [0xd]:           pop   
14 [0xe]: line: 277 movl 2   
15 [0xf]:           returnobj   
16 [0x10]:           ret   


overload function: std#string.operator+[3574] params(1) in file: yls:280:8: note:  
		    def operator+(num : _int16) : string {
		       ^

0 [0x0]: line: 281 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 282 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3582 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3550 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 283 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3575] params(1) in file: yls:286:8: note:  
		    def operator+(num : _int32) : string {
		       ^

0 [0x0]: line: 287 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 288 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3582 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3550 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 289 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3576] params(1) in file: yls:292:8: note:  
		    def operator+(num : _int64) : string {
		       ^

0 [0x0]: line: 293 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 294 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3582 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3550 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 295 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3577] params(1) in file: yls:298:8: note:  
		    def operator+(num : _uint8) : string {
		       ^

0 [0x0]: line: 299 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 300 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3582 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3550 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 301 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3578] params(1) in file: yls:304:8: note:  
		    def operator+(num : _uint16) : string {
		       ^

0 [0x0]: line: 305 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 306 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3582 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3550 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 307 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3579] params(1) in file: yls:310:8: note:  
		    def operator+(num : _uint32) : string {
		       ^

0 [0x0]: line: 311 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 312 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3582 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3550 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 313 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3580] params(1) in file: yls:316:8: note:  
		    def operator+(num : _uint64) : string {
		       ^

0 [0x0]: line: 317 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 318 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3582 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3550 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 319 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: std#string.size[3581] params(0) in file: yls:322:8: note:  
		    def size() := sizeof(data);
		       ^

0 [0x0]: line: 322 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.parse[3582] params(1) in file: yls:324:15: note:  
		    static def parse( number : var ) := new string(snprintf(currentFormat, number, precision));
		              ^

0 [0x0]: line: 324 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           movg @59 // @std#string   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           ipushl #0   
11 [0xb]:           movg @59 // @std#string   
12 [0xc]:           movn #1   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @3498 // <std#yaf.advf>   
19 [0x13]:           call @3540 // <std#string.string>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+=[3583] params(1) in file: yls:326:8: note:  
		    def operator+=( num: var ) := append(parse(num).data);
		       ^

0 [0x0]: line: 326 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3582 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3550 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3584] params(1) in file: yls:327:8: note:  
		    def operator+=( num: _int8 ) := append(num);
		       ^

0 [0x0]: line: 327 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3547 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[3585] params(1) in file: yls:328:8: note:  
		    def operator+=( num: _uint8 ) := append(num);
		       ^

0 [0x0]: line: 328 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3547 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[3586] params(1) in file: yls:329:8: note:  
		    def operator+=( num: _int16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 329 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3582 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3550 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3587] params(1) in file: yls:330:8: note:  
		    def operator+=( num: _uint16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 330 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3582 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3550 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3588] params(1) in file: yls:331:8: note:  
		    def operator+=( num: _int32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 331 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3582 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3550 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3589] params(1) in file: yls:332:8: note:  
		    def operator+=( num: _uint32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 332 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3582 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3550 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3590] params(1) in file: yls:333:8: note:  
		    def operator+=( num: _int64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 333 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3582 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3550 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3591] params(1) in file: yls:334:8: note:  
		    def operator+=( num: _uint64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 334 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3582 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3550 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3592] params(1) in file: yls:336:8: note:  
		    def operator+=( obj: printable ) : string
		       ^

0 [0x0]: line: 338 pushl 1   
1 [0x1]:           invoke_delegate 3657 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 339 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 16   
9 [0x9]:           movl 2   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           pushnull    
14 [0xe]:           itest ebx   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 28   
18 [0x12]: line: 340 pushl 0   
19 [0x13]:           movl 2   
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           call @3550 // <std#string.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           jmp @34   
28 [0x1c]: line: 342 pushl 0   
29 [0x1d]:           newstr @16 // null   
30 [0x1e]:           call @3550 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           nop   


overload function: std#string.operator+=[3593] params(1) in file: yls:345:8: note:  
		    def operator+=( str: string ) := append(str.data);
		       ^

0 [0x0]: line: 345 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @3550 // <std#string.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string.operator+=[3594] params(1) in file: yls:347:8: note:  
		    def operator+=( str: _int8[] ) := append(str);
		       ^

0 [0x0]: line: 347 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3550 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#string.substring[3595] params(2) in file: yls:349:8: note:  
		    def substring(start_pos: var, end_pos: var) : string {
		       ^

0 [0x0]: line: 350 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           skpe ebx // pc = 14   
9 [0x9]:           loadl ecx, fp+1   
10 [0xa]:           movi #0, ebx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 20   
16 [0x10]: line: 351 pushl 0   
17 [0x11]:           ipushl #1   
18 [0x12]:           call @3596 // <std#string.bounds_error>   
19 [0x13]:           throw    
20 [0x14]:           nop   
21 [0x15]: line: 352 ipushl #2   
22 [0x16]:           loadl ebx, fp+1   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 44   
28 [0x1c]: line: 353 new_class @0 // xxz#xxa   
29 [0x1d]:           shr adx, adx -> adx   
30 [0x1e]:           dup    
31 [0x1f]:           new_class @0 // xxz#xxa   
32 [0x20]:           skip @0 // pc = 32   
33 [0x21]:           dup    
34 [0x22]:           newstr @47 // end_pos:    
35 [0x23]:           call @3540 // <std#string.string>   
36 [0x24]:           ipushl #2   
37 [0x25]:           call @3572 // <std#string.operator+>   
38 [0x26]:           newstr @48 //  cannot be less than the start_pos:    
39 [0x27]:           call @3552 // <std#string.operator+>   
40 [0x28]:           ipushl #1   
41 [0x29]:           call @3572 // <std#string.operator+>   
42 [0x2a]:           call @3608 // <std#illegal_argument_exception.illegal_argument_exception>   
43 [0x2b]:           throw    
44 [0x2c]:           nop   
45 [0x2d]: line: 357 new_class @0 // xxz#xxa   
46 [0x2e]:           skip @0 // pc = 46   
47 [0x2f]:           dup    
48 [0x30]:           call @3598 // <std#string.string>   
49 [0x31]:           popobj2    
50 [0x32]:           smovr_3 fp+3   
51 [0x33]: line: 358 movl 0   
52 [0x34]:           movn #0   
54 [0x36]:           pushobj   
55 [0x37]:           ipushl #1   
56 [0x38]:           ipushl #2   
57 [0x39]:           call @3354 // <std.io#ybq.adow>   
58 [0x3a]:           movl 3   
59 [0x3b]:           movn #0   
61 [0x3d]:           popobj   
62 [0x3e]: line: 359 movl 3   
63 [0x3f]:           returnobj   
64 [0x40]:           ret   


function: std#string.bounds_error[3596] params(1) in file: yls:362:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 363 new_class @0 // xxz#xxa   
1 [0x1]:           skne adx // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           new_class @0 // xxz#xxa   
4 [0x4]:           skip @0 // pc = 4   
5 [0x5]:           dup    
6 [0x6]:           newstr @20 // Index out of bounds exception at:    
7 [0x7]:           call @3540 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @3572 // <std#string.operator+>   
10 [0xa]:           newstr @21 //  with size of:    
11 [0xb]:           call @3552 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           sizeof ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @3572 // <std#string.operator+>   
18 [0x12]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
19 [0x13]:           popobj2    
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: std#string.hash[3597] params(0) in file: yls:366:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 367 istorel 0, fp+1   
2 [0x2]: line: 368 istorel 1, fp+2   
4 [0x4]: line: 369 istorel -1, fp+4   
6 [0x6]: line: 370 movl 0   
7 [0x7]: line: 371 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 372 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 373 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 375 new_class @0 // xxz#xxa   
56 [0x38]:           sub adx, adx -> adx   
57 [0x39]:           dup    
58 [0x3a]:           ipushl #1   
59 [0x3b]:           call @2117 // <std#yaf.yat.absw>   
60 [0x3c]:           popobj2    
61 [0x3d]:           returnobj   
62 [0x3e]:           ret   


constructor: std#string.string[3598] params(0) in file: yls:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#throwable.throwable[3599] params(1) in file: yly:30:21: note:  
		    public throwable(message : _int8[]) {
		                    ^

0 [0x0]: line: 26 call @3466 // <platform.kernel#yky.ylf.aduz>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]: line: 31 pushl 1   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: std#throwable.throwable[3600] params(1) in file: yly:34:21: note:  
		    public throwable(message : string) {
		                    ^

0 [0x0]: line: 26 call @3466 // <platform.kernel#yky.ylf.aduz>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]: line: 35 pushl 1   
7 [0x7]:          call @3566 // <std#string.get_data>   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          popobj   
12 [0xc]:          ret   


function: std#throwable.get_message[3601] params(0) in file: yly:38:8: note:  
		    def get_message() : string {
		       ^

0 [0x0]: line: 39 new_class @0 // xxz#xxa   
1 [0x1]:          skip @0 // pc = 1   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3540 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#throwable.to_string[3602] params(0) in file: yly:42:8: note:  
		    def to_string() : string
		       ^

0 [0x0]: line: 43 new_class @0 // xxz#xxa   
1 [0x1]:          skip @0 // pc = 1   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3540 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


constructor: std#throwable.throwable[3603] params(0) in file: yly:10:6: note:  
		class throwable {
		     ^

0 [0x0]: line: 26 call @3466 // <platform.kernel#yky.ylf.aduz>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          ret   


constructor: std#exception.exception[3604] params(1) in file: yly:50:21: note:  
		    public exception(message : _int8[]) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3599 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[3605] params(1) in file: yly:51:21: note:  
		    public exception(message : string) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3600 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[3606] params(0) in file: yly:49:6: note:  
		class exception base throwable {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3603 // <std#throwable.throwable>   
2 [0x2]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[3607] params(1) in file: yly:55:38: note:  
		    public illegal_argument_exception(message : _int8[]) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[3608] params(1) in file: yly:56:38: note:  
		    public illegal_argument_exception(message : string) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[3609] params(0) in file: yly:54:6: note:  
		class illegal_argument_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[3610] params(1) in file: yly:59:35: note:  
		    public illegal_state_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[3611] params(1) in file: yly:60:35: note:  
		    public illegal_state_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[3612] params(0) in file: yly:58:6: note:  
		class illegal_state_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[3613] params(1) in file: yly:63:35: note:  
		    public out_of_bounds_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[3614] params(1) in file: yly:64:35: note:  
		    public out_of_bounds_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[3615] params(0) in file: yly:62:6: note:  
		class out_of_bounds_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#yaf.ymi.aezt[3616] params(1) in file: yly:67:24: note:  
		    public io_exception(message : _int8[]) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#yaf.ymi.aezu[3617] params(1) in file: yly:68:24: note:  
		    public io_exception(message : string) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#yaf.ymi.aezv[3618] params(0) in file: yly:66:6: note:  
		class io_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[3619] params(1) in file: yly:71:39: note:  
		    public invalid_operation_exception(message : _int8[]) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[3620] params(1) in file: yly:72:39: note:  
		    public invalid_operation_exception(message : string) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[3621] params(0) in file: yly:70:6: note:  
		class invalid_operation_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#nullptr_exception.nullptr_exception[3622] params(1) in file: yly:75:29: note:  
		    public nullptr_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[3623] params(1) in file: yly:76:29: note:  
		    public nullptr_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[3624] params(0) in file: yly:74:6: note:  
		class nullptr_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#runtime_exception.runtime_exception[3625] params(1) in file: yly:79:29: note:  
		    public runtime_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[3626] params(1) in file: yly:80:29: note:  
		    public runtime_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[3627] params(0) in file: yly:78:6: note:  
		class runtime_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[3628] params(1) in file: yly:83:36: note:  
		    public stack_overflow_exception(message : _int8[]) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[3629] params(1) in file: yly:84:36: note:  
		    public stack_overflow_exception(message : string) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[3630] params(0) in file: yly:82:6: note:  
		class stack_overflow_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[3631] params(1) in file: yly:87:34: note:  
		    public thread_stack_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[3632] params(1) in file: yly:88:34: note:  
		    public thread_stack_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[3633] params(0) in file: yly:86:6: note:  
		class thread_stack_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#class_cast_exception.class_cast_exception[3634] params(1) in file: yly:91:32: note:  
		    public class_cast_exception(message : _int8[]) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[3635] params(1) in file: yly:92:32: note:  
		    public class_cast_exception(message : string) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[3636] params(0) in file: yly:90:6: note:  
		class class_cast_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[3637] params(1) in file: yly:95:35: note:  
		    public out_of_memory_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[3638] params(1) in file: yly:96:35: note:  
		    public out_of_memory_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[3639] params(0) in file: yly:94:6: note:  
		class out_of_memory_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#yaf.ymq.aear[3640] params(1) in file: yly:99:33: note:  
		    public not_implemented_error(message : _int8[]) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3649 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#yaf.ymq.aeas[3641] params(1) in file: yly:100:33: note:  
		    public not_implemented_error(message : string) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3650 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#yaf.ymq.aeat[3642] params(0) in file: yly:98:6: note:  
		class not_implemented_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3651 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[3643] params(1) in file: yly:103:34: note:  
		    public unsatisfied_link_error(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3649 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[3644] params(1) in file: yly:104:34: note:  
		    public unsatisfied_link_error(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3650 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[3645] params(0) in file: yly:102:6: note:  
		class unsatisfied_link_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3651 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#yaf.yms.aeax[3646] params(1) in file: yly:107:27: note:  
		    public assertion_error(message : _int8[]) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3649 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#yaf.yms.aeay[3647] params(1) in file: yly:108:27: note:  
		    public assertion_error(message : string) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3650 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#yaf.yms.aebz[3648] params(0) in file: yly:106:6: note:  
		class assertion_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3651 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#error.error[3649] params(1) in file: yly:112:17: note:  
		    public error(message : _int8[]) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3604 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#error.error[3650] params(1) in file: yly:113:17: note:  
		    public error(message : string) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3605 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#error.error[3651] params(0) in file: yly:111:6: note:  
		class error base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3606 // <std#exception.exception>   
2 [0x2]:         ret   


function: std#yaf.aebd[3652] params(1) in file: yly:129:4: note:  
		def runtime_error(message: string) : runtime_except {
		   ^

0 [0x0]: line: 130 new_class @0 // xxz#xxa   
1 [0x1]:           xor adx, adx   
2 [0x2]:           dup    
3 [0x3]:           pushl 0   
4 [0x4]:           call @3626 // <std#runtime_exception.runtime_exception>   
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: std#yaf.aebe[3653] params(0) in file: yly:133:4: note:  
		def runtime_error() : runtime_except {
		   ^

0 [0x0]: line: 134 new_class @0 // xxz#xxa   
1 [0x1]:           xor adx, adx   
2 [0x2]:           dup    
3 [0x3]:           call @3627 // <std#runtime_exception.runtime_exception>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#yaf.aebf[3654] params(1) in file: yly:137:4: note:  
		def todo(message: string) {
		   ^

0 [0x0]: line: 138 new_class @0 // xxz#xxa   
1 [0x1]:           newstr @0 // nil   
2 [0x2]:           dup    
3 [0x3]:           pushl 0   
4 [0x4]:           call @3641 // <std#yaf.ymq.aeas>   
5 [0x5]:           throw    
6 [0x6]:           ret   


function: std#yaf.aebg[3655] params(1) in file: yly:141:4: note:  
		def assert(cond : var) {
		   ^

0 [0x0]: line: 142 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 10   
4 [0x4]: line: 143 new_class @0 // xxz#xxa   
5 [0x5]:           subl adx, fp@0   
6 [0x6]:           dup    
7 [0x7]:           newstr @49 // assertion failed!   
8 [0x8]:           call @3646 // <std#yaf.yms.aeax>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]:           ret   


function: std#yaf.aebh[3656] params(2) in file: yly:147:4: note:  
		def assert(cond : var, message: string) {
		   ^

0 [0x0]: line: 148 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 10   
4 [0x4]: line: 149 new_class @0 // xxz#xxa   
5 [0x5]:           subl adx, fp@0   
6 [0x6]:           dup    
7 [0x7]:           pushl 1   
8 [0x8]:           call @3647 // <std#yaf.yms.aeay>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]:           ret   


std#yaf.ynf.aebi[3657] params(0) in file: ynd:11:8: note:  
		    def to_string() : string;
		       ^



constructor: std#yaf.ynf.aebj[3658] params(0) in file: ynd:10:10: note:  
		interface printable {
		         ^

0 [0x0]:         ret   


std.io#ybq.ykb.aebr[3659] params(0) in file: ykz:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std.io#ybq.ykb.aebs[3660] params(0) in file: ykz:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#ybq.yah.aebt[3661] params(0) in file: yad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std#string[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std.io#ybq.yah.aebu[3662] params(1) in file: yad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std#string[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std.io#ybq.yah.aebv[3663] params(1) in file: yad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3674 // <std.io#ybq.yah.aecg>   
4 [0x4]:          ret   


function: std.io#ybq.yah.aebw[3664] params(0) in file: yad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std.io#ybq.yah.aebx[3665] params(1) in file: yad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std.io#ybq.yah.aeby[3666] params(0) in file: yad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3352 // <std.io#ybq.adou>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std.io#ybq.yah.aecz[3667] params(1) in file: yad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3688 // <std.io#ybq.yah.aedj>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std.io#ybq.yah.aeca[3668] params(1) in file: yad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3688 // <std.io#ybq.yah.aedj>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std.io#ybq.yah.aecb[3669] params(0) in file: yad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3668 // <std.io#ybq.yah.aeca>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std.io#ybq.yah.aecc[3670] params(2) in file: yad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3688 // <std.io#ybq.yah.aedj>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std.io#ybq.yah.aecd[3671] params(0) in file: yad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3332 // <std.io#ybq.adoa>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3332 // <std.io#ybq.adoa>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std.io#ybq.yah.aece[3672] params(0) in file: yad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std#string[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std.io#ybq.yah.aecf[3673] params(1) in file: yad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3352 // <std.io#ybq.adou>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #59, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std.io#ybq.yah.aecg[3674] params(1) in file: yad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3352 // <std.io#ybq.adou>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #59, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std#string[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std.io#ybq.yah.aech[3675] params(1) in file: yad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3671 // <std.io#ybq.yah.aecd>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std.io#ybq.yah.aeci[3676] params(1) in file: yad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 36   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          call @3558 // <std#string.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 32   
29 [0x1d]: line: 97 loadl ebx, fp+2   
30 [0x1e]:          return_val ebx   
31 [0x1f]:          ret   
32 [0x20]:          nop   
33 [0x21]:          iaddl 1, fp@2   
35 [0x23]:          jmp @2   
36 [0x24]: line: 101 istorel -1, fp+0   
38 [0x26]:           ret   


function: std.io#ybq.yah.aecj[3677] params(0) in file: yad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std.io#ybq.yah.aeck[3678] params(0) in file: yad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#ybq.yah.aecl[3679] params(2) in file: yad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3688 // <std.io#ybq.yah.aedj>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3675 // <std.io#ybq.yah.aech>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3671 // <std.io#ybq.yah.aecd>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std.io#ybq.yah.aecp[3680] params(2) in file: yad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std.io#ybq.yah.aecq[3681] params(1) in file: yad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 37   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           call @3558 // <std#string.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 143 pushl 0   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @3685 // <std.io#ybq.yah.aedd>   
32 [0x20]: line: 144 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@2   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: std.io#ybq.yah.aecu[3682] params(2) in file: yad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3685 // <std.io#ybq.yah.aedd>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std.io#ybq.yah.aecy[3683] params(2) in file: yad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std.io#ybq.yah.aedc[3684] params(1) in file: yad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std.io#ybq.yah.aedd[3685] params(1) in file: yad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3688 // <std.io#ybq.yah.aedj>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3342 // <std.io#ybq.adok>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3677 // <std.io#ybq.yah.aecj>   
77 [0x4d]:           ret   


function: std.io#ybq.yah.aedh[3686] params(2) in file: yad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std.io#ybq.yah.aedi[3687] params(0) in file: yad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           call @3184 // <std#yaf.ybf.adhx>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @109 // [    
8 [0x8]:           call @3180 // <std#yaf.ybf.adht>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3177 // <std#yaf.ybf.adhq>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @110 // ,    
56 [0x38]:           call @3180 // <std#yaf.ybf.adht>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @111 //  ]   
64 [0x40]:           call @3180 // <std#yaf.ybf.adht>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3157 // <std#yaf.ybf.adgw>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std.io#ybq.yah.aedj[3688] params(1) in file: yad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // Index:    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3572 // <std#string.operator+>   
7 [0x7]:           newstr @113 // , size:    
8 [0x8]:           call @3552 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3572 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std.io#ybq.yao.aeds[3689] params(1) in file: yam:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 11 loadl ebx, fp+1   
17 [0x11]:          new_classarray ebx  // std.io#ybq.yao.aedr[]   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          loadval ecx   
35 [0x23]:          mul ecx, ebx -> ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          ret   


constructor: std.io#ybq.yao.aedt[3690] params(0) in file: yam:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 16 movi #128, ebx   
18 [0x12]:          new_classarray ebx  // std.io#ybq.yao.aedr[]   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          popobj   
24 [0x18]:          ret   


function: std.io#ybq.yao.aedu[3691] params(1) in file: yam:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 22 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          loadval ecx   
17 [0x11]:          mul ecx, ebx -> ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          movl 0   
25 [0x19]:          _ulck   
26 [0x1a]:          ret   


function: std.io#ybq.yao.aedv[3692] params(1) in file: yam:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 pushl 1   
1 [0x1]:          call @636 // <std#yaf.yar.azma>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @299 // <std#yaf.yar.azzz>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std.io#ybq.yao.aedw[3693] params(0) in file: yam:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io#ybq.yao.aedr[]   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          popobj   
22 [0x16]: line: 33 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          sizeof ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #2   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 34 istorel -1, fp+3   
43 [0x2b]:          pushl 1   
44 [0x2c]:          popl 4   
45 [0x2d]:          iaddl 1, fp@3   
47 [0x2f]:          movl 4   
48 [0x30]:          sizeof ecx   
49 [0x31]:          loadl ebx, fp+3   
50 [0x32]:          lt ebx, ecx   
51 [0x33]:          jne 100   
52 [0x34]:          movnd ebx   
53 [0x35]:          pushobj   
54 [0x36]:          popl 2   
55 [0x37]: line: 36 movl 2   
56 [0x38]:          checknull   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 99   
60 [0x3c]: line: 38 movl 2   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 39 pushl 0   
65 [0x41]:          movl 2   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @3692 // <std.io#ybq.yao.aedv>   
70 [0x46]:          ipopl 6   
71 [0x47]: line: 40 movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          loadl ebx, fp+6   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          pushobj   
81 [0x51]:          movl 2   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]: line: 41 pushl 2   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+6   
91 [0x5b]:          popobj2    
92 [0x5c]:          movr adx, ebx   
93 [0x5d]:          chklen adx   
94 [0x5e]:          movnd adx   
95 [0x5f]:          popobj   
96 [0x60]: line: 42 movl 5   
97 [0x61]:          smovr_3 fp+2   
98 [0x62]:          jmp @55   
99 [0x63]:          jmp @45   
100 [0x64]: line: 46 pushnull    
101 [0x65]:          popobj2    
102 [0x66]:          smovr_3 fp+1   
103 [0x67]:          ret   


function: std.io#ybq.yao.aedx[3694] params(1) in file: yam:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3692 // <std.io#ybq.yao.aedv>   
5 [0x5]:          ipopl 2   
6 [0x6]: line: 52 istorel -1, fp+3   
8 [0x8]: line: 53 movl 4   
9 [0x9]:          del   
10 [0xa]: line: 55 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          popobj2    
16 [0x10]:          movr adx, ebx   
17 [0x11]:          chklen adx   
18 [0x12]:          movnd adx   
19 [0x13]:          pushobj   
20 [0x14]:          pushnull    
21 [0x15]:          itest ebx   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 56 pushl 4   
25 [0x19]:          movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]:          popobj2    
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   
30 [0x1e]:          jmp @88   
31 [0x1f]: line: 58 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          smovr_3 fp+5   
41 [0x29]: line: 59 movl 5   
42 [0x2a]:          checknull   
43 [0x2b]:          not ebx, ebx   
44 [0x2c]:          skne ebx // pc = 60   
45 [0x2d]:          movl 5   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          call @643 // <std#yaf.yar.azmh>   
51 [0x33]:          loadval ebx   
52 [0x34]:          skne ebx // pc = 60   
53 [0x35]:          movl 5   
54 [0x36]:          movn #2   
56 [0x38]:          pushobj   
57 [0x39]:          pushnull    
58 [0x3a]:          itest ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 61 movl 5   
63 [0x3f]:          movn #2   
65 [0x41]:          smovr_3 fp+5   
66 [0x42]:          jmp @41   
67 [0x43]: line: 63 movl 5   
68 [0x44]:          checknull   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 78   
71 [0x47]: line: 64 pushl 4   
72 [0x48]:          movl 0   
73 [0x49]:          _ulck   
74 [0x4a]:          popobj2    
75 [0x4b]:          returnobj   
76 [0x4c]:          ret   
77 [0x4d]:          jmp @87   
78 [0x4e]: line: 66 movl 5   
79 [0x4f]:          movn #1   
81 [0x51]:          pushobj   
82 [0x52]:          movl 0   
83 [0x53]:          _ulck   
84 [0x54]:          popobj2    
85 [0x55]:          returnobj   
86 [0x56]:          ret   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   


function: std.io#ybq.yao.aedy[3695] params(2) in file: yam:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3692 // <std.io#ybq.yao.aedv>   
5 [0x5]:          ipopl 3   
6 [0x6]: line: 75 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 76 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+3   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          smovr_3 fp+5   
18 [0x12]: line: 78 movl 5   
19 [0x13]:          checknull   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          skne ebx // pc = 29   
22 [0x16]:          movl 5   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          pushl 1   
27 [0x1b]:          call @643 // <std#yaf.yar.azmh>   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 79 movl 5   
32 [0x20]:          smovr_3 fp+4   
33 [0x21]: line: 80 movl 5   
34 [0x22]:          movn #2   
36 [0x24]:          smovr_3 fp+5   
37 [0x25]:          jmp @18   
38 [0x26]: line: 83 movl 5   
39 [0x27]:          checknull   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 89   
42 [0x2a]: line: 84 movl 0   
43 [0x2b]:          movn #3   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 85 new_class @0 // xxz#xxa   
54 [0x36]:          je 0   
55 [0x37]:          dup    
56 [0x38]:          pushl 1   
57 [0x39]:          pushl 2   
58 [0x3a]:          call @3853 // <std.io#ybq.yao.aedr.aepj>   
59 [0x3b]:          popobj2    
60 [0x3c]:          smovr_3 fp+5   
61 [0x3d]: line: 86 movl 4   
62 [0x3e]:          checknull   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 77   
65 [0x41]: line: 87 pushl 5   
66 [0x42]:          movl 0   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          popobj2    
72 [0x48]:          movr adx, ebx   
73 [0x49]:          chklen adx   
74 [0x4a]:          movnd adx   
75 [0x4b]:          popobj   
76 [0x4c]:          jmp @82   
77 [0x4d]: line: 89 pushl 5   
78 [0x4e]:          movl 4   
79 [0x4f]:          movn #2   
81 [0x51]:          popobj   
82 [0x52]:          nop   
83 [0x53]: line: 92 istorel 1, fp+0   
85 [0x55]:          movl 0   
86 [0x56]:          _ulck   
87 [0x57]:          ret   
88 [0x58]:          jmp @99   
89 [0x59]: line: 94 pushl 2   
90 [0x5a]:          movl 5   
91 [0x5b]:          movn #1   
93 [0x5d]:          popobj   
94 [0x5e]: line: 95 istorel 0, fp+0   
96 [0x60]:          movl 0   
97 [0x61]:          _ulck   
98 [0x62]:          ret   
99 [0x63]:          nop   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   


function: std.io#ybq.yao.aeez[3696] params(1) in file: yam:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 pushl 0   
3 [0x3]:           pushl 1   
4 [0x4]:           call @3692 // <std.io#ybq.yao.aedv>   
5 [0x5]:           ipopl 2   
6 [0x6]: line: 103 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           popobj2    
12 [0xc]:           movr adx, ebx   
13 [0xd]:           chklen adx   
14 [0xe]:           movnd adx   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 100   
20 [0x14]: line: 104 movl 3   
21 [0x15]:           del   
22 [0x16]: line: 105 movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           smovr_3 fp+4   
32 [0x20]: line: 106 movl 4   
33 [0x21]:           checknull   
34 [0x22]:           not ebx, ebx   
35 [0x23]:           skne ebx // pc = 43   
36 [0x24]:           movl 4   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           pushl 1   
41 [0x29]:           call @643 // <std#yaf.yar.azmh>   
42 [0x2a]:           loadval ebx   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 52   
45 [0x2d]: line: 107 movl 4   
46 [0x2e]:           smovr_3 fp+3   
47 [0x2f]: line: 108 movl 4   
48 [0x30]:           movn #2   
50 [0x32]:           smovr_3 fp+4   
51 [0x33]:           jmp @32   
52 [0x34]: line: 111 movl 4   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           pushl 1   
57 [0x39]:           call @644 // <std#yaf.yar.azmi>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 99   
61 [0x3d]: line: 112 movl 3   
62 [0x3e]:           checknull   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 81   
65 [0x41]: line: 113 movl 4   
66 [0x42]:           movn #2   
68 [0x44]:           smovr_3 fp+5   
69 [0x45]: line: 114 pushl 5   
70 [0x46]:           movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           pushobj   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           popobj2    
76 [0x4c]:           movr adx, ebx   
77 [0x4d]:           chklen adx   
78 [0x4e]:           movnd adx   
79 [0x4f]:           popobj   
80 [0x50]:           jmp @93   
81 [0x51]: line: 116 movl 4   
82 [0x52]:           movn #2   
84 [0x54]:           smovr_3 fp+6   
85 [0x55]: line: 117 pushl 6   
86 [0x56]:           movl 3   
87 [0x57]:           movn #2   
89 [0x59]:           popobj   
90 [0x5a]: line: 118 pushnull    
91 [0x5b]:           popobj2    
92 [0x5c]:           smovr_3 fp+4   
93 [0x5d]:           nop   
94 [0x5e]: line: 121 istorel 1, fp+0   
96 [0x60]:           movl 0   
97 [0x61]:           _ulck   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           nop   
101 [0x65]: line: 125 istorel 0, fp+0   
103 [0x67]:           movl 0   
104 [0x68]:           _ulck   
105 [0x69]:           ret   
106 [0x6a]:           movl 0   
107 [0x6b]:           _ulck   


constructor: yed#yee.yao.aeei[3697] params(1) in file: yam:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 11 loadl ebx, fp+1   
17 [0x11]:          new_classarray ebx  // yed#yee.yao.aeeh[]   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          loadval ecx   
35 [0x23]:          mul ecx, ebx -> ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          ret   


constructor: yed#yee.yao.aeej[3698] params(0) in file: yam:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 16 movi #128, ebx   
18 [0x12]:          new_classarray ebx  // yed#yee.yao.aeeh[]   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          popobj   
24 [0x18]:          ret   


function: yed#yee.yao.aeek[3699] params(1) in file: yam:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 22 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          loadval ecx   
17 [0x11]:          mul ecx, ebx -> ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          movl 0   
25 [0x19]:          _ulck   
26 [0x1a]:          ret   


function: yed#yee.yao.aeel[3700] params(1) in file: yam:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 pushl 1   
1 [0x1]:          call @3399 // <std.io#thread.hash>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @299 // <std#yaf.yar.azzz>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: yed#yee.yao.aeem[3701] params(0) in file: yam:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // yed#yee.yao.aeeh[]   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          popobj   
22 [0x16]: line: 33 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          sizeof ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #2   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 34 istorel -1, fp+3   
43 [0x2b]:          pushl 1   
44 [0x2c]:          popl 4   
45 [0x2d]:          iaddl 1, fp@3   
47 [0x2f]:          movl 4   
48 [0x30]:          sizeof ecx   
49 [0x31]:          loadl ebx, fp+3   
50 [0x32]:          lt ebx, ecx   
51 [0x33]:          jne 100   
52 [0x34]:          movnd ebx   
53 [0x35]:          pushobj   
54 [0x36]:          popl 2   
55 [0x37]: line: 36 movl 2   
56 [0x38]:          checknull   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 99   
60 [0x3c]: line: 38 movl 2   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 39 pushl 0   
65 [0x41]:          movl 2   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @3700 // <yed#yee.yao.aeel>   
70 [0x46]:          ipopl 6   
71 [0x47]: line: 40 movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          loadl ebx, fp+6   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          pushobj   
81 [0x51]:          movl 2   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]: line: 41 pushl 2   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+6   
91 [0x5b]:          popobj2    
92 [0x5c]:          movr adx, ebx   
93 [0x5d]:          chklen adx   
94 [0x5e]:          movnd adx   
95 [0x5f]:          popobj   
96 [0x60]: line: 42 movl 5   
97 [0x61]:          smovr_3 fp+2   
98 [0x62]:          jmp @55   
99 [0x63]:          jmp @45   
100 [0x64]: line: 46 pushnull    
101 [0x65]:          popobj2    
102 [0x66]:          smovr_3 fp+1   
103 [0x67]:          ret   


function: yed#yee.yao.aeen[3702] params(1) in file: yam:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3700 // <yed#yee.yao.aeel>   
5 [0x5]:          ipopl 2   
6 [0x6]: line: 52 istorel -1, fp+3   
8 [0x8]: line: 53 movl 4   
9 [0x9]:          del   
10 [0xa]: line: 55 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          popobj2    
16 [0x10]:          movr adx, ebx   
17 [0x11]:          chklen adx   
18 [0x12]:          movnd adx   
19 [0x13]:          pushobj   
20 [0x14]:          pushnull    
21 [0x15]:          itest ebx   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 56 pushl 4   
25 [0x19]:          movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]:          popobj2    
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   
30 [0x1e]:          jmp @88   
31 [0x1f]: line: 58 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          smovr_3 fp+5   
41 [0x29]: line: 59 movl 5   
42 [0x2a]:          checknull   
43 [0x2b]:          not ebx, ebx   
44 [0x2c]:          skne ebx // pc = 60   
45 [0x2d]:          movl 5   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          itest ebx   
51 [0x33]:          not ebx, ebx   
52 [0x34]:          skne ebx // pc = 60   
53 [0x35]:          movl 5   
54 [0x36]:          movn #2   
56 [0x38]:          pushobj   
57 [0x39]:          pushnull    
58 [0x3a]:          itest ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 61 movl 5   
63 [0x3f]:          movn #2   
65 [0x41]:          smovr_3 fp+5   
66 [0x42]:          jmp @41   
67 [0x43]: line: 63 movl 5   
68 [0x44]:          checknull   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 78   
71 [0x47]: line: 64 pushl 4   
72 [0x48]:          movl 0   
73 [0x49]:          _ulck   
74 [0x4a]:          popobj2    
75 [0x4b]:          returnobj   
76 [0x4c]:          ret   
77 [0x4d]:          jmp @87   
78 [0x4e]: line: 66 movl 5   
79 [0x4f]:          movn #1   
81 [0x51]:          pushobj   
82 [0x52]:          movl 0   
83 [0x53]:          _ulck   
84 [0x54]:          popobj2    
85 [0x55]:          returnobj   
86 [0x56]:          ret   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   


function: yed#yee.yao.aeeo[3703] params(2) in file: yam:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3700 // <yed#yee.yao.aeel>   
5 [0x5]:          ipopl 3   
6 [0x6]: line: 75 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 76 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+3   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          smovr_3 fp+5   
18 [0x12]: line: 78 movl 5   
19 [0x13]:          checknull   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          skne ebx // pc = 29   
22 [0x16]:          movl 5   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          pushl 1   
27 [0x1b]:          itest ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 79 movl 5   
32 [0x20]:          smovr_3 fp+4   
33 [0x21]: line: 80 movl 5   
34 [0x22]:          movn #2   
36 [0x24]:          smovr_3 fp+5   
37 [0x25]:          jmp @18   
38 [0x26]: line: 83 movl 5   
39 [0x27]:          checknull   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 89   
42 [0x2a]: line: 84 movl 0   
43 [0x2b]:          movn #3   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 85 new_class @0 // xxz#xxa   
54 [0x36]:          jne 0   
55 [0x37]:          dup    
56 [0x38]:          pushl 1   
57 [0x39]:          pushl 2   
58 [0x3a]:          call @3856 // <yed#yee.yao.aeeh.aepq>   
59 [0x3b]:          popobj2    
60 [0x3c]:          smovr_3 fp+5   
61 [0x3d]: line: 86 movl 4   
62 [0x3e]:          checknull   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 77   
65 [0x41]: line: 87 pushl 5   
66 [0x42]:          movl 0   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          popobj2    
72 [0x48]:          movr adx, ebx   
73 [0x49]:          chklen adx   
74 [0x4a]:          movnd adx   
75 [0x4b]:          popobj   
76 [0x4c]:          jmp @82   
77 [0x4d]: line: 89 pushl 5   
78 [0x4e]:          movl 4   
79 [0x4f]:          movn #2   
81 [0x51]:          popobj   
82 [0x52]:          nop   
83 [0x53]: line: 92 istorel 1, fp+0   
85 [0x55]:          movl 0   
86 [0x56]:          _ulck   
87 [0x57]:          ret   
88 [0x58]:          jmp @99   
89 [0x59]: line: 94 pushl 2   
90 [0x5a]:          movl 5   
91 [0x5b]:          movn #1   
93 [0x5d]:          popobj   
94 [0x5e]: line: 95 istorel 0, fp+0   
96 [0x60]:          movl 0   
97 [0x61]:          _ulck   
98 [0x62]:          ret   
99 [0x63]:          nop   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   


function: yed#yee.yao.aeep[3704] params(1) in file: yam:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 pushl 0   
3 [0x3]:           pushl 1   
4 [0x4]:           call @3700 // <yed#yee.yao.aeel>   
5 [0x5]:           ipopl 2   
6 [0x6]: line: 103 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           popobj2    
12 [0xc]:           movr adx, ebx   
13 [0xd]:           chklen adx   
14 [0xe]:           movnd adx   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 100   
20 [0x14]: line: 104 movl 3   
21 [0x15]:           del   
22 [0x16]: line: 105 movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           smovr_3 fp+4   
32 [0x20]: line: 106 movl 4   
33 [0x21]:           checknull   
34 [0x22]:           not ebx, ebx   
35 [0x23]:           skne ebx // pc = 43   
36 [0x24]:           movl 4   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           pushl 1   
41 [0x29]:           itest ebx   
42 [0x2a]:           not ebx, ebx   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 52   
45 [0x2d]: line: 107 movl 4   
46 [0x2e]:           smovr_3 fp+3   
47 [0x2f]: line: 108 movl 4   
48 [0x30]:           movn #2   
50 [0x32]:           smovr_3 fp+4   
51 [0x33]:           jmp @32   
52 [0x34]: line: 111 movl 4   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           pushl 1   
57 [0x39]:           call @3416 // <std.io#thread.operator==>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 99   
61 [0x3d]: line: 112 movl 3   
62 [0x3e]:           checknull   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 81   
65 [0x41]: line: 113 movl 4   
66 [0x42]:           movn #2   
68 [0x44]:           smovr_3 fp+5   
69 [0x45]: line: 114 pushl 5   
70 [0x46]:           movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           pushobj   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           popobj2    
76 [0x4c]:           movr adx, ebx   
77 [0x4d]:           chklen adx   
78 [0x4e]:           movnd adx   
79 [0x4f]:           popobj   
80 [0x50]:           jmp @93   
81 [0x51]: line: 116 movl 4   
82 [0x52]:           movn #2   
84 [0x54]:           smovr_3 fp+6   
85 [0x55]: line: 117 pushl 6   
86 [0x56]:           movl 3   
87 [0x57]:           movn #2   
89 [0x59]:           popobj   
90 [0x5a]: line: 118 pushnull    
91 [0x5b]:           popobj2    
92 [0x5c]:           smovr_3 fp+4   
93 [0x5d]:           nop   
94 [0x5e]: line: 121 istorel 1, fp+0   
96 [0x60]:           movl 0   
97 [0x61]:           _ulck   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           nop   
101 [0x65]: line: 125 istorel 0, fp+0   
103 [0x67]:           movl 0   
104 [0x68]:           _ulck   
105 [0x69]:           ret   
106 [0x6a]:           movl 0   
107 [0x6b]:           _ulck   


xxz#xxa.ykb.aefb[3705] params(0) in file: ykz:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: xxz#xxa.ykb.aefc[3706] params(0) in file: ykz:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: xxz#xxa.yah.aefd[3707] params(0) in file: yad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // xxz#xxa.xxd[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: xxz#xxa.yah.aefe[3708] params(1) in file: yad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // xxz#xxa.xxd[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: xxz#xxa.yah.aeff[3709] params(1) in file: yad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3720 // <xxz#xxa.yah.aefq>   
4 [0x4]:          ret   


function: xxz#xxa.yah.aefg[3710] params(0) in file: yad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: xxz#xxa.yah.aefh[3711] params(1) in file: yad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: xxz#xxa.yah.aefi[3712] params(0) in file: yad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3352 // <std.io#ybq.adou>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: xxz#xxa.yah.aefj[3713] params(1) in file: yad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3734 // <xxz#xxa.yah.aegt>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: xxz#xxa.yah.aefk[3714] params(1) in file: yad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3734 // <xxz#xxa.yah.aegt>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: xxz#xxa.yah.aefl[3715] params(0) in file: yad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3714 // <xxz#xxa.yah.aefk>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: xxz#xxa.yah.aefm[3716] params(2) in file: yad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3734 // <xxz#xxa.yah.aegt>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: xxz#xxa.yah.aefn[3717] params(0) in file: yad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3332 // <std.io#ybq.adoa>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3332 // <std.io#ybq.adoa>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: xxz#xxa.yah.aefo[3718] params(0) in file: yad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // xxz#xxa.xxd[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: xxz#xxa.yah.aefp[3719] params(1) in file: yad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3352 // <std.io#ybq.adou>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #1, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: xxz#xxa.yah.aefq[3720] params(1) in file: yad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3352 // <std.io#ybq.adou>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #1, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // xxz#xxa.xxd[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: xxz#xxa.yah.aefr[3721] params(1) in file: yad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3717 // <xxz#xxa.yah.aefn>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: xxz#xxa.yah.aefs[3722] params(1) in file: yad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: xxz#xxa.yah.aeft[3723] params(0) in file: yad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: xxz#xxa.yah.aefu[3724] params(0) in file: yad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: xxz#xxa.yah.aefv[3725] params(2) in file: yad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3734 // <xxz#xxa.yah.aegt>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3721 // <xxz#xxa.yah.aefr>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3717 // <xxz#xxa.yah.aefn>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: xxz#xxa.yah.aegz[3726] params(2) in file: yad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: xxz#xxa.yah.aega[3727] params(1) in file: yad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3731 // <xxz#xxa.yah.aegn>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: xxz#xxa.yah.aege[3728] params(2) in file: yad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3731 // <xxz#xxa.yah.aegn>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: xxz#xxa.yah.aegi[3729] params(2) in file: yad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: xxz#xxa.yah.aegm[3730] params(1) in file: yad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: xxz#xxa.yah.aegn[3731] params(1) in file: yad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3734 // <xxz#xxa.yah.aegt>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3342 // <std.io#ybq.adok>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3723 // <xxz#xxa.yah.aeft>   
77 [0x4d]:           ret   


function: xxz#xxa.yah.aegr[3732] params(2) in file: yad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: xxz#xxa.yah.aegs[3733] params(0) in file: yad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           call @3184 // <std#yaf.ybf.adhx>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @109 // [    
8 [0x8]:           call @3180 // <std#yaf.ybf.adht>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3176 // <std#yaf.ybf.adhp>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @110 // ,    
56 [0x38]:           call @3180 // <std#yaf.ybf.adht>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @111 //  ]   
64 [0x40]:           call @3180 // <std#yaf.ybf.adht>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3157 // <std#yaf.ybf.adgw>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: xxz#xxa.yah.aegt[3734] params(1) in file: yad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // Index:    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3572 // <std#string.operator+>   
7 [0x7]:           newstr @113 // , size:    
8 [0x8]:           call @3552 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3572 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


xxz#xxa.ykb.aehb[3735] params(0) in file: ykz:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: xxz#xxa.ykb.aehc[3736] params(0) in file: ykz:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: xxz#xxa.yah.aehd[3737] params(0) in file: yad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // xxz#xxa.yah[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: xxz#xxa.yah.aehe[3738] params(1) in file: yad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // xxz#xxa.yah[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: xxz#xxa.yah.aehf[3739] params(1) in file: yad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3750 // <xxz#xxa.yah.aehq>   
4 [0x4]:          ret   


function: xxz#xxa.yah.aehg[3740] params(0) in file: yad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: xxz#xxa.yah.aehh[3741] params(1) in file: yad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: xxz#xxa.yah.aehi[3742] params(0) in file: yad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3352 // <std.io#ybq.adou>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: xxz#xxa.yah.aehj[3743] params(1) in file: yad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3764 // <xxz#xxa.yah.aeit>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: xxz#xxa.yah.aehk[3744] params(1) in file: yad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3764 // <xxz#xxa.yah.aeit>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: xxz#xxa.yah.aehl[3745] params(0) in file: yad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3744 // <xxz#xxa.yah.aehk>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: xxz#xxa.yah.aehm[3746] params(2) in file: yad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3764 // <xxz#xxa.yah.aeit>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: xxz#xxa.yah.aehn[3747] params(0) in file: yad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3332 // <std.io#ybq.adoa>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3332 // <std.io#ybq.adoa>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: xxz#xxa.yah.aeho[3748] params(0) in file: yad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // xxz#xxa.yah[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: xxz#xxa.yah.aehp[3749] params(1) in file: yad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3352 // <std.io#ybq.adou>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #89, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: xxz#xxa.yah.aehq[3750] params(1) in file: yad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3352 // <std.io#ybq.adou>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #89, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // xxz#xxa.yah[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: xxz#xxa.yah.aehr[3751] params(1) in file: yad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3747 // <xxz#xxa.yah.aehn>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: xxz#xxa.yah.aehs[3752] params(1) in file: yad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: xxz#xxa.yah.aeht[3753] params(0) in file: yad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: xxz#xxa.yah.aehu[3754] params(0) in file: yad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: xxz#xxa.yah.aehv[3755] params(2) in file: yad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3764 // <xxz#xxa.yah.aeit>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3751 // <xxz#xxa.yah.aehr>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3747 // <xxz#xxa.yah.aehn>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: xxz#xxa.yah.aeiz[3756] params(2) in file: yad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: xxz#xxa.yah.aeia[3757] params(1) in file: yad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3761 // <xxz#xxa.yah.aein>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: xxz#xxa.yah.aeie[3758] params(2) in file: yad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3761 // <xxz#xxa.yah.aein>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: xxz#xxa.yah.aeii[3759] params(2) in file: yad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: xxz#xxa.yah.aeim[3760] params(1) in file: yad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: xxz#xxa.yah.aein[3761] params(1) in file: yad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3764 // <xxz#xxa.yah.aeit>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3342 // <std.io#ybq.adok>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3753 // <xxz#xxa.yah.aeht>   
77 [0x4d]:           ret   


function: xxz#xxa.yah.aeir[3762] params(2) in file: yad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: xxz#xxa.yah.aeis[3763] params(0) in file: yad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           call @3184 // <std#yaf.ybf.adhx>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @109 // [    
8 [0x8]:           call @3180 // <std#yaf.ybf.adht>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3176 // <std#yaf.ybf.adhp>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @110 // ,    
56 [0x38]:           call @3180 // <std#yaf.ybf.adht>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @111 //  ]   
64 [0x40]:           call @3180 // <std#yaf.ybf.adht>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3157 // <std#yaf.ybf.adgw>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: xxz#xxa.yah.aeit[3764] params(1) in file: yad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // Index:    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3572 // <std#string.operator+>   
7 [0x7]:           newstr @113 // , size:    
8 [0x8]:           call @3552 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3572 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: xxt#xxu.xyo.aeiv[3765] params(1) in file: xym:5:35: note:  
		        get { return reflect_obj; }
		                                  ^

0 [0x0]:         ret   


function: xxt#xxu.xyo.aeiw[3766] params(0) in file: xym:4:25: note:  
		    reflect_obj : object;
		                        ^

0 [0x0]: line: 5 movl 0   
1 [0x1]:         movn #0   
3 [0x3]:         returnobj   
4 [0x4]:         ret   


function: std#yaf.yak.aeiy[3767] params(1) in file: yai:11:44: note:  
		    static instance : _nil_ = new _nil_ { };
		                                           ^

0 [0x0]:         ret   


yed#yee.ykb.aejg[3768] params(0) in file: ykz:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: yed#yee.ykb.aejh[3769] params(0) in file: ykz:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: yed#yee.yix.aeji[3770] params(0) in file: yiv:13:16: note:  
		    synced_list() {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // yed#yee.yew[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: yed#yee.yix.aejj[3771] params(1) in file: yiv:17:16: note:  
		    synced_list(starting_capacity: var) {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // yed#yee.yew[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: yed#yee.yix.aejk[3772] params(1) in file: yiv:21:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 23 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #2   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          _ulck   
12 [0xc]:          ret   


function: yed#yee.yix.aejl[3773] params(0) in file: yiv:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 23   
14 [0xe]:          pushnull    
15 [0xf]:          popobj2    
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          _ulck   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   
22 [0x16]:          jmp @44   
23 [0x17]: line: 30 movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @3352 // <std.io#ybq.adou>   
37 [0x25]:          popobj2    
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          nop   
45 [0x2d]:          movl 0   
46 [0x2e]:          _ulck   


overload function: yed#yee.yix.aejm[3774] params(1) in file: yiv:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 36 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 37 new_class @0 // xxz#xxa   
21 [0x15]:          skne adx // pc = 21   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3823 // <yed#yee.yix.aemt>   
26 [0x1a]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 38 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: yed#yee.yix.aejn[3775] params(1) in file: yiv:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 44 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 45 new_class @0 // xxz#xxa   
21 [0x15]:          skne adx // pc = 21   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3823 // <yed#yee.yix.aemt>   
26 [0x1a]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 46 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: yed#yee.yix.aejo[3776] params(0) in file: yiv:50:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 51 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3775 // <yed#yee.yix.aejn>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: yed#yee.yix.aejp[3777] params(2) in file: yiv:54:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 57 new_class @0 // xxz#xxa   
21 [0x15]:          skne adx // pc = 21   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3823 // <yed#yee.yix.aemt>   
26 [0x1a]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 59 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          smovr_3 fp+3   
39 [0x27]: line: 60 pushl 2   
40 [0x28]:          movl 0   
41 [0x29]:          movn #1   
43 [0x2b]:          pushobj   
44 [0x2c]:          loadl ebx, fp+1   
45 [0x2d]:          popobj2    
46 [0x2e]:          movr adx, ebx   
47 [0x2f]:          chklen adx   
48 [0x30]:          movnd adx   
49 [0x31]:          popobj   
50 [0x32]: line: 61 pushl 3   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          popobj2    
54 [0x36]:          returnobj   
55 [0x37]:          ret   
56 [0x38]:          movl 0   
57 [0x39]:          _ulck   


function: yed#yee.yix.aejq[3778] params(0) in file: yiv:65:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 67 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3332 // <std.io#ybq.adoa>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 69 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3332 // <std.io#ybq.adoa>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: yed#yee.yix.aejr[3779] params(0) in file: yiv:72:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // yed#yee.yew[]   
6 [0x6]:          movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          popobj   
10 [0xa]: line: 75 movi #0, ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]:          movl 0   
19 [0x13]:          _ulck   
20 [0x14]:          ret   


constructor: yed#yee.yah.aejy[3780] params(0) in file: yad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // yed#yee.yew[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: yed#yee.yah.aekz[3781] params(1) in file: yad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // yed#yee.yew[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: yed#yee.yah.aeka[3782] params(1) in file: yad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3793 // <yed#yee.yah.aekl>   
4 [0x4]:          ret   


function: yed#yee.yah.aekb[3783] params(0) in file: yad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: yed#yee.yah.aekc[3784] params(1) in file: yad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: yed#yee.yah.aekd[3785] params(0) in file: yad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3352 // <std.io#ybq.adou>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: yed#yee.yah.aeke[3786] params(1) in file: yad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3807 // <yed#yee.yah.aelo>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: yed#yee.yah.aekf[3787] params(1) in file: yad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3807 // <yed#yee.yah.aelo>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: yed#yee.yah.aekg[3788] params(0) in file: yad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3787 // <yed#yee.yah.aekf>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: yed#yee.yah.aekh[3789] params(2) in file: yad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3807 // <yed#yee.yah.aelo>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: yed#yee.yah.aeki[3790] params(0) in file: yad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3332 // <std.io#ybq.adoa>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3332 // <std.io#ybq.adoa>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: yed#yee.yah.aekj[3791] params(0) in file: yad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // yed#yee.yew[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: yed#yee.yah.aekk[3792] params(1) in file: yad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3352 // <std.io#ybq.adou>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #38, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: yed#yee.yah.aekl[3793] params(1) in file: yad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3352 // <std.io#ybq.adou>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #38, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // yed#yee.yew[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: yed#yee.yah.aekm[3794] params(1) in file: yad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3790 // <yed#yee.yah.aeki>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: yed#yee.yah.aekn[3795] params(1) in file: yad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: yed#yee.yah.aeko[3796] params(0) in file: yad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: yed#yee.yah.aekp[3797] params(0) in file: yad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: yed#yee.yah.aekq[3798] params(2) in file: yad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3807 // <yed#yee.yah.aelo>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3794 // <yed#yee.yah.aekm>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3790 // <yed#yee.yah.aeki>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: yed#yee.yah.aeku[3799] params(2) in file: yad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: yed#yee.yah.aekv[3800] params(1) in file: yad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3804 // <yed#yee.yah.aeli>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: yed#yee.yah.aelz[3801] params(2) in file: yad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3804 // <yed#yee.yah.aeli>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: yed#yee.yah.aeld[3802] params(2) in file: yad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: yed#yee.yah.aelh[3803] params(1) in file: yad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: yed#yee.yah.aeli[3804] params(1) in file: yad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3807 // <yed#yee.yah.aelo>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3342 // <std.io#ybq.adok>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3796 // <yed#yee.yah.aeko>   
77 [0x4d]:           ret   


function: yed#yee.yah.aelm[3805] params(2) in file: yad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: yed#yee.yah.aeln[3806] params(0) in file: yad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           call @3184 // <std#yaf.ybf.adhx>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @109 // [    
8 [0x8]:           call @3180 // <std#yaf.ybf.adht>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3176 // <std#yaf.ybf.adhp>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @110 // ,    
56 [0x38]:           call @3180 // <std#yaf.ybf.adht>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @111 //  ]   
64 [0x40]:           call @3180 // <std#yaf.ybf.adht>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3157 // <std#yaf.ybf.adgw>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: yed#yee.yah.aelo[3807] params(1) in file: yad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // Index:    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3572 // <std#string.operator+>   
7 [0x7]:           newstr @113 // , size:    
8 [0x8]:           call @3552 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3572 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: yed#yee.yix.aelp[3808] params(1) in file: yiv:79:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 81 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3352 // <std.io#ybq.adou>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #38, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 82 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movl 0   
38 [0x26]:          _ulck   
39 [0x27]:          ret   


function: yed#yee.yix.aelq[3809] params(1) in file: yiv:86:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 88 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          sizeof ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 20   
18 [0x12]: line: 89 pushl 0   
19 [0x13]:          call @3778 // <yed#yee.yix.aejq>   
20 [0x14]:          nop   
21 [0x15]: line: 90 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #1   
25 [0x19]:          pushobj   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          movr egx, ebx   
33 [0x21]:          inc ebx   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movr ebx, egx   
38 [0x26]:          popobj2    
39 [0x27]:          movr adx, ebx   
40 [0x28]:          chklen adx   
41 [0x29]:          movnd adx   
42 [0x2a]:          popobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          _ulck   
45 [0x2d]:          ret   


function: yed#yee.yix.aelr[3810] params(1) in file: yiv:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 96 istorel 0, fp+2   
4 [0x4]:          ipushl #2   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          lt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 39   
16 [0x10]: line: 97 pushl 1   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          loadl ebx, fp+2   
22 [0x16]:          popobj2    
23 [0x17]:          movr adx, ebx   
24 [0x18]:          chklen adx   
25 [0x19]:          movnd adx   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 35   
30 [0x1e]: line: 98 loadl ebx, fp+2   
31 [0x1f]:          return_val ebx   
32 [0x20]:          movl 0   
33 [0x21]:          _ulck   
34 [0x22]:          ret   
35 [0x23]:          nop   
36 [0x24]:          iaddl 1, fp@2   
38 [0x26]:          jmp @4   
39 [0x27]: line: 102 istorel -1, fp+0   
41 [0x29]:           movl 0   
42 [0x2a]:           _ulck   
43 [0x2b]:           ret   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   


function: yed#yee.yix.aels[3811] params(0) in file: yiv:106:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 108 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 109 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: yed#yee.yix.aelt[3812] params(0) in file: yiv:113:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 115 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           return_val ebx   
9 [0x9]:           movl 0   
10 [0xa]:           _ulck   
11 [0xb]:           ret   
12 [0xc]:           movl 0   
13 [0xd]:           _ulck   


function: yed#yee.yix.aelu[3813] params(0) in file: yiv:119:8: note:  
		    def empty() : var {
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 121 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           test ecx, ebx   
13 [0xd]:           return_val cmt   
14 [0xe]:           movl 0   
15 [0xf]:           _ulck   
16 [0x10]:           ret   
17 [0x11]:           movl 0   
18 [0x12]:           _ulck   


function: yed#yee.yix.aelv[3814] params(2) in file: yiv:125:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 127 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 128 new_class @0 // xxz#xxa   
21 [0x15]:           skne adx // pc = 21   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3823 // <yed#yee.yix.aemt>   
26 [0x1a]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 130 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #0, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           test ecx, ebx   
40 [0x28]:           jne 45   
41 [0x29]: line: 131 pushl 0   
42 [0x2a]:           pushl 2   
43 [0x2b]:           call @3809 // <yed#yee.yix.aelq>   
44 [0x2c]:           jmp @134   
45 [0x2d]: line: 133 movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 0   
53 [0x35]:           movn #1   
55 [0x37]:           sizeof ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           gte ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 63   
61 [0x3d]: line: 134 pushl 0   
62 [0x3e]:           call @3778 // <yed#yee.yix.aejq>   
63 [0x3f]:           nop   
64 [0x40]: line: 135 movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           movi #0, adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           movr egx, ebx   
71 [0x47]:           inc ebx   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           rmov adx, ebx   
75 [0x4b]: line: 136 movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #1, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           smovr_2 ebx, fp+3   
87 [0x57]:           ipushl #3   
88 [0x58]:           loadl ebx, fp+1   
89 [0x59]:           loadval ecx   
90 [0x5a]:           gt ecx, ebx   
91 [0x5b]:           movr ebx, cmt   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 123   
94 [0x5e]: line: 137 movl 0   
95 [0x5f]:           movn #1   
97 [0x61]:           pushobj   
98 [0x62]:           ipushl #3   
99 [0x63]:           movi #1, ebx   
101 [0x65]:           loadval ecx   
102 [0x66]:           sub ecx, ebx -> ebx   
103 [0x67]:           popobj2    
104 [0x68]:           movr adx, ebx   
105 [0x69]:           chklen adx   
106 [0x6a]:           movnd adx   
107 [0x6b]:           pushobj   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #1   
111 [0x6f]:           pushobj   
112 [0x70]:           loadl ebx, fp+3   
113 [0x71]:           popobj2    
114 [0x72]:           movr adx, ebx   
115 [0x73]:           chklen adx   
116 [0x74]:           movnd adx   
117 [0x75]:           popobj   
118 [0x76]:           loadl ebx, fp+3   
119 [0x77]:           movr egx, ebx   
120 [0x78]:           dec ebx   
121 [0x79]:           smovr_2 ebx, fp+3   
122 [0x7a]:           jmp @87   
123 [0x7b]: line: 138 pushl 2   
124 [0x7c]:           movl 0   
125 [0x7d]:           movn #1   
127 [0x7f]:           pushobj   
128 [0x80]:           loadl ebx, fp+1   
129 [0x81]:           popobj2    
130 [0x82]:           movr adx, ebx   
131 [0x83]:           chklen adx   
132 [0x84]:           movnd adx   
133 [0x85]:           popobj   
134 [0x86]:           nop   
135 [0x87]:           movl 0   
136 [0x88]:           _ulck   
137 [0x89]:           ret   


function: yed#yee.yix.aelw[3815] params(1) in file: yiv:144:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 146 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 40   
16 [0x10]: line: 147 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+2   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           itest ebx   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 148 pushl 0   
31 [0x1f]:           ipushl #2   
32 [0x20]:           call @3817 // <yed#yee.yix.aemb>   
33 [0x21]: line: 149 movl 0   
34 [0x22]:           _ulck   
35 [0x23]:           ret   
36 [0x24]:           nop   
37 [0x25]:           iaddl 1, fp@2   
39 [0x27]:           jmp @4   
40 [0x28]:           movl 0   
41 [0x29]:           _ulck   
42 [0x2a]:           ret   


function: yed#yee.yix.aema[3816] params(2) in file: yiv:155:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 157 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 43   
16 [0x10]: line: 158 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 39   
33 [0x21]: line: 159 pushl 0   
34 [0x22]:           ipushl #3   
35 [0x23]:           call @3817 // <yed#yee.yix.aemb>   
36 [0x24]: line: 160 movl 0   
37 [0x25]:           _ulck   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @4   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           ret   


function: yed#yee.yix.aemb[3817] params(1) in file: yiv:166:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 168 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 169 new_class @0 // xxz#xxa   
21 [0x15]:           skne adx // pc = 21   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3823 // <yed#yee.yix.aemt>   
26 [0x1a]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 171 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           loadl ebx, fp+1   
37 [0x25]:           loadval ecx   
38 [0x26]:           sub ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           sub ecx, ebx -> ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]: line: 172 ipushl #2   
46 [0x2e]:           movi #0, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           gt ecx, ebx   
50 [0x32]:           movr ebx, cmt   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 76   
53 [0x35]: line: 173 movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           pushobj   
57 [0x39]:           movl 0   
58 [0x3a]:           movn #1   
60 [0x3c]:           pushobj   
61 [0x3d]:           ipushl #1   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           call @3342 // <std.io#ybq.adok>   
76 [0x4c]:           nop   
77 [0x4d]: line: 175 pushl 0   
78 [0x4e]:           call @3811 // <yed#yee.yix.aels>   
79 [0x4f]:           movl 0   
80 [0x50]:           _ulck   
81 [0x51]:           ret   


function: yed#yee.yix.aemf[3818] params(2) in file: yiv:179:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 180 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 181 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 42   
16 [0x10]: line: 182 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 38   
33 [0x21]: line: 183 loadl ebx, fp+3   
34 [0x22]:           return_val ebx   
35 [0x23]:           movl 0   
36 [0x24]:           _ulck   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @4   
42 [0x2a]: line: 187 istorel -1, fp+0   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   
46 [0x2e]:           ret   
47 [0x2f]:           movl 0   
48 [0x30]:           _ulck   


function: yed#yee.yix.aemj[3819] params(1) in file: yiv:191:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 193 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 134   
16 [0x10]: line: 195 istorel 0, fp+3   
18 [0x12]:           ipushl #3   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           movi #0, adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           lt ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 131   
30 [0x1e]: line: 196 ipushl #3   
31 [0x1f]:           movi #1, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           add ecx, ebx -> ebx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           movi #0, adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           lt ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 127   
47 [0x2f]: line: 198 ipushl #1   
48 [0x30]:           movl 0   
49 [0x31]:           movn #1   
51 [0x33]:           pushobj   
52 [0x34]:           loadl ebx, fp+3   
53 [0x35]:           popobj2    
54 [0x36]:           movr adx, ebx   
55 [0x37]:           chklen adx   
56 [0x38]:           movnd adx   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #3   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           popobj2    
68 [0x44]:           movr adx, ebx   
69 [0x45]:           chklen adx   
70 [0x46]:           movnd adx   
71 [0x47]:           pushobj   
72 [0x48]:           smov ebx, sp+[-2]   
73 [0x49]:           calld ebx   
74 [0x4a]:           loadval ebx   
75 [0x4b]:           movr cmt, ebx   
76 [0x4c]:           jne 126   
77 [0x4d]: line: 199 movl 0   
78 [0x4e]:           movn #1   
80 [0x50]:           pushobj   
81 [0x51]:           loadl ebx, fp+3   
82 [0x52]:           popobj2    
83 [0x53]:           movr adx, ebx   
84 [0x54]:           chklen adx   
85 [0x55]:           movnd adx   
86 [0x56]:           smovr_3 fp+4   
87 [0x57]: line: 200 movl 0   
88 [0x58]:           movn #1   
90 [0x5a]:           pushobj   
91 [0x5b]:           ipushl #3   
92 [0x5c]:           movi #1, ebx   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           add ecx, ebx -> ebx   
96 [0x60]:           popobj2    
97 [0x61]:           movr adx, ebx   
98 [0x62]:           chklen adx   
99 [0x63]:           movnd adx   
100 [0x64]:           pushobj   
101 [0x65]:           movl 0   
102 [0x66]:           movn #1   
104 [0x68]:           pushobj   
105 [0x69]:           loadl ebx, fp+3   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           popobj   
111 [0x6f]: line: 201 pushl 4   
112 [0x70]:           movl 0   
113 [0x71]:           movn #1   
115 [0x73]:           pushobj   
116 [0x74]:           ipushl #3   
117 [0x75]:           movi #1, ebx   
119 [0x77]:           loadval ecx   
120 [0x78]:           add ecx, ebx -> ebx   
121 [0x79]:           popobj2    
122 [0x7a]:           movr adx, ebx   
123 [0x7b]:           chklen adx   
124 [0x7c]:           movnd adx   
125 [0x7d]:           popobj   
126 [0x7e]:           nop   
127 [0x7f]:           nop   
128 [0x80]:           iaddl 1, fp@3   
130 [0x82]:           jmp @18   
131 [0x83]:           iaddl 1, fp@2   
133 [0x85]:           jmp @4   
134 [0x86]:           movl 0   
135 [0x87]:           _ulck   
136 [0x88]:           ret   


function: yed#yee.yix.aemn[3820] params(2) in file: yiv:209:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 211 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 52   
16 [0x10]: line: 212 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 48   
33 [0x21]: line: 213 movl 0   
34 [0x22]:           movn #1   
36 [0x24]:           pushobj   
37 [0x25]:           loadl ebx, fp+3   
38 [0x26]:           popobj2    
39 [0x27]:           movr adx, ebx   
40 [0x28]:           chklen adx   
41 [0x29]:           movnd adx   
42 [0x2a]:           pushobj   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           popobj2    
46 [0x2e]:           returnobj   
47 [0x2f]:           ret   
48 [0x30]:           nop   
49 [0x31]:           iaddl 1, fp@3   
51 [0x33]:           jmp @4   
52 [0x34]: line: 217 movl 4   
53 [0x35]:           del   
54 [0x36]: line: 218 pushl 4   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           popobj2    
58 [0x3a]:           returnobj   
59 [0x3b]:           ret   
60 [0x3c]:           movl 0   
61 [0x3d]:           _ulck   


function: yed#yee.yix.aemr[3821] params(2) in file: yiv:222:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 223 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 224 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 53   
16 [0x10]: line: 225 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 49   
33 [0x21]: line: 226 pushl 1   
34 [0x22]:           movl 0   
35 [0x23]:           movn #1   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+3   
39 [0x27]:           popobj2    
40 [0x28]:           movr adx, ebx   
41 [0x29]:           chklen adx   
42 [0x2a]:           movnd adx   
43 [0x2b]:           popobj   
44 [0x2c]: line: 227 istorel 1, fp+0   
46 [0x2e]:           movl 0   
47 [0x2f]:           _ulck   
48 [0x30]:           ret   
49 [0x31]:           nop   
50 [0x32]:           iaddl 1, fp@3   
52 [0x34]:           jmp @4   
53 [0x35]: line: 231 istorel 0, fp+0   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           ret   
58 [0x3a]:           movl 0   
59 [0x3b]:           _ulck   


function: yed#yee.yix.aems[3822] params(0) in file: yiv:235:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 236 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 237 new_class @0 // xxz#xxa   
3 [0x3]:           inc adx   
4 [0x4]:           dup    
5 [0x5]:           call @3184 // <std#yaf.ybf.adhx>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 239 pushl 1   
9 [0x9]:           newstr @109 // [    
10 [0xa]:           call @3180 // <std#yaf.ybf.adht>   
11 [0xb]:           pop   
12 [0xc]: line: 240 istorel 0, fp+2   
14 [0xe]:           ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           loadval ecx   
22 [0x16]:           lt ecx, ebx   
23 [0x17]:           movr ebx, cmt   
24 [0x18]:           movr cmt, ebx   
25 [0x19]:           jne 64   
26 [0x1a]: line: 241 pushl 1   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           loadl ebx, fp+2   
32 [0x20]:           popobj2    
33 [0x21]:           movr adx, ebx   
34 [0x22]:           chklen adx   
35 [0x23]:           movnd adx   
36 [0x24]:           pushobj   
37 [0x25]:           call @3176 // <std#yaf.ybf.adhp>   
38 [0x26]:           pop   
39 [0x27]: line: 243 ipushl #2   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           add ecx, ebx -> ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           loadval ecx   
52 [0x34]:           lt ecx, ebx   
53 [0x35]:           movr ebx, cmt   
54 [0x36]:           movr cmt, ebx   
55 [0x37]:           jne 60   
56 [0x38]: line: 244 pushl 1   
57 [0x39]:           newstr @110 // ,    
58 [0x3a]:           call @3180 // <std#yaf.ybf.adht>   
59 [0x3b]:           pop   
60 [0x3c]:           nop   
61 [0x3d]:           iaddl 1, fp@2   
63 [0x3f]:           jmp @14   
64 [0x40]: line: 248 pushl 1   
65 [0x41]:           newstr @111 //  ]   
66 [0x42]:           call @3180 // <std#yaf.ybf.adht>   
67 [0x43]:           pop   
68 [0x44]: line: 249 pushl 1   
69 [0x45]:           call @3157 // <std#yaf.ybf.adgw>   
70 [0x46]:           popobj2    
71 [0x47]:           pushobj   
72 [0x48]:           movl 0   
73 [0x49]:           _ulck   
74 [0x4a]:           popobj2    
75 [0x4b]:           returnobj   
76 [0x4c]:           ret   
77 [0x4d]:           movl 0   
78 [0x4e]:           _ulck   


function: yed#yee.yix.aemt[3823] params(1) in file: yiv:253:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 254 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // Index:    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3572 // <std#string.operator+>   
7 [0x7]:           newstr @113 // , size:    
8 [0x8]:           call @3552 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3572 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: yed#yee.yah.aenh[3824] params(0) in file: yad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std.io#thread[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: yed#yee.yah.aeni[3825] params(1) in file: yad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: yed#yee.yah.aenj[3826] params(1) in file: yad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3837 // <yed#yee.yah.aenu>   
4 [0x4]:          ret   


function: yed#yee.yah.aenk[3827] params(0) in file: yad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: yed#yee.yah.aenl[3828] params(1) in file: yad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: yed#yee.yah.aenm[3829] params(0) in file: yad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3352 // <std.io#ybq.adou>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: yed#yee.yah.aenn[3830] params(1) in file: yad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3851 // <yed#yee.yah.aeox>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: yed#yee.yah.aeno[3831] params(1) in file: yad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3851 // <yed#yee.yah.aeox>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: yed#yee.yah.aenp[3832] params(0) in file: yad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3831 // <yed#yee.yah.aeno>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: yed#yee.yah.aenq[3833] params(2) in file: yad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // xxz#xxa   
19 [0x13]:          skne adx // pc = 19   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3851 // <yed#yee.yah.aeox>   
24 [0x18]:          call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: yed#yee.yah.aenr[3834] params(0) in file: yad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3332 // <std.io#ybq.adoa>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3332 // <std.io#ybq.adoa>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: yed#yee.yah.aens[3835] params(0) in file: yad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: yed#yee.yah.aent[3836] params(1) in file: yad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3352 // <std.io#ybq.adou>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #45, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: yed#yee.yah.aenu[3837] params(1) in file: yad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3352 // <std.io#ybq.adou>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #45, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std.io#thread[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: yed#yee.yah.aenv[3838] params(1) in file: yad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3834 // <yed#yee.yah.aenr>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: yed#yee.yah.aenw[3839] params(1) in file: yad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 36   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          call @3416 // <std.io#thread.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 32   
29 [0x1d]: line: 97 loadl ebx, fp+2   
30 [0x1e]:          return_val ebx   
31 [0x1f]:          ret   
32 [0x20]:          nop   
33 [0x21]:          iaddl 1, fp@2   
35 [0x23]:          jmp @2   
36 [0x24]: line: 101 istorel -1, fp+0   
38 [0x26]:           ret   


function: yed#yee.yah.aenx[3840] params(0) in file: yad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: yed#yee.yah.aeny[3841] params(0) in file: yad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: yed#yee.yah.aeoz[3842] params(2) in file: yad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3851 // <yed#yee.yah.aeox>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3838 // <yed#yee.yah.aenv>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3834 // <yed#yee.yah.aenr>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: yed#yee.yah.aeod[3843] params(2) in file: yad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: yed#yee.yah.aeoe[3844] params(1) in file: yad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 37   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           call @3416 // <std.io#thread.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 143 pushl 0   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @3848 // <yed#yee.yah.aeor>   
32 [0x20]: line: 144 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@2   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: yed#yee.yah.aeoi[3845] params(2) in file: yad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3848 // <yed#yee.yah.aeor>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: yed#yee.yah.aeom[3846] params(2) in file: yad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: yed#yee.yah.aeoq[3847] params(1) in file: yad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: yed#yee.yah.aeor[3848] params(1) in file: yad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // xxz#xxa   
19 [0x13]:           skne adx // pc = 19   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3851 // <yed#yee.yah.aeox>   
24 [0x18]:           call @3614 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3342 // <std.io#ybq.adok>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3840 // <yed#yee.yah.aenx>   
77 [0x4d]:           ret   


function: yed#yee.yah.aeov[3849] params(2) in file: yad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: yed#yee.yah.aeow[3850] params(0) in file: yad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // xxz#xxa   
1 [0x1]:           inc adx   
2 [0x2]:           dup    
3 [0x3]:           call @3184 // <std#yaf.ybf.adhx>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @109 // [    
8 [0x8]:           call @3180 // <std#yaf.ybf.adht>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3176 // <std#yaf.ybf.adhp>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @110 // ,    
56 [0x38]:           call @3180 // <std#yaf.ybf.adht>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @111 //  ]   
64 [0x40]:           call @3180 // <std#yaf.ybf.adht>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3157 // <std#yaf.ybf.adgw>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: yed#yee.yah.aeox[3851] params(1) in file: yad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // Index:    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3572 // <std#string.operator+>   
7 [0x7]:           newstr @113 // , size:    
8 [0x8]:           call @3552 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3572 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#throwable.get_stack_trace[3852] params(0) in file: yly:13:25: note:  
		    stack_trace : string;
		                        ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 17   
8 [0x8]: line: 16 movl 0   
9 [0x9]:          movn #2   
11 [0xb]:          pushobj   
12 [0xc]:          call @3467 // <platform.kernel#yky.ylf.adua>   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          popobj   
17 [0x11]:          nop   
18 [0x12]: line: 20 movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          returnobj   
22 [0x16]:          ret   


constructor: std.io#ybq.yao.aedr.aepj[3853] params(2) in file: yam:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 135 pushl 1   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           popobj   
6 [0x6]: line: 136 pushl 2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           popobj   
11 [0xb]:           ret   


function: std.io#ybq.yao.aedr.aepk[3854] params(0) in file: yam:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @114 // key    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3554 // <std#string.operator+>   
10 [0xa]:           newstr @115 //  value    
11 [0xb]:           call @3552 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @3554 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std.io#ybq.yao.aedr.aepl[3855] params(0) in file: yam:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: yed#yee.yao.aeeh.aepq[3856] params(2) in file: yam:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 135 pushl 1   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           popobj   
6 [0x6]: line: 136 pushl 2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           popobj   
11 [0xb]:           ret   


function: yed#yee.yao.aeeh.aepr[3857] params(0) in file: yam:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @0 // xxz#xxa   
1 [0x1]:           skip @0 // pc = 1   
2 [0x2]:           dup    
3 [0x3]:           newstr @114 // key    
4 [0x4]:           call @3540 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3554 // <std#string.operator+>   
10 [0xa]:           newstr @115 //  value    
11 [0xb]:           call @3552 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @3554 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: yed#yee.yao.aeeh.aeps[3858] params(0) in file: yam:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: xxz#xxa.xxg.aept[3859] params(0) in file: xwy:12:6: note:  
		class neuron {
		     ^

0 [0x0]:         ldc ebx // 0.35   
1 [0x1]:         rstore ebx   
2 [0x2]:         movg @2 // @xxz#xxa.xxg   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ldc ebx // 0.5   
10 [0xa]:         rstore ebx   
11 [0xb]:         movg @2 // @xxz#xxa.xxg   
12 [0xc]:         movn #1   
14 [0xe]:         loadval ebx   
15 [0xf]:         movi #0, adx   
17 [0x11]:         rmov adx, ebx   
18 [0x12]:         ret   
19 [0x13]:         ret   


function: xxz#xxa.xxn.aepu[3860] params(0) in file: xwy:81:6: note:  
		class net {
		     ^

0 [0x0]:         ldc ebx // 100   
1 [0x1]:         rstore ebx   
2 [0x2]:         movg @3 // @xxz#xxa.xxn   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std#yaf.yak.aepv[3861] params(0) in file: yai:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         rstore adx   
2 [0x2]:         movg @15 // @std#yaf.yak   
3 [0x3]:         movn #0   
5 [0x5]:         popobj   
6 [0x6]:         ret   
7 [0x7]:         ret   


function: std#yaf.ybf.aepw[3862] params(0) in file: ybd:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @27 // @std#yaf.ybf   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @27 // @std#yaf.ybf   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std.io#ybq.ybv.aepx[3863] params(0) in file: ybt:17:13: note:  
		public class file {
		            ^

0 [0x0]:         call @3227 // <std.io#ybq.ybv.adjo>   
1 [0x1]:         movg @30 // @std.io#ybq.ybv   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         movg @30 // @std.io#ybq.ybv   
6 [0x6]:         movn #0   
8 [0x8]:         pushobj   
9 [0x9]:         invoke_delegate 3246 { static=0, args=0 }   
11 [0xb]:         movg @30 // @std.io#ybq.ybv   
12 [0xc]:         movn #1   
14 [0xe]:         loadval ebx   
15 [0xf]:         movi #0, adx   
17 [0x11]:         rmov adx, ebx   
18 [0x12]:         ret   
19 [0x13]:         ret   


function: std.io#ybq.ycg.aepy[3864] params(0) in file: yce:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         ifne   
2 [0x2]:         dup    
3 [0x3]:         new_class @0 // xxz#xxa   
4 [0x4]:         skip @0 // pc = 4   
5 [0x5]:         dup    
6 [0x6]:         newstr @2 // main   
7 [0x7]:         call @3540 // <std#string.string>   
8 [0x8]:         call @3234 // <std.io#ybq.ycg.adjv>   
9 [0x9]:         movg @32 // @std.io#ybq.ycg   
10 [0xa]:         movn #0   
12 [0xc]:         popobj   
13 [0xd]:         ret   
14 [0xe]:         ret   


function: yed#yee.yew.aeqz[3865] params(0) in file: yeu:5:13: note:  
		public class job {
		            ^

0 [0x0]:         istore 0   
2 [0x2]:         movg @38 // @yed#yee.yew   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: yed#yee.aeqa[3866] params(0) in file: ygv:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         movl 0   
2 [0x2]:         dup    
3 [0x3]:         call @3280 // <yed#yee.yeo.adlv>   
4 [0x4]:         movg @35 // @yed#yee   
5 [0x5]:         movn #5   
7 [0x7]:         popobj   
8 [0x8]:         ret   


function: std.io#ybq.aeqb[3867] params(0) in file: yil:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // xxz#xxa   
1 [0x1]:         test adx, adx   
2 [0x2]:         dup    
3 [0x3]:         movg @28 // @std.io#ybq   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std#yaf.yji.aeqc[3868] params(0) in file: yjg:6:6: note:  
		class time {
		     ^

0 [0x0]:         istore 4294967295   
2 [0x2]:         movg @48 // @std#yaf.yji   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std#yaf.aeqd[3869] params(0) in file: ykc:0:0: note:  
		End of File
		^

0 [0x0]:         istore 0   
2 [0x2]:         movg @14 // @std#yaf   
3 [0x3]:         movn #1   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#string.$03internal_static_init[3870] params(0) in file: yls:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @59 // @std#string   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @59 // @std#string   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std.io#ybq.ycp.aeqf[3871] params(0) in file: yhs:3:5: note:  
		import platform.kernel;
		    ^

0 [0x0]: line: 43 istorel 0, fp+0   
2 [0x2]: line: 44 movi #17, ebx   
4 [0x4]:          new_classarray ebx  // std.io#ybq.ycp[]   
6 [0x6]:          movg @33 // @std.io#ybq.ycp   
7 [0x7]:          movn #17   
9 [0x9]:          popobj   
10 [0xa]: line: 45 movg @33 // @std.io#ybq.ycp   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movg @33 // @std.io#ybq.ycp   
15 [0xf]:          movn #17   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+0   
19 [0x13]:          movr egx, ebx   
20 [0x14]:          inc ebx   
21 [0x15]:          smovr_2 ebx, fp+0   
22 [0x16]:          movr ebx, egx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          popobj   
28 [0x1c]: line: 46 movg @33 // @std.io#ybq.ycp   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movg @33 // @std.io#ybq.ycp   
33 [0x21]:          movn #17   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+0   
37 [0x25]:          movr egx, ebx   
38 [0x26]:          inc ebx   
39 [0x27]:          smovr_2 ebx, fp+0   
40 [0x28]:          movr ebx, egx   
41 [0x29]:          popobj2    
42 [0x2a]:          movr adx, ebx   
43 [0x2b]:          chklen adx   
44 [0x2c]:          movnd adx   
45 [0x2d]:          popobj   
46 [0x2e]: line: 47 movg @33 // @std.io#ybq.ycp   
47 [0x2f]:          movn #2   
49 [0x31]:          pushobj   
50 [0x32]:          movg @33 // @std.io#ybq.ycp   
51 [0x33]:          movn #17   
53 [0x35]:          pushobj   
54 [0x36]:          loadl ebx, fp+0   
55 [0x37]:          movr egx, ebx   
56 [0x38]:          inc ebx   
57 [0x39]:          smovr_2 ebx, fp+0   
58 [0x3a]:          movr ebx, egx   
59 [0x3b]:          popobj2    
60 [0x3c]:          movr adx, ebx   
61 [0x3d]:          chklen adx   
62 [0x3e]:          movnd adx   
63 [0x3f]:          popobj   
64 [0x40]: line: 48 movg @33 // @std.io#ybq.ycp   
65 [0x41]:          movn #3   
67 [0x43]:          pushobj   
68 [0x44]:          movg @33 // @std.io#ybq.ycp   
69 [0x45]:          movn #17   
71 [0x47]:          pushobj   
72 [0x48]:          loadl ebx, fp+0   
73 [0x49]:          movr egx, ebx   
74 [0x4a]:          inc ebx   
75 [0x4b]:          smovr_2 ebx, fp+0   
76 [0x4c]:          movr ebx, egx   
77 [0x4d]:          popobj2    
78 [0x4e]:          movr adx, ebx   
79 [0x4f]:          chklen adx   
80 [0x50]:          movnd adx   
81 [0x51]:          popobj   
82 [0x52]: line: 49 movg @33 // @std.io#ybq.ycp   
83 [0x53]:          movn #4   
85 [0x55]:          pushobj   
86 [0x56]:          movg @33 // @std.io#ybq.ycp   
87 [0x57]:          movn #17   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+0   
91 [0x5b]:          movr egx, ebx   
92 [0x5c]:          inc ebx   
93 [0x5d]:          smovr_2 ebx, fp+0   
94 [0x5e]:          movr ebx, egx   
95 [0x5f]:          popobj2    
96 [0x60]:          movr adx, ebx   
97 [0x61]:          chklen adx   
98 [0x62]:          movnd adx   
99 [0x63]:          popobj   
100 [0x64]: line: 50 movg @33 // @std.io#ybq.ycp   
101 [0x65]:          movn #5   
103 [0x67]:          pushobj   
104 [0x68]:          movg @33 // @std.io#ybq.ycp   
105 [0x69]:          movn #17   
107 [0x6b]:          pushobj   
108 [0x6c]:          loadl ebx, fp+0   
109 [0x6d]:          movr egx, ebx   
110 [0x6e]:          inc ebx   
111 [0x6f]:          smovr_2 ebx, fp+0   
112 [0x70]:          movr ebx, egx   
113 [0x71]:          popobj2    
114 [0x72]:          movr adx, ebx   
115 [0x73]:          chklen adx   
116 [0x74]:          movnd adx   
117 [0x75]:          popobj   
118 [0x76]: line: 51 movg @33 // @std.io#ybq.ycp   
119 [0x77]:          movn #6   
121 [0x79]:          pushobj   
122 [0x7a]:          movg @33 // @std.io#ybq.ycp   
123 [0x7b]:          movn #17   
125 [0x7d]:          pushobj   
126 [0x7e]:          loadl ebx, fp+0   
127 [0x7f]:          movr egx, ebx   
128 [0x80]:          inc ebx   
129 [0x81]:          smovr_2 ebx, fp+0   
130 [0x82]:          movr ebx, egx   
131 [0x83]:          popobj2    
132 [0x84]:          movr adx, ebx   
133 [0x85]:          chklen adx   
134 [0x86]:          movnd adx   
135 [0x87]:          popobj   
136 [0x88]: line: 52 movg @33 // @std.io#ybq.ycp   
137 [0x89]:          movn #7   
139 [0x8b]:          pushobj   
140 [0x8c]:          movg @33 // @std.io#ybq.ycp   
141 [0x8d]:          movn #17   
143 [0x8f]:          pushobj   
144 [0x90]:          loadl ebx, fp+0   
145 [0x91]:          movr egx, ebx   
146 [0x92]:          inc ebx   
147 [0x93]:          smovr_2 ebx, fp+0   
148 [0x94]:          movr ebx, egx   
149 [0x95]:          popobj2    
150 [0x96]:          movr adx, ebx   
151 [0x97]:          chklen adx   
152 [0x98]:          movnd adx   
153 [0x99]:          popobj   
154 [0x9a]: line: 53 movg @33 // @std.io#ybq.ycp   
155 [0x9b]:          movn #8   
157 [0x9d]:          pushobj   
158 [0x9e]:          movg @33 // @std.io#ybq.ycp   
159 [0x9f]:          movn #17   
161 [0xa1]:          pushobj   
162 [0xa2]:          loadl ebx, fp+0   
163 [0xa3]:          movr egx, ebx   
164 [0xa4]:          inc ebx   
165 [0xa5]:          smovr_2 ebx, fp+0   
166 [0xa6]:          movr ebx, egx   
167 [0xa7]:          popobj2    
168 [0xa8]:          movr adx, ebx   
169 [0xa9]:          chklen adx   
170 [0xaa]:          movnd adx   
171 [0xab]:          popobj   
172 [0xac]: line: 54 movg @33 // @std.io#ybq.ycp   
173 [0xad]:          movn #9   
175 [0xaf]:          pushobj   
176 [0xb0]:          movg @33 // @std.io#ybq.ycp   
177 [0xb1]:          movn #17   
179 [0xb3]:          pushobj   
180 [0xb4]:          loadl ebx, fp+0   
181 [0xb5]:          movr egx, ebx   
182 [0xb6]:          inc ebx   
183 [0xb7]:          smovr_2 ebx, fp+0   
184 [0xb8]:          movr ebx, egx   
185 [0xb9]:          popobj2    
186 [0xba]:          movr adx, ebx   
187 [0xbb]:          chklen adx   
188 [0xbc]:          movnd adx   
189 [0xbd]:          popobj   
190 [0xbe]: line: 55 movg @33 // @std.io#ybq.ycp   
191 [0xbf]:          movn #10   
193 [0xc1]:          pushobj   
194 [0xc2]:          movg @33 // @std.io#ybq.ycp   
195 [0xc3]:          movn #17   
197 [0xc5]:          pushobj   
198 [0xc6]:          loadl ebx, fp+0   
199 [0xc7]:          movr egx, ebx   
200 [0xc8]:          inc ebx   
201 [0xc9]:          smovr_2 ebx, fp+0   
202 [0xca]:          movr ebx, egx   
203 [0xcb]:          popobj2    
204 [0xcc]:          movr adx, ebx   
205 [0xcd]:          chklen adx   
206 [0xce]:          movnd adx   
207 [0xcf]:          popobj   
208 [0xd0]: line: 56 movg @33 // @std.io#ybq.ycp   
209 [0xd1]:          movn #11   
211 [0xd3]:          pushobj   
212 [0xd4]:          movg @33 // @std.io#ybq.ycp   
213 [0xd5]:          movn #17   
215 [0xd7]:          pushobj   
216 [0xd8]:          loadl ebx, fp+0   
217 [0xd9]:          movr egx, ebx   
218 [0xda]:          inc ebx   
219 [0xdb]:          smovr_2 ebx, fp+0   
220 [0xdc]:          movr ebx, egx   
221 [0xdd]:          popobj2    
222 [0xde]:          movr adx, ebx   
223 [0xdf]:          chklen adx   
224 [0xe0]:          movnd adx   
225 [0xe1]:          popobj   
226 [0xe2]: line: 57 movg @33 // @std.io#ybq.ycp   
227 [0xe3]:          movn #12   
229 [0xe5]:          pushobj   
230 [0xe6]:          movg @33 // @std.io#ybq.ycp   
231 [0xe7]:          movn #17   
233 [0xe9]:          pushobj   
234 [0xea]:          loadl ebx, fp+0   
235 [0xeb]:          movr egx, ebx   
236 [0xec]:          inc ebx   
237 [0xed]:          smovr_2 ebx, fp+0   
238 [0xee]:          movr ebx, egx   
239 [0xef]:          popobj2    
240 [0xf0]:          movr adx, ebx   
241 [0xf1]:          chklen adx   
242 [0xf2]:          movnd adx   
243 [0xf3]:          popobj   
244 [0xf4]: line: 58 movg @33 // @std.io#ybq.ycp   
245 [0xf5]:          movn #13   
247 [0xf7]:          pushobj   
248 [0xf8]:          movg @33 // @std.io#ybq.ycp   
249 [0xf9]:          movn #17   
251 [0xfb]:          pushobj   
252 [0xfc]:          loadl ebx, fp+0   
253 [0xfd]:          movr egx, ebx   
254 [0xfe]:          inc ebx   
255 [0xff]:          smovr_2 ebx, fp+0   
256 [0x100]:          movr ebx, egx   
257 [0x101]:          popobj2    
258 [0x102]:          movr adx, ebx   
259 [0x103]:          chklen adx   
260 [0x104]:          movnd adx   
261 [0x105]:          popobj   
262 [0x106]: line: 59 movg @33 // @std.io#ybq.ycp   
263 [0x107]:          movn #14   
265 [0x109]:          pushobj   
266 [0x10a]:          movg @33 // @std.io#ybq.ycp   
267 [0x10b]:          movn #17   
269 [0x10d]:          pushobj   
270 [0x10e]:          loadl ebx, fp+0   
271 [0x10f]:          movr egx, ebx   
272 [0x110]:          inc ebx   
273 [0x111]:          smovr_2 ebx, fp+0   
274 [0x112]:          movr ebx, egx   
275 [0x113]:          popobj2    
276 [0x114]:          movr adx, ebx   
277 [0x115]:          chklen adx   
278 [0x116]:          movnd adx   
279 [0x117]:          popobj   
280 [0x118]: line: 60 movg @33 // @std.io#ybq.ycp   
281 [0x119]:          movn #15   
283 [0x11b]:          pushobj   
284 [0x11c]:          movg @33 // @std.io#ybq.ycp   
285 [0x11d]:          movn #17   
287 [0x11f]:          pushobj   
288 [0x120]:          loadl ebx, fp+0   
289 [0x121]:          movr egx, ebx   
290 [0x122]:          inc ebx   
291 [0x123]:          smovr_2 ebx, fp+0   
292 [0x124]:          movr ebx, egx   
293 [0x125]:          popobj2    
294 [0x126]:          movr adx, ebx   
295 [0x127]:          chklen adx   
296 [0x128]:          movnd adx   
297 [0x129]:          popobj   
298 [0x12a]: line: 61 movg @33 // @std.io#ybq.ycp   
299 [0x12b]:          movn #16   
301 [0x12d]:          pushobj   
302 [0x12e]:          movg @33 // @std.io#ybq.ycp   
303 [0x12f]:          movn #17   
305 [0x131]:          pushobj   
306 [0x132]:          loadl ebx, fp+0   
307 [0x133]:          movr egx, ebx   
308 [0x134]:          inc ebx   
309 [0x135]:          smovr_2 ebx, fp+0   
310 [0x136]:          movr ebx, egx   
311 [0x137]:          popobj2    
312 [0x138]:          movr adx, ebx   
313 [0x139]:          chklen adx   
314 [0x13a]:          movnd adx   
315 [0x13b]:          popobj   
316 [0x13c]:          ret   
317 [0x13d]:          ret   


function: std#yaf.yir.aeqy[3872] params(0) in file: yio:32:5: note:  
		class tmp {
		    ^

0 [0x0]: line: 34 call @3522 // <std#yaf.adwd>   
1 [0x1]:          loadval ebx   
2 [0x2]:          rstore ebx   
3 [0x3]:          movi #4, ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          shr ecx, ebx -> ebx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movg @14 // @std#yaf   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]: line: 35 movg @14 // @std#yaf   
16 [0x10]:          movn #0   
18 [0x12]:          movi #0, adx   
20 [0x14]:          iaload ebx, adx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3486 // <platform.kernel#yky.ylf.adut>   
23 [0x17]:          ret   
24 [0x18]:          ret   


lambda: yed#yee.afhp[3873] params(2) in file: yem:71:35: note:  
				job_queue.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                  ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: yed#yee.afmh[3874] params(2) in file: yfw:89:52: note:  
		                        jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                                   ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: yed#yee.afmq[3875] params(2) in file: yfw:104:48: note:  
		                    jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                               ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #15   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #15   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


lambda: yed#yee.afmy[3876] params(1) in file: yfw:128:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 129 pushl 0   
1 [0x1]:           movg @35 // @yed#yee   
2 [0x2]:           movn #3   
4 [0x4]:           pushobj   
5 [0x5]:           call @3416 // <std.io#thread.operator==>   
6 [0x6]:           loadval ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 12   
9 [0x9]:           istorel 0, fp+0   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 131 movg @35 // @yed#yee   
14 [0xe]:           movn #5   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           call @3285 // <yed#yee.yeo.admb>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           pushnull    
24 [0x18]:           itest ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


lambda: yed#yee.afnl[3877] params(1) in file: yfw:162:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 163 pushl 0   
1 [0x1]:           movg @35 // @yed#yee   
2 [0x2]:           movn #3   
4 [0x4]:           pushobj   
5 [0x5]:           call @3416 // <std.io#thread.operator==>   
6 [0x6]:           loadval ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 12   
9 [0x9]:           istorel 0, fp+0   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 164 movg @35 // @yed#yee   
14 [0xe]:           movn #5   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           call @3285 // <yed#yee.yeo.admb>   
19 [0x13]:           popobj2    
20 [0x14]:           smovr_3 fp+1   
21 [0x15]: line: 166 movl 1   
22 [0x16]:           movn #0   
24 [0x18]:           pushobj   
25 [0x19]:           pushnull    
26 [0x1a]:           itest ebx   
27 [0x1b]:           skne ebx // pc = 61   
28 [0x1c]:           movl 1   
29 [0x1d]:           movn #1   
31 [0x1f]:           movi #0, adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movi #0, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           gt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           skne ebx // pc = 61   
41 [0x29]:           movg @35 // @yed#yee   
42 [0x2a]:           movn #4   
44 [0x2c]:           movi #0, adx   
46 [0x2e]:           iaload ebx, adx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 1   
49 [0x31]:           movn #1   
51 [0x33]:           movi #0, adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           loadval ecx   
55 [0x37]:           sub ecx, ebx -> ebx   
56 [0x38]:           rstore ebx   
57 [0x39]:           movi #180000, ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           gt ecx, ebx   
61 [0x3d]:           return_val cmt   
62 [0x3e]:           ret   


lambda: yed#yee.afno[3878] params(1) in file: yfw:177:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 178 movg @35 // @yed#yee   
1 [0x1]:           movn #5   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3285 // <yed#yee.yeo.admb>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 179 movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           skne ebx // pc = 48   
15 [0xf]:           movl 1   
16 [0x10]:           movn #1   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           rstore ebx   
22 [0x16]:           movi #0, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           gt ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           skne ebx // pc = 48   
28 [0x1c]:           movg @35 // @yed#yee   
29 [0x1d]:           movn #4   
31 [0x1f]:           movi #0, adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movl 1   
36 [0x24]:           movn #1   
38 [0x26]:           movi #0, adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movi #180000, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           return_val cmt   
49 [0x31]:           ret   


