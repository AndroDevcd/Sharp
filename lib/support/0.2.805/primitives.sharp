mod std;

public class integer<native_type> {
    private value : native_type;

    integer(initial_val : var) {
        value = initial_val;
    }

    integer(num : integer<native_type>) {
        value = num.value;
    }

    def hash() : long {
        return value;
    }

    def operator!=(num : ulong) := (value!=num.value);
    def operator==(num : ulong) := (value==num.value);
    def operator!=(num : long) := (value!=num.value);
    def operator==(num : long) := (value==num.value);
    def operator!=(num : uint) := (value!=num.value);
    def operator==(num : uint) := (value==num.value);
    def operator!=(num : int) := (value!=num.value);
    def operator==(num : int) := (value==num.value);
    def operator!=(num : ushort) := (value!=num.value);
    def operator==(num : ushort) := (value==num.value);
    def operator!=(num : short) := (value!=num.value);
    def operator==(num : short) := (value==num.value);
    def operator!=(num : uchar) := (value!=num.value);
    def operator==(num : uchar) := (value==num.value);
    def operator!=(num : char) := (value!=num.value);
    def operator==(num : char) := (value==num.value);
    def operator!=(num : byte) := (value!=num.value);
    def operator==(num : byte) := (value==num.value);
    def operator!=(num : bool) := (value!=num.value);
    def operator==(num : bool) := (value==num.value);

    def operator+(num : ulong)  := (value+num.value);
    def operator+(num : long)   := (value+num.value);
    def operator+(num : uint)   := (value+num.value);
    def operator+(num : int)    := (value+num.value);
    def operator+(num : ushort) := (value+num.value);
    def operator+(num : short)  := (value+num.value);
    def operator+(num : uchar)  := (value+num.value);
    def operator+(num : char)   := (value+num.value);
    def operator+(num : byte)   := (value+num.value);
    def operator+(num : bool)   := (value+num.value);
    def operator+(num : var)    := (value+num);

    def operator-(num : ulong)  := (value-num.value);
    def operator-(num : long)   := (value-num.value);
    def operator-(num : uint)   := (value-num.value);
    def operator-(num : int)    := (value-num.value);
    def operator-(num : ushort) := (value-num.value);
    def operator-(num : short)  := (value-num.value);
    def operator-(num : uchar)  := (value-num.value);
    def operator-(num : char)   := (value-num.value);
    def operator-(num : byte)   := (value-num.value);
    def operator-(num : bool)   := (value-num.value);
    def operator-(num : var)    := (value-num);

    def operator*(num : ulong)  := (value*num.value);
    def operator*(num : long)   := (value*num.value);
    def operator*(num : uint)   := (value*num.value);
    def operator*(num : int)    := (value*num.value);
    def operator*(num : ushort) := (value*num.value);
    def operator*(num : short)  := (value*num.value);
    def operator*(num : uchar)  := (value*num.value);
    def operator*(num : char)   := (value*num.value);
    def operator*(num : byte)   := (value*num.value);
    def operator*(num : bool)   := (value*num.value);
    def operator*(num : var)    := (value*num);

    def operator/(num : ulong)  := (value/num.value);
    def operator/(num : long)   := (value/num.value);
    def operator/(num : uint)   := (value/num.value);
    def operator/(num : int)    := (value/num.value);
    def operator/(num : ushort) := (value/num.value);
    def operator/(num : short)  := (value/num.value);
    def operator/(num : uchar)  := (value/num.value);
    def operator/(num : char)   := (value/num.value);
    def operator/(num : byte)   := (value/num.value);
    def operator/(num : bool)   := (value/num.value);
    def operator/(num : var)    := (value/num);

    def operator%(num : ulong)  := (value%num.value);
    def operator%(num : long)   := (value%num.value);
    def operator%(num : uint)   := (value%num.value);
    def operator%(num : int)    := (value%num.value);
    def operator%(num : ushort) := (value%num.value);
    def operator%(num : short)  := (value%num.value);
    def operator%(num : uchar)  := (value%num.value);
    def operator%(num : char)   := (value%num.value);
    def operator%(num : byte)   := (value%num.value);
    def operator%(num : bool)   := (value%num.value);
    def operator%(num : var)    := (value%num);

    def operator<(num : ulong)  := (value<num.value);
    def operator<(num : long)   := (value<num.value);
    def operator<(num : uint)   := (value<num.value);
    def operator<(num : int)    := (value<num.value);
    def operator<(num : ushort) := (value<num.value);
    def operator<(num : short)  := (value<num.value);
    def operator<(num : uchar)  := (value<num.value);
    def operator<(num : char)   := (value<num.value);
    def operator<(num : byte)   := (value<num.value);
    def operator<(num : bool)   := (value<num.value);
    def operator<(num : var)    := (value<num);

    def operator>(num : ulong)  := (value>num.value);
    def operator>(num : long)   := (value>num.value);
    def operator>(num : uint)   := (value>num.value);
    def operator>(num : int)    := (value>num.value);
    def operator>(num : ushort) := (value>num.value);
    def operator>(num : short)  := (value>num.value);
    def operator>(num : uchar)  := (value>num.value);
    def operator>(num : char)   := (value>num.value);
    def operator>(num : byte)   := (value>num.value);
    def operator>(num : bool)   := (value>num.value);
    def operator>(num : var)    := (value>num);

    def operator<=(num : ulong)  := (value>=num.value);
    def operator<=(num : long)   := (value>=num.value);
    def operator<=(num : uint)   := (value>=num.value);
    def operator<=(num : int)    := (value>=num.value);
    def operator<=(num : ushort) := (value>=num.value);
    def operator<=(num : short)  := (value>=num.value);
    def operator<=(num : uchar)  := (value>=num.value);
    def operator<=(num : char)   := (value>=num.value);
    def operator<=(num : byte)   := (value>=num.value);
    def operator<=(num : bool)   := (value>=num.value);
    def operator<=(num : var)    := (value>=num);

    def operator**(num : ulong)  := (value**num.value);
    def operator**(num : long)   := (value**num.value);
    def operator**(num : uint)   := (value**num.value);
    def operator**(num : int)    := (value**num.value);
    def operator**(num : ushort) := (value**num.value);
    def operator**(num : short)  := (value**num.value);
    def operator**(num : uchar)  := (value**num.value);
    def operator**(num : char)   := (value**num.value);
    def operator**(num : byte)   := (value**num.value);
    def operator**(num : bool)   := (value**num.value);
    def operator**(num : var)    := (value**num);

    def operator<<(num : ulong)  := (value<<num.value);
    def operator<<(num : long)   := (value<<num.value);
    def operator<<(num : uint)   := (value<<num.value);
    def operator<<(num : int)    := (value<<num.value);
    def operator<<(num : ushort) := (value<<num.value);
    def operator<<(num : short)  := (value<<num.value);
    def operator<<(num : uchar)  := (value<<num.value);
    def operator<<(num : char)   := (value<<num.value);
    def operator<<(num : byte)   := (value<<num.value);
    def operator<<(num : bool)   := (value<<num.value);
    def operator<<(num : var)    := (value<<num);

    def operator>>(num : ulong)  := (value>>num.value);
    def operator>>(num : long)   := (value>>num.value);
    def operator>>(num : uint)   := (value>>num.value);
    def operator>>(num : int)    := (value>>num.value);
    def operator>>(num : ushort) := (value>>num.value);
    def operator>>(num : short)  := (value>>num.value);
    def operator>>(num : uchar)  := (value>>num.value);
    def operator>>(num : char)   := (value>>num.value);
    def operator>>(num : byte)   := (value>>num.value);
    def operator>>(num : bool)   := (value>>num.value);
    def operator>>(num : var)    := (value>>num);

    def operator!() := (!value);
    def operator++() := (++value);
    def operator++(num : var) := (value++);
    def operator--() := (--value);
    def operator--(num : var) := (value++);

    def operator+=(num : ulong)  := (value+=num.value);
    def operator+=(num : long)   := (value+=num.value);
    def operator+=(num : uint)   := (value+=num.value);
    def operator+=(num : int)    := (value+=num.value);
    def operator+=(num : ushort) := (value+=num.value);
    def operator+=(num : short)  := (value+=num.value);
    def operator+=(num : uchar)  := (value+=num.value);
    def operator+=(num : char)   := (value+=num.value);
    def operator+=(num : byte)   := (value+=num.value);
    def operator+=(num : bool)   := (value+=num.value);
    def operator+=(num : var)    := (value+=num);

    def operator-=(num : ulong)  := (value-=num.value);
    def operator-=(num : long)   := (value-=num.value);
    def operator-=(num : uint)   := (value-=num.value);
    def operator-=(num : int)    := (value-=num.value);
    def operator-=(num : ushort) := (value-=num.value);
    def operator-=(num : short)  := (value-=num.value);
    def operator-=(num : uchar)  := (value-=num.value);
    def operator-=(num : char)   := (value-=num.value);
    def operator-=(num : byte)   := (value-=num.value);
    def operator-=(num : bool)   := (value-=num.value);
    def operator-=(num : var)    := (value-=num);

    def operator*=(num : ulong)  := (value*=num.value);
    def operator*=(num : long)   := (value*=num.value);
    def operator*=(num : uint)   := (value*=num.value);
    def operator*=(num : int)    := (value*=num.value);
    def operator*=(num : ushort) := (value*=num.value);
    def operator*=(num : short)  := (value*=num.value);
    def operator*=(num : uchar)  := (value*=num.value);
    def operator*=(num : char)   := (value*=num.value);
    def operator*=(num : byte)   := (value*=num.value);
    def operator*=(num : bool)   := (value*=num.value);
    def operator*=(num : var)    := (value*=num);

    def operator/=(num : ulong)  := (value/=num.value);
    def operator/=(num : long)   := (value/=num.value);
    def operator/=(num : uint)   := (value/=num.value);
    def operator/=(num : int)    := (value/=num.value);
    def operator/=(num : ushort) := (value/=num.value);
    def operator/=(num : short)  := (value/=num.value);
    def operator/=(num : uchar)  := (value/=num.value);
    def operator/=(num : char)   := (value/=num.value);
    def operator/=(num : byte)   := (value/=num.value);
    def operator/=(num : bool)   := (value/=num.value);
    def operator/=(num : var)    := (value/=num);

    def operator%=(num : ulong)  := (value%=num.value);
    def operator%=(num : long)   := (value%=num.value);
    def operator%=(num : uint)   := (value%=num.value);
    def operator%=(num : int)    := (value%=num.value);
    def operator%=(num : ushort) := (value%=num.value);
    def operator%=(num : short)  := (value%=num.value);
    def operator%=(num : uchar)  := (value%=num.value);
    def operator%=(num : char)   := (value%=num.value);
    def operator%=(num : byte)   := (value%=num.value);
    def operator%=(num : bool)   := (value%=num.value);
    def operator%=(num : var)    := (value%=num);

    def operator&=(num : ulong)  := (value&=num.value);
    def operator&=(num : long)   := (value&=num.value);
    def operator&=(num : uint)   := (value&=num.value);
    def operator&=(num : int)    := (value&=num.value);
    def operator&=(num : ushort) := (value&=num.value);
    def operator&=(num : short)  := (value&=num.value);
    def operator&=(num : uchar)  := (value&=num.value);
    def operator&=(num : char)   := (value&=num.value);
    def operator&=(num : byte)   := (value&=num.value);
    def operator&=(num : bool)   := (value&=num.value);
    def operator&=(num : var)    := (value&=num);

    def operator|=(num : ulong)  := (value|=num.value);
    def operator|=(num : long)   := (value|=num.value);
    def operator|=(num : uint)   := (value|=num.value);
    def operator|=(num : int)    := (value|=num.value);
    def operator|=(num : ushort) := (value|=num.value);
    def operator|=(num : short)  := (value|=num.value);
    def operator|=(num : uchar)  := (value|=num.value);
    def operator|=(num : char)   := (value|=num.value);
    def operator|=(num : byte)   := (value|=num.value);
    def operator|=(num : bool)   := (value|=num.value);
    def operator|=(num : var)    := (value|=num);

    def operator^(num : ulong)  := (value^num.value);
    def operator^(num : long)   := (value^num.value);
    def operator^(num : uint)   := (value^num.value);
    def operator^(num : int)    := (value^num.value);
    def operator^(num : ushort) := (value^num.value);
    def operator^(num : short)  := (value^num.value);
    def operator^(num : uchar)  := (value^num.value);
    def operator^(num : char)   := (value^num.value);
    def operator^(num : byte)   := (value^num.value);
    def operator^(num : bool)   := (value^num.value);
    def operator^(num : var)    := (value^num);

    def operator&(num : ulong)  := (value&num.value);
    def operator&(num : long)   := (value&num.value);
    def operator&(num : uint)   := (value&num.value);
    def operator&(num : int)    := (value&num.value);
    def operator&(num : ushort) := (value&num.value);
    def operator&(num : short)  := (value&num.value);
    def operator&(num : uchar)  := (value&num.value);
    def operator&(num : char)   := (value&num.value);
    def operator&(num : byte)   := (value&num.value);
    def operator&(num : bool)   := (value&num.value);
    def operator&(num : var)    := (value&num);

    def operator|(num : ulong)  := (value|num.value);
    def operator|(num : long)   := (value|num.value);
    def operator|(num : uint)   := (value|num.value);
    def operator|(num : int)    := (value|num.value);
    def operator|(num : ushort) := (value|num.value);
    def operator|(num : short)  := (value|num.value);
    def operator|(num : uchar)  := (value|num.value);
    def operator|(num : char)   := (value|num.value);
    def operator|(num : byte)   := (value|num.value);
    def operator|(num : bool)   := (value|num.value);
    def operator|(num : var)    := (value|num);

    def operator!=(num : var) := value!=num;
    def operator==(num : var) := value==num;
    def operator=(num : var) := value=num;


//    public def to_string() : string {
//        return "" + value;
//    }

    def to_ulong() := new ulong { value };
    def to_long() := new long { value };
    def to_uint() := new uint { value };
    def to_int() := new int { value };
    def to_ushort() := new ushort { value };
    def to_short() := new short { value };
    def to_uchar() := new uchar { value };
    def to_char() := new char { value };
    def to_byte() := new byte { value };
    def to_bool() := new bool { value };

    def get_value() := value;
}

class ulong base integer<_uint64> {

    ulong(i : var) {

    }
}
class long base integer<_int64> {
    long(i : int) {

    }
    long(i : var) {

    }
}
class uint base integer<_uint32> {

    uint(i : var) {

    }
}
class int base integer<_int32> {

    int(i : var) {

    }
}
class ushort base integer<_uint16> {

    ushort(i : var) {

    }
}
class short base integer<_int16> {

    short(i : var) {

    }
}
class uchar base integer<_uint8> {

    uchar(i : var) {

    }
}
class char base integer<_int8> {

    char(i : var) {

    }
}
class byte base uchar {

    byte(i : var) {

    }
}
class bool base integer<_int8> { /* TDOO: override base class methods */ }