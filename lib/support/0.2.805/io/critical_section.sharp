mod std.io;

global_lock := new _object_();
def critical_section(block : ()()) {
    err : exception;
    lock global_lock -> {
      try {
          block();
      } catch(e: exception) {
          err = e;
      }
    }

    if(err != null) throw err;
}

def critical_section(block : ()(), lock_obj : object) {
    err : exception;
    lock lock_obj -> {
      try {
          block();
      } catch(e: exception) {
          err = e;
      }
    }

    if(err != null) throw err;
}

//def<t, r> critical_section(block : (t)(r), lock_obj : object, data: t) : r {
    // err : exception;
    // lock lock_obj -> {
    //   try {
    //       return block(data);
    //   } catch(e: exception) {
    //       err = e;
    //   }
    // }
    //
    // if(err != null) throw err;
//}
