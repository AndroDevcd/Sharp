mod platform.kernel;

import platform;

class platform
{
    private static main : (string[])(var);
    private static main2 : (string[])();
    private static main3 : ()();
    private static main4 : ()(var);

    static def tls_init() {}
    private static def static_init() {}

    static def print(msg : _int8[]) {
        foreach(ch in msg) {
            asm {
                loadl ebx, {ch}
                putc ebx
            }
        }
    }

    private static def srt_init(args: object[]) : var {
        build.app_name = "${args[0] as _int8[]}";
        build.version = "${args[1] as _int8[]}";
        build.platform = "${args[2] as _int8[]}";
        build.os = "${args[3] as _int8[]}";

        static_init();
        tls_init();

        const min_args := 4;
        user_args := new string[sizeof(args) - min_args];
        iter := 0;

        for(i := min_args; i < sizeof(args); i++) {
            user_args[iter++] = new string(args[2] as _int8[]);
        }

        result := 0;
        when {
            main != 0 -> result = main(user_args);
            main2 != 0 -> main2(user_args);
            main3 != 0 -> main3();
            main4 != 0 -> result = main4();
        }

        return result;
    }
}
