mod std;

/**
 * Created by braxtonn on 11/19/2019.
 *
 * This class acts as the base level
 * support class for enums in the language.
 * This class provides  core functionality and is
 * required to compile you sharp program if you utilize
 * enums.
 */
stable ext class _enum_ {
    private static enums : _enum_[];
    private name : _int8[];
    private ordinal : _int64;

    _enum_(ord : var) {
        ordinal = ord;
    }

//    _enum_(e : _enum_) {
//        name = e.ordinal;
//        name = (_int8[])copyOf(e.name, sizeof(e.name));
//    }

    public def operator!=(e : _enum_) : var {
        return ordinal!=e.ordinal;
    }

    public def operator!=(num : var) : var {
        return ordinal!=num;
    }

    public def operator==(e : _enum_) : var {
        return ordinal==e.ordinal;
    }

    public def operator==(num : var) : var {
        return ordinal==num;
    }

    public def get_name() : _int8[] {
         return name;
    }

    public def get_ordinal() : _int64 {
         return ordinal;
    }


//    public def delegate::to_string() : string {
//        return name;
//    }
}
