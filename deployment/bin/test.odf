## Object Dump file for test:

pre codebase size: 84379
post codebase size: 75565
optimized opcodes: 8814
net % gain 10.4457


class: pxo#pxp[0] fields(1) methods(24)
class: pxt#pxu[1] fields(0) methods(1)
class: pxt#pxu.pxw[2] fields(6) methods(9)
enum: pxt#pxu.pyz[3] fields(5) methods(17)
class: pxt#pxu.pyd[4] fields(6) methods(9)
class: pxt#pxu.pyg[5] fields(6) methods(9)
class: pxt#pxu.pyj[6] fields(2) methods(8)
class: pxt#pxu.pyo[7] fields(4) methods(11)
class: pxt#pxu.pyv[8] fields(6) methods(8)
enum: pxt#pxu.qzc[9] fields(19) methods(17)
class: qzv#qzw[10] fields(5) methods(27)
class: std#qaf[11] fields(2) methods(57)
class: std#qaf.qak[12] fields(1) methods(11)
class: std#qaf.qas[13] fields(1) methods(318)
class: std#qaf.qat[14] fields(1) methods(318)
class: std#qaf.qau[15] fields(1) methods(318)
class: std#qaf.qav[16] fields(1) methods(318)
class: std#qaf.qaw[17] fields(1) methods(318)
class: std#qaf.qax[18] fields(1) methods(318)
class: std#qaf.qay[19] fields(1) methods(318)
class: std#qaf.qbz[20] fields(1) methods(324)
class: std#qaf.qba[21] fields(1) methods(426)
class: std#qaf.qbb[22] fields(1) methods(320)
class: std#qaf.qbc[23] fields(1) methods(318)
class: std#qaf.qbf[24] fields(7) methods(53)
class: std.io#qbq[25] fields(1) methods(45)
interface: std.io#qbq.qbs[26] fields(0) methods(9)
class: std.io#qbq.qbv[27] fields(3) methods(50)
class: std.io#qbq.qcb[28] fields(20) methods(32)
class: std.io#qbq.qcg[29] fields(6) methods(20)
enum: std.io#qbq.qcp[30] fields(20) methods(20)
class: std.io#qbq.qdj[31] fields(18) methods(27)
class: qed#qee[32] fields(6) methods(18)
class: qed#qee.qeg[33] fields(2) methods(21)
class: qed#qee.qeo[34] fields(5) methods(15)
class: qed#qee.qew[35] fields(22) methods(28)
enum: qed#qee.qgi[36] fields(6) methods(17)
class: qed#qee.qgp[37] fields(3) methods(22)
class: qed#qee.qgs[38] fields(2) methods(8)
class: qed#qee.qgy[39] fields(0) methods(17)
enum: std.io#qbq.qhd[40] fields(5) methods(17)
class: std.io#qbq.qhp[41] fields(20) methods(32)
class: std.io#thread[42] fields(14) methods(44)
class: std#qaf.qir[43] fields(0) methods(9)
class: std#_enum_[44] fields(2) methods(17)
class: std#qaf.qjl[45] fields(1) methods(21)
enum: std#qaf.qjn[46] fields(11) methods(17)
enum: std#qaf.qjx[47] fields(6) methods(17)
class: std#qaf.qkh[48] fields(0) methods(7)
interface: std#qaf.qkl[49] fields(0) methods(10)
class: qkn#qko[50] fields(0) methods(4)
class: qkn#qko.qku[51] fields(4) methods(10)
class: platform.kernel#qlb[52] fields(0) methods(1)
class: platform.kernel#stack_state[53] fields(2) methods(8)
class: platform.kernel#qlb.qli[54] fields(0) methods(29)
class: platform.kernel#qlb.qll[55] fields(4) methods(16)
class: std#string[56] fields(3) methods(67)
class: std#throwable[57] fields(3) methods(13)
class: std#exception[58] fields(3) methods(16)
class: std#illegal_argument_exception[59] fields(3) methods(19)
class: std#illegal_state_exception[60] fields(3) methods(19)
class: std#out_of_bounds_exception[61] fields(3) methods(19)
class: std#qaf.qml[62] fields(3) methods(19)
class: std#invalid_operation_exception[63] fields(3) methods(19)
class: std#nullptr_exception[64] fields(3) methods(19)
class: std#runtime_exception[65] fields(3) methods(19)
class: std#stack_overflow_exception[66] fields(3) methods(19)
class: std#thread_stack_exception[67] fields(3) methods(19)
class: std#class_cast_exception[68] fields(3) methods(19)
class: std#out_of_memory_exception[69] fields(3) methods(19)
class: std#qaf.qmt[70] fields(3) methods(22)
class: std#unsatisfied_link_error[71] fields(3) methods(22)
class: std#qaf.qmv[72] fields(3) methods(22)
class: std#error[73] fields(3) methods(19)
interface: std#qaf.qni[74] fields(0) methods(9)
generic: std#qaf.qar[75] fields(1) methods(216)
generic: std#qaf.qar[76] fields(1) methods(216)
generic: std#qaf.qar[77] fields(1) methods(216)
generic: std#qaf.qar[78] fields(1) methods(216)
generic: std#qaf.qar[79] fields(1) methods(216)
generic: std#qaf.qar[80] fields(1) methods(216)
generic: std#qaf.qar[81] fields(1) methods(216)
generic: std#qaf.qar[82] fields(1) methods(216)
generic: std#qaf.qar[83] fields(1) methods(216)
std#qaf.qke[84] fields(0) methods(9)
std.io#qbq.qke[85] fields(0) methods(9)
generic: std.io#qbq.qah[86] fields(5) methods(35)
std.io#qbq.qke[87] fields(0) methods(9)
generic: std.io#qbq.qao[88] fields(6) methods(15)
generic: qed#qee.qao[89] fields(6) methods(15)
generic: std.io#qbq.qah[90] fields(5) methods(35)
std.io#qbq.qke[91] fields(0) methods(9)
generic: qed#qee.qja[92] fields(5) methods(33)
qed#qee.qke[93] fields(0) methods(9)
generic: qed#qee.qah[94] fields(5) methods(35)
generic: qed#qee.qah[95] fields(5) methods(35)
generic: std.io#qbq.qao.wzp[96] fields(3) methods(10)
generic: qed#qee.qao.waf[97] fields(3) methods(10)
generic: pxo#pxp.qfv[98] fields(7) methods(25)
generic: pxo#pxp.qgf[99] fields(7) methods(19)
generic: pxo#pxp.qel[100] fields(4) methods(14)
generic: pxo#pxp.qja[101] fields(5) methods(33)
pxo#pxp.qke[102] fields(0) methods(9)
generic: pxo#pxp.qah[103] fields(5) methods(35)


 strings: 

[0]: nil
[1]: job#
[2]: main
[3]: 
[4]: blocking task
[5]: Hello, world!
[6]: alive = 
[7]: [ 
[8]: , 
[9]:  ]
[10]: Index: 
[11]: , size: 
[12]: deferred task
[13]: the value is = 
[14]: true
[15]: false
[16]: length cannot be less than zero
[17]: length of: 
[18]:  is greater than the string: 
[19]: null
[20]: invalid precision: 
[21]: endPos: 
[22]:  cannot be less than the startPos: 
[23]: Index out of bounds exception at: 
[24]:  with size of: 
[25]: file path cannot be null
[26]: file path cannot be empty
[27]: Negative time
[28]: file could not be resolved: 
[29]: cannot set a timeout on a job that's blocking the calling thread
[30]: cannot set a job recurring that's blocking the calling thread
[31]: cannot block calling thread on job that has a timeout
[32]: cannot block calling thread on a recurring job
[33]: recurring jobs cannot be deferred tasks
[34]: Long term jobs
[35]: Short term jobs
[36]: cannot set update restart interval on non-recurring job
[37]: task_scheduler
[38]: cannot modify max thread count after task library has started, 
[39]: try calling this before your first task
[40]: cannot modify max thread count after task library has started, try calling this before your first ta
[41]: cannot have less than 2 max threads
[42]: long_term_worker_thread#
[43]: worker_thread#
[44]: invalid thread priority 
[45]: cannot sleep for negative time: 
[46]: win
[47]: posix
[48]: .dll
[49]: .so
[50]: end_pos: 
[51]:  cannot be less than the start_pos: 
[52]: assertion failed!
[53]: class_property
[54]: field_property
[55]: function_property
[56]: int8
[57]: int16
[58]: int32
[59]: int64
[60]: uint8
[61]: uint16
[62]: uint32
[63]: uint64
[64]: fnptr
[65]: _var
[66]: _object
[67]: _class
[68]: method
[69]: _nil
[70]: any
[71]: untyped
[72]: undefined
[73]: result_ok
[74]: result_ill_thread_start
[75]: result_thread_running
[76]: result_thread_terminated
[77]: result_invalid_stack_size
[78]: result_thread_not_started
[79]: result_ill_thread_join
[80]: result_thread_join_failed
[81]: result_ill_thread_interrupt
[82]: result_thread_interrupt_failed
[83]: result_ill_thread_destroy
[84]: result_thread_create_failed
[85]: result_no_thread_id
[86]: result_thread_destroy_failed
[87]: result_ill_priority_set
[88]: result_ill_thread_suspend
[89]: result_max_spin
[90]: enums
[91]: created
[92]: active
[93]: completed
[94]: cancelled
[95]: min_priority
[96]: norm_priority
[97]: max_priority
[98]: tm_seconds
[99]: tm_minutes
[100]: tm_hour
[101]: tm_mday
[102]: tm_mon
[103]: tm_year
[104]: tm_wday
[105]: tm_yday
[106]: tm_isdst
[107]: seconds
[108]: milliseconds
[109]: microseconds
[110]: nanoseconds
[111]: illegal char in string: 
[112]: key 
[113]:  value 
[114]: I'm a quick task!
[115]: I'm a delayed task!
[116]: I'm a joined task!
[117]: I'm a blocked task!
[118]: Hello
[119]: received: 

 constants: 

[0]: 2.7182818284590451e+00
[1]: 3.1415926535897931e+00
[2]: 1.0000000000000000e+00
[3]: 0.0000000000000000e+00
[4]: inf
[5]: -nan
[6]: -nan
[7]: 7.5000000000000000e-01
[8]: 5.0000000000000000e-01
[9]: 1.0000000000000000e+09
[10]: 2.5000000000000000e-01

 methods: 
constructor: pxo#pxp.pxq[0] params(0) in file: pxn:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: pxt#pxu.pxv[1] params(0) in file: pxs:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: qzv#qzw.qzx[2] params(0) in file: qzu:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std#qaf.qag[3] params(0) in file: qad:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io#qbq.qbr[4] params(0) in file: qbo:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: qed#qee.qef[5] params(0) in file: qec:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: qkn#qko.qkp[6] params(0) in file: qkm:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform.kernel#qlb.qlc[7] params(0) in file: qlz:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std#qaf.qar.qnw[8] params(1) in file: qap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#qaf.qar.qnx[9] params(0) in file: qap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2051 // <std#qaf.qat.tot>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#qaf.qar.qny[10] params(1) in file: qap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoz[11] params(1) in file: qap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoa[12] params(1) in file: qap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qob[13] params(1) in file: qap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoc[14] params(1) in file: qap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qod[15] params(1) in file: qap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoe[16] params(1) in file: qap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qof[17] params(1) in file: qap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qog[18] params(1) in file: qap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoh[19] params(1) in file: qap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoi[20] params(1) in file: qap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoj[21] params(1) in file: qap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qok[22] params(1) in file: qap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qol[23] params(1) in file: qap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qom[24] params(1) in file: qap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qon[25] params(1) in file: qap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoo[26] params(1) in file: qap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qop[27] params(1) in file: qap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoq[28] params(1) in file: qap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qor[29] params(1) in file: qap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qos[30] params(1) in file: qap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qot[31] params(1) in file: qap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qou[32] params(1) in file: qap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qov[33] params(1) in file: qap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qow[34] params(1) in file: qap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qox[35] params(1) in file: qap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qoy[36] params(1) in file: qap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpz[37] params(1) in file: qap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpa[38] params(1) in file: qap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpb[39] params(1) in file: qap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpc[40] params(1) in file: qap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpd[41] params(1) in file: qap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpe[42] params(1) in file: qap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.qpf[43] params(1) in file: qap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpg[44] params(1) in file: qap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qph[45] params(1) in file: qap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpi[46] params(1) in file: qap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpj[47] params(1) in file: qap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpk[48] params(1) in file: qap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpl[49] params(1) in file: qap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpm[50] params(1) in file: qap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpn[51] params(1) in file: qap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpo[52] params(1) in file: qap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpp[53] params(1) in file: qap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpq[54] params(1) in file: qap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.qpr[55] params(1) in file: qap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qps[56] params(1) in file: qap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpt[57] params(1) in file: qap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpu[58] params(1) in file: qap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpv[59] params(1) in file: qap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpw[60] params(1) in file: qap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpx[61] params(1) in file: qap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qpy[62] params(1) in file: qap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqz[63] params(1) in file: qap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqa[64] params(1) in file: qap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqb[65] params(1) in file: qap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqc[66] params(1) in file: qap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.qqd[67] params(1) in file: qap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqe[68] params(1) in file: qap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqf[69] params(1) in file: qap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqg[70] params(1) in file: qap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqh[71] params(1) in file: qap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqi[72] params(1) in file: qap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqj[73] params(1) in file: qap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqk[74] params(1) in file: qap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qql[75] params(1) in file: qap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqm[76] params(1) in file: qap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqn[77] params(1) in file: qap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqo[78] params(1) in file: qap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.qqp[79] params(1) in file: qap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqq[80] params(1) in file: qap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqr[81] params(1) in file: qap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqs[82] params(1) in file: qap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqt[83] params(1) in file: qap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqu[84] params(1) in file: qap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqv[85] params(1) in file: qap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqw[86] params(1) in file: qap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqx[87] params(1) in file: qap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qqy[88] params(1) in file: qap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qrz[89] params(1) in file: qap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qra[90] params(1) in file: qap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.qrb[91] params(1) in file: qap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrc[92] params(1) in file: qap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrd[93] params(1) in file: qap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qre[94] params(1) in file: qap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrf[95] params(1) in file: qap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrg[96] params(1) in file: qap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrh[97] params(1) in file: qap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qri[98] params(1) in file: qap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrj[99] params(1) in file: qap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrk[100] params(1) in file: qap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrl[101] params(1) in file: qap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrm[102] params(1) in file: qap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.qrn[103] params(1) in file: qap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qro[104] params(1) in file: qap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrp[105] params(1) in file: qap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrq[106] params(1) in file: qap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrr[107] params(1) in file: qap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrs[108] params(1) in file: qap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrt[109] params(1) in file: qap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qru[110] params(1) in file: qap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrv[111] params(1) in file: qap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrw[112] params(1) in file: qap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qrx[113] params(1) in file: qap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qry[114] params(1) in file: qap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.qsz[115] params(1) in file: qap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsa[116] params(1) in file: qap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsb[117] params(1) in file: qap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsc[118] params(1) in file: qap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsd[119] params(1) in file: qap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qse[120] params(1) in file: qap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsf[121] params(1) in file: qap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsg[122] params(1) in file: qap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsh[123] params(1) in file: qap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsi[124] params(1) in file: qap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsj[125] params(1) in file: qap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsk[126] params(1) in file: qap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.qsl[127] params(1) in file: qap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsm[128] params(1) in file: qap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsn[129] params(1) in file: qap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qso[130] params(1) in file: qap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsp[131] params(1) in file: qap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsq[132] params(1) in file: qap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsr[133] params(1) in file: qap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qss[134] params(1) in file: qap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qst[135] params(1) in file: qap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsu[136] params(1) in file: qap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsv[137] params(1) in file: qap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsw[138] params(1) in file: qap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.qsx[139] params(1) in file: qap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qsy[140] params(1) in file: qap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtz[141] params(1) in file: qap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qta[142] params(1) in file: qap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtb[143] params(1) in file: qap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtc[144] params(1) in file: qap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtd[145] params(1) in file: qap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qte[146] params(1) in file: qap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtf[147] params(1) in file: qap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtg[148] params(1) in file: qap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qth[149] params(1) in file: qap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qti[150] params(1) in file: qap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.qtj[151] params(1) in file: qap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtk[152] params(1) in file: qap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtl[153] params(1) in file: qap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtm[154] params(1) in file: qap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtn[155] params(1) in file: qap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qto[156] params(1) in file: qap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtp[157] params(1) in file: qap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtq[158] params(1) in file: qap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtr[159] params(1) in file: qap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qts[160] params(1) in file: qap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtt[161] params(1) in file: qap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtu[162] params(1) in file: qap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.qtv[163] params(1) in file: qap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtw[164] params(1) in file: qap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qtx[165] params(1) in file: qap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qty[166] params(1) in file: qap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quz[167] params(1) in file: qap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qua[168] params(1) in file: qap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qub[169] params(1) in file: qap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quc[170] params(1) in file: qap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qud[171] params(1) in file: qap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.que[172] params(1) in file: qap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quf[173] params(1) in file: qap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qug[174] params(1) in file: qap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.quh[175] params(1) in file: qap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qui[176] params(1) in file: qap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quj[177] params(1) in file: qap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quk[178] params(1) in file: qap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qul[179] params(1) in file: qap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qum[180] params(1) in file: qap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qun[181] params(1) in file: qap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quo[182] params(1) in file: qap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qup[183] params(1) in file: qap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quq[184] params(1) in file: qap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qur[185] params(1) in file: qap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qus[186] params(1) in file: qap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.qut[187] params(1) in file: qap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quu[188] params(1) in file: qap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quv[189] params(1) in file: qap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quw[190] params(1) in file: qap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qux[191] params(1) in file: qap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.quy[192] params(1) in file: qap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qvz[193] params(1) in file: qap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qva[194] params(1) in file: qap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qvb[195] params(1) in file: qap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qvc[196] params(1) in file: qap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qvd[197] params(1) in file: qap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.qve[198] params(1) in file: qap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.qvf[199] params(1) in file: qap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.qvg[200] params(1) in file: qap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.qvh[201] params(1) in file: qap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#qaf.qar.qvi[202] params(0) in file: qap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3515 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#qaf.qar.qvj[203] params(1) in file: qap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3431 // <std#qaf.vrb>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3516 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3497 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3497 // <std#string.at>   
47 [0x2f]:           call @2753 // <std#qaf.qbz.upt>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // pxo#pxp   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // pxo#pxp   
56 [0x38]:           movnd adx   
57 [0x39]:           dup    
58 [0x3a]:           newstr @111 // illegal char in string:    
59 [0x3b]:           call @3475 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3497 // <std#string.at>   
63 [0x3f]:           call @3508 // <std#string.operator+>   
64 [0x40]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu64 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3497 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu64 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu64 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#qaf.qar.qvk[204] params(0) in file: qap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // pxo#pxp   
1 [0x1]:           movu32 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvl[205] params(0) in file: qap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvm[206] params(0) in file: qap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // pxo#pxp   
1 [0x1]:           rstore adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvn[207] params(0) in file: qap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // pxo#pxp   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvo[208] params(0) in file: qap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // pxo#pxp   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvp[209] params(0) in file: qap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // pxo#pxp   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvq[210] params(0) in file: qap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // pxo#pxp   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvr[211] params(0) in file: qap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // pxo#pxp   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvs[212] params(0) in file: qap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // pxo#pxp   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvt[213] params(0) in file: qap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // pxo#pxp   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.qvu[214] params(0) in file: qap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // pxo#pxp   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#qaf.qar.qvv[215] params(0) in file: qap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#qaf.qar.qvw[216] params(0) in file: qap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#qaf.qar.qvy[217] params(1) in file: qap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#qaf.qar.qwz[218] params(0) in file: qap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2051 // <std#qaf.qat.tot>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#qaf.qar.qwa[219] params(1) in file: qap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwb[220] params(1) in file: qap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwc[221] params(1) in file: qap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwd[222] params(1) in file: qap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwe[223] params(1) in file: qap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwf[224] params(1) in file: qap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwg[225] params(1) in file: qap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwh[226] params(1) in file: qap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwi[227] params(1) in file: qap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwj[228] params(1) in file: qap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwk[229] params(1) in file: qap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwl[230] params(1) in file: qap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwm[231] params(1) in file: qap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwn[232] params(1) in file: qap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwo[233] params(1) in file: qap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwp[234] params(1) in file: qap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwq[235] params(1) in file: qap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwr[236] params(1) in file: qap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qws[237] params(1) in file: qap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwt[238] params(1) in file: qap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwu[239] params(1) in file: qap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwv[240] params(1) in file: qap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qww[241] params(1) in file: qap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwx[242] params(1) in file: qap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qwy[243] params(1) in file: qap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxz[244] params(1) in file: qap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxa[245] params(1) in file: qap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxb[246] params(1) in file: qap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxc[247] params(1) in file: qap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxd[248] params(1) in file: qap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxe[249] params(1) in file: qap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxf[250] params(1) in file: qap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxg[251] params(1) in file: qap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.qxh[252] params(1) in file: qap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxi[253] params(1) in file: qap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxj[254] params(1) in file: qap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxk[255] params(1) in file: qap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxl[256] params(1) in file: qap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxm[257] params(1) in file: qap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxn[258] params(1) in file: qap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxo[259] params(1) in file: qap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxp[260] params(1) in file: qap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxq[261] params(1) in file: qap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxr[262] params(1) in file: qap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxs[263] params(1) in file: qap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.qxt[264] params(1) in file: qap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxu[265] params(1) in file: qap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxv[266] params(1) in file: qap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxw[267] params(1) in file: qap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxx[268] params(1) in file: qap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qxy[269] params(1) in file: qap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyz[270] params(1) in file: qap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qya[271] params(1) in file: qap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyb[272] params(1) in file: qap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyc[273] params(1) in file: qap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyd[274] params(1) in file: qap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qye[275] params(1) in file: qap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.qyf[276] params(1) in file: qap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyg[277] params(1) in file: qap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyh[278] params(1) in file: qap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyi[279] params(1) in file: qap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyj[280] params(1) in file: qap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyk[281] params(1) in file: qap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyl[282] params(1) in file: qap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qym[283] params(1) in file: qap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyn[284] params(1) in file: qap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyo[285] params(1) in file: qap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyp[286] params(1) in file: qap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyq[287] params(1) in file: qap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.qyr[288] params(1) in file: qap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qys[289] params(1) in file: qap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyt[290] params(1) in file: qap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyu[291] params(1) in file: qap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyv[292] params(1) in file: qap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyw[293] params(1) in file: qap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyx[294] params(1) in file: qap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.qyy[295] params(1) in file: qap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rzz[296] params(1) in file: qap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rza[297] params(1) in file: qap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rzb[298] params(1) in file: qap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzc[299] params(1) in file: qap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rzd[300] params(1) in file: qap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rze[301] params(1) in file: qap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzf[302] params(1) in file: qap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzg[303] params(1) in file: qap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzh[304] params(1) in file: qap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzi[305] params(1) in file: qap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzj[306] params(1) in file: qap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzk[307] params(1) in file: qap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzl[308] params(1) in file: qap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzm[309] params(1) in file: qap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzn[310] params(1) in file: qap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzo[311] params(1) in file: qap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rzp[312] params(1) in file: qap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzq[313] params(1) in file: qap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzr[314] params(1) in file: qap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzs[315] params(1) in file: qap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzt[316] params(1) in file: qap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzu[317] params(1) in file: qap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzv[318] params(1) in file: qap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzw[319] params(1) in file: qap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzx[320] params(1) in file: qap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rzy[321] params(1) in file: qap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.raz[322] params(1) in file: qap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.raa[323] params(1) in file: qap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rab[324] params(1) in file: qap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rac[325] params(1) in file: qap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rad[326] params(1) in file: qap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rae[327] params(1) in file: qap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.raf[328] params(1) in file: qap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rag[329] params(1) in file: qap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rah[330] params(1) in file: qap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rai[331] params(1) in file: qap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.raj[332] params(1) in file: qap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rak[333] params(1) in file: qap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ral[334] params(1) in file: qap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ram[335] params(1) in file: qap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.ran[336] params(1) in file: qap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rao[337] params(1) in file: qap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rap[338] params(1) in file: qap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.raq[339] params(1) in file: qap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rar[340] params(1) in file: qap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.ras[341] params(1) in file: qap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rat[342] params(1) in file: qap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rau[343] params(1) in file: qap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rav[344] params(1) in file: qap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.raw[345] params(1) in file: qap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rax[346] params(1) in file: qap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.ray[347] params(1) in file: qap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rbz[348] params(1) in file: qap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rba[349] params(1) in file: qap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbb[350] params(1) in file: qap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbc[351] params(1) in file: qap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbd[352] params(1) in file: qap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbe[353] params(1) in file: qap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbf[354] params(1) in file: qap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbg[355] params(1) in file: qap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbh[356] params(1) in file: qap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbi[357] params(1) in file: qap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbj[358] params(1) in file: qap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbk[359] params(1) in file: qap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rbl[360] params(1) in file: qap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbm[361] params(1) in file: qap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbn[362] params(1) in file: qap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbo[363] params(1) in file: qap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbp[364] params(1) in file: qap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbq[365] params(1) in file: qap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbr[366] params(1) in file: qap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbs[367] params(1) in file: qap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbt[368] params(1) in file: qap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbu[369] params(1) in file: qap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbv[370] params(1) in file: qap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rbw[371] params(1) in file: qap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rbx[372] params(1) in file: qap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rby[373] params(1) in file: qap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcz[374] params(1) in file: qap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rca[375] params(1) in file: qap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcb[376] params(1) in file: qap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcc[377] params(1) in file: qap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcd[378] params(1) in file: qap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rce[379] params(1) in file: qap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcf[380] params(1) in file: qap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcg[381] params(1) in file: qap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rch[382] params(1) in file: qap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rci[383] params(1) in file: qap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rcj[384] params(1) in file: qap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rck[385] params(1) in file: qap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcl[386] params(1) in file: qap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcm[387] params(1) in file: qap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcn[388] params(1) in file: qap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rco[389] params(1) in file: qap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcp[390] params(1) in file: qap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcq[391] params(1) in file: qap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcr[392] params(1) in file: qap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcs[393] params(1) in file: qap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rct[394] params(1) in file: qap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcu[395] params(1) in file: qap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rcv[396] params(1) in file: qap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcw[397] params(1) in file: qap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcx[398] params(1) in file: qap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rcy[399] params(1) in file: qap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rdz[400] params(1) in file: qap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rda[401] params(1) in file: qap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rdb[402] params(1) in file: qap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rdc[403] params(1) in file: qap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rdd[404] params(1) in file: qap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rde[405] params(1) in file: qap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rdf[406] params(1) in file: qap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rdg[407] params(1) in file: qap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rdh[408] params(1) in file: qap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rdi[409] params(1) in file: qap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rdj[410] params(1) in file: qap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#qaf.qar.rdk[411] params(0) in file: qap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3511 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#qaf.qar.rdl[412] params(1) in file: qap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3431 // <std#qaf.vrb>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3516 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3497 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3497 // <std#string.at>   
47 [0x2f]:           call @2753 // <std#qaf.qbz.upt>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // pxo#pxp   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // pxo#pxp   
56 [0x38]:           movnd adx   
57 [0x39]:           dup    
58 [0x3a]:           newstr @111 // illegal char in string:    
59 [0x3b]:           call @3475 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3497 // <std#string.at>   
63 [0x3f]:           call @3508 // <std#string.operator+>   
64 [0x40]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov64 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3497 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov64 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov64 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#qaf.qar.rdm[413] params(0) in file: qap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // pxo#pxp   
1 [0x1]:           movu32 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rdn[414] params(0) in file: qap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rdo[415] params(0) in file: qap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // pxo#pxp   
1 [0x1]:           rstore adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rdp[416] params(0) in file: qap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // pxo#pxp   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rdq[417] params(0) in file: qap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // pxo#pxp   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rdr[418] params(0) in file: qap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // pxo#pxp   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rds[419] params(0) in file: qap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // pxo#pxp   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rdt[420] params(0) in file: qap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // pxo#pxp   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rdu[421] params(0) in file: qap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // pxo#pxp   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rdv[422] params(0) in file: qap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // pxo#pxp   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rdw[423] params(0) in file: qap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // pxo#pxp   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#qaf.qar.rdx[424] params(0) in file: qap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#qaf.qar.rdy[425] params(0) in file: qap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#qaf.qar.rea[426] params(1) in file: qap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#qaf.qar.reb[427] params(0) in file: qap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2051 // <std#qaf.qat.tot>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#qaf.qar.rec[428] params(1) in file: qap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.red[429] params(1) in file: qap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ree[430] params(1) in file: qap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ref[431] params(1) in file: qap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.reg[432] params(1) in file: qap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.reh[433] params(1) in file: qap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rei[434] params(1) in file: qap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rej[435] params(1) in file: qap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rek[436] params(1) in file: qap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rel[437] params(1) in file: qap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rem[438] params(1) in file: qap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ren[439] params(1) in file: qap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.reo[440] params(1) in file: qap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rep[441] params(1) in file: qap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.req[442] params(1) in file: qap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rer[443] params(1) in file: qap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.res[444] params(1) in file: qap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ret[445] params(1) in file: qap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.reu[446] params(1) in file: qap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rev[447] params(1) in file: qap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rew[448] params(1) in file: qap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rex[449] params(1) in file: qap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rey[450] params(1) in file: qap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfz[451] params(1) in file: qap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfa[452] params(1) in file: qap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfb[453] params(1) in file: qap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfc[454] params(1) in file: qap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfd[455] params(1) in file: qap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfe[456] params(1) in file: qap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rff[457] params(1) in file: qap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfg[458] params(1) in file: qap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfh[459] params(1) in file: qap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfi[460] params(1) in file: qap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rfj[461] params(1) in file: qap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfk[462] params(1) in file: qap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfl[463] params(1) in file: qap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfm[464] params(1) in file: qap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfn[465] params(1) in file: qap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfo[466] params(1) in file: qap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfp[467] params(1) in file: qap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfq[468] params(1) in file: qap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfr[469] params(1) in file: qap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfs[470] params(1) in file: qap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rft[471] params(1) in file: qap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfu[472] params(1) in file: qap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rfv[473] params(1) in file: qap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfw[474] params(1) in file: qap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfx[475] params(1) in file: qap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rfy[476] params(1) in file: qap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgz[477] params(1) in file: qap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rga[478] params(1) in file: qap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgb[479] params(1) in file: qap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgc[480] params(1) in file: qap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgd[481] params(1) in file: qap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rge[482] params(1) in file: qap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgf[483] params(1) in file: qap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgg[484] params(1) in file: qap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rgh[485] params(1) in file: qap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgi[486] params(1) in file: qap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgj[487] params(1) in file: qap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgk[488] params(1) in file: qap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgl[489] params(1) in file: qap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgm[490] params(1) in file: qap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgn[491] params(1) in file: qap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgo[492] params(1) in file: qap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgp[493] params(1) in file: qap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgq[494] params(1) in file: qap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgr[495] params(1) in file: qap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgs[496] params(1) in file: qap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rgt[497] params(1) in file: qap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgu[498] params(1) in file: qap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgv[499] params(1) in file: qap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgw[500] params(1) in file: qap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgx[501] params(1) in file: qap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rgy[502] params(1) in file: qap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rhz[503] params(1) in file: qap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rha[504] params(1) in file: qap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rhb[505] params(1) in file: qap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rhc[506] params(1) in file: qap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rhd[507] params(1) in file: qap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhe[508] params(1) in file: qap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rhf[509] params(1) in file: qap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhg[510] params(1) in file: qap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhh[511] params(1) in file: qap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhi[512] params(1) in file: qap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhj[513] params(1) in file: qap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhk[514] params(1) in file: qap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhl[515] params(1) in file: qap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhm[516] params(1) in file: qap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhn[517] params(1) in file: qap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rho[518] params(1) in file: qap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhp[519] params(1) in file: qap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhq[520] params(1) in file: qap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rhr[521] params(1) in file: qap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhs[522] params(1) in file: qap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rht[523] params(1) in file: qap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhu[524] params(1) in file: qap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhv[525] params(1) in file: qap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhw[526] params(1) in file: qap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhx[527] params(1) in file: qap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rhy[528] params(1) in file: qap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.riz[529] params(1) in file: qap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ria[530] params(1) in file: qap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rib[531] params(1) in file: qap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ric[532] params(1) in file: qap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rid[533] params(1) in file: qap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rie[534] params(1) in file: qap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rif[535] params(1) in file: qap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rig[536] params(1) in file: qap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rih[537] params(1) in file: qap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rii[538] params(1) in file: qap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rij[539] params(1) in file: qap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rik[540] params(1) in file: qap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ril[541] params(1) in file: qap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rim[542] params(1) in file: qap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rin[543] params(1) in file: qap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rio[544] params(1) in file: qap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rip[545] params(1) in file: qap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.riq[546] params(1) in file: qap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rir[547] params(1) in file: qap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.ris[548] params(1) in file: qap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rit[549] params(1) in file: qap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.riu[550] params(1) in file: qap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.riv[551] params(1) in file: qap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.riw[552] params(1) in file: qap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rix[553] params(1) in file: qap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.riy[554] params(1) in file: qap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjz[555] params(1) in file: qap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rja[556] params(1) in file: qap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rjb[557] params(1) in file: qap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjc[558] params(1) in file: qap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjd[559] params(1) in file: qap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rje[560] params(1) in file: qap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjf[561] params(1) in file: qap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjg[562] params(1) in file: qap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjh[563] params(1) in file: qap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rji[564] params(1) in file: qap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjj[565] params(1) in file: qap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjk[566] params(1) in file: qap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjl[567] params(1) in file: qap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjm[568] params(1) in file: qap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rjn[569] params(1) in file: qap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjo[570] params(1) in file: qap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjp[571] params(1) in file: qap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjq[572] params(1) in file: qap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjr[573] params(1) in file: qap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjs[574] params(1) in file: qap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjt[575] params(1) in file: qap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rju[576] params(1) in file: qap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjv[577] params(1) in file: qap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjw[578] params(1) in file: qap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjx[579] params(1) in file: qap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rjy[580] params(1) in file: qap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rkz[581] params(1) in file: qap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rka[582] params(1) in file: qap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkb[583] params(1) in file: qap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkc[584] params(1) in file: qap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkd[585] params(1) in file: qap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rke[586] params(1) in file: qap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkf[587] params(1) in file: qap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkg[588] params(1) in file: qap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkh[589] params(1) in file: qap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rki[590] params(1) in file: qap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkj[591] params(1) in file: qap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkk[592] params(1) in file: qap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rkl[593] params(1) in file: qap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkm[594] params(1) in file: qap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkn[595] params(1) in file: qap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rko[596] params(1) in file: qap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkp[597] params(1) in file: qap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkq[598] params(1) in file: qap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkr[599] params(1) in file: qap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rks[600] params(1) in file: qap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkt[601] params(1) in file: qap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rku[602] params(1) in file: qap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkv[603] params(1) in file: qap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rkw[604] params(1) in file: qap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rkx[605] params(1) in file: qap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rky[606] params(1) in file: qap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rlz[607] params(1) in file: qap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rla[608] params(1) in file: qap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rlb[609] params(1) in file: qap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rlc[610] params(1) in file: qap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rld[611] params(1) in file: qap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rle[612] params(1) in file: qap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rlf[613] params(1) in file: qap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rlg[614] params(1) in file: qap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rlh[615] params(1) in file: qap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rli[616] params(1) in file: qap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rlj[617] params(1) in file: qap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rlk[618] params(1) in file: qap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rll[619] params(1) in file: qap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#qaf.qar.rlm[620] params(0) in file: qap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3514 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#qaf.qar.rln[621] params(1) in file: qap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu32 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3431 // <std#qaf.vrb>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3516 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3497 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3497 // <std#string.at>   
47 [0x2f]:           call @2753 // <std#qaf.qbz.upt>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // pxo#pxp   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // pxo#pxp   
56 [0x38]:           movnd adx   
57 [0x39]:           dup    
58 [0x3a]:           newstr @111 // illegal char in string:    
59 [0x3b]:           call @3475 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3497 // <std#string.at>   
63 [0x3f]:           call @3508 // <std#string.operator+>   
64 [0x40]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu32 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3497 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu32 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu32 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#qaf.qar.rlo[622] params(0) in file: qap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // pxo#pxp   
1 [0x1]:           movu32 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rlp[623] params(0) in file: qap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rlq[624] params(0) in file: qap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // pxo#pxp   
1 [0x1]:           rstore adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rlr[625] params(0) in file: qap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // pxo#pxp   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rls[626] params(0) in file: qap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // pxo#pxp   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rlt[627] params(0) in file: qap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // pxo#pxp   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rlu[628] params(0) in file: qap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // pxo#pxp   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rlv[629] params(0) in file: qap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // pxo#pxp   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rlw[630] params(0) in file: qap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // pxo#pxp   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rlx[631] params(0) in file: qap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // pxo#pxp   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rly[632] params(0) in file: qap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // pxo#pxp   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#qaf.qar.rmz[633] params(0) in file: qap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#qaf.qar.rma[634] params(0) in file: qap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#qaf.qar.rmc[635] params(1) in file: qap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#qaf.qar.rmd[636] params(0) in file: qap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2051 // <std#qaf.qat.tot>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#qaf.qar.rme[637] params(1) in file: qap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmf[638] params(1) in file: qap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmg[639] params(1) in file: qap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmh[640] params(1) in file: qap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmi[641] params(1) in file: qap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmj[642] params(1) in file: qap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmk[643] params(1) in file: qap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rml[644] params(1) in file: qap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmm[645] params(1) in file: qap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmn[646] params(1) in file: qap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmo[647] params(1) in file: qap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmp[648] params(1) in file: qap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmq[649] params(1) in file: qap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmr[650] params(1) in file: qap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rms[651] params(1) in file: qap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmt[652] params(1) in file: qap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmu[653] params(1) in file: qap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmv[654] params(1) in file: qap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmw[655] params(1) in file: qap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmx[656] params(1) in file: qap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rmy[657] params(1) in file: qap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnz[658] params(1) in file: qap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rna[659] params(1) in file: qap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnb[660] params(1) in file: qap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnc[661] params(1) in file: qap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnd[662] params(1) in file: qap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rne[663] params(1) in file: qap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnf[664] params(1) in file: qap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rng[665] params(1) in file: qap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnh[666] params(1) in file: qap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rni[667] params(1) in file: qap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnj[668] params(1) in file: qap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnk[669] params(1) in file: qap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rnl[670] params(1) in file: qap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnm[671] params(1) in file: qap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnn[672] params(1) in file: qap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rno[673] params(1) in file: qap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnp[674] params(1) in file: qap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnq[675] params(1) in file: qap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnr[676] params(1) in file: qap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rns[677] params(1) in file: qap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnt[678] params(1) in file: qap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnu[679] params(1) in file: qap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnv[680] params(1) in file: qap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rnw[681] params(1) in file: qap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rnx[682] params(1) in file: qap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rny[683] params(1) in file: qap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.roz[684] params(1) in file: qap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.roa[685] params(1) in file: qap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rob[686] params(1) in file: qap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.roc[687] params(1) in file: qap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rod[688] params(1) in file: qap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.roe[689] params(1) in file: qap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rof[690] params(1) in file: qap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rog[691] params(1) in file: qap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.roh[692] params(1) in file: qap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.roi[693] params(1) in file: qap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.roj[694] params(1) in file: qap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rok[695] params(1) in file: qap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rol[696] params(1) in file: qap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rom[697] params(1) in file: qap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.ron[698] params(1) in file: qap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.roo[699] params(1) in file: qap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rop[700] params(1) in file: qap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.roq[701] params(1) in file: qap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.ror[702] params(1) in file: qap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.ros[703] params(1) in file: qap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rot[704] params(1) in file: qap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rou[705] params(1) in file: qap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rov[706] params(1) in file: qap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.row[707] params(1) in file: qap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rox[708] params(1) in file: qap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.roy[709] params(1) in file: qap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rpz[710] params(1) in file: qap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rpa[711] params(1) in file: qap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rpb[712] params(1) in file: qap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rpc[713] params(1) in file: qap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rpd[714] params(1) in file: qap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rpe[715] params(1) in file: qap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rpf[716] params(1) in file: qap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpg[717] params(1) in file: qap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rph[718] params(1) in file: qap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpi[719] params(1) in file: qap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpj[720] params(1) in file: qap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpk[721] params(1) in file: qap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpl[722] params(1) in file: qap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpm[723] params(1) in file: qap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpn[724] params(1) in file: qap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpo[725] params(1) in file: qap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpp[726] params(1) in file: qap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpq[727] params(1) in file: qap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpr[728] params(1) in file: qap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rps[729] params(1) in file: qap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rpt[730] params(1) in file: qap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpu[731] params(1) in file: qap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpv[732] params(1) in file: qap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpw[733] params(1) in file: qap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpx[734] params(1) in file: qap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rpy[735] params(1) in file: qap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqz[736] params(1) in file: qap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqa[737] params(1) in file: qap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqb[738] params(1) in file: qap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqc[739] params(1) in file: qap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqd[740] params(1) in file: qap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqe[741] params(1) in file: qap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rqf[742] params(1) in file: qap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqg[743] params(1) in file: qap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqh[744] params(1) in file: qap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqi[745] params(1) in file: qap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqj[746] params(1) in file: qap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqk[747] params(1) in file: qap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rql[748] params(1) in file: qap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqm[749] params(1) in file: qap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqn[750] params(1) in file: qap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqo[751] params(1) in file: qap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqp[752] params(1) in file: qap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqq[753] params(1) in file: qap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rqr[754] params(1) in file: qap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqs[755] params(1) in file: qap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqt[756] params(1) in file: qap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqu[757] params(1) in file: qap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqv[758] params(1) in file: qap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqw[759] params(1) in file: qap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqx[760] params(1) in file: qap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rqy[761] params(1) in file: qap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrz[762] params(1) in file: qap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rra[763] params(1) in file: qap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrb[764] params(1) in file: qap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrc[765] params(1) in file: qap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rrd[766] params(1) in file: qap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rre[767] params(1) in file: qap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrf[768] params(1) in file: qap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrg[769] params(1) in file: qap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrh[770] params(1) in file: qap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rri[771] params(1) in file: qap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrj[772] params(1) in file: qap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrk[773] params(1) in file: qap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrl[774] params(1) in file: qap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrm[775] params(1) in file: qap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrn[776] params(1) in file: qap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rro[777] params(1) in file: qap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rrp[778] params(1) in file: qap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrq[779] params(1) in file: qap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrr[780] params(1) in file: qap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrs[781] params(1) in file: qap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrt[782] params(1) in file: qap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rru[783] params(1) in file: qap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrv[784] params(1) in file: qap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrw[785] params(1) in file: qap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rrx[786] params(1) in file: qap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rry[787] params(1) in file: qap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsz[788] params(1) in file: qap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsa[789] params(1) in file: qap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rsb[790] params(1) in file: qap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsc[791] params(1) in file: qap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsd[792] params(1) in file: qap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rse[793] params(1) in file: qap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsf[794] params(1) in file: qap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsg[795] params(1) in file: qap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsh[796] params(1) in file: qap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsi[797] params(1) in file: qap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsj[798] params(1) in file: qap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsk[799] params(1) in file: qap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsl[800] params(1) in file: qap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsm[801] params(1) in file: qap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rsn[802] params(1) in file: qap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rso[803] params(1) in file: qap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsp[804] params(1) in file: qap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsq[805] params(1) in file: qap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsr[806] params(1) in file: qap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rss[807] params(1) in file: qap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rst[808] params(1) in file: qap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsu[809] params(1) in file: qap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsv[810] params(1) in file: qap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsw[811] params(1) in file: qap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsx[812] params(1) in file: qap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rsy[813] params(1) in file: qap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rtz[814] params(1) in file: qap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rta[815] params(1) in file: qap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rtb[816] params(1) in file: qap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rtc[817] params(1) in file: qap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rtd[818] params(1) in file: qap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rte[819] params(1) in file: qap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rtf[820] params(1) in file: qap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rtg[821] params(1) in file: qap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rth[822] params(1) in file: qap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rti[823] params(1) in file: qap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rtj[824] params(1) in file: qap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rtk[825] params(1) in file: qap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rtl[826] params(1) in file: qap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rtm[827] params(1) in file: qap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rtn[828] params(1) in file: qap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#qaf.qar.rto[829] params(0) in file: qap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3510 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#qaf.qar.rtp[830] params(1) in file: qap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov32 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3431 // <std#qaf.vrb>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3516 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3497 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3497 // <std#string.at>   
47 [0x2f]:           call @2753 // <std#qaf.qbz.upt>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // pxo#pxp   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // pxo#pxp   
56 [0x38]:           movnd adx   
57 [0x39]:           dup    
58 [0x3a]:           newstr @111 // illegal char in string:    
59 [0x3b]:           call @3475 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3497 // <std#string.at>   
63 [0x3f]:           call @3508 // <std#string.operator+>   
64 [0x40]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov32 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3497 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov32 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov32 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#qaf.qar.rtq[831] params(0) in file: qap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // pxo#pxp   
1 [0x1]:           movu32 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rtr[832] params(0) in file: qap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rts[833] params(0) in file: qap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // pxo#pxp   
1 [0x1]:           rstore adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rtt[834] params(0) in file: qap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // pxo#pxp   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rtu[835] params(0) in file: qap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // pxo#pxp   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rtv[836] params(0) in file: qap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // pxo#pxp   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rtw[837] params(0) in file: qap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // pxo#pxp   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rtx[838] params(0) in file: qap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // pxo#pxp   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rty[839] params(0) in file: qap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // pxo#pxp   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ruz[840] params(0) in file: qap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // pxo#pxp   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.rua[841] params(0) in file: qap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // pxo#pxp   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#qaf.qar.rub[842] params(0) in file: qap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#qaf.qar.ruc[843] params(0) in file: qap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#qaf.qar.rue[844] params(1) in file: qap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#qaf.qar.ruf[845] params(0) in file: qap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2051 // <std#qaf.qat.tot>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#qaf.qar.rug[846] params(1) in file: qap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ruh[847] params(1) in file: qap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rui[848] params(1) in file: qap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ruj[849] params(1) in file: qap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ruk[850] params(1) in file: qap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rul[851] params(1) in file: qap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rum[852] params(1) in file: qap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.run[853] params(1) in file: qap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ruo[854] params(1) in file: qap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rup[855] params(1) in file: qap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ruq[856] params(1) in file: qap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rur[857] params(1) in file: qap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rus[858] params(1) in file: qap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rut[859] params(1) in file: qap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ruu[860] params(1) in file: qap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ruv[861] params(1) in file: qap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ruw[862] params(1) in file: qap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rux[863] params(1) in file: qap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ruy[864] params(1) in file: qap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvz[865] params(1) in file: qap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rva[866] params(1) in file: qap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvb[867] params(1) in file: qap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvc[868] params(1) in file: qap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvd[869] params(1) in file: qap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rve[870] params(1) in file: qap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvf[871] params(1) in file: qap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvg[872] params(1) in file: qap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvh[873] params(1) in file: qap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvi[874] params(1) in file: qap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvj[875] params(1) in file: qap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvk[876] params(1) in file: qap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvl[877] params(1) in file: qap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvm[878] params(1) in file: qap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rvn[879] params(1) in file: qap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvo[880] params(1) in file: qap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvp[881] params(1) in file: qap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvq[882] params(1) in file: qap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvr[883] params(1) in file: qap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvs[884] params(1) in file: qap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvt[885] params(1) in file: qap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvu[886] params(1) in file: qap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvv[887] params(1) in file: qap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvw[888] params(1) in file: qap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvx[889] params(1) in file: qap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rvy[890] params(1) in file: qap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rwz[891] params(1) in file: qap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwa[892] params(1) in file: qap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwb[893] params(1) in file: qap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwc[894] params(1) in file: qap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwd[895] params(1) in file: qap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwe[896] params(1) in file: qap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwf[897] params(1) in file: qap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwg[898] params(1) in file: qap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwh[899] params(1) in file: qap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwi[900] params(1) in file: qap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwj[901] params(1) in file: qap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwk[902] params(1) in file: qap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rwl[903] params(1) in file: qap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwm[904] params(1) in file: qap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwn[905] params(1) in file: qap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwo[906] params(1) in file: qap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwp[907] params(1) in file: qap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwq[908] params(1) in file: qap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwr[909] params(1) in file: qap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rws[910] params(1) in file: qap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwt[911] params(1) in file: qap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwu[912] params(1) in file: qap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwv[913] params(1) in file: qap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rww[914] params(1) in file: qap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.rwx[915] params(1) in file: qap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rwy[916] params(1) in file: qap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rxz[917] params(1) in file: qap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rxa[918] params(1) in file: qap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rxb[919] params(1) in file: qap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rxc[920] params(1) in file: qap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rxd[921] params(1) in file: qap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rxe[922] params(1) in file: qap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rxf[923] params(1) in file: qap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rxg[924] params(1) in file: qap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.rxh[925] params(1) in file: qap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxi[926] params(1) in file: qap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.rxj[927] params(1) in file: qap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxk[928] params(1) in file: qap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxl[929] params(1) in file: qap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxm[930] params(1) in file: qap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxn[931] params(1) in file: qap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxo[932] params(1) in file: qap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxp[933] params(1) in file: qap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxq[934] params(1) in file: qap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxr[935] params(1) in file: qap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxs[936] params(1) in file: qap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxt[937] params(1) in file: qap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxu[938] params(1) in file: qap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.rxv[939] params(1) in file: qap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxw[940] params(1) in file: qap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxx[941] params(1) in file: qap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rxy[942] params(1) in file: qap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryz[943] params(1) in file: qap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rya[944] params(1) in file: qap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryb[945] params(1) in file: qap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryc[946] params(1) in file: qap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryd[947] params(1) in file: qap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rye[948] params(1) in file: qap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryf[949] params(1) in file: qap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryg[950] params(1) in file: qap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.ryh[951] params(1) in file: qap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryi[952] params(1) in file: qap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryj[953] params(1) in file: qap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryk[954] params(1) in file: qap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryl[955] params(1) in file: qap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rym[956] params(1) in file: qap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryn[957] params(1) in file: qap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryo[958] params(1) in file: qap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryp[959] params(1) in file: qap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryq[960] params(1) in file: qap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryr[961] params(1) in file: qap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.rys[962] params(1) in file: qap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.ryt[963] params(1) in file: qap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryu[964] params(1) in file: qap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryv[965] params(1) in file: qap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryw[966] params(1) in file: qap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryx[967] params(1) in file: qap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.ryy[968] params(1) in file: qap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szz[969] params(1) in file: qap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sza[970] params(1) in file: qap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szb[971] params(1) in file: qap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szc[972] params(1) in file: qap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szd[973] params(1) in file: qap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sze[974] params(1) in file: qap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.szf[975] params(1) in file: qap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szg[976] params(1) in file: qap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szh[977] params(1) in file: qap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szi[978] params(1) in file: qap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szj[979] params(1) in file: qap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szk[980] params(1) in file: qap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szl[981] params(1) in file: qap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szm[982] params(1) in file: qap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szn[983] params(1) in file: qap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szo[984] params(1) in file: qap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szp[985] params(1) in file: qap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szq[986] params(1) in file: qap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.szr[987] params(1) in file: qap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szs[988] params(1) in file: qap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szt[989] params(1) in file: qap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szu[990] params(1) in file: qap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szv[991] params(1) in file: qap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szw[992] params(1) in file: qap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szx[993] params(1) in file: qap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.szy[994] params(1) in file: qap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.saz[995] params(1) in file: qap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.saa[996] params(1) in file: qap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sab[997] params(1) in file: qap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sac[998] params(1) in file: qap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sad[999] params(1) in file: qap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sae[1000] params(1) in file: qap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.saf[1001] params(1) in file: qap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sag[1002] params(1) in file: qap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sah[1003] params(1) in file: qap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sai[1004] params(1) in file: qap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.saj[1005] params(1) in file: qap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sak[1006] params(1) in file: qap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sal[1007] params(1) in file: qap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sam[1008] params(1) in file: qap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.san[1009] params(1) in file: qap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sao[1010] params(1) in file: qap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sap[1011] params(1) in file: qap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.saq[1012] params(1) in file: qap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sar[1013] params(1) in file: qap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sas[1014] params(1) in file: qap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sat[1015] params(1) in file: qap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sau[1016] params(1) in file: qap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sav[1017] params(1) in file: qap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.saw[1018] params(1) in file: qap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sax[1019] params(1) in file: qap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.say[1020] params(1) in file: qap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbz[1021] params(1) in file: qap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sba[1022] params(1) in file: qap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sbb[1023] params(1) in file: qap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbc[1024] params(1) in file: qap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbd[1025] params(1) in file: qap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbe[1026] params(1) in file: qap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbf[1027] params(1) in file: qap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbg[1028] params(1) in file: qap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbh[1029] params(1) in file: qap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbi[1030] params(1) in file: qap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbj[1031] params(1) in file: qap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbk[1032] params(1) in file: qap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbl[1033] params(1) in file: qap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sbm[1034] params(1) in file: qap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sbn[1035] params(1) in file: qap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sbo[1036] params(1) in file: qap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sbp[1037] params(1) in file: qap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#qaf.qar.sbq[1038] params(0) in file: qap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3513 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#qaf.qar.sbr[1039] params(1) in file: qap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu16 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3431 // <std#qaf.vrb>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3516 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3497 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3497 // <std#string.at>   
47 [0x2f]:           call @2753 // <std#qaf.qbz.upt>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // pxo#pxp   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // pxo#pxp   
56 [0x38]:           movnd adx   
57 [0x39]:           dup    
58 [0x3a]:           newstr @111 // illegal char in string:    
59 [0x3b]:           call @3475 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3497 // <std#string.at>   
63 [0x3f]:           call @3508 // <std#string.operator+>   
64 [0x40]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu16 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3497 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu16 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu16 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#qaf.qar.sbs[1040] params(0) in file: qap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // pxo#pxp   
1 [0x1]:           movu32 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sbt[1041] params(0) in file: qap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sbu[1042] params(0) in file: qap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // pxo#pxp   
1 [0x1]:           rstore adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sbv[1043] params(0) in file: qap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // pxo#pxp   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sbw[1044] params(0) in file: qap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // pxo#pxp   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sbx[1045] params(0) in file: qap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // pxo#pxp   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sby[1046] params(0) in file: qap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // pxo#pxp   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.scz[1047] params(0) in file: qap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // pxo#pxp   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sca[1048] params(0) in file: qap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // pxo#pxp   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.scb[1049] params(0) in file: qap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // pxo#pxp   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.scc[1050] params(0) in file: qap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // pxo#pxp   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#qaf.qar.scd[1051] params(0) in file: qap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#qaf.qar.sce[1052] params(0) in file: qap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#qaf.qar.scg[1053] params(1) in file: qap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#qaf.qar.sch[1054] params(0) in file: qap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2051 // <std#qaf.qat.tot>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#qaf.qar.sci[1055] params(1) in file: qap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scj[1056] params(1) in file: qap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sck[1057] params(1) in file: qap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scl[1058] params(1) in file: qap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scm[1059] params(1) in file: qap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scn[1060] params(1) in file: qap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sco[1061] params(1) in file: qap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scp[1062] params(1) in file: qap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scq[1063] params(1) in file: qap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scr[1064] params(1) in file: qap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scs[1065] params(1) in file: qap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sct[1066] params(1) in file: qap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scu[1067] params(1) in file: qap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scv[1068] params(1) in file: qap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scw[1069] params(1) in file: qap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scx[1070] params(1) in file: qap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.scy[1071] params(1) in file: qap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdz[1072] params(1) in file: qap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sda[1073] params(1) in file: qap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdb[1074] params(1) in file: qap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdc[1075] params(1) in file: qap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdd[1076] params(1) in file: qap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sde[1077] params(1) in file: qap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdf[1078] params(1) in file: qap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdg[1079] params(1) in file: qap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdh[1080] params(1) in file: qap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdi[1081] params(1) in file: qap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdj[1082] params(1) in file: qap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdk[1083] params(1) in file: qap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdl[1084] params(1) in file: qap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdm[1085] params(1) in file: qap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdn[1086] params(1) in file: qap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdo[1087] params(1) in file: qap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.sdp[1088] params(1) in file: qap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdq[1089] params(1) in file: qap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdr[1090] params(1) in file: qap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sds[1091] params(1) in file: qap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdt[1092] params(1) in file: qap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdu[1093] params(1) in file: qap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdv[1094] params(1) in file: qap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdw[1095] params(1) in file: qap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdx[1096] params(1) in file: qap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sdy[1097] params(1) in file: qap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sez[1098] params(1) in file: qap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sea[1099] params(1) in file: qap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.seb[1100] params(1) in file: qap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sec[1101] params(1) in file: qap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sed[1102] params(1) in file: qap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.see[1103] params(1) in file: qap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sef[1104] params(1) in file: qap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.seg[1105] params(1) in file: qap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.seh[1106] params(1) in file: qap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sei[1107] params(1) in file: qap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sej[1108] params(1) in file: qap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sek[1109] params(1) in file: qap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sel[1110] params(1) in file: qap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sem[1111] params(1) in file: qap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.sen[1112] params(1) in file: qap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.seo[1113] params(1) in file: qap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sep[1114] params(1) in file: qap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.seq[1115] params(1) in file: qap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.ser[1116] params(1) in file: qap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.ses[1117] params(1) in file: qap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.set[1118] params(1) in file: qap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.seu[1119] params(1) in file: qap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sev[1120] params(1) in file: qap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sew[1121] params(1) in file: qap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sex[1122] params(1) in file: qap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sey[1123] params(1) in file: qap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.sfz[1124] params(1) in file: qap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sfa[1125] params(1) in file: qap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sfb[1126] params(1) in file: qap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sfc[1127] params(1) in file: qap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sfd[1128] params(1) in file: qap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sfe[1129] params(1) in file: qap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sff[1130] params(1) in file: qap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sfg[1131] params(1) in file: qap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sfh[1132] params(1) in file: qap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sfi[1133] params(1) in file: qap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sfj[1134] params(1) in file: qap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfk[1135] params(1) in file: qap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sfl[1136] params(1) in file: qap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfm[1137] params(1) in file: qap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfn[1138] params(1) in file: qap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfo[1139] params(1) in file: qap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfp[1140] params(1) in file: qap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfq[1141] params(1) in file: qap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfr[1142] params(1) in file: qap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfs[1143] params(1) in file: qap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sft[1144] params(1) in file: qap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfu[1145] params(1) in file: qap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfv[1146] params(1) in file: qap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfw[1147] params(1) in file: qap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sfx[1148] params(1) in file: qap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sfy[1149] params(1) in file: qap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgz[1150] params(1) in file: qap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sga[1151] params(1) in file: qap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgb[1152] params(1) in file: qap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgc[1153] params(1) in file: qap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgd[1154] params(1) in file: qap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sge[1155] params(1) in file: qap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgf[1156] params(1) in file: qap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgg[1157] params(1) in file: qap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgh[1158] params(1) in file: qap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgi[1159] params(1) in file: qap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sgj[1160] params(1) in file: qap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgk[1161] params(1) in file: qap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgl[1162] params(1) in file: qap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgm[1163] params(1) in file: qap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgn[1164] params(1) in file: qap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgo[1165] params(1) in file: qap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgp[1166] params(1) in file: qap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgq[1167] params(1) in file: qap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgr[1168] params(1) in file: qap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgs[1169] params(1) in file: qap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgt[1170] params(1) in file: qap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgu[1171] params(1) in file: qap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sgv[1172] params(1) in file: qap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgw[1173] params(1) in file: qap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgx[1174] params(1) in file: qap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sgy[1175] params(1) in file: qap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shz[1176] params(1) in file: qap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sha[1177] params(1) in file: qap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shb[1178] params(1) in file: qap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shc[1179] params(1) in file: qap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shd[1180] params(1) in file: qap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.she[1181] params(1) in file: qap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shf[1182] params(1) in file: qap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shg[1183] params(1) in file: qap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.shh[1184] params(1) in file: qap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shi[1185] params(1) in file: qap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shj[1186] params(1) in file: qap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shk[1187] params(1) in file: qap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shl[1188] params(1) in file: qap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shm[1189] params(1) in file: qap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shn[1190] params(1) in file: qap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sho[1191] params(1) in file: qap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shp[1192] params(1) in file: qap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shq[1193] params(1) in file: qap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shr[1194] params(1) in file: qap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shs[1195] params(1) in file: qap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sht[1196] params(1) in file: qap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shu[1197] params(1) in file: qap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shv[1198] params(1) in file: qap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shw[1199] params(1) in file: qap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shx[1200] params(1) in file: qap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.shy[1201] params(1) in file: qap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.siz[1202] params(1) in file: qap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sia[1203] params(1) in file: qap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sib[1204] params(1) in file: qap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sic[1205] params(1) in file: qap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sid[1206] params(1) in file: qap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sie[1207] params(1) in file: qap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sif[1208] params(1) in file: qap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sig[1209] params(1) in file: qap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sih[1210] params(1) in file: qap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sii[1211] params(1) in file: qap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sij[1212] params(1) in file: qap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sik[1213] params(1) in file: qap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sil[1214] params(1) in file: qap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sim[1215] params(1) in file: qap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sin[1216] params(1) in file: qap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sio[1217] params(1) in file: qap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sip[1218] params(1) in file: qap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.siq[1219] params(1) in file: qap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sir[1220] params(1) in file: qap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sis[1221] params(1) in file: qap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sit[1222] params(1) in file: qap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.siu[1223] params(1) in file: qap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.siv[1224] params(1) in file: qap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.siw[1225] params(1) in file: qap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.six[1226] params(1) in file: qap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.siy[1227] params(1) in file: qap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjz[1228] params(1) in file: qap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sja[1229] params(1) in file: qap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjb[1230] params(1) in file: qap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjc[1231] params(1) in file: qap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sjd[1232] params(1) in file: qap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sje[1233] params(1) in file: qap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjf[1234] params(1) in file: qap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjg[1235] params(1) in file: qap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjh[1236] params(1) in file: qap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sji[1237] params(1) in file: qap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjj[1238] params(1) in file: qap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjk[1239] params(1) in file: qap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjl[1240] params(1) in file: qap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjm[1241] params(1) in file: qap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjn[1242] params(1) in file: qap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sjo[1243] params(1) in file: qap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sjp[1244] params(1) in file: qap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sjq[1245] params(1) in file: qap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sjr[1246] params(1) in file: qap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#qaf.qar.sjs[1247] params(0) in file: qap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3509 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#qaf.qar.sjt[1248] params(1) in file: qap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov16 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3431 // <std#qaf.vrb>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3516 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3497 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3497 // <std#string.at>   
47 [0x2f]:           call @2753 // <std#qaf.qbz.upt>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // pxo#pxp   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // pxo#pxp   
56 [0x38]:           movnd adx   
57 [0x39]:           dup    
58 [0x3a]:           newstr @111 // illegal char in string:    
59 [0x3b]:           call @3475 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3497 // <std#string.at>   
63 [0x3f]:           call @3508 // <std#string.operator+>   
64 [0x40]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov16 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3497 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov16 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov16 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#qaf.qar.sju[1249] params(0) in file: qap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // pxo#pxp   
1 [0x1]:           movu32 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sjv[1250] params(0) in file: qap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sjw[1251] params(0) in file: qap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // pxo#pxp   
1 [0x1]:           rstore adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sjx[1252] params(0) in file: qap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // pxo#pxp   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sjy[1253] params(0) in file: qap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // pxo#pxp   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.skz[1254] params(0) in file: qap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // pxo#pxp   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ska[1255] params(0) in file: qap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // pxo#pxp   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.skb[1256] params(0) in file: qap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // pxo#pxp   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.skc[1257] params(0) in file: qap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // pxo#pxp   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.skd[1258] params(0) in file: qap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // pxo#pxp   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ske[1259] params(0) in file: qap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // pxo#pxp   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#qaf.qar.skf[1260] params(0) in file: qap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#qaf.qar.skg[1261] params(0) in file: qap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#qaf.qar.ski[1262] params(1) in file: qap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#qaf.qar.skj[1263] params(0) in file: qap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2051 // <std#qaf.qat.tot>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#qaf.qar.skk[1264] params(1) in file: qap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skl[1265] params(1) in file: qap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skm[1266] params(1) in file: qap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skn[1267] params(1) in file: qap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sko[1268] params(1) in file: qap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skp[1269] params(1) in file: qap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skq[1270] params(1) in file: qap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skr[1271] params(1) in file: qap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sks[1272] params(1) in file: qap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skt[1273] params(1) in file: qap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sku[1274] params(1) in file: qap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skv[1275] params(1) in file: qap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skw[1276] params(1) in file: qap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.skx[1277] params(1) in file: qap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sky[1278] params(1) in file: qap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.slz[1279] params(1) in file: qap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sla[1280] params(1) in file: qap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.slb[1281] params(1) in file: qap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.slc[1282] params(1) in file: qap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sld[1283] params(1) in file: qap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sle[1284] params(1) in file: qap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.slf[1285] params(1) in file: qap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slg[1286] params(1) in file: qap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slh[1287] params(1) in file: qap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sli[1288] params(1) in file: qap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slj[1289] params(1) in file: qap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slk[1290] params(1) in file: qap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sll[1291] params(1) in file: qap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slm[1292] params(1) in file: qap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sln[1293] params(1) in file: qap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slo[1294] params(1) in file: qap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slp[1295] params(1) in file: qap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slq[1296] params(1) in file: qap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.slr[1297] params(1) in file: qap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sls[1298] params(1) in file: qap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slt[1299] params(1) in file: qap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slu[1300] params(1) in file: qap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slv[1301] params(1) in file: qap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slw[1302] params(1) in file: qap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.slx[1303] params(1) in file: qap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sly[1304] params(1) in file: qap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smz[1305] params(1) in file: qap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sma[1306] params(1) in file: qap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smb[1307] params(1) in file: qap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smc[1308] params(1) in file: qap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.smd[1309] params(1) in file: qap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sme[1310] params(1) in file: qap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smf[1311] params(1) in file: qap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smg[1312] params(1) in file: qap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smh[1313] params(1) in file: qap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smi[1314] params(1) in file: qap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smj[1315] params(1) in file: qap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smk[1316] params(1) in file: qap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sml[1317] params(1) in file: qap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smm[1318] params(1) in file: qap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smn[1319] params(1) in file: qap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smo[1320] params(1) in file: qap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.smp[1321] params(1) in file: qap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smq[1322] params(1) in file: qap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smr[1323] params(1) in file: qap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sms[1324] params(1) in file: qap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smt[1325] params(1) in file: qap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smu[1326] params(1) in file: qap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smv[1327] params(1) in file: qap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smw[1328] params(1) in file: qap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smx[1329] params(1) in file: qap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.smy[1330] params(1) in file: qap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.snz[1331] params(1) in file: qap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sna[1332] params(1) in file: qap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.snb[1333] params(1) in file: qap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.snc[1334] params(1) in file: qap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.snd[1335] params(1) in file: qap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sne[1336] params(1) in file: qap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.snf[1337] params(1) in file: qap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sng[1338] params(1) in file: qap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.snh[1339] params(1) in file: qap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sni[1340] params(1) in file: qap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.snj[1341] params(1) in file: qap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.snk[1342] params(1) in file: qap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.snl[1343] params(1) in file: qap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.snm[1344] params(1) in file: qap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.snn[1345] params(1) in file: qap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sno[1346] params(1) in file: qap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.snp[1347] params(1) in file: qap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.snq[1348] params(1) in file: qap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.snr[1349] params(1) in file: qap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sns[1350] params(1) in file: qap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.snt[1351] params(1) in file: qap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.snu[1352] params(1) in file: qap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.snv[1353] params(1) in file: qap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.snw[1354] params(1) in file: qap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.snx[1355] params(1) in file: qap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sny[1356] params(1) in file: qap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.soz[1357] params(1) in file: qap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.soa[1358] params(1) in file: qap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sob[1359] params(1) in file: qap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.soc[1360] params(1) in file: qap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sod[1361] params(1) in file: qap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.soe[1362] params(1) in file: qap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sof[1363] params(1) in file: qap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sog[1364] params(1) in file: qap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.soh[1365] params(1) in file: qap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.soi[1366] params(1) in file: qap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.soj[1367] params(1) in file: qap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sok[1368] params(1) in file: qap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sol[1369] params(1) in file: qap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.som[1370] params(1) in file: qap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.son[1371] params(1) in file: qap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.soo[1372] params(1) in file: qap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sop[1373] params(1) in file: qap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.soq[1374] params(1) in file: qap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sor[1375] params(1) in file: qap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sos[1376] params(1) in file: qap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sot[1377] params(1) in file: qap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sou[1378] params(1) in file: qap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sov[1379] params(1) in file: qap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sow[1380] params(1) in file: qap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sox[1381] params(1) in file: qap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.soy[1382] params(1) in file: qap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spz[1383] params(1) in file: qap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spa[1384] params(1) in file: qap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spb[1385] params(1) in file: qap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spc[1386] params(1) in file: qap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spd[1387] params(1) in file: qap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spe[1388] params(1) in file: qap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spf[1389] params(1) in file: qap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spg[1390] params(1) in file: qap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sph[1391] params(1) in file: qap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spi[1392] params(1) in file: qap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.spj[1393] params(1) in file: qap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spk[1394] params(1) in file: qap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spl[1395] params(1) in file: qap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spm[1396] params(1) in file: qap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spn[1397] params(1) in file: qap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spo[1398] params(1) in file: qap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spp[1399] params(1) in file: qap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spq[1400] params(1) in file: qap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spr[1401] params(1) in file: qap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sps[1402] params(1) in file: qap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spt[1403] params(1) in file: qap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spu[1404] params(1) in file: qap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.spv[1405] params(1) in file: qap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spw[1406] params(1) in file: qap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spx[1407] params(1) in file: qap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.spy[1408] params(1) in file: qap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqz[1409] params(1) in file: qap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqa[1410] params(1) in file: qap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqb[1411] params(1) in file: qap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqc[1412] params(1) in file: qap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqd[1413] params(1) in file: qap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqe[1414] params(1) in file: qap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqf[1415] params(1) in file: qap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqg[1416] params(1) in file: qap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sqh[1417] params(1) in file: qap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqi[1418] params(1) in file: qap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqj[1419] params(1) in file: qap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqk[1420] params(1) in file: qap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sql[1421] params(1) in file: qap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqm[1422] params(1) in file: qap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqn[1423] params(1) in file: qap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqo[1424] params(1) in file: qap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqp[1425] params(1) in file: qap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqq[1426] params(1) in file: qap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqr[1427] params(1) in file: qap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqs[1428] params(1) in file: qap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sqt[1429] params(1) in file: qap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.squ[1430] params(1) in file: qap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqv[1431] params(1) in file: qap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqw[1432] params(1) in file: qap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqx[1433] params(1) in file: qap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sqy[1434] params(1) in file: qap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srz[1435] params(1) in file: qap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sra[1436] params(1) in file: qap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srb[1437] params(1) in file: qap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.src[1438] params(1) in file: qap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srd[1439] params(1) in file: qap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sre[1440] params(1) in file: qap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.srf[1441] params(1) in file: qap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srg[1442] params(1) in file: qap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srh[1443] params(1) in file: qap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sri[1444] params(1) in file: qap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srj[1445] params(1) in file: qap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srk[1446] params(1) in file: qap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srl[1447] params(1) in file: qap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srm[1448] params(1) in file: qap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srn[1449] params(1) in file: qap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sro[1450] params(1) in file: qap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srp[1451] params(1) in file: qap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.srq[1452] params(1) in file: qap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.srr[1453] params(1) in file: qap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.srs[1454] params(1) in file: qap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.srt[1455] params(1) in file: qap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#qaf.qar.sru[1456] params(0) in file: qap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3512 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#qaf.qar.srv[1457] params(1) in file: qap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu8 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3431 // <std#qaf.vrb>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3516 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3497 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3497 // <std#string.at>   
47 [0x2f]:           call @2753 // <std#qaf.qbz.upt>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // pxo#pxp   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // pxo#pxp   
56 [0x38]:           movnd adx   
57 [0x39]:           dup    
58 [0x3a]:           newstr @111 // illegal char in string:    
59 [0x3b]:           call @3475 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3497 // <std#string.at>   
63 [0x3f]:           call @3508 // <std#string.operator+>   
64 [0x40]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu8 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3497 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu8 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu8 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#qaf.qar.srw[1458] params(0) in file: qap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // pxo#pxp   
1 [0x1]:           movu32 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.srx[1459] params(0) in file: qap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sry[1460] params(0) in file: qap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // pxo#pxp   
1 [0x1]:           rstore adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ssz[1461] params(0) in file: qap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // pxo#pxp   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ssa[1462] params(0) in file: qap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // pxo#pxp   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ssb[1463] params(0) in file: qap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // pxo#pxp   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ssc[1464] params(0) in file: qap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // pxo#pxp   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ssd[1465] params(0) in file: qap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // pxo#pxp   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.sse[1466] params(0) in file: qap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // pxo#pxp   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ssf[1467] params(0) in file: qap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // pxo#pxp   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.ssg[1468] params(0) in file: qap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // pxo#pxp   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#qaf.qar.ssh[1469] params(0) in file: qap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#qaf.qar.ssi[1470] params(0) in file: qap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#qaf.qar.ssk[1471] params(1) in file: qap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#qaf.qar.ssl[1472] params(0) in file: qap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2051 // <std#qaf.qat.tot>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#qaf.qar.ssm[1473] params(1) in file: qap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ssn[1474] params(1) in file: qap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sso[1475] params(1) in file: qap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ssp[1476] params(1) in file: qap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ssq[1477] params(1) in file: qap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ssr[1478] params(1) in file: qap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sss[1479] params(1) in file: qap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sst[1480] params(1) in file: qap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ssu[1481] params(1) in file: qap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ssv[1482] params(1) in file: qap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ssw[1483] params(1) in file: qap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ssx[1484] params(1) in file: qap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ssy[1485] params(1) in file: qap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.stz[1486] params(1) in file: qap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sta[1487] params(1) in file: qap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.stb[1488] params(1) in file: qap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.stc[1489] params(1) in file: qap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.std[1490] params(1) in file: qap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.ste[1491] params(1) in file: qap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.stf[1492] params(1) in file: qap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.stg[1493] params(1) in file: qap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.sth[1494] params(1) in file: qap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sti[1495] params(1) in file: qap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stj[1496] params(1) in file: qap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stk[1497] params(1) in file: qap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stl[1498] params(1) in file: qap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stm[1499] params(1) in file: qap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stn[1500] params(1) in file: qap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sto[1501] params(1) in file: qap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stp[1502] params(1) in file: qap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stq[1503] params(1) in file: qap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.str[1504] params(1) in file: qap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sts[1505] params(1) in file: qap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.stt[1506] params(1) in file: qap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stu[1507] params(1) in file: qap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stv[1508] params(1) in file: qap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stw[1509] params(1) in file: qap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.stx[1510] params(1) in file: qap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sty[1511] params(1) in file: qap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suz[1512] params(1) in file: qap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sua[1513] params(1) in file: qap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sub[1514] params(1) in file: qap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suc[1515] params(1) in file: qap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sud[1516] params(1) in file: qap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sue[1517] params(1) in file: qap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.suf[1518] params(1) in file: qap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sug[1519] params(1) in file: qap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suh[1520] params(1) in file: qap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sui[1521] params(1) in file: qap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suj[1522] params(1) in file: qap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suk[1523] params(1) in file: qap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sul[1524] params(1) in file: qap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sum[1525] params(1) in file: qap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sun[1526] params(1) in file: qap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suo[1527] params(1) in file: qap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sup[1528] params(1) in file: qap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suq[1529] params(1) in file: qap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.sur[1530] params(1) in file: qap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sus[1531] params(1) in file: qap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sut[1532] params(1) in file: qap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suu[1533] params(1) in file: qap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suv[1534] params(1) in file: qap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suw[1535] params(1) in file: qap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sux[1536] params(1) in file: qap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.suy[1537] params(1) in file: qap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svz[1538] params(1) in file: qap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sva[1539] params(1) in file: qap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svb[1540] params(1) in file: qap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svc[1541] params(1) in file: qap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.svd[1542] params(1) in file: qap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.sve[1543] params(1) in file: qap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svf[1544] params(1) in file: qap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svg[1545] params(1) in file: qap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svh[1546] params(1) in file: qap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svi[1547] params(1) in file: qap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svj[1548] params(1) in file: qap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svk[1549] params(1) in file: qap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svl[1550] params(1) in file: qap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svm[1551] params(1) in file: qap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.svn[1552] params(1) in file: qap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.svo[1553] params(1) in file: qap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.svp[1554] params(1) in file: qap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.svq[1555] params(1) in file: qap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.svr[1556] params(1) in file: qap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.svs[1557] params(1) in file: qap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.svt[1558] params(1) in file: qap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.svu[1559] params(1) in file: qap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.svv[1560] params(1) in file: qap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.svw[1561] params(1) in file: qap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.svx[1562] params(1) in file: qap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.svy[1563] params(1) in file: qap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swz[1564] params(1) in file: qap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swa[1565] params(1) in file: qap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.swb[1566] params(1) in file: qap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swc[1567] params(1) in file: qap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swd[1568] params(1) in file: qap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swe[1569] params(1) in file: qap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swf[1570] params(1) in file: qap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swg[1571] params(1) in file: qap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swh[1572] params(1) in file: qap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swi[1573] params(1) in file: qap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swj[1574] params(1) in file: qap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swk[1575] params(1) in file: qap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swl[1576] params(1) in file: qap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swm[1577] params(1) in file: qap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.swn[1578] params(1) in file: qap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swo[1579] params(1) in file: qap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swp[1580] params(1) in file: qap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swq[1581] params(1) in file: qap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swr[1582] params(1) in file: qap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sws[1583] params(1) in file: qap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swt[1584] params(1) in file: qap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swu[1585] params(1) in file: qap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swv[1586] params(1) in file: qap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.sww[1587] params(1) in file: qap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swx[1588] params(1) in file: qap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.swy[1589] params(1) in file: qap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.sxz[1590] params(1) in file: qap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxa[1591] params(1) in file: qap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxb[1592] params(1) in file: qap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxc[1593] params(1) in file: qap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxd[1594] params(1) in file: qap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxe[1595] params(1) in file: qap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxf[1596] params(1) in file: qap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxg[1597] params(1) in file: qap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxh[1598] params(1) in file: qap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxi[1599] params(1) in file: qap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxj[1600] params(1) in file: qap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxk[1601] params(1) in file: qap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sxl[1602] params(1) in file: qap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxm[1603] params(1) in file: qap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxn[1604] params(1) in file: qap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxo[1605] params(1) in file: qap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxp[1606] params(1) in file: qap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxq[1607] params(1) in file: qap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxr[1608] params(1) in file: qap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxs[1609] params(1) in file: qap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxt[1610] params(1) in file: qap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxu[1611] params(1) in file: qap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxv[1612] params(1) in file: qap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxw[1613] params(1) in file: qap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.sxx[1614] params(1) in file: qap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sxy[1615] params(1) in file: qap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syz[1616] params(1) in file: qap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sya[1617] params(1) in file: qap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syb[1618] params(1) in file: qap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syc[1619] params(1) in file: qap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syd[1620] params(1) in file: qap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sye[1621] params(1) in file: qap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syf[1622] params(1) in file: qap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syg[1623] params(1) in file: qap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syh[1624] params(1) in file: qap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syi[1625] params(1) in file: qap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.syj[1626] params(1) in file: qap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syk[1627] params(1) in file: qap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syl[1628] params(1) in file: qap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sym[1629] params(1) in file: qap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syn[1630] params(1) in file: qap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syo[1631] params(1) in file: qap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syp[1632] params(1) in file: qap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syq[1633] params(1) in file: qap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syr[1634] params(1) in file: qap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.sys[1635] params(1) in file: qap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syt[1636] params(1) in file: qap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syu[1637] params(1) in file: qap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.syv[1638] params(1) in file: qap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syw[1639] params(1) in file: qap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syx[1640] params(1) in file: qap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.syy[1641] params(1) in file: qap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzz[1642] params(1) in file: qap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tza[1643] params(1) in file: qap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzb[1644] params(1) in file: qap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzc[1645] params(1) in file: qap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzd[1646] params(1) in file: qap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tze[1647] params(1) in file: qap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzf[1648] params(1) in file: qap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzg[1649] params(1) in file: qap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.tzh[1650] params(1) in file: qap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzi[1651] params(1) in file: qap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzj[1652] params(1) in file: qap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzk[1653] params(1) in file: qap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzl[1654] params(1) in file: qap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzm[1655] params(1) in file: qap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzn[1656] params(1) in file: qap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzo[1657] params(1) in file: qap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzp[1658] params(1) in file: qap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzq[1659] params(1) in file: qap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzr[1660] params(1) in file: qap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tzs[1661] params(1) in file: qap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.tzt[1662] params(1) in file: qap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.tzu[1663] params(1) in file: qap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.tzv[1664] params(1) in file: qap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#qaf.qar.tzw[1665] params(0) in file: qap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3508 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#qaf.qar.tzx[1666] params(1) in file: qap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov8 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @3431 // <std#qaf.vrb>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3516 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3497 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3497 // <std#string.at>   
47 [0x2f]:           call @2753 // <std#qaf.qbz.upt>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // pxo#pxp   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // pxo#pxp   
56 [0x38]:           movnd adx   
57 [0x39]:           dup    
58 [0x3a]:           newstr @111 // illegal char in string:    
59 [0x3b]:           call @3475 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3497 // <std#string.at>   
63 [0x3f]:           call @3508 // <std#string.operator+>   
64 [0x40]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov8 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3497 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov8 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov8 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#qaf.qar.tzy[1667] params(0) in file: qap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // pxo#pxp   
1 [0x1]:           movu32 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.taz[1668] params(0) in file: qap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.taa[1669] params(0) in file: qap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // pxo#pxp   
1 [0x1]:           rstore adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tab[1670] params(0) in file: qap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // pxo#pxp   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tac[1671] params(0) in file: qap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // pxo#pxp   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tad[1672] params(0) in file: qap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // pxo#pxp   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tae[1673] params(0) in file: qap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // pxo#pxp   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.taf[1674] params(0) in file: qap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // pxo#pxp   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tag[1675] params(0) in file: qap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // pxo#pxp   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tah[1676] params(0) in file: qap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // pxo#pxp   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tai[1677] params(0) in file: qap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // pxo#pxp   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#qaf.qar.taj[1678] params(0) in file: qap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#qaf.qar.tak[1679] params(0) in file: qap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#qaf.qar.tam[1680] params(1) in file: qap:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#qaf.qar.tan[1681] params(0) in file: qap:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2051 // <std#qaf.qat.tot>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#qaf.qar.tao[1682] params(1) in file: qap:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tap[1683] params(1) in file: qap:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.taq[1684] params(1) in file: qap:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tar[1685] params(1) in file: qap:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tas[1686] params(1) in file: qap:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tat[1687] params(1) in file: qap:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tau[1688] params(1) in file: qap:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tav[1689] params(1) in file: qap:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.taw[1690] params(1) in file: qap:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tax[1691] params(1) in file: qap:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tay[1692] params(1) in file: qap:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbz[1693] params(1) in file: qap:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tba[1694] params(1) in file: qap:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbb[1695] params(1) in file: qap:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbc[1696] params(1) in file: qap:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbd[1697] params(1) in file: qap:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbe[1698] params(1) in file: qap:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbf[1699] params(1) in file: qap:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbg[1700] params(1) in file: qap:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbh[1701] params(1) in file: qap:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbi[1702] params(1) in file: qap:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbj[1703] params(1) in file: qap:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbk[1704] params(1) in file: qap:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbl[1705] params(1) in file: qap:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbm[1706] params(1) in file: qap:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbn[1707] params(1) in file: qap:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbo[1708] params(1) in file: qap:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbp[1709] params(1) in file: qap:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbq[1710] params(1) in file: qap:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbr[1711] params(1) in file: qap:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbs[1712] params(1) in file: qap:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbt[1713] params(1) in file: qap:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbu[1714] params(1) in file: qap:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.tbv[1715] params(1) in file: qap:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbw[1716] params(1) in file: qap:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tbx[1717] params(1) in file: qap:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tby[1718] params(1) in file: qap:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcz[1719] params(1) in file: qap:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tca[1720] params(1) in file: qap:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcb[1721] params(1) in file: qap:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcc[1722] params(1) in file: qap:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcd[1723] params(1) in file: qap:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tce[1724] params(1) in file: qap:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcf[1725] params(1) in file: qap:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcg[1726] params(1) in file: qap:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.tch[1727] params(1) in file: qap:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tci[1728] params(1) in file: qap:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcj[1729] params(1) in file: qap:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tck[1730] params(1) in file: qap:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcl[1731] params(1) in file: qap:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcm[1732] params(1) in file: qap:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcn[1733] params(1) in file: qap:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tco[1734] params(1) in file: qap:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcp[1735] params(1) in file: qap:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcq[1736] params(1) in file: qap:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcr[1737] params(1) in file: qap:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcs[1738] params(1) in file: qap:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.tct[1739] params(1) in file: qap:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcu[1740] params(1) in file: qap:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcv[1741] params(1) in file: qap:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcw[1742] params(1) in file: qap:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcx[1743] params(1) in file: qap:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tcy[1744] params(1) in file: qap:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdz[1745] params(1) in file: qap:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tda[1746] params(1) in file: qap:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdb[1747] params(1) in file: qap:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdc[1748] params(1) in file: qap:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdd[1749] params(1) in file: qap:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tde[1750] params(1) in file: qap:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#qaf.qar.tdf[1751] params(1) in file: qap:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdg[1752] params(1) in file: qap:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdh[1753] params(1) in file: qap:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdi[1754] params(1) in file: qap:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdj[1755] params(1) in file: qap:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdk[1756] params(1) in file: qap:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdl[1757] params(1) in file: qap:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdm[1758] params(1) in file: qap:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdn[1759] params(1) in file: qap:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdo[1760] params(1) in file: qap:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#qaf.qar.tdp[1761] params(1) in file: qap:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tdq[1762] params(1) in file: qap:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.tdr[1763] params(1) in file: qap:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tds[1764] params(1) in file: qap:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tdt[1765] params(1) in file: qap:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tdu[1766] params(1) in file: qap:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tdv[1767] params(1) in file: qap:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tdw[1768] params(1) in file: qap:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tdx[1769] params(1) in file: qap:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tdy[1770] params(1) in file: qap:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tez[1771] params(1) in file: qap:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tea[1772] params(1) in file: qap:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.teb[1773] params(1) in file: qap:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tec[1774] params(1) in file: qap:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.ted[1775] params(1) in file: qap:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tee[1776] params(1) in file: qap:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tef[1777] params(1) in file: qap:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.teg[1778] params(1) in file: qap:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.teh[1779] params(1) in file: qap:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tei[1780] params(1) in file: qap:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tej[1781] params(1) in file: qap:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tek[1782] params(1) in file: qap:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tel[1783] params(1) in file: qap:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tem[1784] params(1) in file: qap:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ten[1785] params(1) in file: qap:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.teo[1786] params(1) in file: qap:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.tep[1787] params(1) in file: qap:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.teq[1788] params(1) in file: qap:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.ter[1789] params(1) in file: qap:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tes[1790] params(1) in file: qap:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tet[1791] params(1) in file: qap:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.teu[1792] params(1) in file: qap:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tev[1793] params(1) in file: qap:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tew[1794] params(1) in file: qap:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tex[1795] params(1) in file: qap:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tey[1796] params(1) in file: qap:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfz[1797] params(1) in file: qap:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfa[1798] params(1) in file: qap:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.tfb[1799] params(1) in file: qap:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfc[1800] params(1) in file: qap:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfd[1801] params(1) in file: qap:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfe[1802] params(1) in file: qap:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tff[1803] params(1) in file: qap:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfg[1804] params(1) in file: qap:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfh[1805] params(1) in file: qap:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfi[1806] params(1) in file: qap:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfj[1807] params(1) in file: qap:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfk[1808] params(1) in file: qap:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfl[1809] params(1) in file: qap:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfm[1810] params(1) in file: qap:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.tfn[1811] params(1) in file: qap:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfo[1812] params(1) in file: qap:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfp[1813] params(1) in file: qap:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfq[1814] params(1) in file: qap:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfr[1815] params(1) in file: qap:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfs[1816] params(1) in file: qap:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tft[1817] params(1) in file: qap:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfu[1818] params(1) in file: qap:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfv[1819] params(1) in file: qap:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfw[1820] params(1) in file: qap:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfx[1821] params(1) in file: qap:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tfy[1822] params(1) in file: qap:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.tgz[1823] params(1) in file: qap:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tga[1824] params(1) in file: qap:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgb[1825] params(1) in file: qap:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgc[1826] params(1) in file: qap:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgd[1827] params(1) in file: qap:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tge[1828] params(1) in file: qap:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgf[1829] params(1) in file: qap:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgg[1830] params(1) in file: qap:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgh[1831] params(1) in file: qap:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgi[1832] params(1) in file: qap:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgj[1833] params(1) in file: qap:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgk[1834] params(1) in file: qap:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.tgl[1835] params(1) in file: qap:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgm[1836] params(1) in file: qap:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgn[1837] params(1) in file: qap:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgo[1838] params(1) in file: qap:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgp[1839] params(1) in file: qap:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgq[1840] params(1) in file: qap:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgr[1841] params(1) in file: qap:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgs[1842] params(1) in file: qap:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgt[1843] params(1) in file: qap:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgu[1844] params(1) in file: qap:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgv[1845] params(1) in file: qap:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgw[1846] params(1) in file: qap:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.tgx[1847] params(1) in file: qap:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tgy[1848] params(1) in file: qap:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thz[1849] params(1) in file: qap:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tha[1850] params(1) in file: qap:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thb[1851] params(1) in file: qap:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thc[1852] params(1) in file: qap:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thd[1853] params(1) in file: qap:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.the[1854] params(1) in file: qap:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thf[1855] params(1) in file: qap:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thg[1856] params(1) in file: qap:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thh[1857] params(1) in file: qap:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thi[1858] params(1) in file: qap:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.thj[1859] params(1) in file: qap:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thk[1860] params(1) in file: qap:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thl[1861] params(1) in file: qap:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thm[1862] params(1) in file: qap:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thn[1863] params(1) in file: qap:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tho[1864] params(1) in file: qap:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thp[1865] params(1) in file: qap:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thq[1866] params(1) in file: qap:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thr[1867] params(1) in file: qap:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.ths[1868] params(1) in file: qap:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.tht[1869] params(1) in file: qap:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#qaf.qar.thu[1870] params(1) in file: qap:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#qaf.qar.thv[1871] params(1) in file: qap:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.thw[1872] params(1) in file: qap:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#qaf.qar.thx[1873] params(1) in file: qap:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std#qaf.qar.thy[1874] params(0) in file: qap:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3507 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#qaf.qar.tiz[1875] params(1) in file: qap:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 istorel 0, fp+1   
2 [0x2]: line: 231 movi #1, ebx   
4 [0x4]:           movr cmt, ebx   
5 [0x5]:           jne 12   
6 [0x6]: line: 232 pushl 0   
7 [0x7]:           call @3431 // <std#qaf.vrb>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   
11 [0xb]:           jmp @93   
12 [0xc]: line: 234 istorel 0, fp+2   
14 [0xe]: line: 235 istorel 0, fp+3   
16 [0x10]: line: 236 pushl 0   
17 [0x11]:           call @3516 // <std#string.size>   
18 [0x12]:           ipopl 4   
19 [0x13]: line: 238 pushl 0   
20 [0x14]:           istore 0   
22 [0x16]:           call @3497 // <std#string.at>   
23 [0x17]:           loadval ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           movi #45, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           test ecx, ebx   
29 [0x1d]:           jne 34   
30 [0x1e]: line: 239 istorel 1, fp+3   
32 [0x20]: line: 240 istorel 1, fp+2   
34 [0x22]:           nop   
35 [0x23]: line: 243 ipushl #2   
36 [0x24]:           loadl ebx, fp+4   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 83   
42 [0x2a]: line: 244 pushl 0   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           call @3497 // <std#string.at>   
45 [0x2d]:           call @2753 // <std#qaf.qbz.upt>   
46 [0x2e]:           loadval ebx   
47 [0x2f]:           not ebx, ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 64   
50 [0x32]: line: 245 new_class @0 // pxo#pxp   
51 [0x33]:           skip @0 // pc = 51   
52 [0x34]:           dup    
53 [0x35]:           new_class @0 // pxo#pxp   
54 [0x36]:           movnd adx   
55 [0x37]:           dup    
56 [0x38]:           newstr @111 // illegal char in string:    
57 [0x39]:           call @3475 // <std#string.string>   
58 [0x3a]:           pushl 0   
59 [0x3b]:           ipushl #2   
60 [0x3c]:           call @3497 // <std#string.at>   
61 [0x3d]:           call @3508 // <std#string.operator+>   
62 [0x3e]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
63 [0x3f]:           throw    
64 [0x40]:           nop   
65 [0x41]: line: 249 movi #10, ebx   
67 [0x43]:           mull ebx, fp@1   
68 [0x44]: line: 250 pushl 0   
69 [0x45]:           loadl ebx, fp+2   
70 [0x46]:           movr egx, ebx   
71 [0x47]:           inc ebx   
72 [0x48]:           smovr_2 ebx, fp+2   
73 [0x49]:           rstore egx   
74 [0x4a]:           call @3497 // <std#string.at>   
75 [0x4b]:           loadval ebx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           movi #48, ebx   
79 [0x4f]:           loadval ecx   
80 [0x50]:           sub ecx, ebx -> ebx   
81 [0x51]:           addl ebx, fp@1   
82 [0x52]:           jmp @35   
83 [0x53]: line: 252 loadl ebx, fp+3   
84 [0x54]:           movr cmt, ebx   
85 [0x55]:           jne 89   
86 [0x56]: line: 253 loadl ebx, fp+1   
87 [0x57]:           neg ebx, ebx   
88 [0x58]:           smovr_2 ebx, fp+1   
89 [0x59]:           nop   
90 [0x5a]: line: 254 loadl ebx, fp+1   
91 [0x5b]:           return_val ebx   
92 [0x5c]:           ret   
93 [0x5d]:           nop   


function: std#qaf.qar.tia[1876] params(0) in file: qap:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // pxo#pxp   
1 [0x1]:           movu32 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tib[1877] params(0) in file: qap:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tic[1878] params(0) in file: qap:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // pxo#pxp   
1 [0x1]:           rstore adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tid[1879] params(0) in file: qap:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // pxo#pxp   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tie[1880] params(0) in file: qap:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // pxo#pxp   
1 [0x1]:           sub adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tif[1881] params(0) in file: qap:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // pxo#pxp   
1 [0x1]:           mul adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tig[1882] params(0) in file: qap:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // pxo#pxp   
1 [0x1]:           div adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tih[1883] params(0) in file: qap:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // pxo#pxp   
1 [0x1]:           mod adx, adx -> adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tii[1884] params(0) in file: qap:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // pxo#pxp   
1 [0x1]:           iadd adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tij[1885] params(0) in file: qap:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // pxo#pxp   
1 [0x1]:           isub adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#qaf.qar.tik[1886] params(0) in file: qap:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // pxo#pxp   
1 [0x1]:           imul adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#qaf.qar.til[1887] params(0) in file: qap:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#qaf.qar.tim[1888] params(0) in file: qap:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std#qaf.qke.tin[1889] params(0) in file: qbd:4:8: note:  
		
		       ^



constructor: std#qaf.qke.tio[1890] params(0) in file: qbd:3:10: note:  
		import std.io;
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std.io#qbq.qke.tip[1891] params(0) in file: qce:4:8: note:  
			
		       ^



constructor: std.io#qbq.qke.tiq[1892] params(0) in file: qce:3:10: note:  
		public class thread_group : loopable<thread> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: pxo#pxp.tir[1893] params(0) in file: pxn:14:4: note:  
		def quick_task() {
		   ^

0 [0x0]: line: 15 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          istore 3777   
6 [0x6]:          call @3215 // <qed#qee.qeo.vhu>   
7 [0x7]:          pop   
8 [0x8]: line: 19 istore 500   
10 [0xa]:          call @3330 // <std.io#thread.sleep>   
11 [0xb]:          ret   


function: pxo#pxp.tis[1894] params(0) in file: pxn:25:4: note:  
		def delayed_task() {
		   ^

0 [0x0]: line: 26 call @3263 // <qed#qee.qgy.vju>   
1 [0x1]:          istore 3000   
3 [0x3]:          call @3203 // <qed#qee.qeg.vhd>   
4 [0x4]:          istore 3778   
6 [0x6]:          call @3209 // <qed#qee.qeg.vhk>   
7 [0x7]:          pop   
8 [0x8]: line: 30 istore 3500   
10 [0xa]:          call @3330 // <std.io#thread.sleep>   
11 [0xb]:          ret   


function: pxo#pxp.tit[1895] params(0) in file: pxn:36:4: note:  
		def joined_task() {
		   ^

0 [0x0]: line: 37 call @3263 // <qed#qee.qgy.vju>   
1 [0x1]:          istore 1000   
3 [0x3]:          call @3203 // <qed#qee.qeg.vhd>   
4 [0x4]:          istore 3779   
6 [0x6]:          call @3209 // <qed#qee.qeg.vhk>   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+0   
9 [0x9]: line: 41 pushl 0   
10 [0xa]:          call @3227 // <qed#qee.qew.vig>   
11 [0xb]:          ret   


function: pxo#pxp.tiu[1896] params(0) in file: pxn:48:4: note:  
		def blocked_task() {
		   ^

0 [0x0]: line: 49 call @3263 // <qed#qee.qgy.vju>   
1 [0x1]:          new_class @0 // pxo#pxp   
2 [0x2]:          movnd adx   
3 [0x3]:          dup    
4 [0x4]:          newstr @4 // blocking task   
5 [0x5]:          call @3475 // <std#string.string>   
6 [0x6]:          call @3205 // <qed#qee.qeg.vhf>   
7 [0x7]:          call @3207 // <qed#qee.qeg.vhh>   
8 [0x8]:          istore 3780   
10 [0xa]:          call @3209 // <qed#qee.qeg.vhk>   
11 [0xb]:          popobj2    
12 [0xc]:          smovr_3 fp+0   
13 [0xd]:          ret   


function: pxo#pxp.tiv[1897] params(0) in file: pxn:60:4: note:  
		def args_task() {
		   ^

0 [0x0]: line: 61 new_class @0 // pxo#pxp   
1 [0x1]:          movnd adx   
2 [0x2]:          dup    
3 [0x3]:          newstr @5 // Hello, world!   
4 [0x4]:          call @3475 // <std#string.string>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 63 call @3263 // <qed#qee.qgy.vju>   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          new_classarray ebx  // std#string[]   
12 [0xc]:          pushl 0   
13 [0xd]:          movsl #-1   
14 [0xe]:          movn #0   
16 [0x10]:          popobj   
17 [0x11]:          call @3206 // <qed#qee.qeg.vhg>   
18 [0x12]:          call @3207 // <qed#qee.qeg.vhh>   
19 [0x13]:          istore 3781   
21 [0x15]:          call @3210 // <qed#qee.qeg.vhm>   
22 [0x16]:          popobj2    
23 [0x17]:          smovr_3 fp+1   
24 [0x18]:          ret   


function: pxo#pxp.tiw[1898] params(0) in file: pxn:77:4: note:  
		def timeout_task() {
		   ^

0 [0x0]: line: 79 call @3263 // <qed#qee.qgy.vju>   
1 [0x1]:          istore 1000   
3 [0x3]:          call @3202 // <qed#qee.qeg.vhc>   
4 [0x4]:          istore 3782   
6 [0x6]:          call @3209 // <qed#qee.qeg.vhk>   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+0   
9 [0x9]: line: 85 istore 1250   
11 [0xb]:          call @3330 // <std.io#thread.sleep>   
12 [0xc]: line: 86 new_class @0 // pxo#pxp   
13 [0xd]:          movnd adx   
14 [0xe]:          dup    
15 [0xf]:          newstr @6 // alive =    
16 [0x10]:          call @3475 // <std#string.string>   
17 [0x11]:          movg @0 // @pxo#pxp   
18 [0x12]:          movn #0   
20 [0x14]:          pushobj   
21 [0x15]:          call @3489 // <std#string.operator+>   
22 [0x16]:          call @3452 // <std#qaf.vrw>   
23 [0x17]:          ret   


function: pxo#pxp.tix[1899] params(0) in file: pxn:98:4: note:  
		def recurring_task() {
		   ^

0 [0x0]: line: 99 call @3263 // <qed#qee.qgy.vju>   
1 [0x1]:          istore 1000   
3 [0x3]:          movg @47 // @std#qaf.qjx   
4 [0x4]:          movn #1   
6 [0x6]:          pushobj   
7 [0x7]:          call @3204 // <qed#qee.qeg.vhe>   
8 [0x8]:          istore 3783   
10 [0xa]:          call @3209 // <qed#qee.qeg.vhk>   
11 [0xb]:          popobj2    
12 [0xc]:          smovr_3 fp+0   
13 [0xd]: line: 104 istore 3000   
15 [0xf]:           call @3330 // <std.io#thread.sleep>   
16 [0x10]:           ret   


function: pxo#pxp.tiy[1900] params(0) in file: pxn:111:4: note:  
		def _deferred_task() {
		   ^

0 [0x0]: line: 113 new_class @0 // pxo#pxp   
1 [0x1]:           pushnull    
2 [0x2]:           dup    
3 [0x3]:           call @3859 // <pxo#pxp.qfv.wyy>   
4 [0x4]:           call @3263 // <qed#qee.qgy.vju>   
5 [0x5]:           new_class @0 // pxo#pxp   
6 [0x6]:           movnd adx   
7 [0x7]:           dup    
8 [0x8]:           newstr @12 // deferred task   
9 [0x9]:           call @3475 // <std#string.string>   
10 [0xa]:           call @3205 // <qed#qee.qeg.vhf>   
11 [0xb]:           istore 1000   
13 [0xd]:           call @3202 // <qed#qee.qeg.vhc>   
14 [0xe]:           istore 3860   
16 [0x10]:           call @3856 // <pxo#pxp.qfv.wyq>   
17 [0x11]:           popobj2    
18 [0x12]:           smovr_3 fp+0   
19 [0x13]: line: 124 istore 250   
21 [0x15]:           call @3330 // <std.io#thread.sleep>   
22 [0x16]: line: 125 new_class @0 // pxo#pxp   
23 [0x17]:           movnd adx   
24 [0x18]:           dup    
25 [0x19]:           newstr @13 // the value is =    
26 [0x1a]:           call @3475 // <std#string.string>   
27 [0x1b]:           pushl 0   
28 [0x1c]:           call @3853 // <pxo#pxp.qgf.wyd>   
29 [0x1d]:           call @3507 // <std#string.operator+>   
30 [0x1e]:           call @3452 // <std#qaf.vrw>   
31 [0x1f]:           ret   


function: pxo#pxp.tjz[1901] params(0) in file: pxn:132:4: note:  
		def streamed_task() {
		   ^

0 [0x0]: line: 134 new_class @0 // pxo#pxp   
1 [0x1]:           pushnull    
2 [0x2]:           dup    
3 [0x3]:           call @3859 // <pxo#pxp.qfv.wyy>   
4 [0x4]:           call @3263 // <qed#qee.qgy.vju>   
5 [0x5]:           istore 3861   
7 [0x7]:           call @3856 // <pxo#pxp.qfv.wyq>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+0   
10 [0xa]: line: 146 pushl 0   
11 [0xb]:           istore 3862   
13 [0xd]:           call @3786 // <pxo#pxp.qel.wly>   
14 [0xe]: line: 154 istore 5500   
16 [0x10]:           call @3330 // <std.io#thread.sleep>   
17 [0x11]:           ret   


function: pxo#pxp.tja[1902] params(0) in file: pxn:166:4: note:  
		def main() {
		   ^

0 [0x0]: line: 167 istorel 0, fp+0   
2 [0x2]: line: 168 ipushl #0   
3 [0x3]:           movi #0, ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           test ecx, ebx   
7 [0x7]:           jne 10   
8 [0x8]: line: 169 call @1893 // <pxo#pxp.tir>   
9 [0x9]:           jmp @73   
10 [0xa]:           ipushl #0   
11 [0xb]:           movi #1, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           jne 18   
16 [0x10]: line: 170 call @1894 // <pxo#pxp.tis>   
17 [0x11]:           jmp @73   
18 [0x12]:           ipushl #0   
19 [0x13]:           movi #2, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           test ecx, ebx   
23 [0x17]:           jne 26   
24 [0x18]: line: 171 call @1895 // <pxo#pxp.tit>   
25 [0x19]:           jmp @73   
26 [0x1a]:           ipushl #0   
27 [0x1b]:           movi #3, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 34   
32 [0x20]: line: 172 call @1896 // <pxo#pxp.tiu>   
33 [0x21]:           jmp @73   
34 [0x22]:           ipushl #0   
35 [0x23]:           movi #4, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           test ecx, ebx   
39 [0x27]:           jne 42   
40 [0x28]: line: 173 call @1897 // <pxo#pxp.tiv>   
41 [0x29]:           jmp @73   
42 [0x2a]:           ipushl #0   
43 [0x2b]:           movi #5, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           test ecx, ebx   
47 [0x2f]:           jne 50   
48 [0x30]: line: 174 call @1898 // <pxo#pxp.tiw>   
49 [0x31]:           jmp @73   
50 [0x32]:           ipushl #0   
51 [0x33]:           movi #6, ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           test ecx, ebx   
55 [0x37]:           jne 58   
56 [0x38]: line: 175 call @1899 // <pxo#pxp.tix>   
57 [0x39]:           jmp @73   
58 [0x3a]:           ipushl #0   
59 [0x3b]:           movi #7, ebx   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           test ecx, ebx   
63 [0x3f]:           jne 66   
64 [0x40]: line: 176 call @1900 // <pxo#pxp.tiy>   
65 [0x41]:           jmp @73   
66 [0x42]:           ipushl #0   
67 [0x43]:           movi #8, ebx   
69 [0x45]:           loadval ecx   
70 [0x46]:           test ecx, ebx   
71 [0x47]:           jne 73   
72 [0x48]: line: 177 call @1901 // <pxo#pxp.tjz>   
73 [0x49]:           nop   
74 [0x4a]:           ret   


constructor: pxt#pxu.pxw.tjb[1903] params(0) in file: pxs:4:6: note:  
		class _class_ base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1909 // <pxt#pxu.pyv.tjh>   
2 [0x2]:         ret   


constructor: pxt#pxu.pyd.tjc[1904] params(0) in file: pxx:11:6: note:  
		class data_property base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1909 // <pxt#pxu.pyv.tjh>   
2 [0x2]:         ret   


constructor: pxt#pxu.pyg.tjd[1905] params(0) in file: pye:4:6: note:  
		class function base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1909 // <pxt#pxu.pyv.tjh>   
2 [0x2]:         ret   


constructor: pxt#pxu.pyj.tje[1906] params(0) in file: pyh:4:6: note:  
		class field {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: pxt#pxu.pyo.tjf[1907] params(1) in file: pym:16:12: note:  
		    reflect(ref_obj : object) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 17 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          ret   


constructor: pxt#pxu.pyo.tjg[1908] params(0) in file: pym:3:6: note:  
		class reflect {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: pxt#pxu.pyv.tjh[1909] params(0) in file: pyt:4:6: note:  
		class data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: qzv#qzw.tji[1910] params(1) in file: qzu:44:18: note:  
		public static def is_nan(v: var): var {
		                 ^

0 [0x0]: line: 45 ipushl #0   
1 [0x1]:          loadl ebx, fp+0   
2 [0x2]:          loadval ecx   
3 [0x3]:          tne ecx, ebx   
4 [0x4]:          return_val cmt   
5 [0x5]:          ret   


function: qzv#qzw.tjj[1911] params(1) in file: qzu:56:18: note:  
		public static def is_infinite(v: var): var {
		                 ^

0 [0x0]: line: 57 ipushl #0   
1 [0x1]:          ldc ebx // inf   
2 [0x2]:          loadval ecx   
3 [0x3]:          test ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          skpe ebx // pc = 11   
6 [0x6]:          ipushl #0   
7 [0x7]:          movi #-2147483648, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: qzv#qzw.tjk[1912] params(1) in file: qzu:60:4: note:  
		def sin(num: var) : var {
		   ^

0 [0x0]: line: 61 ipushl #0   
1 [0x1]:          istore 0   
3 [0x3]:          call @1934 // <qzv#qzw.tkg>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: qzv#qzw.tjl[1913] params(1) in file: qzu:64:4: note:  
		def cos(num: var) : var {
		   ^

0 [0x0]: line: 65 ipushl #0   
1 [0x1]:          istore 1   
3 [0x3]:          call @1934 // <qzv#qzw.tkg>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: qzv#qzw.tjm[1914] params(1) in file: qzu:68:4: note:  
		def tan(num: var) : var {
		   ^

0 [0x0]: line: 69 ipushl #0   
1 [0x1]:          istore 2   
3 [0x3]:          call @1934 // <qzv#qzw.tkg>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: qzv#qzw.tjn[1915] params(1) in file: qzu:72:4: note:  
		def sinh(num: var) : var {
		   ^

0 [0x0]: line: 73 ipushl #0   
1 [0x1]:          istore 3   
3 [0x3]:          call @1934 // <qzv#qzw.tkg>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: qzv#qzw.tjo[1916] params(1) in file: qzu:76:4: note:  
		def cosh(num: var) : var {
		   ^

0 [0x0]: line: 77 ipushl #0   
1 [0x1]:          istore 4   
3 [0x3]:          call @1934 // <qzv#qzw.tkg>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: qzv#qzw.tjp[1917] params(1) in file: qzu:80:4: note:  
		def tanh(num: var) : var {
		   ^

0 [0x0]: line: 81 ipushl #0   
1 [0x1]:          istore 5   
3 [0x3]:          call @1934 // <qzv#qzw.tkg>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: qzv#qzw.tjq[1918] params(1) in file: qzu:84:4: note:  
		def asin(num: var) : var {
		   ^

0 [0x0]: line: 85 ipushl #0   
1 [0x1]:          istore 6   
3 [0x3]:          call @1934 // <qzv#qzw.tkg>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: qzv#qzw.tjr[1919] params(1) in file: qzu:88:4: note:  
		def acos(num: var) : var {
		   ^

0 [0x0]: line: 89 ipushl #0   
1 [0x1]:          istore 7   
3 [0x3]:          call @1934 // <qzv#qzw.tkg>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: qzv#qzw.tjs[1920] params(1) in file: qzu:92:4: note:  
		def atan(num: var) : var {
		   ^

0 [0x0]: line: 93 ipushl #0   
1 [0x1]:          istore 8   
3 [0x3]:          call @1934 // <qzv#qzw.tkg>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: qzv#qzw.tjt[1921] params(2) in file: qzu:96:4: note:  
		def atan(num1: var, num2: var) : var {
		   ^

0 [0x0]: line: 97 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          istore 9   
4 [0x4]:          call @1935 // <qzv#qzw.tkh>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: qzv#qzw.tju[1922] params(1) in file: qzu:100:4: note:  
		def exp(num: var) : var {
		   ^

0 [0x0]: line: 101 ipushl #0   
1 [0x1]:           istore 10   
3 [0x3]:           call @1934 // <qzv#qzw.tkg>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: qzv#qzw.tjv[1923] params(1) in file: qzu:104:4: note:  
		def log(num: var) : var {
		   ^

0 [0x0]: line: 105 ipushl #0   
1 [0x1]:           istore 11   
3 [0x3]:           call @1934 // <qzv#qzw.tkg>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: qzv#qzw.tjw[1924] params(1) in file: qzu:108:4: note:  
		def log10(num: var) : var {
		   ^

0 [0x0]: line: 109 ipushl #0   
1 [0x1]:           istore 12   
3 [0x3]:           call @1934 // <qzv#qzw.tkg>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: qzv#qzw.tjx[1925] params(2) in file: qzu:112:4: note:  
		def pow(num: var, exp: var) : var {
		   ^

0 [0x0]: line: 113 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 13   
4 [0x4]:           call @1935 // <qzv#qzw.tkh>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: qzv#qzw.tjy[1926] params(1) in file: qzu:116:4: note:  
		def sqrt(num: var) : var {
		   ^

0 [0x0]: line: 117 ipushl #0   
1 [0x1]:           istore 14   
3 [0x3]:           call @1934 // <qzv#qzw.tkg>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: qzv#qzw.tkz[1927] params(1) in file: qzu:120:4: note:  
		def ceil(num: var) : var {
		   ^

0 [0x0]: line: 121 ipushl #0   
1 [0x1]:           istore 15   
3 [0x3]:           call @1934 // <qzv#qzw.tkg>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: qzv#qzw.tka[1928] params(1) in file: qzu:124:4: note:  
		def floor(num: var) : var {
		   ^

0 [0x0]: line: 125 ipushl #0   
1 [0x1]:           istore 16   
3 [0x3]:           call @1934 // <qzv#qzw.tkg>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: qzv#qzw.tkb[1929] params(1) in file: qzu:128:4: note:  
		def abs(num: var) : var {
		   ^

0 [0x0]: line: 129 ipushl #0   
1 [0x1]:           call @1930 // <qzv#qzw.tkc>   
2 [0x2]:           loadval ebx   
3 [0x3]:           return_val ebx   
4 [0x4]:           ret   


function: qzv#qzw.tkc[1930] params(1) in file: qzu:132:12: note:  
		private def fabs(num: var) : var {
		           ^

0 [0x0]: line: 133 ipushl #0   
1 [0x1]:           istore 17   
3 [0x3]:           call @1934 // <qzv#qzw.tkg>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: qzv#qzw.tkd[1931] params(2) in file: qzu:136:4: note:  
		def ldexp(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 137 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 18   
4 [0x4]:           call @1935 // <qzv#qzw.tkh>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: qzv#qzw.tke[1932] params(2) in file: qzu:140:4: note:  
		def fmod(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 141 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 19   
4 [0x4]:           call @1935 // <qzv#qzw.tkh>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: qzv#qzw.tkf[1933] params(1) in file: qzu:144:4: note:  
		def round(num: var) : var {
		   ^

0 [0x0]: line: 145 loadl ebx, fp+0   
1 [0x1]:           mov64 ebx, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 146 loadl ebx, fp+1   
5 [0x5]:           subl ebx, fp@0   
6 [0x6]: line: 148 ipushl #0   
7 [0x7]:           ldc ebx // 0.5   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           movr ebx, cmt   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]:           ipushl #1   
14 [0xe]:           movi #1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           add ecx, ebx -> ebx   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   
20 [0x14]:           jmp @24   
21 [0x15]: line: 149 loadl ebx, fp+1   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   
24 [0x18]:           nop   


function: qzv#qzw.tkg[1934] params(2) in file: qzu:152:10: note:  
		local def math_proc(num: var, proc: var) : var {
		         ^

0 [0x0]: line: 153 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl ecx, fp+1   
2 [0x2]:           int 0x18   
3 [0x3]:           return_val cmt   
4 [0x4]:           ret   
5 [0x5]: line: 161 istorel 0, fp+0   : protected asm end
7 [0x7]:           ret   


function: qzv#qzw.tkh[1935] params(3) in file: qzu:164:10: note:  
		local def math_proc(num:var, num2: var, proc: var) : var {
		         ^

0 [0x0]: line: 165 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl egx, fp+1   
2 [0x2]:           loadl ecx, fp+2   
3 [0x3]:           int 0x18   
4 [0x4]:           return_val cmt   
5 [0x5]:           ret   
6 [0x6]: line: 174 istorel 0, fp+0   : protected asm end
8 [0x8]:           ret   


function: std#qaf.qak.tki[1936] params(0) in file: qai:14:15: note:  
		    public def to_string() := new string("nil");
		              ^

0 [0x0]: line: 14 new_class @0 // pxo#pxp   
1 [0x1]:          movnd adx   
2 [0x2]:          dup    
3 [0x3]:          newstr @0 // nil   
4 [0x4]:          call @3475 // <std#string.string>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


constructor: std#qaf.qak.tkj[1937] params(0) in file: qai:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#qaf.qas.tkk[1938] params(1) in file: qap:274:10: note:  
		    ulong(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tkl[1939] params(1) in file: qap:275:10: note:  
		    ulong(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tkm[1940] params(1) in file: qap:276:10: note:  
		    ulong(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tkn[1941] params(1) in file: qap:277:10: note:  
		    ulong(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tko[1942] params(1) in file: qap:278:10: note:  
		    ulong(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tkp[1943] params(1) in file: qap:279:10: note:  
		    ulong(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tkq[1944] params(1) in file: qap:280:10: note:  
		    ulong(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tkr[1945] params(1) in file: qap:281:10: note:  
		    ulong(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tks[1946] params(1) in file: qap:282:10: note:  
		    ulong(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tkt[1947] params(1) in file: qap:283:10: note:  
		    ulong(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tku[1948] params(1) in file: qap:284:10: note:  
		    ulong(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @8 // <std#qaf.qar.qnw>   
9 [0x9]:         ret   


constructor: std#qaf.qas.tkv[1949] params(1) in file: qap:285:10: note:  
		    ulong(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @8 // <std#qaf.qar.qnw>   
3 [0x3]:         ret   


overload function: std#qaf.qas.tkw[1950] params(0) in file: qap:287:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 287 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#qaf.qas.tkx[1951] params(0) in file: qap:288:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 288 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qas.tky[1952] params(1) in file: qap:289:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 289 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qas.tlz[1953] params(0) in file: qap:290:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 290 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qas.tla[1954] params(1) in file: qap:291:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 291 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qas.tlb[1955] params(1) in file: qap:293:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 293 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlc[1956] params(1) in file: qap:294:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 294 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tld[1957] params(1) in file: qap:295:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 295 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tle[1958] params(1) in file: qap:296:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 296 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlf[1959] params(1) in file: qap:297:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 297 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlg[1960] params(1) in file: qap:298:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 298 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlh[1961] params(1) in file: qap:299:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 299 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tli[1962] params(1) in file: qap:300:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 300 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlj[1963] params(1) in file: qap:301:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 301 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlk[1964] params(1) in file: qap:302:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 302 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tll[1965] params(1) in file: qap:303:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 303 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlm[1966] params(1) in file: qap:304:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 304 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qas.tln[1967] params(1) in file: qap:306:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 306 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlo[1968] params(1) in file: qap:307:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 307 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlp[1969] params(1) in file: qap:308:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 308 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlq[1970] params(1) in file: qap:309:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 309 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlr[1971] params(1) in file: qap:310:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 310 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tls[1972] params(1) in file: qap:311:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 311 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlt[1973] params(1) in file: qap:312:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 312 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlu[1974] params(1) in file: qap:313:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 313 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlv[1975] params(1) in file: qap:314:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 314 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlw[1976] params(1) in file: qap:315:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 315 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tlx[1977] params(1) in file: qap:316:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 316 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tly[1978] params(1) in file: qap:317:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 317 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qas.tmz[1979] params(1) in file: qap:319:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 319 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tma[1980] params(1) in file: qap:320:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 320 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmb[1981] params(1) in file: qap:321:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 321 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmc[1982] params(1) in file: qap:322:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 322 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmd[1983] params(1) in file: qap:323:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 323 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tme[1984] params(1) in file: qap:324:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 324 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmf[1985] params(1) in file: qap:325:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 325 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmg[1986] params(1) in file: qap:326:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 326 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmh[1987] params(1) in file: qap:327:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 327 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmi[1988] params(1) in file: qap:328:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 328 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmj[1989] params(1) in file: qap:329:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 329 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmk[1990] params(1) in file: qap:330:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 330 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qas.tml[1991] params(1) in file: qap:332:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 332 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmm[1992] params(1) in file: qap:333:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 333 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmn[1993] params(1) in file: qap:334:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 334 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmo[1994] params(1) in file: qap:335:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 335 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmp[1995] params(1) in file: qap:336:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 336 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmq[1996] params(1) in file: qap:337:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 337 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmr[1997] params(1) in file: qap:338:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 338 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tms[1998] params(1) in file: qap:339:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 339 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmt[1999] params(1) in file: qap:340:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 340 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmu[2000] params(1) in file: qap:341:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 341 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmv[2001] params(1) in file: qap:342:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 342 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmw[2002] params(1) in file: qap:343:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 343 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qas.tmx[2003] params(1) in file: qap:345:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 345 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tmy[2004] params(1) in file: qap:346:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 346 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tnz[2005] params(1) in file: qap:347:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 347 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tna[2006] params(1) in file: qap:348:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 348 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tnb[2007] params(1) in file: qap:349:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 349 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tnc[2008] params(1) in file: qap:350:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 350 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tnd[2009] params(1) in file: qap:351:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 351 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tne[2010] params(1) in file: qap:352:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 352 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tnf[2011] params(1) in file: qap:353:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 353 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tng[2012] params(1) in file: qap:354:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 354 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tnh[2013] params(1) in file: qap:355:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 355 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tni[2014] params(1) in file: qap:356:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 356 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qas.tnj[2015] params(1) in file: qap:358:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 358 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tnk[2016] params(1) in file: qap:359:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 359 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tnl[2017] params(1) in file: qap:360:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 360 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tnm[2018] params(1) in file: qap:361:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 361 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tnn[2019] params(1) in file: qap:362:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 362 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tno[2020] params(1) in file: qap:363:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 363 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tnp[2021] params(1) in file: qap:364:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 364 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tnq[2022] params(1) in file: qap:365:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 365 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tnr[2023] params(1) in file: qap:366:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 366 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tns[2024] params(1) in file: qap:367:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 367 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tnt[2025] params(1) in file: qap:368:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 368 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qas.tnu[2026] params(1) in file: qap:369:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 369 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#qaf.qas.tnv[2027] params(1) in file: qap:371:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 371 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tnw[2028] params(1) in file: qap:372:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 372 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tnx[2029] params(1) in file: qap:373:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 373 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tny[2030] params(1) in file: qap:374:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 374 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.toz[2031] params(1) in file: qap:375:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 375 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.toa[2032] params(1) in file: qap:376:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 376 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tob[2033] params(1) in file: qap:377:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 377 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.toc[2034] params(1) in file: qap:378:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 378 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tod[2035] params(1) in file: qap:379:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 379 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.toe[2036] params(1) in file: qap:380:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 380 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tof[2037] params(1) in file: qap:381:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 381 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qas.tog[2038] params(1) in file: qap:382:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 382 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#qaf.qas.toh[2039] params(0) in file: qap:273:6: note:  
		class ulong base integer<_uint64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @216 // <std#qaf.qar.qvw>   
2 [0x2]:         ret   


constructor: std#qaf.qat.toi[2040] params(1) in file: qap:385:9: note:  
		    long(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.toj[2041] params(1) in file: qap:386:9: note:  
		    long(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.tok[2042] params(1) in file: qap:387:9: note:  
		    long(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.tol[2043] params(1) in file: qap:388:9: note:  
		    long(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.tom[2044] params(1) in file: qap:389:9: note:  
		    long(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.ton[2045] params(1) in file: qap:390:9: note:  
		    long(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.too[2046] params(1) in file: qap:391:9: note:  
		    long(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.top[2047] params(1) in file: qap:392:9: note:  
		    long(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.toq[2048] params(1) in file: qap:393:9: note:  
		    long(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.tor[2049] params(1) in file: qap:394:9: note:  
		    long(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.tos[2050] params(1) in file: qap:395:9: note:  
		    long(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @217 // <std#qaf.qar.qvy>   
9 [0x9]:         ret   


constructor: std#qaf.qat.tot[2051] params(1) in file: qap:396:9: note:  
		    long(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @217 // <std#qaf.qar.qvy>   
3 [0x3]:         ret   


overload function: std#qaf.qat.tou[2052] params(0) in file: qap:398:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 398 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#qaf.qat.tov[2053] params(0) in file: qap:399:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 399 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qat.tow[2054] params(1) in file: qap:400:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 400 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qat.tox[2055] params(0) in file: qap:401:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 401 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qat.toy[2056] params(1) in file: qap:402:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 402 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qat.tpz[2057] params(1) in file: qap:404:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 404 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpa[2058] params(1) in file: qap:405:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 405 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpb[2059] params(1) in file: qap:406:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 406 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpc[2060] params(1) in file: qap:407:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 407 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpd[2061] params(1) in file: qap:408:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 408 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpe[2062] params(1) in file: qap:409:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 409 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpf[2063] params(1) in file: qap:410:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 410 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpg[2064] params(1) in file: qap:411:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 411 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tph[2065] params(1) in file: qap:412:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 412 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpi[2066] params(1) in file: qap:413:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 413 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpj[2067] params(1) in file: qap:414:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 414 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpk[2068] params(1) in file: qap:415:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 415 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qat.tpl[2069] params(1) in file: qap:417:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 417 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpm[2070] params(1) in file: qap:418:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 418 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpn[2071] params(1) in file: qap:419:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 419 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpo[2072] params(1) in file: qap:420:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 420 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpp[2073] params(1) in file: qap:421:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 421 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpq[2074] params(1) in file: qap:422:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 422 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpr[2075] params(1) in file: qap:423:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 423 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tps[2076] params(1) in file: qap:424:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 424 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpt[2077] params(1) in file: qap:425:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 425 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpu[2078] params(1) in file: qap:426:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 426 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpv[2079] params(1) in file: qap:427:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 427 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpw[2080] params(1) in file: qap:428:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 428 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qat.tpx[2081] params(1) in file: qap:430:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 430 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tpy[2082] params(1) in file: qap:431:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 431 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqz[2083] params(1) in file: qap:432:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 432 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqa[2084] params(1) in file: qap:433:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 433 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqb[2085] params(1) in file: qap:434:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 434 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqc[2086] params(1) in file: qap:435:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 435 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqd[2087] params(1) in file: qap:436:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 436 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqe[2088] params(1) in file: qap:437:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 437 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqf[2089] params(1) in file: qap:438:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 438 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqg[2090] params(1) in file: qap:439:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 439 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqh[2091] params(1) in file: qap:440:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 440 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqi[2092] params(1) in file: qap:441:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 441 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qat.tqj[2093] params(1) in file: qap:443:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 443 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqk[2094] params(1) in file: qap:444:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 444 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tql[2095] params(1) in file: qap:445:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 445 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqm[2096] params(1) in file: qap:446:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 446 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqn[2097] params(1) in file: qap:447:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 447 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqo[2098] params(1) in file: qap:448:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 448 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqp[2099] params(1) in file: qap:449:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 449 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqq[2100] params(1) in file: qap:450:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 450 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqr[2101] params(1) in file: qap:451:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 451 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqs[2102] params(1) in file: qap:452:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 452 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqt[2103] params(1) in file: qap:453:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 453 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqu[2104] params(1) in file: qap:454:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 454 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qat.tqv[2105] params(1) in file: qap:456:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 456 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqw[2106] params(1) in file: qap:457:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 457 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqx[2107] params(1) in file: qap:458:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 458 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tqy[2108] params(1) in file: qap:459:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 459 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.trz[2109] params(1) in file: qap:460:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 460 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tra[2110] params(1) in file: qap:461:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 461 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.trb[2111] params(1) in file: qap:462:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 462 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.trc[2112] params(1) in file: qap:463:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 463 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.trd[2113] params(1) in file: qap:464:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 464 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tre[2114] params(1) in file: qap:465:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 465 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.trf[2115] params(1) in file: qap:466:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 466 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.trg[2116] params(1) in file: qap:467:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 467 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qat.trh[2117] params(1) in file: qap:469:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 469 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.tri[2118] params(1) in file: qap:470:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 470 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.trj[2119] params(1) in file: qap:471:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 471 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.trk[2120] params(1) in file: qap:472:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 472 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.trl[2121] params(1) in file: qap:473:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 473 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.trm[2122] params(1) in file: qap:474:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 474 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.trn[2123] params(1) in file: qap:475:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 475 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.tro[2124] params(1) in file: qap:476:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 476 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.trp[2125] params(1) in file: qap:477:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 477 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.trq[2126] params(1) in file: qap:478:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 478 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.trr[2127] params(1) in file: qap:479:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 479 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qat.trs[2128] params(1) in file: qap:480:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 480 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#qaf.qat.trt[2129] params(1) in file: qap:482:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 482 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tru[2130] params(1) in file: qap:483:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 483 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.trv[2131] params(1) in file: qap:484:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 484 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.trw[2132] params(1) in file: qap:485:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 485 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.trx[2133] params(1) in file: qap:486:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 486 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.try[2134] params(1) in file: qap:487:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 487 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tsz[2135] params(1) in file: qap:488:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 488 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tsa[2136] params(1) in file: qap:489:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 489 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tsb[2137] params(1) in file: qap:490:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 490 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tsc[2138] params(1) in file: qap:491:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 491 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tsd[2139] params(1) in file: qap:492:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 492 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qat.tse[2140] params(1) in file: qap:493:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 493 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#qaf.qat.tsf[2141] params(0) in file: qap:384:6: note:  
		class long base integer<_int64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @425 // <std#qaf.qar.rdy>   
2 [0x2]:         ret   


constructor: std#qaf.qau.tsg[2142] params(1) in file: qap:497:9: note:  
		    uint(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsh[2143] params(1) in file: qap:498:9: note:  
		    uint(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsi[2144] params(1) in file: qap:499:9: note:  
		    uint(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsj[2145] params(1) in file: qap:500:9: note:  
		    uint(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsk[2146] params(1) in file: qap:501:9: note:  
		    uint(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsl[2147] params(1) in file: qap:502:9: note:  
		    uint(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsm[2148] params(1) in file: qap:503:9: note:  
		    uint(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsn[2149] params(1) in file: qap:504:9: note:  
		    uint(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tso[2150] params(1) in file: qap:505:9: note:  
		    uint(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsp[2151] params(1) in file: qap:506:9: note:  
		    uint(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsq[2152] params(1) in file: qap:507:9: note:  
		    uint(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @426 // <std#qaf.qar.rea>   
9 [0x9]:         ret   


constructor: std#qaf.qau.tsr[2153] params(1) in file: qap:508:9: note:  
		    uint(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @426 // <std#qaf.qar.rea>   
3 [0x3]:         ret   


overload function: std#qaf.qau.tss[2154] params(0) in file: qap:510:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 510 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#qaf.qau.tst[2155] params(0) in file: qap:511:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 511 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qau.tsu[2156] params(1) in file: qap:512:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 512 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qau.tsv[2157] params(0) in file: qap:513:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 513 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qau.tsw[2158] params(1) in file: qap:514:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 514 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qau.tsx[2159] params(1) in file: qap:516:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 516 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tsy[2160] params(1) in file: qap:517:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 517 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttz[2161] params(1) in file: qap:518:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 518 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tta[2162] params(1) in file: qap:519:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 519 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttb[2163] params(1) in file: qap:520:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 520 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttc[2164] params(1) in file: qap:521:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 521 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttd[2165] params(1) in file: qap:522:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 522 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tte[2166] params(1) in file: qap:523:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 523 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttf[2167] params(1) in file: qap:524:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 524 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttg[2168] params(1) in file: qap:525:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 525 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tth[2169] params(1) in file: qap:526:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 526 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tti[2170] params(1) in file: qap:527:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 527 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qau.ttj[2171] params(1) in file: qap:529:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 529 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttk[2172] params(1) in file: qap:530:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 530 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttl[2173] params(1) in file: qap:531:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 531 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttm[2174] params(1) in file: qap:532:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 532 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttn[2175] params(1) in file: qap:533:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 533 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tto[2176] params(1) in file: qap:534:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 534 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttp[2177] params(1) in file: qap:535:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 535 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttq[2178] params(1) in file: qap:536:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 536 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttr[2179] params(1) in file: qap:537:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 537 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tts[2180] params(1) in file: qap:538:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 538 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttt[2181] params(1) in file: qap:539:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 539 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttu[2182] params(1) in file: qap:540:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 540 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qau.ttv[2183] params(1) in file: qap:542:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 542 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttw[2184] params(1) in file: qap:543:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 543 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.ttx[2185] params(1) in file: qap:544:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 544 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tty[2186] params(1) in file: qap:545:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 545 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuz[2187] params(1) in file: qap:546:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 546 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tua[2188] params(1) in file: qap:547:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 547 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tub[2189] params(1) in file: qap:548:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 548 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuc[2190] params(1) in file: qap:549:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 549 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tud[2191] params(1) in file: qap:550:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 550 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tue[2192] params(1) in file: qap:551:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 551 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuf[2193] params(1) in file: qap:552:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 552 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tug[2194] params(1) in file: qap:553:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 553 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qau.tuh[2195] params(1) in file: qap:555:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 555 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tui[2196] params(1) in file: qap:556:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 556 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuj[2197] params(1) in file: qap:557:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 557 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuk[2198] params(1) in file: qap:558:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 558 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tul[2199] params(1) in file: qap:559:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 559 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tum[2200] params(1) in file: qap:560:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 560 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tun[2201] params(1) in file: qap:561:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 561 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuo[2202] params(1) in file: qap:562:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 562 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tup[2203] params(1) in file: qap:563:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 563 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuq[2204] params(1) in file: qap:564:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 564 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tur[2205] params(1) in file: qap:565:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 565 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tus[2206] params(1) in file: qap:566:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 566 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qau.tut[2207] params(1) in file: qap:568:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 568 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuu[2208] params(1) in file: qap:569:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 569 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuv[2209] params(1) in file: qap:570:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 570 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuw[2210] params(1) in file: qap:571:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 571 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tux[2211] params(1) in file: qap:572:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 572 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tuy[2212] params(1) in file: qap:573:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 573 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvz[2213] params(1) in file: qap:574:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 574 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tva[2214] params(1) in file: qap:575:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 575 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvb[2215] params(1) in file: qap:576:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 576 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvc[2216] params(1) in file: qap:577:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 577 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvd[2217] params(1) in file: qap:578:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 578 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tve[2218] params(1) in file: qap:579:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 579 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qau.tvf[2219] params(1) in file: qap:581:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 581 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvg[2220] params(1) in file: qap:582:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 582 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvh[2221] params(1) in file: qap:583:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 583 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvi[2222] params(1) in file: qap:584:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 584 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvj[2223] params(1) in file: qap:585:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 585 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvk[2224] params(1) in file: qap:586:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 586 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvl[2225] params(1) in file: qap:587:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 587 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvm[2226] params(1) in file: qap:588:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 588 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvn[2227] params(1) in file: qap:589:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 589 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvo[2228] params(1) in file: qap:590:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 590 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvp[2229] params(1) in file: qap:591:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 591 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qau.tvq[2230] params(1) in file: qap:592:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 592 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#qaf.qau.tvr[2231] params(1) in file: qap:594:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 594 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvs[2232] params(1) in file: qap:595:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 595 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvt[2233] params(1) in file: qap:596:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 596 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvu[2234] params(1) in file: qap:597:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 597 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvv[2235] params(1) in file: qap:598:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 598 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvw[2236] params(1) in file: qap:599:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 599 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvx[2237] params(1) in file: qap:600:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 600 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.tvy[2238] params(1) in file: qap:601:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 601 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.twz[2239] params(1) in file: qap:602:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 602 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.twa[2240] params(1) in file: qap:603:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 603 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.twb[2241] params(1) in file: qap:604:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 604 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qau.twc[2242] params(1) in file: qap:605:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 605 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#qaf.qau.twd[2243] params(0) in file: qap:496:6: note:  
		class uint base integer<_uint32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @634 // <std#qaf.qar.rma>   
2 [0x2]:         ret   


constructor: std#qaf.qav.twe[2244] params(1) in file: qap:608:8: note:  
		    int(i : long) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twf[2245] params(1) in file: qap:609:8: note:  
		    int(i : int) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twg[2246] params(1) in file: qap:610:8: note:  
		    int(i : short) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twh[2247] params(1) in file: qap:611:8: note:  
		    int(i : char) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twi[2248] params(1) in file: qap:612:8: note:  
		    int(i : byte) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twj[2249] params(1) in file: qap:613:8: note:  
		    int(i : bool) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twk[2250] params(1) in file: qap:614:8: note:  
		    int(i : ulong) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twl[2251] params(1) in file: qap:615:8: note:  
		    int(i : uint) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twm[2252] params(1) in file: qap:616:8: note:  
		    int(i : ushort) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twn[2253] params(1) in file: qap:617:8: note:  
		    int(i : uchar) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.two[2254] params(1) in file: qap:618:8: note:  
		    int(i : double) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @635 // <std#qaf.qar.rmc>   
9 [0x9]:         ret   


constructor: std#qaf.qav.twp[2255] params(1) in file: qap:619:8: note:  
		    int(i : var) -> base(i) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @635 // <std#qaf.qar.rmc>   
3 [0x3]:         ret   


overload function: std#qaf.qav.twq[2256] params(0) in file: qap:621:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 621 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#qaf.qav.twr[2257] params(0) in file: qap:622:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 622 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qav.tws[2258] params(1) in file: qap:623:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 623 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qav.twt[2259] params(0) in file: qap:624:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 624 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qav.twu[2260] params(1) in file: qap:625:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 625 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qav.twv[2261] params(1) in file: qap:627:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 627 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tww[2262] params(1) in file: qap:628:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 628 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.twx[2263] params(1) in file: qap:629:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 629 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.twy[2264] params(1) in file: qap:630:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 630 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txz[2265] params(1) in file: qap:631:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 631 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txa[2266] params(1) in file: qap:632:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 632 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txb[2267] params(1) in file: qap:633:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 633 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txc[2268] params(1) in file: qap:634:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 634 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txd[2269] params(1) in file: qap:635:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 635 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txe[2270] params(1) in file: qap:636:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 636 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txf[2271] params(1) in file: qap:637:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 637 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txg[2272] params(1) in file: qap:638:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 638 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qav.txh[2273] params(1) in file: qap:640:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 640 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txi[2274] params(1) in file: qap:641:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 641 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txj[2275] params(1) in file: qap:642:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 642 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txk[2276] params(1) in file: qap:643:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 643 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txl[2277] params(1) in file: qap:644:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 644 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txm[2278] params(1) in file: qap:645:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 645 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txn[2279] params(1) in file: qap:646:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 646 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txo[2280] params(1) in file: qap:647:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 647 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txp[2281] params(1) in file: qap:648:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 648 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txq[2282] params(1) in file: qap:649:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 649 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txr[2283] params(1) in file: qap:650:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 650 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txs[2284] params(1) in file: qap:651:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 651 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qav.txt[2285] params(1) in file: qap:653:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 653 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txu[2286] params(1) in file: qap:654:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 654 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txv[2287] params(1) in file: qap:655:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 655 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txw[2288] params(1) in file: qap:656:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 656 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txx[2289] params(1) in file: qap:657:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 657 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.txy[2290] params(1) in file: qap:658:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 658 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyz[2291] params(1) in file: qap:659:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 659 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tya[2292] params(1) in file: qap:660:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 660 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyb[2293] params(1) in file: qap:661:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 661 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyc[2294] params(1) in file: qap:662:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 662 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyd[2295] params(1) in file: qap:663:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 663 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tye[2296] params(1) in file: qap:664:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 664 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qav.tyf[2297] params(1) in file: qap:666:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 666 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyg[2298] params(1) in file: qap:667:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 667 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyh[2299] params(1) in file: qap:668:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 668 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyi[2300] params(1) in file: qap:669:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 669 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyj[2301] params(1) in file: qap:670:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 670 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyk[2302] params(1) in file: qap:671:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 671 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyl[2303] params(1) in file: qap:672:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 672 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tym[2304] params(1) in file: qap:673:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 673 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyn[2305] params(1) in file: qap:674:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 674 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyo[2306] params(1) in file: qap:675:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 675 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.typ[2307] params(1) in file: qap:676:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 676 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyq[2308] params(1) in file: qap:677:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 677 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qav.tyr[2309] params(1) in file: qap:679:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 679 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tys[2310] params(1) in file: qap:680:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 680 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyt[2311] params(1) in file: qap:681:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 681 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyu[2312] params(1) in file: qap:682:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 682 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyv[2313] params(1) in file: qap:683:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 683 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyw[2314] params(1) in file: qap:684:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 684 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyx[2315] params(1) in file: qap:685:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 685 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.tyy[2316] params(1) in file: qap:686:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 686 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzz[2317] params(1) in file: qap:687:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 687 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uza[2318] params(1) in file: qap:688:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 688 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzb[2319] params(1) in file: qap:689:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 689 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzc[2320] params(1) in file: qap:690:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 690 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qav.uzd[2321] params(1) in file: qap:692:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 692 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uze[2322] params(1) in file: qap:693:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 693 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzf[2323] params(1) in file: qap:694:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 694 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzg[2324] params(1) in file: qap:695:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 695 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzh[2325] params(1) in file: qap:696:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 696 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzi[2326] params(1) in file: qap:697:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 697 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzj[2327] params(1) in file: qap:698:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 698 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzk[2328] params(1) in file: qap:699:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 699 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzl[2329] params(1) in file: qap:700:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 700 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzm[2330] params(1) in file: qap:701:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 701 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzn[2331] params(1) in file: qap:702:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 702 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qav.uzo[2332] params(1) in file: qap:703:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 703 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#qaf.qav.uzp[2333] params(1) in file: qap:705:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 705 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzq[2334] params(1) in file: qap:706:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 706 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzr[2335] params(1) in file: qap:707:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 707 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzs[2336] params(1) in file: qap:708:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 708 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzt[2337] params(1) in file: qap:709:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 709 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzu[2338] params(1) in file: qap:710:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 710 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzv[2339] params(1) in file: qap:711:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 711 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzw[2340] params(1) in file: qap:712:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 712 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzx[2341] params(1) in file: qap:713:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 713 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uzy[2342] params(1) in file: qap:714:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 714 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uaz[2343] params(1) in file: qap:715:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 715 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qav.uaa[2344] params(1) in file: qap:716:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 716 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#qaf.qav.uab[2345] params(0) in file: qap:607:6: note:  
		class int base integer<_int32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @843 // <std#qaf.qar.ruc>   
2 [0x2]:         ret   


constructor: std#qaf.qaw.uac[2346] params(1) in file: qap:719:11: note:  
		    ushort(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uad[2347] params(1) in file: qap:720:11: note:  
		    ushort(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uae[2348] params(1) in file: qap:721:11: note:  
		    ushort(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uaf[2349] params(1) in file: qap:722:11: note:  
		    ushort(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uag[2350] params(1) in file: qap:723:11: note:  
		    ushort(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uah[2351] params(1) in file: qap:724:11: note:  
		    ushort(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uai[2352] params(1) in file: qap:725:11: note:  
		    ushort(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uaj[2353] params(1) in file: qap:726:11: note:  
		    ushort(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uak[2354] params(1) in file: qap:727:11: note:  
		    ushort(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.ual[2355] params(1) in file: qap:728:11: note:  
		    ushort(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uam[2356] params(1) in file: qap:729:11: note:  
		    ushort(i : double) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @844 // <std#qaf.qar.rue>   
9 [0x9]:         ret   


constructor: std#qaf.qaw.uan[2357] params(1) in file: qap:730:11: note:  
		    ushort(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @844 // <std#qaf.qar.rue>   
3 [0x3]:         ret   


overload function: std#qaf.qaw.uao[2358] params(0) in file: qap:732:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 732 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#qaf.qaw.uap[2359] params(0) in file: qap:733:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 733 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qaw.uaq[2360] params(1) in file: qap:734:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 734 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qaw.uar[2361] params(0) in file: qap:735:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 735 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qaw.uas[2362] params(1) in file: qap:736:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 736 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qaw.uat[2363] params(1) in file: qap:738:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 738 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uau[2364] params(1) in file: qap:739:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 739 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uav[2365] params(1) in file: qap:740:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 740 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uaw[2366] params(1) in file: qap:741:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 741 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uax[2367] params(1) in file: qap:742:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 742 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uay[2368] params(1) in file: qap:743:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 743 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubz[2369] params(1) in file: qap:744:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 744 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uba[2370] params(1) in file: qap:745:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 745 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubb[2371] params(1) in file: qap:746:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 746 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubc[2372] params(1) in file: qap:747:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 747 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubd[2373] params(1) in file: qap:748:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 748 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ube[2374] params(1) in file: qap:749:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 749 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qaw.ubf[2375] params(1) in file: qap:751:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 751 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubg[2376] params(1) in file: qap:752:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 752 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubh[2377] params(1) in file: qap:753:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 753 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubi[2378] params(1) in file: qap:754:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 754 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubj[2379] params(1) in file: qap:755:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 755 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubk[2380] params(1) in file: qap:756:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 756 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubl[2381] params(1) in file: qap:757:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 757 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubm[2382] params(1) in file: qap:758:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 758 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubn[2383] params(1) in file: qap:759:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 759 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubo[2384] params(1) in file: qap:760:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 760 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubp[2385] params(1) in file: qap:761:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 761 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubq[2386] params(1) in file: qap:762:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 762 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qaw.ubr[2387] params(1) in file: qap:764:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 764 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubs[2388] params(1) in file: qap:765:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 765 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubt[2389] params(1) in file: qap:766:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 766 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubu[2390] params(1) in file: qap:767:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 767 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubv[2391] params(1) in file: qap:768:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 768 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubw[2392] params(1) in file: qap:769:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 769 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ubx[2393] params(1) in file: qap:770:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 770 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uby[2394] params(1) in file: qap:771:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 771 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucz[2395] params(1) in file: qap:772:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 772 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uca[2396] params(1) in file: qap:773:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 773 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucb[2397] params(1) in file: qap:774:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 774 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucc[2398] params(1) in file: qap:775:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 775 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qaw.ucd[2399] params(1) in file: qap:777:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 777 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uce[2400] params(1) in file: qap:778:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 778 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucf[2401] params(1) in file: qap:779:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 779 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucg[2402] params(1) in file: qap:780:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 780 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uch[2403] params(1) in file: qap:781:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 781 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uci[2404] params(1) in file: qap:782:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 782 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucj[2405] params(1) in file: qap:783:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 783 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uck[2406] params(1) in file: qap:784:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 784 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucl[2407] params(1) in file: qap:785:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 785 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucm[2408] params(1) in file: qap:786:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 786 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucn[2409] params(1) in file: qap:787:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 787 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uco[2410] params(1) in file: qap:788:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 788 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qaw.ucp[2411] params(1) in file: qap:790:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 790 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucq[2412] params(1) in file: qap:791:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 791 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucr[2413] params(1) in file: qap:792:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 792 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucs[2414] params(1) in file: qap:793:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 793 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uct[2415] params(1) in file: qap:794:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 794 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucu[2416] params(1) in file: qap:795:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 795 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucv[2417] params(1) in file: qap:796:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 796 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucw[2418] params(1) in file: qap:797:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 797 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucx[2419] params(1) in file: qap:798:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 798 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.ucy[2420] params(1) in file: qap:799:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 799 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udz[2421] params(1) in file: qap:800:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 800 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uda[2422] params(1) in file: qap:801:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 801 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qaw.udb[2423] params(1) in file: qap:803:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 803 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udc[2424] params(1) in file: qap:804:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 804 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udd[2425] params(1) in file: qap:805:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 805 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.ude[2426] params(1) in file: qap:806:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 806 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udf[2427] params(1) in file: qap:807:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 807 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udg[2428] params(1) in file: qap:808:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 808 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udh[2429] params(1) in file: qap:809:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 809 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udi[2430] params(1) in file: qap:810:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 810 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udj[2431] params(1) in file: qap:811:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 811 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udk[2432] params(1) in file: qap:812:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 812 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udl[2433] params(1) in file: qap:813:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 813 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qaw.udm[2434] params(1) in file: qap:814:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 814 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#qaf.qaw.udn[2435] params(1) in file: qap:816:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 816 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udo[2436] params(1) in file: qap:817:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 817 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udp[2437] params(1) in file: qap:818:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 818 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udq[2438] params(1) in file: qap:819:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 819 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udr[2439] params(1) in file: qap:820:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 820 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.uds[2440] params(1) in file: qap:821:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 821 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udt[2441] params(1) in file: qap:822:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 822 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udu[2442] params(1) in file: qap:823:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 823 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udv[2443] params(1) in file: qap:824:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 824 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udw[2444] params(1) in file: qap:825:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 825 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udx[2445] params(1) in file: qap:826:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 826 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qaw.udy[2446] params(1) in file: qap:827:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 827 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#qaf.qaw.uez[2447] params(0) in file: qap:718:6: note:  
		class ushort base integer<_uint16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1052 // <std#qaf.qar.sce>   
2 [0x2]:         ret   


constructor: std#qaf.qax.uea[2448] params(1) in file: qap:830:10: note:  
		    short(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.ueb[2449] params(1) in file: qap:831:10: note:  
		    short(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.uec[2450] params(1) in file: qap:832:10: note:  
		    short(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.ued[2451] params(1) in file: qap:833:10: note:  
		    short(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.uee[2452] params(1) in file: qap:834:10: note:  
		    short(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.uef[2453] params(1) in file: qap:835:10: note:  
		    short(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.ueg[2454] params(1) in file: qap:836:10: note:  
		    short(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.ueh[2455] params(1) in file: qap:837:10: note:  
		    short(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.uei[2456] params(1) in file: qap:838:10: note:  
		    short(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.uej[2457] params(1) in file: qap:839:10: note:  
		    short(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.uek[2458] params(1) in file: qap:840:10: note:  
		    short(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1053 // <std#qaf.qar.scg>   
9 [0x9]:         ret   


constructor: std#qaf.qax.uel[2459] params(1) in file: qap:841:10: note:  
		    short(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1053 // <std#qaf.qar.scg>   
3 [0x3]:         ret   


overload function: std#qaf.qax.uem[2460] params(0) in file: qap:843:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 843 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#qaf.qax.uen[2461] params(0) in file: qap:844:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 844 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qax.ueo[2462] params(1) in file: qap:845:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 845 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qax.uep[2463] params(0) in file: qap:846:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 846 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qax.ueq[2464] params(1) in file: qap:847:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 847 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qax.uer[2465] params(1) in file: qap:849:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 849 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ues[2466] params(1) in file: qap:850:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 850 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uet[2467] params(1) in file: qap:851:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 851 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ueu[2468] params(1) in file: qap:852:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 852 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uev[2469] params(1) in file: qap:853:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 853 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uew[2470] params(1) in file: qap:854:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 854 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uex[2471] params(1) in file: qap:855:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 855 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uey[2472] params(1) in file: qap:856:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 856 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufz[2473] params(1) in file: qap:857:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 857 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufa[2474] params(1) in file: qap:858:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 858 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufb[2475] params(1) in file: qap:859:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 859 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufc[2476] params(1) in file: qap:860:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 860 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qax.ufd[2477] params(1) in file: qap:862:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 862 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufe[2478] params(1) in file: qap:863:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 863 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uff[2479] params(1) in file: qap:864:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 864 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufg[2480] params(1) in file: qap:865:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 865 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufh[2481] params(1) in file: qap:866:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 866 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufi[2482] params(1) in file: qap:867:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 867 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufj[2483] params(1) in file: qap:868:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 868 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufk[2484] params(1) in file: qap:869:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 869 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufl[2485] params(1) in file: qap:870:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 870 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufm[2486] params(1) in file: qap:871:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 871 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufn[2487] params(1) in file: qap:872:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 872 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufo[2488] params(1) in file: qap:873:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 873 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qax.ufp[2489] params(1) in file: qap:875:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 875 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufq[2490] params(1) in file: qap:876:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 876 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufr[2491] params(1) in file: qap:877:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 877 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufs[2492] params(1) in file: qap:878:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 878 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uft[2493] params(1) in file: qap:879:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 879 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufu[2494] params(1) in file: qap:880:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 880 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufv[2495] params(1) in file: qap:881:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 881 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufw[2496] params(1) in file: qap:882:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 882 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufx[2497] params(1) in file: qap:883:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 883 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ufy[2498] params(1) in file: qap:884:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 884 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugz[2499] params(1) in file: qap:885:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 885 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uga[2500] params(1) in file: qap:886:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 886 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qax.ugb[2501] params(1) in file: qap:888:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 888 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugc[2502] params(1) in file: qap:889:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 889 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugd[2503] params(1) in file: qap:890:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 890 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uge[2504] params(1) in file: qap:891:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 891 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugf[2505] params(1) in file: qap:892:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 892 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugg[2506] params(1) in file: qap:893:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 893 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugh[2507] params(1) in file: qap:894:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 894 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugi[2508] params(1) in file: qap:895:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 895 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugj[2509] params(1) in file: qap:896:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 896 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugk[2510] params(1) in file: qap:897:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 897 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugl[2511] params(1) in file: qap:898:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 898 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugm[2512] params(1) in file: qap:899:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 899 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qax.ugn[2513] params(1) in file: qap:901:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 901 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugo[2514] params(1) in file: qap:902:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 902 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugp[2515] params(1) in file: qap:903:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 903 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugq[2516] params(1) in file: qap:904:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 904 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugr[2517] params(1) in file: qap:905:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 905 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugs[2518] params(1) in file: qap:906:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 906 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugt[2519] params(1) in file: qap:907:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 907 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugu[2520] params(1) in file: qap:908:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 908 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugv[2521] params(1) in file: qap:909:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 909 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugw[2522] params(1) in file: qap:910:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 910 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugx[2523] params(1) in file: qap:911:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 911 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.ugy[2524] params(1) in file: qap:912:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 912 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qax.uhz[2525] params(1) in file: qap:914:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 914 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uha[2526] params(1) in file: qap:915:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 915 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhb[2527] params(1) in file: qap:916:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 916 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhc[2528] params(1) in file: qap:917:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 917 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhd[2529] params(1) in file: qap:918:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 918 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhe[2530] params(1) in file: qap:919:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 919 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhf[2531] params(1) in file: qap:920:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 920 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhg[2532] params(1) in file: qap:921:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 921 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhh[2533] params(1) in file: qap:922:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 922 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhi[2534] params(1) in file: qap:923:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 923 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhj[2535] params(1) in file: qap:924:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 924 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#qaf.qax.uhk[2536] params(1) in file: qap:925:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 925 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#qaf.qax.uhl[2537] params(1) in file: qap:927:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 927 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uhm[2538] params(1) in file: qap:928:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 928 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uhn[2539] params(1) in file: qap:929:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 929 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uho[2540] params(1) in file: qap:930:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 930 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uhp[2541] params(1) in file: qap:931:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 931 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uhq[2542] params(1) in file: qap:932:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 932 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uhr[2543] params(1) in file: qap:933:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 933 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uhs[2544] params(1) in file: qap:934:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 934 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uht[2545] params(1) in file: qap:935:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 935 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uhu[2546] params(1) in file: qap:936:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 936 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uhv[2547] params(1) in file: qap:937:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 937 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qax.uhw[2548] params(1) in file: qap:938:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 938 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#qaf.qax.uhx[2549] params(0) in file: qap:829:6: note:  
		class short base integer<_int16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1261 // <std#qaf.qar.skg>   
2 [0x2]:         ret   


constructor: std#qaf.qay.uhy[2550] params(1) in file: qap:941:10: note:  
		    uchar(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uiz[2551] params(1) in file: qap:942:10: note:  
		    uchar(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uia[2552] params(1) in file: qap:943:10: note:  
		    uchar(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uib[2553] params(1) in file: qap:944:10: note:  
		    uchar(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uic[2554] params(1) in file: qap:945:10: note:  
		    uchar(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uid[2555] params(1) in file: qap:946:10: note:  
		    uchar(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uie[2556] params(1) in file: qap:947:10: note:  
		    uchar(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uif[2557] params(1) in file: qap:948:10: note:  
		    uchar(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uig[2558] params(1) in file: qap:949:10: note:  
		    uchar(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uih[2559] params(1) in file: qap:950:10: note:  
		    uchar(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uii[2560] params(1) in file: qap:951:10: note:  
		    uchar(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1262 // <std#qaf.qar.ski>   
9 [0x9]:         ret   


constructor: std#qaf.qay.uij[2561] params(1) in file: qap:952:10: note:  
		    uchar(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1262 // <std#qaf.qar.ski>   
3 [0x3]:         ret   


overload function: std#qaf.qay.uik[2562] params(0) in file: qap:954:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 954 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#qaf.qay.uil[2563] params(0) in file: qap:955:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 955 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qay.uim[2564] params(1) in file: qap:956:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 956 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qay.uin[2565] params(0) in file: qap:957:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 957 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#qaf.qay.uio[2566] params(1) in file: qap:958:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 958 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#qaf.qay.uip[2567] params(1) in file: qap:960:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 960 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uiq[2568] params(1) in file: qap:961:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 961 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uir[2569] params(1) in file: qap:962:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 962 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uis[2570] params(1) in file: qap:963:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 963 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uit[2571] params(1) in file: qap:964:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 964 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uiu[2572] params(1) in file: qap:965:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 965 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uiv[2573] params(1) in file: qap:966:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 966 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uiw[2574] params(1) in file: qap:967:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 967 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uix[2575] params(1) in file: qap:968:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 968 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uiy[2576] params(1) in file: qap:969:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 969 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujz[2577] params(1) in file: qap:970:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 970 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uja[2578] params(1) in file: qap:971:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 971 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qay.ujb[2579] params(1) in file: qap:973:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 973 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujc[2580] params(1) in file: qap:974:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 974 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujd[2581] params(1) in file: qap:975:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 975 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uje[2582] params(1) in file: qap:976:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 976 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujf[2583] params(1) in file: qap:977:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 977 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujg[2584] params(1) in file: qap:978:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 978 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujh[2585] params(1) in file: qap:979:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 979 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uji[2586] params(1) in file: qap:980:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 980 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujj[2587] params(1) in file: qap:981:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 981 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujk[2588] params(1) in file: qap:982:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 982 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujl[2589] params(1) in file: qap:983:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 983 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujm[2590] params(1) in file: qap:984:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 984 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qay.ujn[2591] params(1) in file: qap:986:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 986 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujo[2592] params(1) in file: qap:987:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 987 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujp[2593] params(1) in file: qap:988:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 988 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujq[2594] params(1) in file: qap:989:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 989 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujr[2595] params(1) in file: qap:990:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 990 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujs[2596] params(1) in file: qap:991:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 991 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujt[2597] params(1) in file: qap:992:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 992 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uju[2598] params(1) in file: qap:993:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 993 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujv[2599] params(1) in file: qap:994:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 994 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujw[2600] params(1) in file: qap:995:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 995 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujx[2601] params(1) in file: qap:996:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 996 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.ujy[2602] params(1) in file: qap:997:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 997 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#qaf.qay.ukz[2603] params(1) in file: qap:999:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 999 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#qaf.qay.uka[2604] params(1) in file: qap:1000:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1000 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukb[2605] params(1) in file: qap:1001:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1001 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukc[2606] params(1) in file: qap:1002:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1002 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukd[2607] params(1) in file: qap:1003:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1003 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.uke[2608] params(1) in file: qap:1004:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1004 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukf[2609] params(1) in file: qap:1005:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1005 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukg[2610] params(1) in file: qap:1006:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1006 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukh[2611] params(1) in file: qap:1007:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1007 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.uki[2612] params(1) in file: qap:1008:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1008 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukj[2613] params(1) in file: qap:1009:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1009 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukk[2614] params(1) in file: qap:1010:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1010 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qay.ukl[2615] params(1) in file: qap:1012:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1012 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukm[2616] params(1) in file: qap:1013:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1013 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukn[2617] params(1) in file: qap:1014:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1014 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.uko[2618] params(1) in file: qap:1015:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1015 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukp[2619] params(1) in file: qap:1016:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1016 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukq[2620] params(1) in file: qap:1017:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1017 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukr[2621] params(1) in file: qap:1018:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1018 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.uks[2622] params(1) in file: qap:1019:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1019 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukt[2623] params(1) in file: qap:1020:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1020 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.uku[2624] params(1) in file: qap:1021:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1021 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukv[2625] params(1) in file: qap:1022:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1022 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ukw[2626] params(1) in file: qap:1023:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1023 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qay.ukx[2627] params(1) in file: qap:1025:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1025 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.uky[2628] params(1) in file: qap:1026:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1026 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.ulz[2629] params(1) in file: qap:1027:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1027 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.ula[2630] params(1) in file: qap:1028:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1028 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.ulb[2631] params(1) in file: qap:1029:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1029 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.ulc[2632] params(1) in file: qap:1030:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1030 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.uld[2633] params(1) in file: qap:1031:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1031 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.ule[2634] params(1) in file: qap:1032:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1032 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.ulf[2635] params(1) in file: qap:1033:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1033 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.ulg[2636] params(1) in file: qap:1034:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1034 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.ulh[2637] params(1) in file: qap:1035:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1035 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qay.uli[2638] params(1) in file: qap:1036:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1036 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#qaf.qay.ulj[2639] params(1) in file: qap:1038:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1038 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ulk[2640] params(1) in file: qap:1039:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1039 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ull[2641] params(1) in file: qap:1040:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1040 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ulm[2642] params(1) in file: qap:1041:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1041 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.uln[2643] params(1) in file: qap:1042:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1042 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ulo[2644] params(1) in file: qap:1043:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1043 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ulp[2645] params(1) in file: qap:1044:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1044 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ulq[2646] params(1) in file: qap:1045:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1045 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ulr[2647] params(1) in file: qap:1046:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1046 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.uls[2648] params(1) in file: qap:1047:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1047 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ult[2649] params(1) in file: qap:1048:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1048 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qay.ulu[2650] params(1) in file: qap:1049:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1049 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


constructor: std#qaf.qay.ulv[2651] params(0) in file: qap:940:6: note:  
		class uchar base integer<_uint8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1470 // <std#qaf.qar.ssi>   
2 [0x2]:         ret   


constructor: std#qaf.qbz.ulw[2652] params(1) in file: qap:1052:9: note:  
		    char(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.ulx[2653] params(1) in file: qap:1053:9: note:  
		    char(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.uly[2654] params(1) in file: qap:1054:9: note:  
		    char(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.umz[2655] params(1) in file: qap:1055:9: note:  
		    char(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.uma[2656] params(1) in file: qap:1056:9: note:  
		    char(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.umb[2657] params(1) in file: qap:1057:9: note:  
		    char(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.umc[2658] params(1) in file: qap:1058:9: note:  
		    char(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.umd[2659] params(1) in file: qap:1059:9: note:  
		    char(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.ume[2660] params(1) in file: qap:1060:9: note:  
		    char(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.umf[2661] params(1) in file: qap:1061:9: note:  
		    char(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.umg[2662] params(1) in file: qap:1062:9: note:  
		    char(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbz.umh[2663] params(1) in file: qap:1063:9: note:  
		    char(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1471 // <std#qaf.qar.ssk>   
3 [0x3]:         ret   


overload function: std#qaf.qbz.umi[2664] params(0) in file: qap:1065:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1065 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#qaf.qbz.umj[2665] params(0) in file: qap:1066:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1066 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            mov8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#qaf.qbz.umk[2666] params(1) in file: qap:1067:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1067 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#qaf.qbz.uml[2667] params(0) in file: qap:1068:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1068 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            mov8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#qaf.qbz.umm[2668] params(1) in file: qap:1069:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1069 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#qaf.qbz.umn[2669] params(1) in file: qap:1071:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1071 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.umo[2670] params(1) in file: qap:1072:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1072 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.ump[2671] params(1) in file: qap:1073:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1073 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.umq[2672] params(1) in file: qap:1074:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1074 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.umr[2673] params(1) in file: qap:1075:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1075 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.ums[2674] params(1) in file: qap:1076:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1076 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.umt[2675] params(1) in file: qap:1077:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1077 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.umu[2676] params(1) in file: qap:1078:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1078 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.umv[2677] params(1) in file: qap:1079:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1079 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.umw[2678] params(1) in file: qap:1080:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1080 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.umx[2679] params(1) in file: qap:1081:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1081 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.umy[2680] params(1) in file: qap:1082:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1082 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qbz.unz[2681] params(1) in file: qap:1084:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1084 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.una[2682] params(1) in file: qap:1085:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1085 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unb[2683] params(1) in file: qap:1086:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1086 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unc[2684] params(1) in file: qap:1087:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1087 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.und[2685] params(1) in file: qap:1088:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1088 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.une[2686] params(1) in file: qap:1089:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1089 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unf[2687] params(1) in file: qap:1090:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1090 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.ung[2688] params(1) in file: qap:1091:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1091 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unh[2689] params(1) in file: qap:1092:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1092 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uni[2690] params(1) in file: qap:1093:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1093 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unj[2691] params(1) in file: qap:1094:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1094 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unk[2692] params(1) in file: qap:1095:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1095 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qbz.unl[2693] params(1) in file: qap:1097:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1097 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unm[2694] params(1) in file: qap:1098:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1098 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unn[2695] params(1) in file: qap:1099:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1099 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uno[2696] params(1) in file: qap:1100:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1100 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unp[2697] params(1) in file: qap:1101:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1101 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unq[2698] params(1) in file: qap:1102:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1102 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unr[2699] params(1) in file: qap:1103:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1103 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uns[2700] params(1) in file: qap:1104:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1104 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unt[2701] params(1) in file: qap:1105:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1105 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unu[2702] params(1) in file: qap:1106:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1106 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unv[2703] params(1) in file: qap:1107:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1107 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.unw[2704] params(1) in file: qap:1108:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1108 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qbz.unx[2705] params(1) in file: qap:1110:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1110 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uny[2706] params(1) in file: qap:1111:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1111 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uoz[2707] params(1) in file: qap:1112:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1112 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uoa[2708] params(1) in file: qap:1113:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1113 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uob[2709] params(1) in file: qap:1114:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1114 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uoc[2710] params(1) in file: qap:1115:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1115 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uod[2711] params(1) in file: qap:1116:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1116 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uoe[2712] params(1) in file: qap:1117:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1117 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uof[2713] params(1) in file: qap:1118:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1118 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uog[2714] params(1) in file: qap:1119:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1119 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uoh[2715] params(1) in file: qap:1120:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1120 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uoi[2716] params(1) in file: qap:1121:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1121 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qbz.uoj[2717] params(1) in file: qap:1123:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1123 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uok[2718] params(1) in file: qap:1124:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1124 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uol[2719] params(1) in file: qap:1125:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1125 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uom[2720] params(1) in file: qap:1126:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1126 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uon[2721] params(1) in file: qap:1127:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1127 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uoo[2722] params(1) in file: qap:1128:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1128 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uop[2723] params(1) in file: qap:1129:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1129 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uoq[2724] params(1) in file: qap:1130:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1130 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uor[2725] params(1) in file: qap:1131:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1131 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uos[2726] params(1) in file: qap:1132:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1132 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uot[2727] params(1) in file: qap:1133:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1133 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.uou[2728] params(1) in file: qap:1134:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1134 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qbz.uov[2729] params(1) in file: qap:1136:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1136 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.uow[2730] params(1) in file: qap:1137:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1137 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.uox[2731] params(1) in file: qap:1138:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1138 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.uoy[2732] params(1) in file: qap:1139:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1139 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.upz[2733] params(1) in file: qap:1140:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1140 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.upa[2734] params(1) in file: qap:1141:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1141 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.upb[2735] params(1) in file: qap:1142:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1142 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.upc[2736] params(1) in file: qap:1143:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1143 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.upd[2737] params(1) in file: qap:1144:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1144 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.upe[2738] params(1) in file: qap:1145:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1145 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.upf[2739] params(1) in file: qap:1146:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1146 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbz.upg[2740] params(1) in file: qap:1147:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1147 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#qaf.qbz.uph[2741] params(1) in file: qap:1149:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1149 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upi[2742] params(1) in file: qap:1150:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1150 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upj[2743] params(1) in file: qap:1151:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1151 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upk[2744] params(1) in file: qap:1152:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1152 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upl[2745] params(1) in file: qap:1153:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1153 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upm[2746] params(1) in file: qap:1154:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1154 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upn[2747] params(1) in file: qap:1155:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1155 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upo[2748] params(1) in file: qap:1156:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1156 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upp[2749] params(1) in file: qap:1157:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1157 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upq[2750] params(1) in file: qap:1158:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1158 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.upr[2751] params(1) in file: qap:1159:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1159 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qbz.ups[2752] params(1) in file: qap:1160:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1160 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            mov8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#qaf.qbz.upt[2753] params(1) in file: qap:1162:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1163 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#qaf.qbz.upu[2754] params(1) in file: qap:1166:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1167 call @3396 // <qkn#qko.qku.vps>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1168 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#qaf.qbz.upv[2755] params(1) in file: qap:1171:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1172 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#qaf.qbz.upw[2756] params(1) in file: qap:1176:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1177 ipushl #0   
1 [0x1]:            call @2755 // <std#qaf.qbz.upv>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @2753 // <std#qaf.qbz.upt>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#qaf.qbz.upx[2757] params(1) in file: qap:1180:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1181 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1182 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1184 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#qaf.qbz.upy[2758] params(1) in file: qap:1187:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1188 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1189 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1191 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#qaf.qbz.uqz[2759] params(0) in file: qap:1051:6: note:  
		class char base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1679 // <std#qaf.qar.tak>   
2 [0x2]:         ret   


constructor: std#qaf.qba.uqa[2760] params(1) in file: qap:1195:9: note:  
		    byte(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqb[2761] params(1) in file: qap:1196:9: note:  
		    byte(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqc[2762] params(1) in file: qap:1197:9: note:  
		    byte(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqd[2763] params(1) in file: qap:1198:9: note:  
		    byte(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqe[2764] params(1) in file: qap:1199:9: note:  
		    byte(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqf[2765] params(1) in file: qap:1200:9: note:  
		    byte(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqg[2766] params(1) in file: qap:1201:9: note:  
		    byte(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqh[2767] params(1) in file: qap:1202:9: note:  
		    byte(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqi[2768] params(1) in file: qap:1203:9: note:  
		    byte(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqj[2769] params(1) in file: qap:1204:9: note:  
		    byte(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uqk[2770] params(1) in file: qap:1205:9: note:  
		    byte(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2561 // <std#qaf.qay.uij>   
9 [0x9]:         ret   


constructor: std#qaf.qba.uql[2771] params(1) in file: qap:1206:9: note:  
		    byte(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @2561 // <std#qaf.qay.uij>   
3 [0x3]:         ret   


overload function: std#qaf.qba.uqm[2772] params(0) in file: qap:1208:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1208 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#qaf.qba.uqn[2773] params(0) in file: qap:1209:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1209 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#qaf.qba.uqo[2774] params(1) in file: qap:1210:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1210 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#qaf.qba.uqp[2775] params(0) in file: qap:1211:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1211 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#qaf.qba.uqq[2776] params(1) in file: qap:1212:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1212 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#qaf.qba.uqr[2777] params(1) in file: qap:1214:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1214 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uqs[2778] params(1) in file: qap:1215:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1215 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uqt[2779] params(1) in file: qap:1216:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1216 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uqu[2780] params(1) in file: qap:1217:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1217 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uqv[2781] params(1) in file: qap:1218:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1218 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uqw[2782] params(1) in file: qap:1219:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1219 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uqx[2783] params(1) in file: qap:1220:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1220 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uqy[2784] params(1) in file: qap:1221:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1221 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urz[2785] params(1) in file: qap:1222:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1222 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.ura[2786] params(1) in file: qap:1223:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1223 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urb[2787] params(1) in file: qap:1224:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1224 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urc[2788] params(1) in file: qap:1225:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1225 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qba.urd[2789] params(1) in file: qap:1227:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1227 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.ure[2790] params(1) in file: qap:1228:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1228 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urf[2791] params(1) in file: qap:1229:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1229 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urg[2792] params(1) in file: qap:1230:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1230 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urh[2793] params(1) in file: qap:1231:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1231 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uri[2794] params(1) in file: qap:1232:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1232 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urj[2795] params(1) in file: qap:1233:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1233 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urk[2796] params(1) in file: qap:1234:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1234 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.url[2797] params(1) in file: qap:1235:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1235 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urm[2798] params(1) in file: qap:1236:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1236 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urn[2799] params(1) in file: qap:1237:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1237 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uro[2800] params(1) in file: qap:1238:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1238 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qba.urp[2801] params(1) in file: qap:1240:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1240 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urq[2802] params(1) in file: qap:1241:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1241 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urr[2803] params(1) in file: qap:1242:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1242 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urs[2804] params(1) in file: qap:1243:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1243 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urt[2805] params(1) in file: qap:1244:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1244 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uru[2806] params(1) in file: qap:1245:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1245 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urv[2807] params(1) in file: qap:1246:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1246 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urw[2808] params(1) in file: qap:1247:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1247 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.urx[2809] params(1) in file: qap:1248:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1248 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.ury[2810] params(1) in file: qap:1249:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1249 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usz[2811] params(1) in file: qap:1250:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1250 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usa[2812] params(1) in file: qap:1251:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1251 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qba.usb[2813] params(1) in file: qap:1253:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1253 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usc[2814] params(1) in file: qap:1254:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1254 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usd[2815] params(1) in file: qap:1255:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1255 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.use[2816] params(1) in file: qap:1256:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1256 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usf[2817] params(1) in file: qap:1257:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1257 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usg[2818] params(1) in file: qap:1258:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1258 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.ush[2819] params(1) in file: qap:1259:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1259 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usi[2820] params(1) in file: qap:1260:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1260 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usj[2821] params(1) in file: qap:1261:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1261 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usk[2822] params(1) in file: qap:1262:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1262 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usl[2823] params(1) in file: qap:1263:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1263 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usm[2824] params(1) in file: qap:1264:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1264 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qba.usn[2825] params(1) in file: qap:1266:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1266 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uso[2826] params(1) in file: qap:1267:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1267 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usp[2827] params(1) in file: qap:1268:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1268 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usq[2828] params(1) in file: qap:1269:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1269 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usr[2829] params(1) in file: qap:1270:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1270 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uss[2830] params(1) in file: qap:1271:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1271 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.ust[2831] params(1) in file: qap:1272:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1272 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usu[2832] params(1) in file: qap:1273:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1273 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usv[2833] params(1) in file: qap:1274:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1274 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usw[2834] params(1) in file: qap:1275:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1275 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usx[2835] params(1) in file: qap:1276:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1276 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.usy[2836] params(1) in file: qap:1277:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1277 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#qaf.qba.utz[2837] params(1) in file: qap:1279:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1279 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.uta[2838] params(1) in file: qap:1280:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1280 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.utb[2839] params(1) in file: qap:1281:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1281 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.utc[2840] params(1) in file: qap:1282:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1282 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.utd[2841] params(1) in file: qap:1283:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1283 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.ute[2842] params(1) in file: qap:1284:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1284 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.utf[2843] params(1) in file: qap:1285:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1285 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.utg[2844] params(1) in file: qap:1286:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1286 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.uth[2845] params(1) in file: qap:1287:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1287 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.uti[2846] params(1) in file: qap:1288:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1288 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.utj[2847] params(1) in file: qap:1289:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1289 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qba.utk[2848] params(1) in file: qap:1290:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1290 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#qaf.qba.utl[2849] params(1) in file: qap:1292:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1292 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.utm[2850] params(1) in file: qap:1293:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1293 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.utn[2851] params(1) in file: qap:1294:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1294 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uto[2852] params(1) in file: qap:1295:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1295 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.utp[2853] params(1) in file: qap:1296:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1296 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.utq[2854] params(1) in file: qap:1297:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1297 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.utr[2855] params(1) in file: qap:1298:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1298 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.uts[2856] params(1) in file: qap:1299:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1299 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.utt[2857] params(1) in file: qap:1300:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1300 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.utu[2858] params(1) in file: qap:1301:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1301 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.utv[2859] params(1) in file: qap:1302:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1302 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#qaf.qba.utw[2860] params(1) in file: qap:1303:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1303 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#qaf.qba.utx[2861] params(1) in file: qap:1305:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1306 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#qaf.qba.uty[2862] params(1) in file: qap:1309:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1310 call @3396 // <qkn#qko.qku.vps>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1311 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#qaf.qba.uuz[2863] params(1) in file: qap:1314:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1315 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#qaf.qba.uua[2864] params(1) in file: qap:1319:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1320 ipushl #0   
1 [0x1]:            call @2863 // <std#qaf.qba.uuz>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @2861 // <std#qaf.qba.utx>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#qaf.qba.uub[2865] params(1) in file: qap:1323:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1324 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1325 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1327 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#qaf.qba.uuc[2866] params(1) in file: qap:1330:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1331 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1332 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1334 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#qaf.qba.uud[2867] params(0) in file: qap:1194:6: note:  
		class byte base uchar {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2651 // <std#qaf.qay.ulv>   
2 [0x2]:         ret   


constructor: std#qaf.qbb.uue[2868] params(1) in file: qap:1338:9: note:  
		    bool(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uuf[2869] params(1) in file: qap:1339:9: note:  
		    bool(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uug[2870] params(1) in file: qap:1340:9: note:  
		    bool(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uuh[2871] params(1) in file: qap:1341:9: note:  
		    bool(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uui[2872] params(1) in file: qap:1342:9: note:  
		    bool(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uuj[2873] params(1) in file: qap:1343:9: note:  
		    bool(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uuk[2874] params(1) in file: qap:1344:9: note:  
		    bool(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uul[2875] params(1) in file: qap:1345:9: note:  
		    bool(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uum[2876] params(1) in file: qap:1346:9: note:  
		    bool(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uun[2877] params(1) in file: qap:1347:9: note:  
		    bool(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uuo[2878] params(1) in file: qap:1348:9: note:  
		    bool(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1471 // <std#qaf.qar.ssk>   
9 [0x9]:         ret   


constructor: std#qaf.qbb.uup[2879] params(1) in file: qap:1349:9: note:  
		    bool(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1471 // <std#qaf.qar.ssk>   
3 [0x3]:         ret   


overload function: std#qaf.qbb.uuq[2880] params(0) in file: qap:1351:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1351 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#qaf.qbb.uur[2881] params(0) in file: qap:1352:8: note:  
		    def operator++() := (value = !value);
		       ^

0 [0x0]: line: 1352 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#qaf.qbb.uus[2882] params(1) in file: qap:1353:8: note:  
		    def operator++(num : var) := (!value);
		       ^

0 [0x0]: line: 1353 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#qaf.qbb.uut[2883] params(0) in file: qap:1354:8: note:  
		    def operator--() := (value = !value);
		       ^

0 [0x0]: line: 1354 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#qaf.qbb.uuu[2884] params(1) in file: qap:1355:8: note:  
		    def operator--(num : var) := (value = !value);
		       ^

0 [0x0]: line: 1355 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#qaf.qbb.uuv[2885] params(1) in file: qap:1357:8: note:  
		    def operator+=(num : ulong)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1357 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uuw[2886] params(1) in file: qap:1358:8: note:  
		    def operator+=(num : long)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1358 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uux[2887] params(1) in file: qap:1359:8: note:  
		    def operator+=(num : uint)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1359 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uuy[2888] params(1) in file: qap:1360:8: note:  
		    def operator+=(num : int)    := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1360 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvz[2889] params(1) in file: qap:1361:8: note:  
		    def operator+=(num : ushort) := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1361 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uva[2890] params(1) in file: qap:1362:8: note:  
		    def operator+=(num : short)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1362 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvb[2891] params(1) in file: qap:1363:8: note:  
		    def operator+=(num : uchar)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1363 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvc[2892] params(1) in file: qap:1364:8: note:  
		    def operator+=(num : char)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1364 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvd[2893] params(1) in file: qap:1365:8: note:  
		    def operator+=(num : byte)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1365 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uve[2894] params(1) in file: qap:1366:8: note:  
		    def operator+=(num : bool)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1366 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvf[2895] params(1) in file: qap:1367:8: note:  
		    def operator+=(num : double)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1367 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvg[2896] params(1) in file: qap:1368:8: note:  
		    def operator+=(num : var)    := check_value(value+=num);
		       ^

0 [0x0]: line: 1368 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            add ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2969 // <std#qaf.qbb.uyb>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#qaf.qbb.uvh[2897] params(1) in file: qap:1370:8: note:  
		    def operator-=(num : ulong)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1370 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvi[2898] params(1) in file: qap:1371:8: note:  
		    def operator-=(num : long)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1371 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvj[2899] params(1) in file: qap:1372:8: note:  
		    def operator-=(num : uint)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1372 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvk[2900] params(1) in file: qap:1373:8: note:  
		    def operator-=(num : int)    := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1373 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvl[2901] params(1) in file: qap:1374:8: note:  
		    def operator-=(num : ushort) := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1374 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvm[2902] params(1) in file: qap:1375:8: note:  
		    def operator-=(num : short)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1375 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvn[2903] params(1) in file: qap:1376:8: note:  
		    def operator-=(num : uchar)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1376 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvo[2904] params(1) in file: qap:1377:8: note:  
		    def operator-=(num : char)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1377 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvp[2905] params(1) in file: qap:1378:8: note:  
		    def operator-=(num : byte)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1378 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvq[2906] params(1) in file: qap:1379:8: note:  
		    def operator-=(num : bool)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1379 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvr[2907] params(1) in file: qap:1380:8: note:  
		    def operator-=(num : double)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1380 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvs[2908] params(1) in file: qap:1381:8: note:  
		    def operator-=(num : var)    := check_value(value-=num);
		       ^

0 [0x0]: line: 1381 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            sub ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2969 // <std#qaf.qbb.uyb>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#qaf.qbb.uvt[2909] params(1) in file: qap:1383:8: note:  
		    def operator*=(num : ulong)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1383 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvu[2910] params(1) in file: qap:1384:8: note:  
		    def operator*=(num : long)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1384 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvv[2911] params(1) in file: qap:1385:8: note:  
		    def operator*=(num : uint)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1385 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvw[2912] params(1) in file: qap:1386:8: note:  
		    def operator*=(num : int)    := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1386 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvx[2913] params(1) in file: qap:1387:8: note:  
		    def operator*=(num : ushort) := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1387 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uvy[2914] params(1) in file: qap:1388:8: note:  
		    def operator*=(num : short)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1388 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwz[2915] params(1) in file: qap:1389:8: note:  
		    def operator*=(num : uchar)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1389 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwa[2916] params(1) in file: qap:1390:8: note:  
		    def operator*=(num : char)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1390 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwb[2917] params(1) in file: qap:1391:8: note:  
		    def operator*=(num : byte)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1391 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwc[2918] params(1) in file: qap:1392:8: note:  
		    def operator*=(num : bool)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1392 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwd[2919] params(1) in file: qap:1393:8: note:  
		    def operator*=(num : double)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1393 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwe[2920] params(1) in file: qap:1394:8: note:  
		    def operator*=(num : var)    := check_value(value*=num);
		       ^

0 [0x0]: line: 1394 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mul ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2969 // <std#qaf.qbb.uyb>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#qaf.qbb.uwf[2921] params(1) in file: qap:1396:8: note:  
		    def operator/=(num : ulong)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1396 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwg[2922] params(1) in file: qap:1397:8: note:  
		    def operator/=(num : long)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1397 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwh[2923] params(1) in file: qap:1398:8: note:  
		    def operator/=(num : uint)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1398 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwi[2924] params(1) in file: qap:1399:8: note:  
		    def operator/=(num : int)    := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1399 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwj[2925] params(1) in file: qap:1400:8: note:  
		    def operator/=(num : ushort) := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1400 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwk[2926] params(1) in file: qap:1401:8: note:  
		    def operator/=(num : short)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1401 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwl[2927] params(1) in file: qap:1402:8: note:  
		    def operator/=(num : uchar)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1402 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwm[2928] params(1) in file: qap:1403:8: note:  
		    def operator/=(num : char)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1403 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwn[2929] params(1) in file: qap:1404:8: note:  
		    def operator/=(num : byte)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1404 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwo[2930] params(1) in file: qap:1405:8: note:  
		    def operator/=(num : bool)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1405 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwp[2931] params(1) in file: qap:1406:8: note:  
		    def operator/=(num : double)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1406 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwq[2932] params(1) in file: qap:1407:8: note:  
		    def operator/=(num : var)    := check_value(value/=num);
		       ^

0 [0x0]: line: 1407 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            div ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2969 // <std#qaf.qbb.uyb>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#qaf.qbb.uwr[2933] params(1) in file: qap:1409:8: note:  
		    def operator%=(num : ulong)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1409 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uws[2934] params(1) in file: qap:1410:8: note:  
		    def operator%=(num : long)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1410 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwt[2935] params(1) in file: qap:1411:8: note:  
		    def operator%=(num : uint)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1411 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwu[2936] params(1) in file: qap:1412:8: note:  
		    def operator%=(num : int)    := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1412 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwv[2937] params(1) in file: qap:1413:8: note:  
		    def operator%=(num : ushort) := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1413 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uww[2938] params(1) in file: qap:1414:8: note:  
		    def operator%=(num : short)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1414 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwx[2939] params(1) in file: qap:1415:8: note:  
		    def operator%=(num : uchar)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1415 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uwy[2940] params(1) in file: qap:1416:8: note:  
		    def operator%=(num : char)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1416 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxz[2941] params(1) in file: qap:1417:8: note:  
		    def operator%=(num : byte)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1417 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxa[2942] params(1) in file: qap:1418:8: note:  
		    def operator%=(num : bool)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1418 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxb[2943] params(1) in file: qap:1419:8: note:  
		    def operator%=(num : double)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1419 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxc[2944] params(1) in file: qap:1420:8: note:  
		    def operator%=(num : var)    := check_value(value%=num);
		       ^

0 [0x0]: line: 1420 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mod ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2969 // <std#qaf.qbb.uyb>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#qaf.qbb.uxd[2945] params(1) in file: qap:1422:8: note:  
		    def operator&=(num : ulong)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1422 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxe[2946] params(1) in file: qap:1423:8: note:  
		    def operator&=(num : long)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1423 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxf[2947] params(1) in file: qap:1424:8: note:  
		    def operator&=(num : uint)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1424 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxg[2948] params(1) in file: qap:1425:8: note:  
		    def operator&=(num : int)    := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1425 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxh[2949] params(1) in file: qap:1426:8: note:  
		    def operator&=(num : ushort) := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1426 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxi[2950] params(1) in file: qap:1427:8: note:  
		    def operator&=(num : short)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1427 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxj[2951] params(1) in file: qap:1428:8: note:  
		    def operator&=(num : uchar)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1428 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxk[2952] params(1) in file: qap:1429:8: note:  
		    def operator&=(num : char)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1429 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxl[2953] params(1) in file: qap:1430:8: note:  
		    def operator&=(num : byte)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1430 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxm[2954] params(1) in file: qap:1431:8: note:  
		    def operator&=(num : bool)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1431 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxn[2955] params(1) in file: qap:1432:8: note:  
		    def operator&=(num : double)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1432 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2969 // <std#qaf.qbb.uyb>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#qaf.qbb.uxo[2956] params(1) in file: qap:1433:8: note:  
		    def operator&=(num : var)    := check_value(value&=num);
		       ^

0 [0x0]: line: 1433 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            and ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            rstore cmt   
12 [0xc]:            call @2969 // <std#qaf.qbb.uyb>   
13 [0xd]:            loadval ebx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#qaf.qbb.uxp[2957] params(1) in file: qap:1435:8: note:  
		    def operator|=(num : ulong)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1435 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxq[2958] params(1) in file: qap:1436:8: note:  
		    def operator|=(num : long)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1436 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxr[2959] params(1) in file: qap:1437:8: note:  
		    def operator|=(num : uint)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1437 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxs[2960] params(1) in file: qap:1438:8: note:  
		    def operator|=(num : int)    := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1438 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxt[2961] params(1) in file: qap:1439:8: note:  
		    def operator|=(num : ushort) := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1439 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxu[2962] params(1) in file: qap:1440:8: note:  
		    def operator|=(num : short)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1440 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxv[2963] params(1) in file: qap:1441:8: note:  
		    def operator|=(num : uchar)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1441 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxw[2964] params(1) in file: qap:1442:8: note:  
		    def operator|=(num : char)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1442 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxx[2965] params(1) in file: qap:1443:8: note:  
		    def operator|=(num : byte)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1443 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uxy[2966] params(1) in file: qap:1444:8: note:  
		    def operator|=(num : bool)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1444 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uyz[2967] params(1) in file: qap:1445:8: note:  
		    def operator|=(num : double)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1445 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2969 // <std#qaf.qbb.uyb>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#qaf.qbb.uya[2968] params(1) in file: qap:1446:8: note:  
		    def operator|=(num : var)    := check_value(value|=num);
		       ^

0 [0x0]: line: 1446 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            or ecx, ebx   
10 [0xa]:            mov8 cmt, cmt   
11 [0xb]:            rmov adx, cmt   
12 [0xc]:            rstore cmt   
13 [0xd]:            call @2969 // <std#qaf.qbb.uyb>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


function: std#qaf.qbb.uyb[2969] params(1) in file: qap:1448:8: note:  
		    def check_value(new_val: var) : var {
		       ^

0 [0x0]: line: 1449 loadl ebx, fp+1   
1 [0x1]:            skne ebx // pc = 5   
2 [0x2]:            movi #1, ebx   
4 [0x4]:            skip @2 // pc = 6   
5 [0x5]:            movi #0, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#qaf.qbb.uyc[2970] params(0) in file: qap:1452:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 1453 new_class @0 // pxo#pxp   
1 [0x1]:            movnd adx   
2 [0x2]:            dup    
3 [0x3]:            movl 0   
4 [0x4]:            movn #0   
6 [0x6]:            movi #0, adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            skne ebx // pc = 13   
10 [0xa]:            newstr @14 // true   
11 [0xb]:            popobj2    
12 [0xc]:            skip @2 // pc = 14   
13 [0xd]:            newstr @15 // false   
14 [0xe]:            popobj2    
15 [0xf]:            pushobj   
16 [0x10]:            call @3475 // <std#string.string>   
17 [0x11]:            popobj2    
18 [0x12]:            returnobj   
19 [0x13]:            ret   


constructor: std#qaf.qbb.uyd[2971] params(0) in file: qap:1337:6: note:  
		class bool base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1679 // <std#qaf.qar.tak>   
2 [0x2]:         ret   


constructor: std#qaf.qbc.uye[2972] params(1) in file: qap:1458:11: note:  
		    double(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyf[2973] params(1) in file: qap:1459:11: note:  
		    double(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyg[2974] params(1) in file: qap:1460:11: note:  
		    double(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyh[2975] params(1) in file: qap:1461:11: note:  
		    double(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyi[2976] params(1) in file: qap:1462:11: note:  
		    double(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyj[2977] params(1) in file: qap:1463:11: note:  
		    double(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyk[2978] params(1) in file: qap:1464:11: note:  
		    double(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyl[2979] params(1) in file: qap:1465:11: note:  
		    double(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uym[2980] params(1) in file: qap:1466:11: note:  
		    double(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyn[2981] params(1) in file: qap:1467:11: note:  
		    double(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyo[2982] params(1) in file: qap:1468:11: note:  
		    double(i : double) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1680 // <std#qaf.qar.tam>   
9 [0x9]:         ret   


constructor: std#qaf.qbc.uyp[2983] params(1) in file: qap:1469:11: note:  
		    double(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1680 // <std#qaf.qar.tam>   
3 [0x3]:         ret   


overload function: std#qaf.qbc.uyq[2984] params(0) in file: qap:1471:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1471 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#qaf.qbc.uyr[2985] params(0) in file: qap:1472:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1472 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movi #0, adx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            return_val ebx   
11 [0xb]:            ret   


overload function: std#qaf.qbc.uys[2986] params(1) in file: qap:1473:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1473 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            movr ebx, egx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#qaf.qbc.uyt[2987] params(0) in file: qap:1474:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1474 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movi #0, adx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            return_val ebx   
11 [0xb]:            ret   


overload function: std#qaf.qbc.uyu[2988] params(1) in file: qap:1475:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1475 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            movr ebx, egx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#qaf.qbc.uyv[2989] params(1) in file: qap:1477:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1477 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.uyw[2990] params(1) in file: qap:1478:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1478 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.uyx[2991] params(1) in file: qap:1479:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1479 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.uyy[2992] params(1) in file: qap:1480:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1480 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzz[2993] params(1) in file: qap:1481:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1481 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vza[2994] params(1) in file: qap:1482:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1482 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzb[2995] params(1) in file: qap:1483:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1483 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzc[2996] params(1) in file: qap:1484:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1484 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzd[2997] params(1) in file: qap:1485:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1485 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vze[2998] params(1) in file: qap:1486:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1486 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzf[2999] params(1) in file: qap:1487:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1487 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzg[3000] params(1) in file: qap:1488:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1488 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#qaf.qbc.vzh[3001] params(1) in file: qap:1490:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1490 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzi[3002] params(1) in file: qap:1491:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1491 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzj[3003] params(1) in file: qap:1492:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1492 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzk[3004] params(1) in file: qap:1493:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1493 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzl[3005] params(1) in file: qap:1494:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1494 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzm[3006] params(1) in file: qap:1495:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1495 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzn[3007] params(1) in file: qap:1496:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1496 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzo[3008] params(1) in file: qap:1497:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1497 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzp[3009] params(1) in file: qap:1498:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1498 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzq[3010] params(1) in file: qap:1499:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1499 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzr[3011] params(1) in file: qap:1500:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1500 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzs[3012] params(1) in file: qap:1501:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1501 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#qaf.qbc.vzt[3013] params(1) in file: qap:1503:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1503 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzu[3014] params(1) in file: qap:1504:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1504 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzv[3015] params(1) in file: qap:1505:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1505 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzw[3016] params(1) in file: qap:1506:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1506 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzx[3017] params(1) in file: qap:1507:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1507 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vzy[3018] params(1) in file: qap:1508:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1508 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vaz[3019] params(1) in file: qap:1509:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1509 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vaa[3020] params(1) in file: qap:1510:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1510 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vab[3021] params(1) in file: qap:1511:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1511 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vac[3022] params(1) in file: qap:1512:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1512 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vad[3023] params(1) in file: qap:1513:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1513 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vae[3024] params(1) in file: qap:1514:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1514 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#qaf.qbc.vaf[3025] params(1) in file: qap:1516:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1516 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vag[3026] params(1) in file: qap:1517:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1517 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vah[3027] params(1) in file: qap:1518:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1518 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vai[3028] params(1) in file: qap:1519:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1519 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vaj[3029] params(1) in file: qap:1520:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1520 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vak[3030] params(1) in file: qap:1521:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1521 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.val[3031] params(1) in file: qap:1522:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1522 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vam[3032] params(1) in file: qap:1523:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1523 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.van[3033] params(1) in file: qap:1524:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1524 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vao[3034] params(1) in file: qap:1525:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1525 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vap[3035] params(1) in file: qap:1526:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1526 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vaq[3036] params(1) in file: qap:1527:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1527 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#qaf.qbc.var[3037] params(1) in file: qap:1529:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1529 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vas[3038] params(1) in file: qap:1530:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1530 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vat[3039] params(1) in file: qap:1531:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1531 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vau[3040] params(1) in file: qap:1532:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1532 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vav[3041] params(1) in file: qap:1533:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1533 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vaw[3042] params(1) in file: qap:1534:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1534 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vax[3043] params(1) in file: qap:1535:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1535 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vay[3044] params(1) in file: qap:1536:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1536 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbz[3045] params(1) in file: qap:1537:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1537 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vba[3046] params(1) in file: qap:1538:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1538 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbb[3047] params(1) in file: qap:1539:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1539 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbc[3048] params(1) in file: qap:1540:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1540 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#qaf.qbc.vbd[3049] params(1) in file: qap:1542:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1542 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbe[3050] params(1) in file: qap:1543:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1543 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbf[3051] params(1) in file: qap:1544:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1544 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbg[3052] params(1) in file: qap:1545:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1545 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbh[3053] params(1) in file: qap:1546:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1546 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbi[3054] params(1) in file: qap:1547:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1547 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbj[3055] params(1) in file: qap:1548:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1548 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbk[3056] params(1) in file: qap:1549:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1549 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbl[3057] params(1) in file: qap:1550:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1550 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbm[3058] params(1) in file: qap:1551:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1551 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbn[3059] params(1) in file: qap:1552:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1552 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbo[3060] params(1) in file: qap:1553:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1553 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#qaf.qbc.vbp[3061] params(1) in file: qap:1555:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1555 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbq[3062] params(1) in file: qap:1556:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1556 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbr[3063] params(1) in file: qap:1557:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1557 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbs[3064] params(1) in file: qap:1558:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1558 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbt[3065] params(1) in file: qap:1559:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1559 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbu[3066] params(1) in file: qap:1560:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1560 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbv[3067] params(1) in file: qap:1561:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1561 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbw[3068] params(1) in file: qap:1562:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1562 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vbx[3069] params(1) in file: qap:1563:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1563 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vby[3070] params(1) in file: qap:1564:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1564 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vcz[3071] params(1) in file: qap:1565:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1565 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#qaf.qbc.vca[3072] params(1) in file: qap:1566:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1566 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


constructor: std#qaf.qbc.vcb[3073] params(0) in file: qap:1457:6: note:  
		class double base integer<var> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1888 // <std#qaf.qar.tim>   
2 [0x2]:         ret   


function: std#qaf.qbf.vcc[3074] params(1) in file: qbd:20:8: note:  
		    def set_resize_capacity(new_capacity: var) {
		       ^

0 [0x0]: line: 21 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


constructor: std#qaf.qbf.vcd[3075] params(1) in file: qbd:24:19: note:  
		    string_builder(str : _int8[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 25 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 57   
53 [0x35]: line: 26 pushl 0   
54 [0x36]:          pushl 1   
55 [0x37]:          call @3087 // <std#qaf.qbf.vcp>   
56 [0x38]:          pop   
57 [0x39]:          nop   
58 [0x3a]:          ret   


constructor: std#qaf.qbf.vce[3076] params(1) in file: qbd:30:19: note:  
		    string_builder(ch: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 31 pushl 0   
49 [0x31]:          ipushl #1   
50 [0x32]:          call @3084 // <std#qaf.qbf.vcm>   
51 [0x33]:          pop   
52 [0x34]:          ret   


constructor: std#qaf.qbf.vcf[3077] params(1) in file: qbd:34:19: note:  
		    string_builder(str : char[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 35 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 111   
53 [0x35]: line: 36 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          sizeof ebx   
56 [0x38]:          rstore ebx   
57 [0x39]:          call @3081 // <std#qaf.qbf.vcj>   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 37 pushl 0   
63 [0x3f]:          movl 1   
64 [0x40]:          sizeof ebx   
65 [0x41]:          rstore ebx   
66 [0x42]:          call @3082 // <std#qaf.qbf.vck>   
67 [0x43]:          nop   
68 [0x44]: line: 40 movl 1   
69 [0x45]:          sizeof ebx   
70 [0x46]:          newarry ebx: 8   
71 [0x47]:          movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          popobj   
75 [0x4b]: line: 41 istorel -1, fp+3   
77 [0x4d]:          pushl 1   
78 [0x4e]:          popl 4   
79 [0x4f]:          iaddl 1, fp@3   
81 [0x51]:          movl 4   
82 [0x52]:          sizeof ecx   
83 [0x53]:          loadl ebx, fp+3   
84 [0x54]:          lt ebx, ecx   
85 [0x55]:          jne 111   
86 [0x56]:          movnd ebx   
87 [0x57]:          pushobj   
88 [0x58]:          popl 2   
89 [0x59]: line: 42 pushl 2   
90 [0x5a]:          call @1678 // <std#qaf.qar.taj>   
91 [0x5b]:          movl 0   
92 [0x5c]:          movn #0   
94 [0x5e]:          pushobj   
95 [0x5f]:          movl 0   
96 [0x60]:          movn #3   
98 [0x62]:          movi #0, adx   
100 [0x64]:          iaload ebx, adx   
101 [0x65]:          inc ebx   
102 [0x66]:          movi #0, adx   
104 [0x68]:          rmov adx, ebx   
105 [0x69]:          popobj2    
106 [0x6a]:          movr adx, ebx   
107 [0x6b]:          chklen adx   
108 [0x6c]:          loadval ebx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          jmp @79   
111 [0x6f]:          nop   
112 [0x70]:          ret   


constructor: std#qaf.qbf.vcg[3078] params(1) in file: qbd:47:19: note:  
		    string_builder(str: string) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 48 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 58   
53 [0x35]: line: 49 pushl 0   
54 [0x36]:          pushl 1   
55 [0x37]:          call @3501 // <std#string.get_data>   
56 [0x38]:          call @3087 // <std#qaf.qbf.vcp>   
57 [0x39]:          pop   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


constructor: std#qaf.qbf.vch[3079] params(1) in file: qbd:53:19: note:  
		    string_builder(str: string_builder) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 54 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 60   
53 [0x35]: line: 55 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          call @3087 // <std#qaf.qbf.vcp>   
59 [0x3b]:          pop   
60 [0x3c]:          nop   
61 [0x3d]:          ret   


constructor: std#qaf.qbf.vci[3080] params(2) in file: qbd:59:19: note:  
		    string_builder(str : _int8[], offset: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 60 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 114   
53 [0x35]: line: 61 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          sizeof ebx   
56 [0x38]:          rstore ebx   
57 [0x39]:          loadl ebx, fp+2   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          sub ecx, ebx -> ebx   
60 [0x3c]:          rstore ebx   
61 [0x3d]:          call @3081 // <std#qaf.qbf.vcj>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 71   
66 [0x42]: line: 62 pushl 0   
67 [0x43]:          movl 1   
68 [0x44]:          sizeof ebx   
69 [0x45]:          rstore ebx   
70 [0x46]:          call @3082 // <std#qaf.qbf.vck>   
71 [0x47]:          nop   
72 [0x48]: line: 65 pushl 1   
73 [0x49]:          movl 0   
74 [0x4a]:          movn #0   
76 [0x4c]:          pushobj   
77 [0x4d]:          movl 0   
78 [0x4e]:          movn #3   
80 [0x50]:          movi #0, adx   
82 [0x52]:          iaload ebx, adx   
83 [0x53]:          inc ebx   
84 [0x54]:          movi #0, adx   
86 [0x56]:          rmov adx, ebx   
87 [0x57]:          rstore ebx   
88 [0x58]:          ipushl #2   
89 [0x59]:          movl 1   
90 [0x5a]:          sizeof ebx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          call @3278 // <std.io#qbq.vkj>   
93 [0x5d]: line: 66 movl 1   
94 [0x5e]:          sizeof ebx   
95 [0x5f]:          rstore ebx   
96 [0x60]:          loadl ebx, fp+2   
97 [0x61]:          loadval ecx   
98 [0x62]:          sub ecx, ebx -> ebx   
99 [0x63]:          rstore ebx   
100 [0x64]:          movi #1, ebx   
102 [0x66]:          loadval ecx   
103 [0x67]:          sub ecx, ebx -> ebx   
104 [0x68]:          rstore ebx   
105 [0x69]:          movl 0   
106 [0x6a]:          movn #3   
108 [0x6c]:          movi #0, adx   
110 [0x6e]:          iaload ecx, adx   
111 [0x6f]:          loadval ebx   
112 [0x70]:          add ecx, ebx -> ebx   
113 [0x71]:          rmov adx, ebx   
114 [0x72]:          nop   
115 [0x73]:          ret   


function: std#qaf.qbf.vcj[3081] params(1) in file: qbd:70:8: note:  
		    def space_available(space_required : var) : var {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          sizeof ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          lt ecx, ebx   
22 [0x16]:          return_val cmt   
23 [0x17]:          ret   


function: std#qaf.qbf.vck[3082] params(1) in file: qbd:74:8: note:  
		    def expand(space_required : var) {
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          loadval ecx   
23 [0x17]:          add ecx, ebx -> ebx   
24 [0x18]:          smovr_2 ebx, fp+2   
25 [0x19]: line: 76 movl 0   
26 [0x1a]:          movn #0   
28 [0x1c]:          pushobj   
29 [0x1d]:          ipushl #2   
30 [0x1e]:          call @3268 // <std.io#qbq.vkz>   
31 [0x1f]:          ret   


function: std#qaf.qbf.vcl[3083] params(2) in file: qbd:79:8: note:  
		    def replace(pos : var, ch: _int8) : string_builder {
		       ^

0 [0x0]: line: 80 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          movr ebx, cmt   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 14   
10 [0xa]: line: 81 pushl 0   
11 [0xb]:          ipushl #1   
12 [0xc]:          call @3116 // <std#qaf.qbf.vds>   
13 [0xd]:          throw    
14 [0xe]:          nop   
15 [0xf]: line: 84 ipushl #2   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+1   
21 [0x15]:          popobj2    
22 [0x16]:          movr adx, ebx   
23 [0x17]:          chklen adx   
24 [0x18]:          loadval ebx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 85 movl 0   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   


function: std#qaf.qbf.vcm[3084] params(1) in file: qbd:88:8: note:  
		    def append(ch: var) : string_builder
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 91 movi #255, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @41   
16 [0x10]:          movl 0   
17 [0x11]:          movn #3   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          rstore ebx   
23 [0x17]:          movi #1, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          add ecx, ebx -> ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          gte ecx, ebx   
34 [0x22]:          movr ebx, cmt   
35 [0x23]:          movr cmt, ebx   
36 [0x24]:          jne 41   
37 [0x25]: line: 93 pushl 0   
38 [0x26]:          istore 0   
40 [0x28]:          call @3082 // <std#qaf.qbf.vck>   
41 [0x29]:          nop   
42 [0x2a]: line: 95 ipushl #1   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #0   
46 [0x2e]:          pushobj   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          sizeof ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movi #1, ebx   
54 [0x36]:          loadval ecx   
55 [0x37]:          sub ecx, ebx -> ebx   
56 [0x38]:          popobj2    
57 [0x39]:          movr adx, ebx   
58 [0x3a]:          chklen adx   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 96 movl 0   
62 [0x3e]:          returnobj   
63 [0x3f]:          ret   


function: std#qaf.qbf.vcn[3085] params(0) in file: qbd:99:8: note:  
		    def get_elements() := to_string().get_elements();
		       ^

0 [0x0]: line: 99 pushl 0   
1 [0x1]:          call @3091 // <std#qaf.qbf.vct>   
2 [0x2]:          call @3502 // <std#string.get_elements>   
3 [0x3]:          popobj2    
4 [0x4]:          returnobj   
5 [0x5]:          ret   


function: std#qaf.qbf.vco[3086] params(1) in file: qbd:101:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 101 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1678 // <std#qaf.qar.taj>   
3 [0x3]:           call @3084 // <std#qaf.qbf.vcm>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#qaf.qbf.vcp[3087] params(1) in file: qbd:103:8: note:  
		    def append(immstr: _int8[]) : string_builder
		       ^

0 [0x0]: line: 105 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 107 movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 29   
16 [0x10]: line: 108 movl 1   
17 [0x11]:           sizeof ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #255, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           newarry ebx: 8   
24 [0x18]:           movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           popobj   
28 [0x1c]:           jmp @43   
29 [0x1d]:           pushl 0   
30 [0x1e]:           movl 1   
31 [0x1f]:           sizeof ebx   
32 [0x20]:           rstore ebx   
33 [0x21]:           call @3081 // <std#qaf.qbf.vcj>   
34 [0x22]:           loadval ebx   
35 [0x23]:           not ebx, ebx   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 43   
38 [0x26]: line: 110 pushl 0   
39 [0x27]:           movl 1   
40 [0x28]:           sizeof ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @3082 // <std#qaf.qbf.vck>   
43 [0x2b]:           nop   
44 [0x2c]: line: 112 pushl 1   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           movl 0   
50 [0x32]:           movn #3   
52 [0x34]:           movi #0, adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           inc ebx   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           rmov adx, ebx   
59 [0x3b]:           rstore ebx   
60 [0x3c]:           istore 0   
62 [0x3e]:           movl 1   
63 [0x3f]:           sizeof ebx   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3278 // <std.io#qbq.vkj>   
66 [0x42]: line: 113 movl 1   
67 [0x43]:           sizeof ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movi #1, ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           sub ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 0   
75 [0x4b]:           movn #3   
77 [0x4d]:           movi #0, adx   
79 [0x4f]:           iaload ecx, adx   
80 [0x50]:           loadval ebx   
81 [0x51]:           add ecx, ebx -> ebx   
82 [0x52]:           rmov adx, ebx   
83 [0x53]: line: 114 movl 0   
84 [0x54]:           returnobj   
85 [0x55]:           ret   


function: std#qaf.qbf.vcq[3088] params(2) in file: qbd:117:8: note:  
		    def append(immstr: _int8[], len: var) : string_builder
		       ^

0 [0x0]: line: 119 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 120 loadl ecx, fp+2   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           lt ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 21   
15 [0xf]: line: 121 new_class @0 // pxo#pxp   
16 [0x10]:           newstr @0 // nil   
17 [0x11]:           dup    
18 [0x12]:           newstr @16 // length cannot be less than zero   
19 [0x13]:           call @3584 // <std#error.error>   
20 [0x14]:           throw    
21 [0x15]:           nop   
22 [0x16]: line: 123 ipushl #2   
23 [0x17]:           movl 1   
24 [0x18]:           sizeof ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           gt ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 48   
30 [0x1e]: line: 124 new_class @0 // pxo#pxp   
31 [0x1f]:           newstr @0 // nil   
32 [0x20]:           dup    
33 [0x21]:           new_class @0 // pxo#pxp   
34 [0x22]:           movnd adx   
35 [0x23]:           dup    
36 [0x24]:           newstr @17 // length of:    
37 [0x25]:           call @3475 // <std#string.string>   
38 [0x26]:           ipushl #2   
39 [0x27]:           call @3507 // <std#string.operator+>   
40 [0x28]:           newstr @18 //  is greater than the string:    
41 [0x29]:           call @3487 // <std#string.operator+>   
42 [0x2a]:           movl 1   
43 [0x2b]:           sizeof ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           call @3507 // <std#string.operator+>   
46 [0x2e]:           call @3585 // <std#error.error>   
47 [0x2f]:           throw    
48 [0x30]:           nop   
49 [0x31]: line: 126 movl 0   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           pushnull    
54 [0x36]:           itest ebx   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 68   
57 [0x39]: line: 127 ipushl #2   
58 [0x3a]:           movi #255, ebx   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           add ecx, ebx -> ebx   
62 [0x3e]:           newarry ebx: 8   
63 [0x3f]:           movl 0   
64 [0x40]:           movn #0   
66 [0x42]:           popobj   
67 [0x43]:           jmp @82   
68 [0x44]:           pushl 0   
69 [0x45]:           movl 1   
70 [0x46]:           sizeof ebx   
71 [0x47]:           rstore ebx   
72 [0x48]:           call @3081 // <std#qaf.qbf.vcj>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           not ebx, ebx   
75 [0x4b]:           movr cmt, ebx   
76 [0x4c]:           jne 82   
77 [0x4d]: line: 129 pushl 0   
78 [0x4e]:           movl 1   
79 [0x4f]:           sizeof ebx   
80 [0x50]:           rstore ebx   
81 [0x51]:           call @3082 // <std#qaf.qbf.vck>   
82 [0x52]:           nop   
83 [0x53]: line: 131 pushl 1   
84 [0x54]:           movl 0   
85 [0x55]:           movn #0   
87 [0x57]:           pushobj   
88 [0x58]:           movl 0   
89 [0x59]:           movn #3   
91 [0x5b]:           movi #0, adx   
93 [0x5d]:           iaload ebx, adx   
94 [0x5e]:           inc ebx   
95 [0x5f]:           movi #0, adx   
97 [0x61]:           rmov adx, ebx   
98 [0x62]:           rstore ebx   
99 [0x63]:           istore 0   
101 [0x65]:           ipushl #2   
102 [0x66]:           call @3278 // <std.io#qbq.vkj>   
103 [0x67]: line: 132 movl 1   
104 [0x68]:           sizeof ebx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           loadl ebx, fp+2   
107 [0x6b]:           loadval ecx   
108 [0x6c]:           sub ecx, ebx -> ebx   
109 [0x6d]:           rstore ebx   
110 [0x6e]:           movi #1, ebx   
112 [0x70]:           loadval ecx   
113 [0x71]:           sub ecx, ebx -> ebx   
114 [0x72]:           rstore ebx   
115 [0x73]:           movl 0   
116 [0x74]:           movn #3   
118 [0x76]:           movi #0, adx   
120 [0x78]:           iaload ecx, adx   
121 [0x79]:           loadval ebx   
122 [0x7a]:           add ecx, ebx -> ebx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]: line: 133 movl 0   
125 [0x7d]:           returnobj   
126 [0x7e]:           ret   


overload function: std#qaf.qbf.vcr[3089] params(1) in file: qbd:136:8: note:  
		    def operator+(immstr : _int8[]) : string_builder {
		       ^

0 [0x0]: line: 137 new_class @0 // pxo#pxp   
1 [0x1]:           idiv adx, #? (112)   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3075 // <std#qaf.qbf.vcd>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 138 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 22   
15 [0xf]: line: 139 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           call @3087 // <std#qaf.qbf.vcp>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   
21 [0x15]:           jmp @28   
22 [0x16]: line: 141 pushl 2   
23 [0x17]:           newstr @19 // null   
24 [0x18]:           call @3087 // <std#qaf.qbf.vcp>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   
28 [0x1c]:           nop   


overload function: std#qaf.qbf.vcs[3090] params(1) in file: qbd:145:8: note:  
		    def operator+(obj : printable) : string_builder {
		       ^

0 [0x0]: line: 146 new_class @0 // pxo#pxp   
1 [0x1]:           idiv adx, #? (112)   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3075 // <std#qaf.qbf.vcd>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 147 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 25   
15 [0xf]: line: 148 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           invoke_delegate 3592 { static=0, args=0 }   
19 [0x13]:           call @3501 // <std#string.get_data>   
20 [0x14]:           call @3087 // <std#qaf.qbf.vcp>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 150 pushl 2   
26 [0x1a]:           newstr @19 // null   
27 [0x1b]:           call @3087 // <std#qaf.qbf.vcp>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


function: std#qaf.qbf.vct[3091] params(0) in file: qbd:153:8: note:  
		    def to_string() := new string(data, 0, cursor + 1);
		       ^

0 [0x0]: line: 153 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           istore 0   
9 [0x9]:           movl 0   
10 [0xa]:           movn #3   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #1, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           add ecx, ebx -> ebx   
20 [0x14]:           rstore ebx   
21 [0x15]:           call @3480 // <std#string.string>   
22 [0x16]:           popobj2    
23 [0x17]:           returnobj   
24 [0x18]:           ret   


overload function: std#qaf.qbf.vcu[3092] params(1) in file: qbd:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           tne ecx, ebx   
16 [0x10]:           jne 20   
17 [0x11]: line: 157 istorel 0, fp+0   
19 [0x13]:           ret   
20 [0x14]:           nop   
21 [0x15]: line: 159 istorel 0, fp+2   
23 [0x17]: line: 160 istorel -1, fp+4   
25 [0x19]:           pushl 1   
26 [0x1a]:           popl 5   
27 [0x1b]:           iaddl 1, fp@4   
29 [0x1d]:           movl 5   
30 [0x1e]:           sizeof ecx   
31 [0x1f]:           loadl ebx, fp+4   
32 [0x20]:           lt ebx, ecx   
33 [0x21]:           jne 58   
34 [0x22]:           iaload ecx, ebx   
35 [0x23]:           smovr_2 ecx, fp+3   
36 [0x24]: line: 161 ipushl #3   
37 [0x25]:           movl 0   
38 [0x26]:           movn #0   
40 [0x28]:           pushobj   
41 [0x29]:           loadl ebx, fp+2   
42 [0x2a]:           movr egx, ebx   
43 [0x2b]:           inc ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]:           movr ebx, egx   
46 [0x2e]:           popobj2    
47 [0x2f]:           movr adx, ebx   
48 [0x30]:           chklen adx   
49 [0x31]:           iaload ebx, adx   
50 [0x32]:           loadval ecx   
51 [0x33]:           tne ecx, ebx   
52 [0x34]:           jne 56   
53 [0x35]: line: 162 istorel 0, fp+0   
55 [0x37]:           ret   
56 [0x38]:           nop   
57 [0x39]:           jmp @27   
58 [0x3a]: line: 165 istorel 1, fp+0   
60 [0x3c]:           ret   


overload function: std#qaf.qbf.vcv[3093] params(1) in file: qbd:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           pushl 1   
13 [0xd]:           call @3501 // <std#string.get_data>   
14 [0xe]:           popobj2    
15 [0xf]:           sizeof ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           jne 22   
19 [0x13]: line: 170 istorel 0, fp+0   
21 [0x15]:           ret   
22 [0x16]:           nop   
23 [0x17]: line: 172 istorel 0, fp+2   
25 [0x19]: line: 173 istorel -1, fp+4   
27 [0x1b]:           pushl 1   
28 [0x1c]:           call @3501 // <std#string.get_data>   
29 [0x1d]:           popl 5   
30 [0x1e]:           iaddl 1, fp@4   
32 [0x20]:           movl 5   
33 [0x21]:           sizeof ecx   
34 [0x22]:           loadl ebx, fp+4   
35 [0x23]:           lt ebx, ecx   
36 [0x24]:           jne 61   
37 [0x25]:           iaload ecx, ebx   
38 [0x26]:           smovr_2 ecx, fp+3   
39 [0x27]: line: 174 ipushl #3   
40 [0x28]:           movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           pushobj   
44 [0x2c]:           loadl ebx, fp+2   
45 [0x2d]:           movr egx, ebx   
46 [0x2e]:           inc ebx   
47 [0x2f]:           smovr_2 ebx, fp+2   
48 [0x30]:           movr ebx, egx   
49 [0x31]:           popobj2    
50 [0x32]:           movr adx, ebx   
51 [0x33]:           chklen adx   
52 [0x34]:           iaload ebx, adx   
53 [0x35]:           loadval ecx   
54 [0x36]:           tne ecx, ebx   
55 [0x37]:           jne 59   
56 [0x38]: line: 175 istorel 0, fp+0   
58 [0x3a]:           ret   
59 [0x3b]:           nop   
60 [0x3c]:           jmp @30   
61 [0x3d]: line: 178 istorel 1, fp+0   
63 [0x3f]:           ret   


overload function: std#qaf.qbf.vcw[3094] params(1) in file: qbd:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3092 // <std#qaf.qbf.vcu>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#qaf.qbf.vcx[3095] params(1) in file: qbd:184:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 184 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3093 // <std#qaf.qbf.vcv>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#qaf.qbf.vcy[3096] params(1) in file: qbd:186:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 188 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 20   
4 [0x4]: line: 189 movi #255, ebx   
6 [0x6]:           newarry ebx: 0   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           popobj   
11 [0xb]: line: 190 movi #-1, ebx   
13 [0xd]:           movl 0   
14 [0xe]:           movn #3   
16 [0x10]:           movi #0, adx   
18 [0x12]:           rmov adx, ebx   
19 [0x13]:           jmp @54   
20 [0x14]: line: 193 movl 1   
21 [0x15]:           sizeof ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #255, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           add ecx, ebx -> ebx   
27 [0x1b]:           newarry ebx: 0   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]: line: 194 movl 1   
33 [0x21]:           sizeof ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #3   
37 [0x25]:           movi #0, adx   
39 [0x27]:           rmov adx, ebx   
40 [0x28]: line: 195 pushl 1   
41 [0x29]:           movl 0   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           istore 0   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 1   
51 [0x33]:           sizeof ebx   
52 [0x34]:           rstore ebx   
53 [0x35]:           call @3278 // <std.io#qbq.vkj>   
54 [0x36]:           nop   
55 [0x37]:           ret   


function: std#qaf.qbf.vdz[3097] params(1) in file: qbd:199:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 200 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 16   
12 [0xc]: line: 201 pushl 0   
13 [0xd]:           ipushl #1   
14 [0xe]:           call @3116 // <std#qaf.qbf.vds>   
15 [0xf]:           throw    
16 [0x10]:           nop   
17 [0x11]: line: 202 movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+1   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           iaload ebx, adx   
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


overload function: std#qaf.qbf.vda[3098] params(1) in file: qbd:205:8: note:  
		    def operator[](pos: var) : var {
		       ^

0 [0x0]: line: 206 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3097 // <std#qaf.qbf.vdz>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#qaf.qbf.vdb[3099] params(1) in file: qbd:209:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 210 ipushl #0   
1 [0x1]:           movg @24 // @std#qaf.qbf   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]: line: 211 ipushl #0   
10 [0xa]:           movi #102, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           tne ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skne ebx // pc = 20   
16 [0x10]:           ipushl #0   
17 [0x11]:           movi #70, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           tne ecx, ebx   
21 [0x15]:           jne 31   
22 [0x16]:           istore 0   
24 [0x18]:           movg @24 // @std#qaf.qbf   
25 [0x19]:           movn #1   
27 [0x1b]:           loadval ebx   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           rmov adx, ebx   
31 [0x1f]:           nop   
32 [0x20]:           ret   


function: std#qaf.qbf.vdc[3100] params(1) in file: qbd:214:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 215 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 26   
14 [0xe]: line: 216 new_class @0 // pxo#pxp   
15 [0xf]:           skip @0 // pc = 15   
16 [0x10]:           dup    
17 [0x11]:           new_class @0 // pxo#pxp   
18 [0x12]:           movnd adx   
19 [0x13]:           dup    
20 [0x14]:           newstr @20 // invalid precision:    
21 [0x15]:           call @3475 // <std#string.string>   
22 [0x16]:           ipushl #0   
23 [0x17]:           call @3507 // <std#string.operator+>   
24 [0x18]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 217 ipushl #0   
28 [0x1c]:           movg @24 // @std#qaf.qbf   
29 [0x1d]:           movn #1   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           ret   


function: std#qaf.qbf.vdd[3101] params(0) in file: qbd:220:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 222 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           skpe ebx // pc = 17   
7 [0x7]:           movl 0   
8 [0x8]:           movn #3   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           rstore ebx   
14 [0xe]:           movi #-1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           test ecx, ebx   
18 [0x12]:           jne 23   
19 [0x13]:           pushnull    
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 223 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           istore 0   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #3   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @3288 // <std.io#qbq.vkt>   
43 [0x2b]:           popobj2    
44 [0x2c]:           returnobj   
45 [0x2d]:           ret   


function: std#qaf.qbf.vde[3102] params(1) in file: qbd:227:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 228 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 22   
3 [0x3]:           movl 1   
4 [0x4]:           pushobj   
5 [0x5]:           call @3516 // <std#string.size>   
6 [0x6]:           loadval ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #3   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           add ecx, ebx -> ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           gt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 27   
24 [0x18]: line: 229 istorel 0, fp+0   
26 [0x1a]:           ret   
27 [0x1b]:           nop   
28 [0x1c]: line: 232 istorel 0, fp+2   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           pushl 1   
32 [0x20]:           call @3516 // <std#string.size>   
33 [0x21]:           loadval ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           lt ecx, ebx   
36 [0x24]:           movr ebx, cmt   
37 [0x25]:           movr cmt, ebx   
38 [0x26]:           jne 68   
39 [0x27]: line: 234 movl 0   
40 [0x28]:           movn #0   
42 [0x2a]:           pushobj   
43 [0x2b]:           loadl ebx, fp+2   
44 [0x2c]:           popobj2    
45 [0x2d]:           movr adx, ebx   
46 [0x2e]:           chklen adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movl 1   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           loadl ebx, fp+2   
54 [0x36]:           popobj2    
55 [0x37]:           movr adx, ebx   
56 [0x38]:           chklen adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           loadval ecx   
59 [0x3b]:           tne ecx, ebx   
60 [0x3c]:           jne 64   
61 [0x3d]: line: 235 istorel 0, fp+0   
63 [0x3f]:           ret   
64 [0x40]:           nop   
65 [0x41]:           iaddl 1, fp@2   
67 [0x43]:           jmp @30   
68 [0x44]: line: 237 istorel 1, fp+0   
70 [0x46]:           ret   


function: std#qaf.qbf.vdf[3103] params(1) in file: qbd:240:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 241 pushl 1   
1 [0x1]:           call @3516 // <std#string.size>   
2 [0x2]:           loadval ebx   
3 [0x3]:           rstore ebx   
4 [0x4]:           movl 0   
5 [0x5]:           movn #3   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #1, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 23   
20 [0x14]: line: 242 istorel 0, fp+0   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 245 istorel 0, fp+2   
26 [0x1a]: line: 246 istorel 0, fp+3   
28 [0x1c]:           ipushl #3   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #3   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #1, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           add ecx, ebx -> ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 112   
45 [0x2d]: line: 247 ipushl #3   
46 [0x2e]:           pushl 1   
47 [0x2f]:           call @3516 // <std#string.size>   
48 [0x30]:           loadval ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           add ecx, ebx -> ebx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 0   
53 [0x35]:           movn #3   
55 [0x37]:           movi #0, adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           rstore ebx   
59 [0x3b]:           movi #1, ebx   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           add ecx, ebx -> ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           lt ecx, ebx   
65 [0x41]:           movr ebx, cmt   
66 [0x42]:           movr cmt, ebx   
67 [0x43]:           jne 105   
68 [0x44]: line: 248 istorel 0, fp+4   
70 [0x46]:           ipushl #4   
71 [0x47]:           pushl 1   
72 [0x48]:           call @3516 // <std#string.size>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           loadval ecx   
75 [0x4b]:           lt ecx, ebx   
76 [0x4c]:           movr ebx, cmt   
77 [0x4d]:           movr cmt, ebx   
78 [0x4e]:           jne 101   
79 [0x4f]: line: 249 pushl 1   
80 [0x50]:           ipushl #4   
81 [0x51]:           call @3498 // <std#string.operator[>   
82 [0x52]:           loadval ebx   
83 [0x53]:           rstore ebx   
84 [0x54]:           movl 0   
85 [0x55]:           movn #0   
87 [0x57]:           pushobj   
88 [0x58]:           loadl ebx, fp+4   
89 [0x59]:           popobj2    
90 [0x5a]:           movr adx, ebx   
91 [0x5b]:           chklen adx   
92 [0x5c]:           iaload ebx, adx   
93 [0x5d]:           loadval ecx   
94 [0x5e]:           tne ecx, ebx   
95 [0x5f]:           jne 97   
96 [0x60]: line: 250 jmp @101   
97 [0x61]:           nop   
98 [0x62]:           iaddl 1, fp@4   
100 [0x64]:           jmp @70   
101 [0x65]: line: 253 istorel 1, fp+0   
103 [0x67]:           ret   
104 [0x68]:           jmp @108   
105 [0x69]: line: 254 istorel 0, fp+0   
107 [0x6b]:           ret   
108 [0x6c]:           nop   
109 [0x6d]:           iaddl 1, fp@3   
111 [0x6f]:           jmp @28   
112 [0x70]: line: 257 istorel 0, fp+0   
114 [0x72]:           ret   


function: std#qaf.qbf.vdg[3104] params(1) in file: qbd:260:8: note:  
		    def find(str: string_builder) : var {
		       ^

0 [0x0]: line: 261 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gt ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 262 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 265 istorel 0, fp+2   
27 [0x1b]: line: 266 istorel 0, fp+3   
29 [0x1d]:           ipushl #3   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #3   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           lt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 115   
46 [0x2e]: line: 267 ipushl #3   
47 [0x2f]:           movl 1   
48 [0x30]:           movn #0   
50 [0x32]:           sizeof ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           add ecx, ebx -> ebx   
53 [0x35]:           rstore ebx   
54 [0x36]:           movl 0   
55 [0x37]:           movn #3   
57 [0x39]:           movi #0, adx   
59 [0x3b]:           iaload ebx, adx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           lt ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 108   
70 [0x46]: line: 268 istorel 0, fp+4   
72 [0x48]:           ipushl #4   
73 [0x49]:           movl 1   
74 [0x4a]:           movn #0   
76 [0x4c]:           sizeof ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           lt ecx, ebx   
79 [0x4f]:           movr ebx, cmt   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 104   
82 [0x52]: line: 269 pushl 1   
83 [0x53]:           ipushl #4   
84 [0x54]:           call @3098 // <std#qaf.qbf.vda>   
85 [0x55]:           loadval ebx   
86 [0x56]:           rstore ebx   
87 [0x57]:           movl 0   
88 [0x58]:           movn #0   
90 [0x5a]:           pushobj   
91 [0x5b]:           loadl ebx, fp+4   
92 [0x5c]:           popobj2    
93 [0x5d]:           movr adx, ebx   
94 [0x5e]:           chklen adx   
95 [0x5f]:           iaload ebx, adx   
96 [0x60]:           loadval ecx   
97 [0x61]:           tne ecx, ebx   
98 [0x62]:           jne 100   
99 [0x63]: line: 270 jmp @104   
100 [0x64]:           nop   
101 [0x65]:           iaddl 1, fp@4   
103 [0x67]:           jmp @72   
104 [0x68]: line: 273 istorel 1, fp+0   
106 [0x6a]:           ret   
107 [0x6b]:           jmp @111   
108 [0x6c]: line: 274 istorel 0, fp+0   
110 [0x6e]:           ret   
111 [0x6f]:           nop   
112 [0x70]:           iaddl 1, fp@3   
114 [0x72]:           jmp @29   
115 [0x73]: line: 277 istorel 0, fp+0   
117 [0x75]:           ret   


function: std#qaf.qbf.vdh[3105] params(1) in file: qbd:280:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 281 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gte ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 282 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 284 movl 0   
26 [0x1a]:           movn #3   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           movi #1, ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           add ecx, ebx -> ebx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movl 1   
38 [0x26]:           movn #0   
40 [0x28]:           sizeof ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           smovr_2 ebx, fp+2   
44 [0x2c]:           ipushl #2   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #3   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movi #1, ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           add ecx, ebx -> ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           lt ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 90   
61 [0x3d]: line: 285 movl 0   
62 [0x3e]:           movn #0   
64 [0x40]:           pushobj   
65 [0x41]:           loadl ebx, fp+2   
66 [0x42]:           popobj2    
67 [0x43]:           movr adx, ebx   
68 [0x44]:           chklen adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           rstore ebx   
71 [0x47]:           movl 1   
72 [0x48]:           movn #0   
74 [0x4a]:           pushobj   
75 [0x4b]:           loadl ebx, fp+2   
76 [0x4c]:           popobj2    
77 [0x4d]:           movr adx, ebx   
78 [0x4e]:           chklen adx   
79 [0x4f]:           iaload ebx, adx   
80 [0x50]:           loadval ecx   
81 [0x51]:           tne ecx, ebx   
82 [0x52]:           jne 86   
83 [0x53]: line: 286 istorel 0, fp+0   
85 [0x55]:           ret   
86 [0x56]:           nop   
87 [0x57]:           iaddl 1, fp@2   
89 [0x59]:           jmp @44   
90 [0x5a]: line: 289 istorel 1, fp+0   
92 [0x5c]:           ret   


overload function: std#qaf.qbf.vdi[3106] params(1) in file: qbd:292:8: note:  
		    def operator+(num : var) : string_builder {
		       ^

0 [0x0]: line: 293 new_class @0 // pxo#pxp   
1 [0x1]:           idiv adx, #? (112)   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3075 // <std#qaf.qbf.vcd>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 294 pushl 2   
11 [0xb]:           pushl 0   
12 [0xc]:           ipushl #1   
13 [0xd]:           call @3108 // <std#qaf.qbf.vdk>   
14 [0xe]:           call @3112 // <std#qaf.qbf.vdo>   
15 [0xf]:           call @3087 // <std#qaf.qbf.vcp>   
16 [0x10]:           pop   
17 [0x11]: line: 295 movl 2   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#qaf.qbf.vdj[3107] params(0) in file: qbd:298:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 299 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std#qaf.qbf.vdk[3108] params(1) in file: qbd:302:8: note:  
		    def parse( number : var ) : string_builder
		       ^

0 [0x0]: line: 304 new_class @0 // pxo#pxp   
1 [0x1]:           idiv adx, #? (112)   
3 [0x3]:           movg @24 // @std#qaf.qbf   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           ipushl #1   
11 [0xb]:           movg @24 // @std#qaf.qbf   
12 [0xc]:           movn #1   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @3432 // <std#qaf.vrc>   
19 [0x13]:           call @3075 // <std#qaf.qbf.vcd>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#qaf.qbf.vdl[3109] params(1) in file: qbd:307:8: note:  
		    def operator+=( num: var ) : string_builder
		       ^

0 [0x0]: line: 309 pushl 0   
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #1   
3 [0x3]:           call @3108 // <std#qaf.qbf.vdk>   
4 [0x4]:           call @3112 // <std#qaf.qbf.vdo>   
5 [0x5]:           call @3087 // <std#qaf.qbf.vcp>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#qaf.qbf.vdm[3110] params(1) in file: qbd:312:15: note:  
		    public def operator+=( obj: printable ) : string_builder
		              ^

0 [0x0]: line: 314 pushl 1   
1 [0x1]:           invoke_delegate 3592 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 315 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 15   
9 [0x9]:           movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           call @3501 // <std#string.get_data>   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           not ebx, ebx   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 25   
17 [0x11]: line: 316 pushl 0   
18 [0x12]:           pushl 2   
19 [0x13]:           call @3501 // <std#string.get_data>   
20 [0x14]:           call @3087 // <std#qaf.qbf.vcp>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 318 pushl 0   
26 [0x1a]:           newstr @19 // null   
27 [0x1b]:           call @3087 // <std#qaf.qbf.vcp>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


overload function: std#qaf.qbf.vdn[3111] params(1) in file: qbd:321:8: note:  
		    def operator+=( str: string ) : string_builder
		       ^

0 [0x0]: line: 323 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           call @3087 // <std#qaf.qbf.vcp>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#qaf.qbf.vdo[3112] params(0) in file: qbd:326:8: note:  
		    def get_data() : _int8[]{
		       ^

0 [0x0]: line: 327 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std#qaf.qbf.vdp[3113] params(1) in file: qbd:330:8: note:  
		    def operator+=( str: string_builder ) : string_builder
		       ^

0 [0x0]: line: 332 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @3087 // <std#qaf.qbf.vcp>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#qaf.qbf.vdq[3114] params(1) in file: qbd:335:8: note:  
		    def operator+=( str: _int8[] ) : string_builder
		       ^

0 [0x0]: line: 337 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3087 // <std#qaf.qbf.vcp>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#qaf.qbf.vdr[3115] params(2) in file: qbd:340:15: note:  
		    public def substring(startPos: var, endPos: var) : string_builder {
		              ^

0 [0x0]: line: 341 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #1, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           add ecx, ebx -> ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gte ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skpe ebx // pc = 21   
16 [0x10]:           loadl ecx, fp+1   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           lt ecx, ebx   
20 [0x14]:           movr ebx, cmt   
21 [0x15]:           movr cmt, ebx   
22 [0x16]:           jne 27   
23 [0x17]: line: 342 pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3116 // <std#qaf.qbf.vds>   
26 [0x1a]:           throw    
27 [0x1b]:           nop   
28 [0x1c]: line: 343 ipushl #2   
29 [0x1d]:           loadl ebx, fp+1   
30 [0x1e]:           loadval ecx   
31 [0x1f]:           lt ecx, ebx   
32 [0x20]:           movr ebx, cmt   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 51   
35 [0x23]: line: 344 new_class @0 // pxo#pxp   
36 [0x24]:           skip @0 // pc = 36   
37 [0x25]:           dup    
38 [0x26]:           new_class @0 // pxo#pxp   
39 [0x27]:           movnd adx   
40 [0x28]:           dup    
41 [0x29]:           newstr @21 // endPos:    
42 [0x2a]:           call @3475 // <std#string.string>   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           call @3507 // <std#string.operator+>   
45 [0x2d]:           newstr @22 //  cannot be less than the startPos:    
46 [0x2e]:           call @3487 // <std#string.operator+>   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @3507 // <std#string.operator+>   
49 [0x31]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
50 [0x32]:           throw    
51 [0x33]:           nop   
52 [0x34]: line: 348 new_class @0 // pxo#pxp   
53 [0x35]:           idiv adx, #? (112)   
55 [0x37]:           call @3118 // <std#qaf.qbf.vdu>   
56 [0x38]:           popobj2    
57 [0x39]:           smovr_3 fp+3   
58 [0x3a]: line: 349 movl 0   
59 [0x3b]:           movn #0   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           ipushl #2   
64 [0x40]:           call @3288 // <std.io#qbq.vkt>   
65 [0x41]:           movl 3   
66 [0x42]:           movn #0   
68 [0x44]:           popobj   
69 [0x45]: line: 350 movl 3   
70 [0x46]:           returnobj   
71 [0x47]:           ret   


function: std#qaf.qbf.vds[3116] params(1) in file: qbd:353:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 354 new_class @0 // pxo#pxp   
1 [0x1]:           shl adx, adx -> adx   
2 [0x2]:           dup    
3 [0x3]:           new_class @0 // pxo#pxp   
4 [0x4]:           movnd adx   
5 [0x5]:           dup    
6 [0x6]:           newstr @23 // Index out of bounds exception at:    
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @3507 // <std#string.operator+>   
10 [0xa]:           newstr @24 //  with size of:    
11 [0xb]:           call @3487 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #3   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #1, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @3507 // <std#string.operator+>   
25 [0x19]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
26 [0x1a]:           popobj2    
27 [0x1b]:           returnobj   
28 [0x1c]:           ret   


function: std#qaf.qbf.vdt[3117] params(0) in file: qbd:357:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 358 istorel 0, fp+1   
2 [0x2]: line: 359 istorel 1, fp+2   
4 [0x4]: line: 360 istorel -1, fp+4   
6 [0x6]: line: 361 movl 0   
7 [0x7]: line: 362 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 363 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 364 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 366 new_class @0 // pxo#pxp   
56 [0x38]:           movu64 adx, adx   
57 [0x39]:           dup    
58 [0x3a]:           ipushl #1   
59 [0x3b]:           call @2051 // <std#qaf.qat.tot>   
60 [0x3c]:           popobj2    
61 [0x3d]:           returnobj   
62 [0x3e]:           ret   


constructor: std#qaf.qbf.vdu[3118] params(0) in file: qbd:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          ret   


std.io#qbq.qbs.vdv[3119] params(1) in file: qbo:4:8: note:  
		    def uncaught_exception(err: throwable);
		       ^



constructor: std.io#qbq.qbs.vdw[3120] params(0) in file: qbo:3:10: note:  
		interface uncaught_exception_handler {
		         ^

0 [0x0]:         ret   


constructor: std.io#qbq.qbv.vdx[3121] params(1) in file: qbt:23:9: note:  
		    file(path: string) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 24 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3125 // <std.io#qbq.qbv.veb>   
4 [0x4]:          ret   


constructor: std.io#qbq.qbv.vdy[3122] params(1) in file: qbt:27:9: note:  
		    file(path: _int8[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 28 pushl 0   
2 [0x2]:          new_class @0 // pxo#pxp   
3 [0x3]:          movnd adx   
4 [0x4]:          dup    
5 [0x5]:          newstr @3 //    
6 [0x6]:          call @3475 // <std#string.string>   
7 [0x7]:          pushl 1   
8 [0x8]:          call @3487 // <std#string.operator+>   
9 [0x9]:          call @3125 // <std.io#qbq.qbv.veb>   
10 [0xa]:          ret   


function: std.io#qbq.qbv.vez[3123] params(0) in file: qbt:31:8: note:  
		    def get_name() : string {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 17   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3516 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 23   
19 [0x13]: line: 33 pushnull    
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   
23 [0x17]:          nop   
24 [0x18]: line: 36 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          call @3516 // <std#string.size>   
29 [0x1d]:          loadval ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movi #1, ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          sub ecx, ebx -> ebx   
35 [0x23]:          smovr_2 ebx, fp+1   
36 [0x24]:          ipushl #1   
37 [0x25]:          movi #0, ebx   
39 [0x27]:          loadval ecx   
40 [0x28]:          gt ecx, ebx   
41 [0x29]:          movr ebx, cmt   
42 [0x2a]:          movr cmt, ebx   
43 [0x2b]:          jne 86   
44 [0x2c]: line: 37 movl 0   
45 [0x2d]:          movn #0   
47 [0x2f]:          pushobj   
48 [0x30]:          ipushl #1   
49 [0x31]:          call @3498 // <std#string.operator[>   
50 [0x32]:          loadval ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movg @27 // @std.io#qbq.qbv   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          iaload ebx, adx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          test ecx, ebx   
60 [0x3c]:          jne 80   
61 [0x3d]: line: 38 movl 0   
62 [0x3e]:          movn #0   
64 [0x40]:          pushobj   
65 [0x41]:          ipushl #1   
66 [0x42]:          movi #1, ebx   
68 [0x44]:          loadval ecx   
69 [0x45]:          add ecx, ebx -> ebx   
70 [0x46]:          rstore ebx   
71 [0x47]:          movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          call @3516 // <std#string.size>   
76 [0x4c]:          call @3530 // <std#string.substring>   
77 [0x4d]:          popobj2    
78 [0x4e]:          returnobj   
79 [0x4f]:          ret   
80 [0x50]:          nop   
81 [0x51]:          loadl ebx, fp+1   
82 [0x52]:          movr egx, ebx   
83 [0x53]:          dec ebx   
84 [0x54]:          smovr_2 ebx, fp+1   
85 [0x55]:          jmp @36   
86 [0x56]: line: 42 movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          returnobj   
90 [0x5a]:          ret   


function: std.io#qbq.qbv.vea[3124] params(0) in file: qbt:45:8: note:  
		    def to_string() := path;
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#qbq.qbv.veb[3125] params(1) in file: qbt:47:5: note:  
			def update_path(path: string) {
		    ^

0 [0x0]: line: 48 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 10   
4 [0x4]: line: 49 new_class @0 // pxo#pxp   
5 [0x5]:          skne adx // pc = 5   
6 [0x6]:          dup    
7 [0x7]:          newstr @25 // file path cannot be null   
8 [0x8]:          call @3557 // <std#nullptr_exception.nullptr_exception>   
9 [0x9]:          throw    
10 [0xa]:          nop   
11 [0xb]: line: 51 pushl 1   
12 [0xc]:          call @3483 // <std#string.empty>   
13 [0xd]:          loadval ebx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 22   
16 [0x10]: line: 52 new_class @0 // pxo#pxp   
17 [0x11]:          skne adx // pc = 17   
18 [0x12]:          dup    
19 [0x13]:          newstr @26 // file path cannot be empty   
20 [0x14]:          call @3557 // <std#nullptr_exception.nullptr_exception>   
21 [0x15]:          throw    
22 [0x16]:          nop   
23 [0x17]: line: 53 movg @27 // @std.io#qbq.qbv   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          pushl 1   
28 [0x1c]:          invoke_delegate 3181 { static=0, args=1 }   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          popobj   
34 [0x22]:          ret   


function: std.io#qbq.qbv.vec[3126] params(0) in file: qbt:56:8: note:  
		    def get_parent_file() : file {
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 17   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3516 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 23   
19 [0x13]: line: 58 pushnull    
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   
23 [0x17]:          nop   
24 [0x18]: line: 61 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          call @3516 // <std#string.size>   
29 [0x1d]:          loadval ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movi #1, ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          sub ecx, ebx -> ebx   
35 [0x23]:          smovr_2 ebx, fp+1   
36 [0x24]:          ipushl #1   
37 [0x25]:          movi #0, ebx   
39 [0x27]:          loadval ecx   
40 [0x28]:          gt ecx, ebx   
41 [0x29]:          movr ebx, cmt   
42 [0x2a]:          movr cmt, ebx   
43 [0x2b]:          jne 87   
44 [0x2c]: line: 62 movl 0   
45 [0x2d]:          movn #0   
47 [0x2f]:          pushobj   
48 [0x30]:          ipushl #1   
49 [0x31]:          call @3498 // <std#string.operator[>   
50 [0x32]:          loadval ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movg @27 // @std.io#qbq.qbv   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          iaload ebx, adx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          test ecx, ebx   
60 [0x3c]:          jne 81   
61 [0x3d]: line: 63 new_class @0 // pxo#pxp   
62 [0x3e]:          inc adx   
63 [0x3f]:          dup    
64 [0x40]:          movl 0   
65 [0x41]:          movn #0   
67 [0x43]:          pushobj   
68 [0x44]:          istore 0   
70 [0x46]:          ipushl #1   
71 [0x47]:          movi #1, ebx   
73 [0x49]:          loadval ecx   
74 [0x4a]:          add ecx, ebx -> ebx   
75 [0x4b]:          rstore ebx   
76 [0x4c]:          call @3530 // <std#string.substring>   
77 [0x4d]:          call @3121 // <std.io#qbq.qbv.vdx>   
78 [0x4e]:          popobj2    
79 [0x4f]:          returnobj   
80 [0x50]:          ret   
81 [0x51]:          nop   
82 [0x52]:          loadl ebx, fp+1   
83 [0x53]:          movr egx, ebx   
84 [0x54]:          dec ebx   
85 [0x55]:          smovr_2 ebx, fp+1   
86 [0x56]:          jmp @36   
87 [0x57]: line: 67 pushnull    
88 [0x58]:          popobj2    
89 [0x59]:          returnobj   
90 [0x5a]:          ret   


function: std.io#qbq.qbv.ved[3127] params(0) in file: qbt:70:8: note:  
		    def get_path() : string {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#qbq.qbv.vee[3128] params(0) in file: qbt:87:8: note:  
		    def get_absolute_path() : string {
		       ^

0 [0x0]: line: 88 movg @27 // @std.io#qbq.qbv   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @3182 // <std.io#qbq.qdj.vgi>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std.io#qbq.qbv.vef[3129] params(0) in file: qbt:96:8: note:  
		    def is_readable() : var {
		       ^

0 [0x0]: line: 97 movg @27 // @std.io#qbq.qbv   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          istore 4   
7 [0x7]:          invoke_delegate 3184 { static=0, args=2 }   
9 [0x9]:          loadval ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


function: std.io#qbq.qbv.veg[3130] params(0) in file: qbt:105:8: note:  
		    def is_writeable() : var {
		       ^

0 [0x0]: line: 106 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           invoke_delegate 3184 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#qbq.qbv.veh[3131] params(0) in file: qbt:114:8: note:  
		    def exists() : var {
		       ^

0 [0x0]: line: 115 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 0   
6 [0x6]:           rstore ebx   
7 [0x7]:           invoke_delegate 3184 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#qbq.qbv.vei[3132] params(0) in file: qbt:123:8: note:  
		    def is_directory() : var {
		       ^

0 [0x0]: line: 124 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 3183 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #4, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#qbq.qbv.vej[3133] params(0) in file: qbt:133:8: note:  
		    def is_file() : var {
		       ^

0 [0x0]: line: 134 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 3183 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #2, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#qbq.qbv.vek[3134] params(0) in file: qbt:145:8: note:  
		    def is_hidden() : var {
		       ^

0 [0x0]: line: 146 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 3183 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #128, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#qbq.qbv.vel[3135] params(0) in file: qbt:154:8: note:  
		    def last_modified() : var {
		       ^

0 [0x0]: line: 155 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 0   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @3186 // <std.io#qbq.qdj.vgm>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#qbq.qbv.vem[3136] params(0) in file: qbt:158:8: note:  
		    def last_status_changed() : var {
		       ^

0 [0x0]: line: 159 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @3186 // <std.io#qbq.qdj.vgm>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#qbq.qbv.ven[3137] params(0) in file: qbt:162:8: note:  
		    def last_accessed() : var {
		       ^

0 [0x0]: line: 163 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           call @3186 // <std.io#qbq.qdj.vgm>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#qbq.qbv.veo[3138] params(0) in file: qbt:171:8: note:  
		    def length() : var {
		       ^

0 [0x0]: line: 172 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3187 // <std.io#qbq.qdj.vgn>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#qbq.qbv.vep[3139] params(0) in file: qbt:186:8: note:  
		    def create() {
		       ^

0 [0x0]: line: 187 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @3188 // <std.io#qbq.qdj.vgo>   
9 [0x9]:           ret   


function: std.io#qbq.qbv.veq[3140] params(0) in file: qbt:196:8: note:  
		    def delete() : var {
		       ^

0 [0x0]: line: 197 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3190 // <std.io#qbq.qdj.vgq>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#qbq.qbv.ver[3141] params(0) in file: qbt:212:8: note:  
		    def list() : list<string> {
		       ^

0 [0x0]: line: 213 new_class @0 // pxo#pxp   
1 [0x1]:           popobj   
2 [0x2]:           dup    
3 [0x3]:           movg @27 // @std.io#qbq.qbv   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           pushl 0   
8 [0x8]:           call @3191 // <std.io#qbq.qdj.vgr>   
9 [0x9]:           call @3598 // <std.io#qbq.qah.vxt>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


function: std.io#qbq.qbv.ves[3142] params(0) in file: qbt:220:8: note:  
		    def mkdir() : var {
		       ^

0 [0x0]: line: 221 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3192 // <std.io#qbq.qdj.vgs>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#qbq.qbv.vet[3143] params(1) in file: qbt:239:8: note:  
		    def rename(dest: file) : var {
		       ^

0 [0x0]: line: 240 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]: line: 241 new_class @0 // pxo#pxp   
5 [0x5]:           skne adx // pc = 5   
6 [0x6]:           dup    
7 [0x7]:           call @3559 // <std#nullptr_exception.nullptr_exception>   
8 [0x8]:           throw    
9 [0x9]:           nop   
10 [0xa]: line: 244 movg @27 // @std.io#qbq.qbv   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           pushl 0   
15 [0xf]:           pushl 1   
16 [0x10]:           call @3193 // <std.io#qbq.qdj.vgt>   
17 [0x11]:           ipopl 2   
18 [0x12]: line: 245 ipushl #2   
19 [0x13]:           movi #0, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           test ecx, ebx   
23 [0x17]:           jne 32   
24 [0x18]: line: 247 movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]:           nop   
33 [0x21]: line: 251 loadl ebx, fp+2   
34 [0x22]:           return_val ebx   
35 [0x23]:           ret   


function: std.io#qbq.qbv.veu[3144] params(1) in file: qbt:266:8: note:  
		    def set_last_modified(time: var) : var {
		       ^

0 [0x0]: line: 267 loadl ebx, fp+1   
1 [0x1]:           mov32 ebx, ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           movi #0, ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           lt ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 16   
10 [0xa]:           new_class @0 // pxo#pxp   
11 [0xb]:           skip @0 // pc = 11   
12 [0xc]:           dup    
13 [0xd]:           newstr @27 // Negative time   
14 [0xe]:           call @3542 // <std#illegal_argument_exception.illegal_argument_exception>   
15 [0xf]:           throw    
16 [0x10]:           nop   
17 [0x11]: line: 268 movg @27 // @std.io#qbq.qbv   
18 [0x12]:           movn #0   
20 [0x14]:           pushobj   
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3196 // <std.io#qbq.qdj.vgw>   
24 [0x18]:           loadval ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


function: std.io#qbq.qbv.vev[3145] params(0) in file: qbt:279:8: note:  
		    def set_read_only() : var {
		       ^

0 [0x0]: line: 280 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3197 // <std.io#qbq.qdj.vgx>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#qbq.qbv.vew[3146] params(2) in file: qbt:288:8: note:  
		    def set_writable(writable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 289 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @3185 // <std.io#qbq.qdj.vgl>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#qbq.qbv.vex[3147] params(1) in file: qbt:297:8: note:  
		    def set_writable(writable: var) : var {
		       ^

0 [0x0]: line: 298 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @3146 // <std.io#qbq.qbv.vew>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#qbq.qbv.vey[3148] params(2) in file: qbt:306:8: note:  
		    def set_readable(readable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 307 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 4   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @3185 // <std.io#qbq.qdj.vgl>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#qbq.qbv.vfz[3149] params(1) in file: qbt:315:8: note:  
		    def set_readable(readable: var) : var {
		       ^

0 [0x0]: line: 316 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @3148 // <std.io#qbq.qbv.vey>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#qbq.qbv.vfa[3150] params(2) in file: qbt:324:8: note:  
		    def set_executable(executable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 325 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @3185 // <std.io#qbq.qdj.vgl>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#qbq.qbv.vfb[3151] params(1) in file: qbt:333:8: note:  
		    def set_executable(executable: var) : var {
		       ^

0 [0x0]: line: 334 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @3150 // <std.io#qbq.qbv.vfa>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#qbq.qbv.vfc[3152] params(0) in file: qbt:342:8: note:  
		    def is_executable() : var {
		       ^

0 [0x0]: line: 343 movg @27 // @std.io#qbq.qbv   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           invoke_delegate 3184 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#qbq.qbv.vfd[3153] params(0) in file: qbt:354:8: note:  
		    def get_total_space() : var {
		       ^

0 [0x0]: line: 355 ldc ebx // 0   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @3198 // <std.io#qbq.qdj.vgy>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#qbq.qbv.vfe[3154] params(0) in file: qbt:363:8: note:  
		    def get_free_space() : var {
		       ^

0 [0x0]: line: 364 ldc ebx // 1   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @3198 // <std.io#qbq.qdj.vgy>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#qbq.qbv.vff[3155] params(0) in file: qbt:386:8: note:  
		    def get_usable_space() : var {
		       ^

0 [0x0]: line: 387 istore 2   
2 [0x2]:           call @3198 // <std.io#qbq.qdj.vgy>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#qbq.qbv.vfg[3156] params(3) in file: qbt:393:22: note:  
		    private static def generate_temp_file(prefix: string, suffix: string, dir: file) : file
		                     ^

0 [0x0]: line: 405 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#qbq.qbv.vfh[3157] params(3) in file: qbt:414:15: note:  
		    static def create_temp_file(prefix: string, suffix: string,
		              ^

0 [0x0]: line: 437 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#qbq.qbv.vfi[3158] params(2) in file: qbt:448:15: note:  
		    static def create_temp_file(prefix: string, suffix: string) : file
		              ^

0 [0x0]: line: 451 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           pushnull    
3 [0x3]:           call @3157 // <std.io#qbq.qbv.vfh>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std.io#qbq.qbv.vfj[3159] params(0) in file: qbt:454:8: note:  
		    def read_all_text() := fs.read(self);
		       ^

0 [0x0]: line: 454 pushl 0   
1 [0x1]:           call @3194 // <std.io#qbq.qdj.vgu>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#qbq.qbv.vfk[3160] params(1) in file: qbt:456:8: note:  
		    def write(data: string) := fs.write(self, data);
		       ^

0 [0x0]: line: 456 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3195 // <std.io#qbq.qdj.vgv>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#qbq.qbv.vfl[3161] params(0) in file: qbt:458:23: note:  
		    private static def get_file_system() : file_system {
		                      ^

0 [0x0]: line: 459 call @3396 // <qkn#qko.qku.vps>   
1 [0x1]:           loadval ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 12   
4 [0x4]: line: 460 new_class @0 // pxo#pxp   
5 [0x5]:           dec adx   
6 [0x6]:           dup    
7 [0x7]:           call @3167 // <std.io#qbq.qcb.vfr>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   
11 [0xb]:           jmp @19   
12 [0xc]: line: 462 new_class @0 // pxo#pxp   
13 [0xd]:           _putc adx   
14 [0xe]:           dup    
15 [0xf]:           call @3310 // <std.io#qbq.qhp.vlp>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   
19 [0x13]:           nop   


constructor: std.io#qbq.qbv.vfm[3162] params(0) in file: qbt:17:13: note:  
		public class file {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std.io#qbq.qcb.vfn[3163] params(0) in file: qcz:15:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#qbq.qcb.vfo[3164] params(1) in file: qcz:23:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 24 pushl 1   
1 [0x1]:          call @3516 // <std#string.size>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 25 istorel 0, fp+3   
5 [0x5]: line: 26 istorel 0, fp+4   
7 [0x7]:          ipushl #4   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 258   
14 [0xe]: line: 28 pushl 1   
15 [0xf]:          ipushl #4   
16 [0x10]:          call @3498 // <std#string.operator[>   
17 [0x11]:          loadval ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #47, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          test ecx, ebx   
23 [0x17]:          jne 112   
24 [0x18]: line: 29 ipushl #3   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          gt ecx, ebx   
29 [0x1d]:          movr ebx, cmt   
30 [0x1e]:          skne ebx // pc = 48   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #3   
36 [0x24]:          movi #1, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          sub ecx, ebx -> ebx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          iaload ebx, adx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #92, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          tne ecx, ebx   
49 [0x31]:          jne 66   
50 [0x32]: line: 30 istore 92   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          loadl ebx, fp+3   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          smovr_2 ebx, fp+3   
60 [0x3c]:          movr ebx, egx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          loadval ebx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          nop   
67 [0x43]: line: 32 ipushl #4   
68 [0x44]:          movi #1, ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          add ecx, ebx -> ebx   
72 [0x48]:          rstore ebx   
73 [0x49]:          loadl ebx, fp+2   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          lt ecx, ebx   
76 [0x4c]:          movr ebx, cmt   
77 [0x4d]:          skne ebx // pc = 92   
78 [0x4e]:          movl 1   
79 [0x4f]:          pushobj   
80 [0x50]:          ipushl #4   
81 [0x51]:          movi #1, ebx   
83 [0x53]:          loadval ecx   
84 [0x54]:          add ecx, ebx -> ebx   
85 [0x55]:          rstore ebx   
86 [0x56]:          call @3498 // <std#string.operator[>   
87 [0x57]:          loadval ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          movi #47, ebx   
91 [0x5b]:          loadval ecx   
92 [0x5c]:          test ecx, ebx   
93 [0x5d]:          jne 110   
94 [0x5e]: line: 33 iaddl 1, fp@4   
96 [0x60]: line: 34 pushl 1   
97 [0x61]:          ipushl #4   
98 [0x62]:          call @3498 // <std#string.operator[>   
99 [0x63]:          loadval ebx   
100 [0x64]:          rstore ebx   
101 [0x65]:          movi #47, ebx   
103 [0x67]:          loadval ecx   
104 [0x68]:          test ecx, ebx   
105 [0x69]:          je 94   
106 [0x6a]: line: 36 loadl ebx, fp+4   
107 [0x6b]:          movr egx, ebx   
108 [0x6c]:          dec ebx   
109 [0x6d]:          smovr_2 ebx, fp+4   
110 [0x6e]:          nop   
111 [0x6f]:          jmp @254   
112 [0x70]:          pushl 1   
113 [0x71]:          ipushl #4   
114 [0x72]:          call @3498 // <std#string.operator[>   
115 [0x73]:          loadval ebx   
116 [0x74]:          rstore ebx   
117 [0x75]:          movi #92, ebx   
119 [0x77]:          loadval ecx   
120 [0x78]:          test ecx, ebx   
121 [0x79]:          jne 237   
122 [0x7a]: line: 40 ipushl #4   
123 [0x7b]:          movi #1, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          add ecx, ebx -> ebx   
127 [0x7f]:          rstore ebx   
128 [0x80]:          loadl ebx, fp+2   
129 [0x81]:          loadval ecx   
130 [0x82]:          lt ecx, ebx   
131 [0x83]:          movr ebx, cmt   
132 [0x84]:          skne ebx // pc = 147   
133 [0x85]:          movl 1   
134 [0x86]:          pushobj   
135 [0x87]:          ipushl #4   
136 [0x88]:          movi #1, ebx   
138 [0x8a]:          loadval ecx   
139 [0x8b]:          add ecx, ebx -> ebx   
140 [0x8c]:          rstore ebx   
141 [0x8d]:          call @3498 // <std#string.operator[>   
142 [0x8e]:          loadval ebx   
143 [0x8f]:          rstore ebx   
144 [0x90]:          movi #92, ebx   
146 [0x92]:          loadval ecx   
147 [0x93]:          test ecx, ebx   
148 [0x94]:          jne 192   
149 [0x95]: line: 41 iaddl 1, fp@4   
151 [0x97]: line: 42 pushl 1   
152 [0x98]:          ipushl #4   
153 [0x99]:          call @3498 // <std#string.operator[>   
154 [0x9a]:          loadval ebx   
155 [0x9b]:          rstore ebx   
156 [0x9c]:          movi #92, ebx   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          test ecx, ebx   
160 [0xa0]:          je 149   
161 [0xa1]: line: 45 ipushl #3   
162 [0xa2]:          movi #0, ebx   
164 [0xa4]:          loadval ecx   
165 [0xa5]:          gt ecx, ebx   
166 [0xa6]:          movr ebx, cmt   
167 [0xa7]:          skne ebx // pc = 185   
168 [0xa8]:          movl 0   
169 [0xa9]:          movn #1   
171 [0xab]:          pushobj   
172 [0xac]:          ipushl #3   
173 [0xad]:          movi #1, ebx   
175 [0xaf]:          loadval ecx   
176 [0xb0]:          sub ecx, ebx -> ebx   
177 [0xb1]:          popobj2    
178 [0xb2]:          movr adx, ebx   
179 [0xb3]:          chklen adx   
180 [0xb4]:          iaload ebx, adx   
181 [0xb5]:          rstore ebx   
182 [0xb6]:          movi #92, ebx   
184 [0xb8]:          loadval ecx   
185 [0xb9]:          tne ecx, ebx   
186 [0xba]:          jne 191   
187 [0xbb]: line: 46 loadl ebx, fp+4   
188 [0xbc]:          movr egx, ebx   
189 [0xbd]:          dec ebx   
190 [0xbe]:          smovr_2 ebx, fp+4   
191 [0xbf]:          nop   
192 [0xc0]:          nop   
193 [0xc1]: line: 49 ipushl #3   
194 [0xc2]:          movi #0, ebx   
196 [0xc4]:          loadval ecx   
197 [0xc5]:          gt ecx, ebx   
198 [0xc6]:          movr ebx, cmt   
199 [0xc7]:          skne ebx // pc = 217   
200 [0xc8]:          movl 0   
201 [0xc9]:          movn #1   
203 [0xcb]:          pushobj   
204 [0xcc]:          ipushl #3   
205 [0xcd]:          movi #1, ebx   
207 [0xcf]:          loadval ecx   
208 [0xd0]:          sub ecx, ebx -> ebx   
209 [0xd1]:          popobj2    
210 [0xd2]:          movr adx, ebx   
211 [0xd3]:          chklen adx   
212 [0xd4]:          iaload ebx, adx   
213 [0xd5]:          rstore ebx   
214 [0xd6]:          movi #92, ebx   
216 [0xd8]:          loadval ecx   
217 [0xd9]:          tne ecx, ebx   
218 [0xda]:          jne 235   
219 [0xdb]: line: 50 istore 92   
221 [0xdd]:          movl 0   
222 [0xde]:          movn #1   
224 [0xe0]:          pushobj   
225 [0xe1]:          loadl ebx, fp+3   
226 [0xe2]:          movr egx, ebx   
227 [0xe3]:          inc ebx   
228 [0xe4]:          smovr_2 ebx, fp+3   
229 [0xe5]:          movr ebx, egx   
230 [0xe6]:          popobj2    
231 [0xe7]:          movr adx, ebx   
232 [0xe8]:          chklen adx   
233 [0xe9]:          loadval ebx   
234 [0xea]:          rmov adx, ebx   
235 [0xeb]:          nop   
236 [0xec]:          jmp @254   
237 [0xed]: line: 53 pushl 1   
238 [0xee]:          ipushl #4   
239 [0xef]:          call @3498 // <std#string.operator[>   
240 [0xf0]:          movl 0   
241 [0xf1]:          movn #1   
243 [0xf3]:          pushobj   
244 [0xf4]:          loadl ebx, fp+3   
245 [0xf5]:          movr egx, ebx   
246 [0xf6]:          inc ebx   
247 [0xf7]:          smovr_2 ebx, fp+3   
248 [0xf8]:          movr ebx, egx   
249 [0xf9]:          popobj2    
250 [0xfa]:          movr adx, ebx   
251 [0xfb]:          chklen adx   
252 [0xfc]:          loadval ebx   
253 [0xfd]:          rmov adx, ebx   
254 [0xfe]:          nop   
255 [0xff]:          iaddl 1, fp@4   
257 [0x101]:          jmp @7   
258 [0x102]: line: 56 new_class @0 // pxo#pxp   
259 [0x103]:          movnd adx   
260 [0x104]:          dup    
261 [0x105]:          movl 0   
262 [0x106]:          movn #1   
264 [0x108]:          pushobj   
265 [0x109]:          istore 0   
267 [0x10b]:          ipushl #3   
268 [0x10c]:          call @3480 // <std#string.string>   
269 [0x10d]:          popobj2    
270 [0x10e]:          returnobj   
271 [0x10f]:          ret   


function: std.io#qbq.qcb.vfp[3165] params(1) in file: qcz:64:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 65 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3501 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 66 istorel 0, fp+3   
9 [0x9]: line: 72 pushl 2   : protected asm start
10 [0xa]:          int 0x25   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 78 loadl ebx, fp+3   : protected asm end
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std.io#qbq.qcb.vfq[3166] params(2) in file: qcz:88:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 89 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3501 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 90 istorel 0, fp+4   
9 [0x9]: line: 93 ipushl #2   
10 [0xa]:          ldc ebx // 1   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 17   
14 [0xe]: line: 94 istorel -1, fp+0   
16 [0x10]:          ret   
17 [0x11]:          nop   
18 [0x12]: line: 100 pushl 3   : protected asm start
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           int 0x24   
21 [0x15]:           smovr_2 ebx, fp+4   
22 [0x16]: line: 107 loadl ebx, fp+4   : protected asm end
23 [0x17]:           return_val ebx   
24 [0x18]:           ret   


constructor: std.io#qbq.qcb.vfr[3167] params(0) in file: qcz:11:16: note:  
		protected class win_fs base file_system {
		               ^

0 [0x0]:         movi #92, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx: 0   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


constructor: std.io#qbq.qcg.vfs[3168] params(1) in file: qce:5:21: note:  
			public thread_group(name : string) {
		                    ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         andl adx, 0   
2 [0x2]:         dup    
3 [0x3]:         call @3625 // <std.io#qbq.qao.wzr>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // pxo#pxp   
9 [0x9]:         xorl adx, 0   
10 [0xa]:         dup    
11 [0xb]:         call @3645 // <std.io#qbq.qah.wbg>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]: line: 6 pushl 1   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #2   
29 [0x1d]:         popobj   
30 [0x1e]: line: 7 movg @40 // @std.io#qbq.qhd   
31 [0x1f]:         movn #1   
33 [0x21]:         pushobj   
34 [0x22]:         movl 0   
35 [0x23]:         movn #3   
37 [0x25]:         popobj   
38 [0x26]:         ret   


constructor: std.io#qbq.qcg.vft[3169] params(2) in file: qce:10:21: note:  
			public thread_group(name : string, priority : thread_priority) {
		                    ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         andl adx, 0   
2 [0x2]:         dup    
3 [0x3]:         call @3625 // <std.io#qbq.qao.wzr>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // pxo#pxp   
9 [0x9]:         xorl adx, 0   
10 [0xa]:         dup    
11 [0xb]:         call @3645 // <std.io#qbq.qah.wbg>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]: line: 11 pushl 1   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #2   
29 [0x1d]:          popobj   
30 [0x1e]: line: 12 pushl 2   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #3   
34 [0x22]:          popobj   
35 [0x23]:          ret   


function: std.io#qbq.qcg.vfu[3170] params(1) in file: qce:15:5: note:  
			def at(id : var) := handles.at(id);
		    ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          new_class @0 // pxo#pxp   
5 [0x5]:          add adx, adx -> adx   
6 [0x6]:          dup    
7 [0x7]:          ipushl #1   
8 [0x8]:          call @2255 // <std#qaf.qav.twp>   
9 [0x9]:          call @3629 // <std.io#qbq.qao.wzv>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io#qbq.qcg.vfv[3171] params(1) in file: qce:17:5: note:  
			def add(t : thread) {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 19 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @0 // pxo#pxp   
7 [0x7]:          add adx, adx -> adx   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          call @3338 // <std.io#thread.get_id>   
11 [0xb]:          call @2255 // <std#qaf.qav.twp>   
12 [0xc]:          pushl 1   
13 [0xd]:          call @3630 // <std.io#qbq.qao.wzw>   
14 [0xe]:          loadval ebx   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 24   
17 [0x11]: line: 20 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          pushl 1   
22 [0x16]:          call @3338 // <std.io#thread.get_id>   
23 [0x17]:          call @3659 // <std.io#qbq.qah.wbu>   
24 [0x18]:          nop   
25 [0x19]: line: 22 movl 0   
26 [0x1a]:          movn #4   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movr egx, ebx   
32 [0x20]:          dec ebx   
33 [0x21]:          movi #0, adx   
35 [0x23]:          rmov adx, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          _ulck   
38 [0x26]:          ret   


function: std.io#qbq.qcg.vfw[3172] params(0) in file: qce:26:5: note:  
			def size() := n_threads;
		    ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #4   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#qbq.qcg.vfx[3173] params(0) in file: qce:27:5: note:  
			def get_name() := name;
		    ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#qbq.qcg.vfy[3174] params(0) in file: qce:28:5: note:  
			def get_priority() := default_priority;
		    ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#qbq.qcg.vgz[3175] params(1) in file: qce:29:5: note:  
			def remove(id : var) : var {
		    ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 31 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @0 // pxo#pxp   
7 [0x7]:          add adx, adx -> adx   
8 [0x8]:          dup    
9 [0x9]:          ipushl #1   
10 [0xa]:          call @2255 // <std#qaf.qav.twp>   
11 [0xb]:          call @3631 // <std.io#qbq.qao.wzx>   
12 [0xc]:          loadval ebx   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 37   
15 [0xf]: line: 32 movl 0   
16 [0x10]:          movn #4   
18 [0x12]:          movi #0, adx   
20 [0x14]:          iaload ebx, adx   
21 [0x15]:          movr egx, ebx   
22 [0x16]:          dec ebx   
23 [0x17]:          movi #0, adx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 33 movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          pushobj   
30 [0x1e]:          ipushl #1   
31 [0x1f]:          call @3665 // <std.io#qbq.qah.wcd>   
32 [0x20]: line: 34 istorel 1, fp+0   
34 [0x22]:          movl 0   
35 [0x23]:          _ulck   
36 [0x24]:          ret   
37 [0x25]:          nop   
38 [0x26]: line: 37 istorel 0, fp+0   
40 [0x28]:          movl 0   
41 [0x29]:          _ulck   
42 [0x2a]:          ret   
43 [0x2b]:          movl 0   
44 [0x2c]:          _ulck   


function: std.io#qbq.qcg.vga[3176] params(0) in file: qce:41:8: note:  
		    def get_elements() : thread[] {
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          call @3662 // <std.io#qbq.qah.wbx>   
5 [0x5]:          loadval ebx   
6 [0x6]:          new_classarray ebx  // std.io#thread[]   
8 [0x8]:          popobj2    
9 [0x9]:          smovr_3 fp+1   
10 [0xa]: line: 43 istorel 0, fp+2   
12 [0xc]: line: 45 istorel -1, fp+4   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          pushobj   
18 [0x12]:          invoke_delegate 3643 { static=0, args=0 }   
20 [0x14]:          popl 5   
21 [0x15]:          iaddl 1, fp@4   
23 [0x17]:          movl 5   
24 [0x18]:          sizeof ecx   
25 [0x19]:          loadl ebx, fp+4   
26 [0x1a]:          lt ebx, ecx   
27 [0x1b]:          jne 52   
28 [0x1c]:          iaload ecx, ebx   
29 [0x1d]:          smovr_2 ecx, fp+3   
30 [0x1e]: line: 46 movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          pushobj   
34 [0x22]:          new_class @0 // pxo#pxp   
35 [0x23]:          add adx, adx -> adx   
36 [0x24]:          dup    
37 [0x25]:          ipushl #3   
38 [0x26]:          call @2255 // <std#qaf.qav.twp>   
39 [0x27]:          call @3629 // <std.io#qbq.qao.wzv>   
40 [0x28]:          pushl 1   
41 [0x29]:          loadl ebx, fp+2   
42 [0x2a]:          movr egx, ebx   
43 [0x2b]:          inc ebx   
44 [0x2c]:          smovr_2 ebx, fp+2   
45 [0x2d]:          movr ebx, egx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          popobj   
51 [0x33]:          jmp @21   
52 [0x34]: line: 49 movl 1   
53 [0x35]:          returnobj   
54 [0x36]:          ret   


function: std.io#qbq.qcg.vgd[3177] params(1) in file: qce:52:8: note:  
		    def find(find_func: (thread)(var)) : thread {
		       ^

0 [0x0]: line: 53 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          pushobj   
7 [0x7]:          call @3662 // <std.io#qbq.qah.wbx>   
8 [0x8]:          loadval ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 49   
14 [0xe]: line: 54 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          new_class @0 // pxo#pxp   
19 [0x13]:          add adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          ipushl #2   
26 [0x1a]:          call @3652 // <std.io#qbq.qah.wbn>   
27 [0x1b]:          call @2255 // <std#qaf.qav.twp>   
28 [0x1c]:          call @3629 // <std.io#qbq.qao.wzv>   
29 [0x1d]:          popobj2    
30 [0x1e]:          smovr_3 fp+3   
31 [0x1f]: line: 55 movl 3   
32 [0x20]:          checknull   
33 [0x21]:          not ebx, ebx   
34 [0x22]:          skne ebx // pc = 40   
35 [0x23]:          ipushl #1   
36 [0x24]:          pushl 3   
37 [0x25]:          smov ebx, sp+[-1]   
38 [0x26]:          calld ebx   
39 [0x27]:          loadval ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 45   
42 [0x2a]: line: 56 movl 3   
43 [0x2b]:          returnobj   
44 [0x2c]:          ret   
45 [0x2d]:          nop   
46 [0x2e]:          iaddl 1, fp@2   
48 [0x30]:          jmp @2   
49 [0x31]: line: 60 pushnull    
50 [0x32]:          popobj2    
51 [0x33]:          returnobj   
52 [0x34]:          ret   


function: std.io#qbq.qcg.vge[3178] params(0) in file: qce:63:5: note:  
			def kill_all() {
		    ^

0 [0x0]: line: 64 istorel -1, fp+2   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          invoke_delegate 3643 { static=0, args=0 }   
8 [0x8]:          popl 3   
9 [0x9]:          iaddl 1, fp@2   
11 [0xb]:          movl 3   
12 [0xc]:          sizeof ecx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          lt ebx, ecx   
15 [0xf]:          jne 31   
16 [0x10]:          iaload ecx, ebx   
17 [0x11]:          smovr_2 ecx, fp+1   
18 [0x12]: line: 65 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          new_class @0 // pxo#pxp   
23 [0x17]:          add adx, adx -> adx   
24 [0x18]:          dup    
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @2255 // <std#qaf.qav.twp>   
27 [0x1b]:          call @3629 // <std.io#qbq.qao.wzv>   
28 [0x1c]:          call @3328 // <std.io#thread.interrupt>   
29 [0x1d]:          pop   
30 [0x1e]:          jmp @9   
31 [0x1f]:          ret   


constructor: std.io#qbq.qcg.vgf[3179] params(0) in file: qce:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         andl adx, 0   
2 [0x2]:         dup    
3 [0x3]:         call @3625 // <std.io#qbq.qao.wzr>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // pxo#pxp   
9 [0x9]:         xorl adx, 0   
10 [0xa]:         dup    
11 [0xb]:         call @3645 // <std.io#qbq.qah.wbg>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         ret   


std.io#qbq.qdj.vgg[3180] params(0) in file: qdh:18:8: note:  
		    def path_separator() : var;
		       ^



std.io#qbq.qdj.vgh[3181] params(1) in file: qdh:24:8: note:  
		    def normalize(path: string) : string;
		       ^



function: std.io#qbq.qdj.vgi[3182] params(1) in file: qdh:30:9: note:  
		     def resolve(f: file) : string {
		        ^

0 [0x0]: line: 32 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3501 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 38 pushl 2   : protected asm start
8 [0x8]:          int 0x20   
9 [0x9]:          popl 2   : protected asm end
10 [0xa]: line: 44 movl 2   
11 [0xb]:          checknull   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 29   
14 [0xe]: line: 45 new_class @0 // pxo#pxp   
15 [0xf]:          shr adx, adx -> adx   
16 [0x10]:          dup    
17 [0x11]:          new_class @0 // pxo#pxp   
18 [0x12]:          movnd adx   
19 [0x13]:          dup    
20 [0x14]:          newstr @28 // file could not be resolved:    
21 [0x15]:          call @3475 // <std#string.string>   
22 [0x16]:          movl 1   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3490 // <std#string.operator+>   
27 [0x1b]:          call @3552 // <std#qaf.qml.vvs>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 48 new_class @0 // pxo#pxp   
31 [0x1f]:          movnd adx   
32 [0x20]:          dup    
33 [0x21]:          newstr @3 //    
34 [0x22]:          call @3475 // <std#string.string>   
35 [0x23]:          pushl 2   
36 [0x24]:          call @3487 // <std#string.operator+>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   


std.io#qbq.qdj.vgj[3183] params(1) in file: qdh:67:9: note:  
		     def get_attributes(f: file) : var;
		        ^



std.io#qbq.qdj.vgk[3184] params(2) in file: qdh:81:9: note:  
		     def check_access(f: file, access: var) : var;
		        ^



function: std.io#qbq.qdj.vgl[3185] params(4) in file: qdh:88:9: note:  
		     def set_permission(f: file, access: var, enable: var, owneronly: var) : var {
		        ^

0 [0x0]: line: 90 pushl 1   
1 [0x1]:          call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:          call @3501 // <std#string.get_data>   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+5   
5 [0x5]: line: 91 istorel 0, fp+6   
7 [0x7]: line: 93 call @3396 // <qkn#qko.qku.vps>   
8 [0x8]:          loadval ebx   
9 [0x9]:          skne ebx // pc = 13   
10 [0xa]:          ipushl #2   
11 [0xb]:          ldc ebx // 1   
12 [0xc]:          loadval ecx   
13 [0xd]:          test ecx, ebx   
14 [0xe]:          jne 18   
15 [0xf]: line: 94 istorel -1, fp+0   
17 [0x11]:          ret   
18 [0x12]:          nop   
19 [0x13]: line: 100 pushl 5   : protected asm start
20 [0x14]:           loadl ebx, fp+2   
21 [0x15]:           loadl egx, fp+3   
22 [0x16]:           loadl ecx, fp+4   
23 [0x17]:           int 0x2e   
24 [0x18]:           smovr_2 ebx, fp+6   
25 [0x19]: line: 109 loadl ebx, fp+6   : protected asm end
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


function: std.io#qbq.qdj.vgm[3186] params(2) in file: qdh:121:9: note:  
		     def last_modified_time(f: file, stat_id: var) : var {
		        ^

0 [0x0]: line: 123 pushl 1   
1 [0x1]:           call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 124 istorel 0, fp+4   
7 [0x7]: line: 130 pushl 3   : protected asm start
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           int 0x26   
10 [0xa]:           smovr_2 ebx, fp+4   
11 [0xb]: line: 137 loadl ebx, fp+4   : protected asm end
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std.io#qbq.qdj.vgn[3187] params(1) in file: qdh:145:9: note:  
		     def get_length(f: file) : var {
		        ^

0 [0x0]: line: 147 pushl 1   
1 [0x1]:           call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 148 istorel 0, fp+3   
7 [0x7]: line: 154 pushl 2   : protected asm start
8 [0x8]:           int 0x27   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 160 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#qbq.qdj.vgo[3188] params(1) in file: qdh:170:8: note:  
		    def create_file(pathname: string) {
		       ^

0 [0x0]: line: 172 pushl 1   
1 [0x1]:           call @3501 // <std#string.get_data>   
2 [0x2]:           popobj2    
3 [0x3]:           smovr_3 fp+2   
4 [0x4]: line: 178 pushl 2   : protected asm start
5 [0x5]:           int 0x28   
6 [0x6]:           ret   : protected asm end


function: std.io#qbq.qdj.vgp[3189] params(1) in file: qdh:188:16: note:  
		    private def delete_directory(f: file) : var {
		               ^

0 [0x0]: line: 190 pushl 1   
1 [0x1]:           call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 191 istorel 0, fp+3   
7 [0x7]: line: 197 pushl 2   : protected asm start
8 [0x8]:           int 0x2c   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 203 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#qbq.qdj.vgq[3190] params(1) in file: qdh:210:8: note:  
		    def delete(f: file) : var {
		       ^

0 [0x0]: line: 212 pushl 1   
1 [0x1]:           call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 213 istorel 0, fp+3   
7 [0x7]: line: 215 pushl 1   
8 [0x8]:           call @3132 // <std.io#qbq.qbv.vei>   
9 [0x9]:           loadval ebx   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 18   
12 [0xc]: line: 216 pushl 0   
13 [0xd]:           pushl 1   
14 [0xe]:           call @3189 // <std.io#qbq.qdj.vgp>   
15 [0xf]:           loadval ebx   
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   
18 [0x12]:           nop   
19 [0x13]: line: 222 pushl 2   : protected asm start
20 [0x14]:           int 0x29   
21 [0x15]:           smovr_2 ebx, fp+3   
22 [0x16]: line: 228 loadl ebx, fp+3   : protected asm end
23 [0x17]:           return_val ebx   
24 [0x18]:           ret   


function: std.io#qbq.qdj.vgr[3191] params(1) in file: qdh:236:8: note:  
		    def list(f: file) : string[] {
		       ^

0 [0x0]: line: 238 pushl 1   
1 [0x1]:           call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 239 movl 3   
6 [0x6]:           del   
7 [0x7]: line: 241 pushl 1   
8 [0x8]:           call @3132 // <std.io#qbq.qbv.vei>   
9 [0x9]:           loadval ebx   
10 [0xa]:           not ebx, ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 17   
13 [0xd]: line: 242 pushnull    
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 248 pushl 2   : protected asm start
19 [0x13]:           int 0x2a   
20 [0x14]:           popl 3   
21 [0x15]: line: 254 movl 3   : protected asm end
22 [0x16]:           returnobj   
23 [0x17]:           ret   


function: std.io#qbq.qdj.vgs[3192] params(1) in file: qdh:261:8: note:  
		    def create_directory(f: file) : var {
		       ^

0 [0x0]: line: 263 pushl 1   
1 [0x1]:           call @3127 // <std.io#qbq.qbv.ved>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 264 istorel 0, fp+3   
7 [0x7]: line: 270 pushl 2   : protected asm start
8 [0x8]:           int 0x2b   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 276 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#qbq.qdj.vgt[3193] params(2) in file: qdh:284:8: note:  
		    def rename(f1: file, f2: file) : var {
		       ^

0 [0x0]: line: 286 pushl 1   
1 [0x1]:           call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 287 pushl 2   
6 [0x6]:           call @3127 // <std.io#qbq.qbv.ved>   
7 [0x7]:           call @3501 // <std#string.get_data>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+4   
10 [0xa]: line: 288 istorel 0, fp+5   
12 [0xc]: line: 294 pushl 4   : protected asm start
13 [0xd]:           pushl 3   
14 [0xe]:           int 0x30   
15 [0xf]:           smovr_2 ebx, fp+5   
16 [0x10]: line: 301 loadl ebx, fp+5   : protected asm end
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


function: std.io#qbq.qdj.vgu[3194] params(1) in file: qdh:305:15: note:  
		    static def read(f: file) : string {
		              ^

0 [0x0]: line: 306 pushl 0   
1 [0x1]:           call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 307 movl 2   
6 [0x6]:           del   
7 [0x7]: line: 308 istorel 0, fp+3   
9 [0x9]: line: 314 pushl 1   : protected asm start
10 [0xa]:           int 0x2f   
11 [0xb]:           popl 2   
12 [0xc]: line: 320 movl 2   : protected asm end
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std.io#qbq.qdj.vgv[3195] params(2) in file: qdh:324:15: note:  
		    static def write(f: file, data: string) : var {
		              ^

0 [0x0]: line: 325 pushl 0   
1 [0x1]:           call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 326 pushl 1   
6 [0x6]:           call @3501 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+3   
9 [0x9]: line: 327 istorel 0, fp+4   
11 [0xb]: line: 333 pushl 3   : protected asm start
12 [0xc]:           pushl 2   
13 [0xd]:           int 0x31   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 340 loadl ebx, fp+4   : protected asm end
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   


function: std.io#qbq.qdj.vgw[3196] params(2) in file: qdh:348:15: note:  
		    public def set_last_modified_time(f: file, time: var) : var {
		              ^

0 [0x0]: line: 350 pushl 1   
1 [0x1]:           call @3128 // <std.io#qbq.qbv.vee>   
2 [0x2]:           call @3501 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 351 istorel 0, fp+4   
7 [0x7]: line: 357 pushl 3   : protected asm start
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           int 0x2d   
10 [0xa]:           smovr_2 ebx, fp+4   
11 [0xb]: line: 364 loadl ebx, fp+4   : protected asm end
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std.io#qbq.qdj.vgx[3197] params(1) in file: qdh:372:15: note:  
		    public def set_read_only(f: file) : var {
		              ^

0 [0x0]: line: 373 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           istore 2   
4 [0x4]:           movi #0, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           istore 1   
9 [0x9]:           call @3185 // <std.io#qbq.qdj.vgl>   
10 [0xa]:           pop   
11 [0xb]: line: 374 pushl 0   
12 [0xc]:           pushl 1   
13 [0xd]:           istore 4   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           rstore ebx   
18 [0x12]:           istore 1   
20 [0x14]:           call @3185 // <std.io#qbq.qdj.vgl>   
21 [0x15]:           loadval ebx   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   


function: std.io#qbq.qdj.vgy[3198] params(1) in file: qdh:382:15: note:  
		    static def get_space_available(request: var) : var {
		              ^

0 [0x0]: line: 384 istorel 0, fp+1   
2 [0x2]: line: 390 loadl ebx, fp+0   : protected asm start
3 [0x3]:           int 0x32   
4 [0x4]:           smovr_2 ebx, fp+1   
5 [0x5]: line: 396 loadl ebx, fp+1   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std.io#qbq.qdj.vhz[3199] params(0) in file: qdh:10:16: note:  
		protected class file_system {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: qed#qee.qeg.vha[3200] params(0) in file: qec:6:21: note:  
			private job_builder() {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: qed#qee.qeg.vhb[3201] params(2) in file: qec:8:23: note:  
			protected job_builder(scheduled_job : job, master : job_master) {
		                      ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 pushl 1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         popobj   
6 [0x6]: line: 10 pushl 2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          popobj   
11 [0xb]: line: 12 movi #1, ebx   
13 [0xd]:          newobj_arry ebx   
14 [0xe]:          popobj2    
15 [0xf]:          smovr_3 fp+3   
16 [0x10]: line: 13 movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          pushobj   
20 [0x14]:          pushl 3   
21 [0x15]:          movi #0, ebx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          popobj   
28 [0x1c]: line: 14 pushl 3   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          movn #6   
34 [0x22]:          popobj   
35 [0x23]:          ret   


function: qed#qee.qeg.vhc[3202] params(1) in file: qec:17:5: note:  
			def with_timeout(mills_time : var) : job_builder {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 19 new_class @0 // pxo#pxp   
11 [0xb]:          loadval adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @29 // cannot set a timeout on a job that's blocking the calling thread   
14 [0xe]:          call @3545 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 22 ipushl #1   
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          movn #9   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]: line: 23 istore 1   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          movn #8   
34 [0x22]:          loadval ebx   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 24 movl 0   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: qed#qee.qeg.vhd[3203] params(1) in file: qec:27:5: note:  
			def schedule(future : var) : job_builder {
		    ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #12   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 29 movl 0   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: qed#qee.qeg.vhe[3204] params(2) in file: qec:32:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 34 new_class @0 // pxo#pxp   
11 [0xb]:          loadval adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @30 // cannot set a job recurring that's blocking the calling thread   
14 [0xe]:          call @3545 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 37 istore 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          movn #14   
24 [0x18]:          loadval ebx   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          rmov adx, ebx   
28 [0x1c]: line: 38 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          ipushl #1   
33 [0x21]:          pushl 2   
34 [0x22]:          call @3240 // <qed#qee.qew.vix>   
35 [0x23]: line: 39 movl 0   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: qed#qee.qeg.vhf[3205] params(1) in file: qec:42:5: note:  
			def with_name(job_name : string) : job_builder {
		    ^

0 [0x0]: line: 43 pushl 1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #5   
6 [0x6]:          popobj   
7 [0x7]: line: 44 movl 0   
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: qed#qee.qeg.vhg[3206] params(1) in file: qec:47:5: note:  
			def with_args(args : object[]) : job_builder {
		    ^

0 [0x0]: line: 48 istore 1   
2 [0x2]:          movl 1   
3 [0x3]:          sizeof ebx   
4 [0x4]:          loadval ecx   
5 [0x5]:          add ecx, ebx -> ebx   
6 [0x6]:          newobj_arry ebx   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+2   
9 [0x9]: line: 49 movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          pushobj   
13 [0xd]:          pushl 2   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          movr adx, ebx   
18 [0x12]:          chklen adx   
19 [0x13]:          movnd adx   
20 [0x14]:          popobj   
21 [0x15]: line: 51 istorel 0, fp+3   
23 [0x17]: line: 52 istorel -1, fp+5   
25 [0x19]:          pushl 1   
26 [0x1a]:          popl 6   
27 [0x1b]:          iaddl 1, fp@5   
29 [0x1d]:          movl 6   
30 [0x1e]:          sizeof ecx   
31 [0x1f]:          loadl ebx, fp+5   
32 [0x20]:          lt ebx, ecx   
33 [0x21]:          jne 48   
34 [0x22]:          movnd ebx   
35 [0x23]:          pushobj   
36 [0x24]:          popl 4   
37 [0x25]: line: 53 pushl 4   
38 [0x26]:          pushl 2   
39 [0x27]:          loadl ebx, fp+3   
40 [0x28]:          inc ebx   
41 [0x29]:          smovr_2 ebx, fp+3   
42 [0x2a]:          popobj2    
43 [0x2b]:          movr adx, ebx   
44 [0x2c]:          chklen adx   
45 [0x2d]:          movnd adx   
46 [0x2e]:          popobj   
47 [0x2f]:          jmp @27   
48 [0x30]: line: 56 pushl 2   
49 [0x31]:          movl 0   
50 [0x32]:          movn #1   
52 [0x34]:          movn #6   
54 [0x36]:          popobj   
55 [0x37]: line: 57 movl 0   
56 [0x38]:          returnobj   
57 [0x39]:          ret   


function: qed#qee.qeg.vhh[3207] params(0) in file: qec:60:5: note:  
			def block() : job_builder {
		    ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #8   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 62 new_class @0 // pxo#pxp   
11 [0xb]:          loadval adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @31 // cannot block calling thread on job that has a timeout   
14 [0xe]:          call @3545 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 65 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          movn #14   
22 [0x16]:          movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          movr cmt, ebx   
26 [0x1a]:          jne 33   
27 [0x1b]: line: 66 new_class @0 // pxo#pxp   
28 [0x1c]:          loadval adx   
29 [0x1d]:          dup    
30 [0x1e]:          newstr @32 // cannot block calling thread on a recurring job   
31 [0x1f]:          call @3545 // <std#illegal_state_exception.illegal_state_exception>   
32 [0x20]:          throw    
33 [0x21]:          nop   
34 [0x22]: line: 69 istore 1   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movn #16   
41 [0x29]:          loadval ebx   
42 [0x2a]:          movi #0, adx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]: line: 70 movl 0   
46 [0x2e]:          returnobj   
47 [0x2f]:          ret   


function: qed#qee.qeg.vhi[3208] params(0) in file: qec:73:5: note:  
			def long_term() : job_builder {
		    ^

0 [0x0]: line: 74 istore 1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          movn #17   
7 [0x7]:          loadval ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]: line: 75 movl 0   
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: qed#qee.qeg.vhk[3209] params(1) in file: qec:78:12: note:  
			public def operator=(main: ()()) : job {
		           ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @3231 // <qed#qee.qew.vil>   
6 [0x6]: line: 80 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @3218 // <qed#qee.qeo.vhx>   
15 [0xf]: line: 81 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: qed#qee.qeg.vhm[3210] params(1) in file: qec:84:12: note:  
			public def operator=(main: (args : object[])()) : job {
		           ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @3232 // <qed#qee.qew.vin>   
6 [0x6]: line: 86 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @3218 // <qed#qee.qeo.vhx>   
15 [0xf]: line: 87 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: qed#qee.qeg.vho[3211] params(1) in file: qec:90:18: note:  
		    protected def operator=(main: (deferred : object, args : object[])()) : job {
		                 ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @3233 // <qed#qee.qew.vip>   
6 [0x6]: line: 92 movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          movn #14   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 22   
16 [0x10]: line: 93 new_class @0 // pxo#pxp   
17 [0x11]:          loadval adx   
18 [0x12]:          dup    
19 [0x13]:          newstr @33 // recurring jobs cannot be deferred tasks   
20 [0x14]:          call @3545 // <std#illegal_state_exception.illegal_state_exception>   
21 [0x15]:          throw    
22 [0x16]:          nop   
23 [0x17]: line: 96 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          call @3218 // <qed#qee.qeo.vhx>   
32 [0x20]: line: 97 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          returnobj   
36 [0x24]:          ret   


overload function: qed#qee.qeg.vhq[3212] params(1) in file: qec:100:18: note:  
		    protected def operator=(main: (deferred : object)()) : job {
		                 ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #1   
5 [0x5]:           call @3234 // <qed#qee.qew.vir>   
6 [0x6]: line: 102 movl 0   
7 [0x7]:           movn #1   
9 [0x9]:           movn #14   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 22   
16 [0x10]: line: 103 new_class @0 // pxo#pxp   
17 [0x11]:           loadval adx   
18 [0x12]:           dup    
19 [0x13]:           newstr @33 // recurring jobs cannot be deferred tasks   
20 [0x14]:           call @3545 // <std#illegal_state_exception.illegal_state_exception>   
21 [0x15]:           throw    
22 [0x16]:           nop   
23 [0x17]: line: 106 movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           pushobj   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           call @3218 // <qed#qee.qeo.vhx>   
32 [0x20]: line: 107 movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           returnobj   
36 [0x24]:           ret   


function: qed#qee.qeg.vhr[3213] params(0) in file: qec:110:12: note:  
			public def get_job() := scheduled_job;
		           ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


constructor: qed#qee.qeo.vhs[3214] params(0) in file: qem:7:12: note:  
			job_master() {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 8 new_class @0 // pxo#pxp   
2 [0x2]:         movr adx, adx   
3 [0x3]:         dup    
4 [0x4]:         new_class @0 // pxo#pxp   
5 [0x5]:         movnd adx   
6 [0x6]:         dup    
7 [0x7]:         newstr @34 // Long term jobs   
8 [0x8]:         call @3475 // <std#string.string>   
9 [0x9]:         movg @40 // @std.io#qbq.qhd   
10 [0xa]:         movn #0   
12 [0xc]:         pushobj   
13 [0xd]:         call @3169 // <std.io#qbq.qcg.vft>   
14 [0xe]:         movl 0   
15 [0xf]:         movn #2   
17 [0x11]:         popobj   
18 [0x12]: line: 9 new_class @0 // pxo#pxp   
19 [0x13]:         movr adx, adx   
20 [0x14]:         dup    
21 [0x15]:         new_class @0 // pxo#pxp   
22 [0x16]:         movnd adx   
23 [0x17]:         dup    
24 [0x18]:         newstr @35 // Short term jobs   
25 [0x19]:         call @3475 // <std#string.string>   
26 [0x1a]:         movg @40 // @std.io#qbq.qhd   
27 [0x1b]:         movn #2   
29 [0x1d]:         pushobj   
30 [0x1e]:         call @3169 // <std.io#qbq.qcg.vft>   
31 [0x1f]:         movl 0   
32 [0x20]:         movn #3   
34 [0x22]:         popobj   
35 [0x23]: line: 10 new_class @0 // pxo#pxp   
36 [0x24]:          smov adx, sp+0   
37 [0x25]:          dup    
38 [0x26]:          call @3675 // <qed#qee.qja.wdg>   
39 [0x27]:          movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          popobj   
43 [0x2b]: line: 11 new_class @0 // pxo#pxp   
44 [0x2c]:          orl adx, 0   
45 [0x2d]:          dup    
46 [0x2e]:          call @3633 // <qed#qee.qao.wah>   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #1   
50 [0x32]:          popobj   
51 [0x33]:          ret   


overload function: qed#qee.qeo.vhu[3215] params(1) in file: qem:14:5: note:  
			def operator=(main: ()()) : job {
		    ^

0 [0x0]: line: 15 pushl 0   
1 [0x1]:          call @3216 // <qed#qee.qeo.vhv>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 16 pushl 2   
5 [0x5]:          ipushl #1   
6 [0x6]:          call @3231 // <qed#qee.qew.vil>   
7 [0x7]: line: 17 pushl 0   
8 [0x8]:          pushl 2   
9 [0x9]:          call @3218 // <qed#qee.qeo.vhx>   
10 [0xa]: line: 18 movl 2   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: qed#qee.qeo.vhv[3216] params(0) in file: qem:21:15: note:  
			protected def create_job() := new job("job#${job.guid}");
		              ^

0 [0x0]: line: 21 new_class @0 // pxo#pxp   
1 [0x1]:          lte adx, adx   
2 [0x2]:          dup    
3 [0x3]:          new_class @0 // pxo#pxp   
4 [0x4]:          movnd adx   
5 [0x5]:          dup    
6 [0x6]:          newstr @1 // job#   
7 [0x7]:          call @3475 // <std#string.string>   
8 [0x8]:          movg @35 // @qed#qee.qew   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3507 // <std#string.operator+>   
16 [0x10]:          call @3223 // <qed#qee.qew.vic>   
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   


function: qed#qee.qeo.vhw[3217] params(1) in file: qem:23:15: note:  
			protected def create_job(name : string) := new job(name);
		              ^

0 [0x0]: line: 23 new_class @0 // pxo#pxp   
1 [0x1]:          lte adx, adx   
2 [0x2]:          dup    
3 [0x3]:          pushl 1   
4 [0x4]:          call @3223 // <qed#qee.qew.vic>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: qed#qee.qeo.vhx[3218] params(1) in file: qem:25:15: note:  
			protected def start_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 27 movl 0   
3 [0x3]:          movn #4   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          not ebx, ebx   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 20   
11 [0xb]: line: 28 call @3242 // <qed#qee.vjz>   
12 [0xc]: line: 29 movi #1, ebx   
14 [0xe]:          movl 0   
15 [0xf]:          movn #4   
17 [0x11]:          movi #0, adx   
19 [0x13]:          rmov adx, ebx   
20 [0x14]:          nop   
21 [0x15]:          movl 0   
22 [0x16]:          _ulck   
23 [0x17]: line: 33 movl 1   
24 [0x18]:          movn #12   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 48   
31 [0x1f]: line: 34 movl 1   
32 [0x20]:          movn #12   
34 [0x22]:          movi #0, adx   
36 [0x24]:          iaload ebx, adx   
37 [0x25]:          rstore ebx   
38 [0x26]:          call @3375 // <std#qaf.qjl.vou>   
39 [0x27]:          loadval ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          movl 1   
43 [0x2b]:          movn #12   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]:          nop   
49 [0x31]: line: 36 movl 1   
50 [0x32]:          movn #16   
52 [0x34]:          movi #0, adx   
54 [0x36]:          iaload ebx, adx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 60   
57 [0x39]: line: 37 pushl 1   
58 [0x3a]:          call @3249 // <qed#qee.vjg>   
59 [0x3b]:          jmp @66   
60 [0x3c]: line: 40 movl 0   
61 [0x3d]:          movn #0   
63 [0x3f]:          pushobj   
64 [0x40]:          pushl 1   
65 [0x41]:          call @3714 // <qed#qee.qja.wfo>   
66 [0x42]:          nop   
67 [0x43]:          ret   


function: qed#qee.qeo.vhy[3219] params(1) in file: qem:44:15: note:  
			protected def get_host_controller(host: thread) := controllers.at(host);
		              ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 1   
5 [0x5]:          call @3637 // <qed#qee.qao.wal>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: qed#qee.qeo.viz[3220] params(1) in file: qem:46:15: note:  
			protected def cleanup_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 47 movl 1   
1 [0x1]:          movn #7   
3 [0x3]:          del   
4 [0x4]: line: 48 movl 1   
5 [0x5]:          movn #4   
7 [0x7]:          del   
8 [0x8]: line: 49 movl 1   
9 [0x9]:          movn #13   
11 [0xb]:          del   
12 [0xc]: line: 50 movl 1   
13 [0xd]:          movn #6   
15 [0xf]:          del   
16 [0x10]: line: 51 movl 1   
17 [0x11]:          movn #5   
19 [0x13]:          del   
20 [0x14]: line: 53 movl 1   
21 [0x15]: line: 54 _lck    
22 [0x16]: line: 55 movl 1   
23 [0x17]:          movn #20   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3732 // <qed#qee.qah.whi>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 53   
31 [0x1f]: line: 56 istorel -1, fp+3   
33 [0x21]:          movl 1   
34 [0x22]:          movn #20   
36 [0x24]:          pushobj   
37 [0x25]:          invoke_delegate 1891 { static=0, args=0 }   
39 [0x27]:          popl 4   
40 [0x28]:          iaddl 1, fp@3   
42 [0x2a]:          movl 4   
43 [0x2b]:          sizeof ecx   
44 [0x2c]:          loadl ebx, fp+3   
45 [0x2d]:          lt ebx, ecx   
46 [0x2e]:          jne 53   
47 [0x2f]:          movnd ebx   
48 [0x30]:          pushobj   
49 [0x31]:          popl 2   
50 [0x32]: line: 57 pushl 2   
51 [0x33]:          call @3385 // <std#qaf.qkh.vph>   
52 [0x34]:          jmp @40   
53 [0x35]:          nop   
54 [0x36]: line: 61 movl 1   
55 [0x37]:          movn #20   
57 [0x39]:          pushobj   
58 [0x3a]:          call @3740 // <qed#qee.qah.whq>   
59 [0x3b]:          movl 1   
60 [0x3c]:          _ulck   
61 [0x3d]: line: 64 movl 1   
62 [0x3e]:          _lck    
63 [0x3f]: line: 65 movl 1   
64 [0x40]:          movn #20   
66 [0x42]:          pushobj   
67 [0x43]:          call @3732 // <qed#qee.qah.whi>   
68 [0x44]:          loadval ebx   
69 [0x45]:          not ebx, ebx   
70 [0x46]:          movr cmt, ebx   
71 [0x47]:          jne 75   
72 [0x48]: line: 66 movl 1   
73 [0x49]:          _ulck   
74 [0x4a]:          jmp @20   
75 [0x4b]:          nop   
76 [0x4c]:          movl 1   
77 [0x4d]:          _ulck   
78 [0x4e]: line: 70 movl 1   
79 [0x4f]:          movn #20   
81 [0x51]:          del   
82 [0x52]: line: 71 movl 0   
83 [0x53]:          movn #0   
85 [0x55]:          pushobj   
86 [0x56]:          pushl 1   
87 [0x57]:          istore 3863   
89 [0x59]:          call @3721 // <qed#qee.qja.wfy>   
90 [0x5a]:          ret   


function: qed#qee.qeo.via[3221] params(1) in file: qem:74:15: note:  
			protected def cancel_jobs_by_name(name: string) {
		              ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 76 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3717 // <qed#qee.qja.wfr>   
12 [0xc]:          loadval ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 45   
18 [0x12]: line: 77 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          ipushl #2   
23 [0x17]:          call @3680 // <qed#qee.qja.wdl>   
24 [0x18]:          popobj2    
25 [0x19]:          movn #5   
27 [0x1b]:          pushobj   
28 [0x1c]:          pushl 1   
29 [0x1d]:          call @3493 // <std#string.operator==>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 41   
33 [0x21]: line: 78 movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          ipushl #2   
38 [0x26]:          call @3722 // <qed#qee.qja.wgz>   
39 [0x27]: line: 79 istorel 0, fp+2   
41 [0x29]:          nop   
42 [0x2a]:          iaddl 1, fp@2   
44 [0x2c]:          jmp @6   
45 [0x2d]: line: 83 istorel -1, fp+4   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #3   
50 [0x32]:          pushobj   
51 [0x33]:          invoke_delegate 1891 { static=0, args=0 }   
53 [0x35]:          popl 5   
54 [0x36]:          iaddl 1, fp@4   
56 [0x38]:          movl 5   
57 [0x39]:          sizeof ecx   
58 [0x3a]:          loadl ebx, fp+4   
59 [0x3b]:          lt ebx, ecx   
60 [0x3c]:          jne 88   
61 [0x3d]:          movnd ebx   
62 [0x3e]:          pushobj   
63 [0x3f]:          popl 3   
64 [0x40]: line: 84 pushl 0   
65 [0x41]:          pushl 3   
66 [0x42]:          call @3219 // <qed#qee.qeo.vhy>   
67 [0x43]:          popobj2    
68 [0x44]:          movn #0   
70 [0x46]:          smovr_3 fp+6   
71 [0x47]: line: 85 movl 6   
72 [0x48]:          checknull   
73 [0x49]:          not ebx, ebx   
74 [0x4a]:          skne ebx // pc = 82   
75 [0x4b]:          movl 6   
76 [0x4c]:          movn #5   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 1   
80 [0x50]:          call @3493 // <std#string.operator==>   
81 [0x51]:          loadval ebx   
82 [0x52]:          movr cmt, ebx   
83 [0x53]:          jne 86   
84 [0x54]: line: 86 pushl 6   
85 [0x55]:          call @3225 // <qed#qee.qew.vie>   
86 [0x56]:          nop   
87 [0x57]:          jmp @54   
88 [0x58]: line: 90 istorel -1, fp+8   
90 [0x5a]:          movl 0   
91 [0x5b]:          movn #2   
93 [0x5d]:          pushobj   
94 [0x5e]:          invoke_delegate 1891 { static=0, args=0 }   
96 [0x60]:          popl 9   
97 [0x61]:          iaddl 1, fp@8   
99 [0x63]:          movl 9   
100 [0x64]:          sizeof ecx   
101 [0x65]:          loadl ebx, fp+8   
102 [0x66]:          lt ebx, ecx   
103 [0x67]:          jne 142   
104 [0x68]:          movnd ebx   
105 [0x69]:          pushobj   
106 [0x6a]:          popl 7   
107 [0x6b]: line: 91 pushl 7   
108 [0x6c]:          movg @32 // @qed#qee   
109 [0x6d]:          movn #3   
111 [0x6f]:          pushobj   
112 [0x70]:          call @3350 // <std.io#thread.operator==>   
113 [0x71]:          loadval ebx   
114 [0x72]:          movr cmt, ebx   
115 [0x73]:          jne 117   
116 [0x74]:          jmp @97   
117 [0x75]:          nop   
118 [0x76]: line: 93 pushl 0   
119 [0x77]:          pushl 7   
120 [0x78]:          call @3219 // <qed#qee.qeo.vhy>   
121 [0x79]:          popobj2    
122 [0x7a]:          movn #0   
124 [0x7c]:          smovr_3 fp+10   
125 [0x7d]: line: 94 movl 10   
126 [0x7e]:          checknull   
127 [0x7f]:          not ebx, ebx   
128 [0x80]:          skne ebx // pc = 136   
129 [0x81]:          movl 10   
130 [0x82]:          movn #5   
132 [0x84]:          pushobj   
133 [0x85]:          pushl 1   
134 [0x86]:          call @3493 // <std#string.operator==>   
135 [0x87]:          loadval ebx   
136 [0x88]:          movr cmt, ebx   
137 [0x89]:          jne 140   
138 [0x8a]: line: 95 pushl 10   
139 [0x8b]:          call @3225 // <qed#qee.qew.vie>   
140 [0x8c]:          nop   
141 [0x8d]:          jmp @97   
142 [0x8e]:          movl 0   
143 [0x8f]:          movn #0   
145 [0x91]:          _ulck   
146 [0x92]:          ret   


constructor: qed#qee.qew.vib[3222] params(0) in file: qeu:7:13: note:  
			private job() {}
		            ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @36 // @qed#qee.qgi   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @0 // pxo#pxp   
81 [0x51]:         smovr_2 adx, fp+0   
82 [0x52]:         dup    
83 [0x53]:         call @3729 // <qed#qee.qah.whf>   
84 [0x54]:         movl 0   
85 [0x55]:         movn #20   
87 [0x57]:         popobj   
88 [0x58]:         pushl 0   
89 [0x59]:         ret   


constructor: qed#qee.qew.vic[3223] params(1) in file: qeu:9:5: note:  
			job(name : string) {
		    ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @36 // @qed#qee.qgi   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @0 // pxo#pxp   
81 [0x51]:         smovr_2 adx, fp+0   
82 [0x52]:         dup    
83 [0x53]:         call @3729 // <qed#qee.qah.whf>   
84 [0x54]:         movl 0   
85 [0x55]:         movn #20   
87 [0x57]:         popobj   
88 [0x58]:         pushl 0   
89 [0x59]: line: 10 pushl 1   
90 [0x5a]:          movl 0   
91 [0x5b]:          movn #5   
93 [0x5d]:          popobj   
94 [0x5e]: line: 11 movg @32 // @qed#qee   
95 [0x5f]:          movn #5   
97 [0x61]:          _lck    
98 [0x62]: line: 12 movg @35 // @qed#qee.qew   
99 [0x63]:          movn #0   
101 [0x65]:          movi #0, adx   
103 [0x67]:          iaload ebx, adx   
104 [0x68]:          movr egx, ebx   
105 [0x69]:          inc ebx   
106 [0x6a]:          movi #0, adx   
108 [0x6c]:          rmov adx, ebx   
109 [0x6d]:          rstore egx   
110 [0x6e]:          movl 0   
111 [0x6f]:          movn #15   
113 [0x71]:          loadval ebx   
114 [0x72]:          movi #0, adx   
116 [0x74]:          rmov adx, ebx   
117 [0x75]:          movg @32 // @qed#qee   
118 [0x76]:          movn #5   
120 [0x78]:          _ulck   
121 [0x79]:          ret   


function: qed#qee.qew.vid[3224] params(0) in file: qeu:16:15: note:  
			protected def execute_async() : var {
		              ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          pushobj   
4 [0x4]:          movg @36 // @qed#qee.qgi   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @3364 // <std#_enum_.operator==>   
9 [0x9]:          loadval ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 82   
12 [0xc]: line: 18 pushl 0   
13 [0xd]:          movl 0   
14 [0xe]:          movn #19   
16 [0x10]:          movn #0   
18 [0x12]:          popobj   
19 [0x13]: line: 19 call @3375 // <std#qaf.qjl.vou>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #19   
23 [0x17]:          movn #1   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 21 movl 0   
30 [0x1e]:          movn #4   
32 [0x20]:          pushobj   
33 [0x21]:          call @3347 // <std.io#thread.is_active>   
34 [0x22]:          loadval ebx   
35 [0x23]:          not ebx, ebx   
36 [0x24]:          movr cmt, ebx   
37 [0x25]:          jne 72   
38 [0x26]: line: 22 movl 0   
39 [0x27]:          movn #4   
41 [0x29]:          pushobj   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          newobj_arry ebx   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #19   
48 [0x30]:          pushobj   
49 [0x31]:          movsl #-1   
50 [0x32]:          movn #0   
52 [0x34]:          popobj   
53 [0x35]:          call @3322 // <std.io#thread.start>   
54 [0x36]:          movg @30 // @std.io#qbq.qcp   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          call @3362 // <std#_enum_.operator!=>   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 71   
62 [0x3e]: line: 24 movl 0   
63 [0x3f]:          movn #19   
65 [0x41]:          movn #0   
67 [0x43]:          del   
68 [0x44]: line: 25 istorel 2, fp+0   
70 [0x46]:          ret   
71 [0x47]:          nop   
72 [0x48]:          nop   
73 [0x49]: line: 29 movl 0   
74 [0x4a]:          movn #19   
76 [0x4c]:          pushobj   
77 [0x4d]:          call @3385 // <std#qaf.qkh.vph>   
78 [0x4e]: line: 30 istorel 0, fp+0   
80 [0x50]:          ret   
81 [0x51]:          jmp @97   
82 [0x52]:          movl 0   
83 [0x53]:          movn #18   
85 [0x55]:          pushobj   
86 [0x56]:          movg @36 // @qed#qee.qgi   
87 [0x57]:          movn #1   
89 [0x59]:          pushobj   
90 [0x5a]:          call @3364 // <std#_enum_.operator==>   
91 [0x5b]:          loadval ebx   
92 [0x5c]:          movr cmt, ebx   
93 [0x5d]:          jne 97   
94 [0x5e]: line: 32 istorel 1, fp+0   
96 [0x60]:          ret   
97 [0x61]:          nop   
98 [0x62]: line: 35 istorel 2, fp+0   
100 [0x64]:          ret   


function: qed#qee.qew.vie[3225] params(0) in file: qeu:38:12: note:  
			public def cancel() {
		           ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 40 movl 0   
3 [0x3]:          movn #18   
5 [0x5]:          pushobj   
6 [0x6]:          movg @36 // @qed#qee.qgi   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          call @3364 // <std#_enum_.operator==>   
11 [0xb]:          loadval ebx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 50   
14 [0xe]: line: 41 movg @36 // @qed#qee.qgi   
15 [0xf]:          movn #3   
17 [0x11]:          pushobj   
18 [0x12]:          movl 0   
19 [0x13]:          movn #18   
21 [0x15]:          popobj   
22 [0x16]: line: 43 call @3329 // <std.io#thread.current>   
23 [0x17]:          movl 0   
24 [0x18]:          movn #4   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 44   
31 [0x1f]: line: 44 movl 0   
32 [0x20]:          movn #4   
34 [0x22]:          pushobj   
35 [0x23]:          call @3328 // <std.io#thread.interrupt>   
36 [0x24]:          pop   
37 [0x25]: line: 45 movg @32 // @qed#qee   
38 [0x26]:          movn #5   
40 [0x28]:          pushobj   
41 [0x29]:          pushl 0   
42 [0x2a]:          call @3220 // <qed#qee.qeo.viz>   
43 [0x2b]:          jmp @49   
44 [0x2c]: line: 48 new_class @0 // pxo#pxp   
45 [0x2d]:          movl 0   
46 [0x2e]:          dup    
47 [0x2f]:          call @3253 // <qed#qee.qgp.vjk>   
48 [0x30]:          throw    
49 [0x31]:          nop   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          ret   


function: qed#qee.qew.vif[3226] params(0) in file: qeu:54:15: note:  
			protected def cancel_future() {
		              ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 movl 0   
3 [0x3]:          movn #14   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 32   
10 [0xa]: line: 57 movl 0   
11 [0xb]:          movn #13   
13 [0xd]:          smovr_3 fp+1   
14 [0xe]: line: 58 movl 1   
15 [0xf]:          checknull   
16 [0x10]:          not ebx, ebx   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 32   
19 [0x13]: line: 59 pushl 1   
20 [0x14]:          call @3225 // <qed#qee.qew.vie>   
21 [0x15]: line: 60 movg @32 // @qed#qee   
22 [0x16]:          movn #5   
24 [0x18]:          pushobj   
25 [0x19]:          pushl 1   
26 [0x1a]:          call @3220 // <qed#qee.qeo.viz>   
27 [0x1b]: line: 62 movl 1   
28 [0x1c]:          movn #13   
30 [0x1e]:          smovr_3 fp+1   
31 [0x1f]:          jmp @14   
32 [0x20]:          nop   
33 [0x21]:          movl 0   
34 [0x22]:          _ulck   
35 [0x23]:          ret   


function: qed#qee.qew.vig[3227] params(0) in file: qeu:68:12: note:  
			public def join() {
		           ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #16   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          skpe ebx // pc = 28   
7 [0x7]:          movl 0   
8 [0x8]:          movn #18   
10 [0xa]:          pushobj   
11 [0xb]:          movg @36 // @qed#qee.qgi   
12 [0xc]:          movn #3   
14 [0xe]:          pushobj   
15 [0xf]:          call @3364 // <std#_enum_.operator==>   
16 [0x10]:          loadval ebx   
17 [0x11]:          skpe ebx // pc = 28   
18 [0x12]:          movl 0   
19 [0x13]:          movn #18   
21 [0x15]:          pushobj   
22 [0x16]:          movg @36 // @qed#qee.qgi   
23 [0x17]:          movn #2   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3364 // <std#_enum_.operator==>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 31   
30 [0x1e]: line: 72 ret   
31 [0x1f]:          nop   
32 [0x20]: line: 74 istorel 0, fp+1   
34 [0x22]: line: 75 movl 0   
35 [0x23]:          _lck    
36 [0x24]: line: 76 pushl 0   
37 [0x25]:          call @3237 // <qed#qee.qew.viu>   
38 [0x26]:          loadval ebx   
39 [0x27]:          not ebx, ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 50   
42 [0x2a]: line: 77 istorel 1, fp+1   
44 [0x2c]: line: 78 movl 0   
45 [0x2d]:          movn #20   
47 [0x2f]:          pushobj   
48 [0x30]:          call @3329 // <std.io#thread.current>   
49 [0x31]:          call @3743 // <qed#qee.qah.wht>   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]: line: 82 loadl ebx, fp+1   
54 [0x36]:          movr cmt, ebx   
55 [0x37]:          jne 58   
56 [0x38]: line: 83 call @3329 // <std.io#thread.current>   
57 [0x39]:          call @3384 // <std#qaf.qkh.vpg>   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


function: qed#qee.qew.vih[3228] params(0) in file: qeu:87:12: note:  
			public def get_state() := state;
		           ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: qed#qee.qew.vii[3229] params(0) in file: qeu:88:12: note:  
			public def get_name() := name;
		           ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #5   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: qed#qee.qew.vij[3230] params(0) in file: qeu:89:12: note:  
			public def get_id() := id;
		           ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


overload function: qed#qee.qew.vil[3231] params(1) in file: qeu:91:15: note:  
			protected def operator=(block: ()()) {
		              ^

0 [0x0]: line: 92 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: qed#qee.qew.vin[3232] params(1) in file: qeu:95:15: note:  
			protected def operator=(block: (args : object[])()) {
		              ^

0 [0x0]: line: 96 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: qed#qee.qew.vip[3233] params(1) in file: qeu:99:15: note:  
			protected def operator=(block: (deferred : object, args : object[])()) {
		              ^

0 [0x0]: line: 100 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #2   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


overload function: qed#qee.qew.vir[3234] params(1) in file: qeu:103:15: note:  
			protected def operator=(block: (deferred : object)()) {
		              ^

0 [0x0]: line: 104 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


function: qed#qee.qew.vis[3235] params(1) in file: qeu:107:22: note:  
			protected static def job_main(args : object[]) : var {
		                     ^

0 [0x0]: line: 108 pushl 0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           popobj2    
4 [0x4]:           movr adx, ebx   
5 [0x5]:           chklen adx   
6 [0x6]:           movnd adx   
7 [0x7]:           movi #38, cmt   
9 [0x9]:           cast cmt   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 110 pushl 1   
12 [0xc]: line: 111 call @3384 // <std#qaf.qkh.vpg>   
13 [0xd]: line: 113 movl 1   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           pushnull    
18 [0x12]:           itest ebx   
19 [0x13]:           not ebx, ebx   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 105   
22 [0x16]: line: 114 movl 1   : try start: try block start
23 [0x17]: line: 115 movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           call @3236 // <qed#qee.qew.vit>   
27 [0x1b]:           jmp @100   : try block end
28 [0x1c]: line: 117 movg @36 // @qed#qee.qgi   : catch(qed#qee.qgp)
29 [0x1d]:           movn #3   
31 [0x1f]:           pushobj   
32 [0x20]:           movl 1   
33 [0x21]:           movn #0   
35 [0x23]:           movn #18   
37 [0x25]:           popobj   
38 [0x26]: line: 118 movg @32 // @qed#qee   
39 [0x27]:           movn #5   
41 [0x29]:           pushobj   
42 [0x2a]:           movl 1   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @3220 // <qed#qee.qeo.viz>   
47 [0x2f]:           jmp @100   
48 [0x30]: line: 120 movg @36 // @qed#qee.qgi   : catch(std#error)
49 [0x31]:           movn #3   
51 [0x33]:           pushobj   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           movn #18   
57 [0x39]:           popobj   
58 [0x3a]: line: 121 movg @32 // @qed#qee   
59 [0x3b]:           movn #5   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 1   
63 [0x3f]:           movn #0   
65 [0x41]:           pushobj   
66 [0x42]:           call @3220 // <qed#qee.qeo.viz>   
67 [0x43]: line: 122 movl 1   
68 [0x44]:           movn #0   
70 [0x46]:           del   
71 [0x47]: line: 123 pushl 2   
72 [0x48]:           throw    
73 [0x49]:           jmp @100   
74 [0x4a]: line: 125 movg @36 // @qed#qee.qgi   : catch(std#exception)
75 [0x4b]:           movn #3   
77 [0x4d]:           pushobj   
78 [0x4e]:           movl 1   
79 [0x4f]:           movn #0   
81 [0x51]:           movn #18   
83 [0x53]:           popobj   
84 [0x54]: line: 126 movg @32 // @qed#qee   
85 [0x55]:           movn #5   
87 [0x57]:           pushobj   
88 [0x58]:           movl 1   
89 [0x59]:           movn #0   
91 [0x5b]:           pushobj   
92 [0x5c]:           call @3220 // <qed#qee.qeo.viz>   
93 [0x5d]: line: 127 movl 1   
94 [0x5e]:           movn #0   
96 [0x60]:           del   
97 [0x61]: line: 128 pushl 3   
98 [0x62]:           throw    
99 [0x63]:           jmp @100   
100 [0x64]:           nop   : try end
101 [0x65]: line: 131 movl 1   
102 [0x66]:           movn #0   
104 [0x68]:           del   
105 [0x69]:           nop   
106 [0x6a]:           jmp @11   
107 [0x6b]: line: 135 istorel 0, fp+0   
109 [0x6d]:           ret   


function: qed#qee.qew.vit[3236] params(0) in file: qeu:138:15: note:  
			protected def execute() {
		              ^

0 [0x0]: line: 139 call @3375 // <std#qaf.qjl.vou>   
1 [0x1]:           movl 0   
2 [0x2]:           movn #10   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 140 movg @36 // @qed#qee.qgi   
9 [0x9]:           movn #1   
11 [0xb]:           pushobj   
12 [0xc]:           movl 0   
13 [0xd]:           movn #18   
15 [0xf]:           popobj   
16 [0x10]: line: 141 movl 0   
17 [0x11]:           movn #14   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 26   
24 [0x18]: line: 142 pushl 0   
25 [0x19]:           call @3241 // <qed#qee.qew.viy>   
26 [0x1a]:           nop   
27 [0x1b]: line: 144 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 45   
35 [0x23]: line: 145 movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           movi #0, adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           loadval ebx   
43 [0x2b]:           calld ebx   
44 [0x2c]:           jmp @114   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #1   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 67   
53 [0x35]: line: 146 movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           iaload ebx, adx   
59 [0x3b]:           rstore ebx   
60 [0x3c]:           movl 0   
61 [0x3d]:           movn #6   
63 [0x3f]:           pushobj   
64 [0x40]:           smov ebx, sp+[-1]   
65 [0x41]:           calld ebx   
66 [0x42]:           jmp @114   
67 [0x43]:           movl 0   
68 [0x44]:           movn #2   
70 [0x46]:           movi #0, adx   
72 [0x48]:           iaload ebx, adx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 93   
75 [0x4b]: line: 147 movl 0   
76 [0x4c]:           movn #2   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movl 0   
83 [0x53]:           movn #7   
85 [0x55]:           pushobj   
86 [0x56]:           movl 0   
87 [0x57]:           movn #6   
89 [0x59]:           pushobj   
90 [0x5a]:           smov ebx, sp+[-2]   
91 [0x5b]:           calld ebx   
92 [0x5c]:           jmp @114   
93 [0x5d]:           movl 0   
94 [0x5e]:           movn #3   
96 [0x60]:           movi #0, adx   
98 [0x62]:           iaload ebx, adx   
99 [0x63]:           movr cmt, ebx   
100 [0x64]:           jne 114   
101 [0x65]: line: 148 movl 0   
102 [0x66]:           movn #3   
104 [0x68]:           movi #0, adx   
106 [0x6a]:           iaload ebx, adx   
107 [0x6b]:           rstore ebx   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #7   
111 [0x6f]:           pushobj   
112 [0x70]:           smov ebx, sp+[-1]   
113 [0x71]:           calld ebx   
114 [0x72]:           nop   
115 [0x73]: line: 151 movg @36 // @qed#qee.qgi   
116 [0x74]:           movn #2   
118 [0x76]:           pushobj   
119 [0x77]:           movl 0   
120 [0x78]:           movn #18   
122 [0x7a]:           popobj   
123 [0x7b]: line: 152 movg @32 // @qed#qee   
124 [0x7c]:           movn #5   
126 [0x7e]:           pushobj   
127 [0x7f]:           pushl 0   
128 [0x80]:           call @3220 // <qed#qee.qeo.viz>   
129 [0x81]:           ret   


function: qed#qee.qew.viu[3237] params(0) in file: qeu:155:8: note:  
		    def is_finished() := state == completed || state == cancelled;
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @36 // @qed#qee.qgi   
5 [0x5]:           movn #2   
7 [0x7]:           pushobj   
8 [0x8]:           call @3364 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           skpe ebx // pc = 21   
11 [0xb]:           movl 0   
12 [0xc]:           movn #18   
14 [0xe]:           pushobj   
15 [0xf]:           movg @36 // @qed#qee.qgi   
16 [0x10]:           movn #3   
18 [0x12]:           pushobj   
19 [0x13]:           call @3364 // <std#_enum_.operator==>   
20 [0x14]:           loadval ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: qed#qee.qew.viv[3238] params(0) in file: qeu:156:8: note:  
		    def is_active() := state == active;
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @36 // @qed#qee.qgi   
5 [0x5]:           movn #1   
7 [0x7]:           pushobj   
8 [0x8]:           call @3364 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: qed#qee.qew.viw[3239] params(1) in file: qeu:158:15: note:  
		    public def update_timeout(tm: var) {
		              ^

0 [0x0]: line: 159 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #9   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


function: qed#qee.qew.vix[3240] params(2) in file: qeu:162:15: note:  
		    public def update_interval(tm: var, interval: time_unit) {
		              ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #14   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 15   
9 [0x9]: line: 164 new_class @0 // pxo#pxp   
10 [0xa]:           loadval adx   
11 [0xb]:           dup    
12 [0xc]:           newstr @36 // cannot set update restart interval on non-recurring job   
13 [0xd]:           call @3545 // <std#illegal_state_exception.illegal_state_exception>   
14 [0xe]:           throw    
15 [0xf]:           nop   
16 [0x10]: line: 166 movl 0   
17 [0x11]:           movn #18   
19 [0x13]:           pushobj   
20 [0x14]:           movg @36 // @qed#qee.qgi   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           call @3364 // <std#_enum_.operator==>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 34   
28 [0x1c]: line: 167 pushl 0   
29 [0x1d]:           call @3226 // <qed#qee.qew.vif>   
30 [0x1e]: line: 168 movl 0   
31 [0x1f]:           movn #13   
33 [0x21]:           del   
34 [0x22]:           nop   
35 [0x23]: line: 171 pushl 2   
36 [0x24]:           movg @47 // @std#qaf.qjx   
37 [0x25]:           movn #3   
39 [0x27]:           pushobj   
40 [0x28]:           call @3364 // <std#_enum_.operator==>   
41 [0x29]:           loadval ebx   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 54   
44 [0x2c]: line: 172 ipushl #1   
45 [0x2d]:           call @3373 // <std#qaf.qjl.vos>   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #11   
49 [0x31]:           loadval ebx   
50 [0x32]:           movi #0, adx   
52 [0x34]:           rmov adx, ebx   
53 [0x35]:           jmp @113   
54 [0x36]:           pushl 2   
55 [0x37]:           movg @47 // @std#qaf.qjx   
56 [0x38]:           movn #2   
58 [0x3a]:           pushobj   
59 [0x3b]:           call @3364 // <std#_enum_.operator==>   
60 [0x3c]:           loadval ebx   
61 [0x3d]:           movr cmt, ebx   
62 [0x3e]:           jne 75   
63 [0x3f]: line: 174 ipushl #1   
64 [0x40]:           movi #1000, ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           div ecx, ebx -> ebx   
68 [0x44]:           movl 0   
69 [0x45]:           movn #11   
71 [0x47]:           movi #0, adx   
73 [0x49]:           rmov adx, ebx   
74 [0x4a]:           jmp @113   
75 [0x4b]:           pushl 2   
76 [0x4c]:           movg @47 // @std#qaf.qjx   
77 [0x4d]:           movn #1   
79 [0x4f]:           pushobj   
80 [0x50]:           call @3364 // <std#_enum_.operator==>   
81 [0x51]:           loadval ebx   
82 [0x52]:           movr cmt, ebx   
83 [0x53]:           jne 93   
84 [0x54]: line: 176 ipushl #1   
85 [0x55]:           movl 0   
86 [0x56]:           movn #11   
88 [0x58]:           loadval ebx   
89 [0x59]:           movi #0, adx   
91 [0x5b]:           rmov adx, ebx   
92 [0x5c]:           jmp @113   
93 [0x5d]:           pushl 2   
94 [0x5e]:           movg @47 // @std#qaf.qjx   
95 [0x5f]:           movn #0   
97 [0x61]:           pushobj   
98 [0x62]:           call @3364 // <std#_enum_.operator==>   
99 [0x63]:           loadval ebx   
100 [0x64]:           movr cmt, ebx   
101 [0x65]:           jne 113   
102 [0x66]: line: 178 ipushl #1   
103 [0x67]:           movi #1000, ebx   
105 [0x69]:           loadval ecx   
106 [0x6a]:           mul ecx, ebx -> ebx   
107 [0x6b]:           movl 0   
108 [0x6c]:           movn #11   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           rmov adx, ebx   
113 [0x71]:           nop   
114 [0x72]: line: 181 movl 0   
115 [0x73]:           movn #18   
117 [0x75]:           pushobj   
118 [0x76]:           movg @36 // @qed#qee.qgi   
119 [0x77]:           movn #1   
121 [0x79]:           pushobj   
122 [0x7a]:           call @3364 // <std#_enum_.operator==>   
123 [0x7b]:           loadval ebx   
124 [0x7c]:           movr cmt, ebx   
125 [0x7d]:           jne 128   
126 [0x7e]: line: 182 pushl 0   
127 [0x7f]:           call @3241 // <qed#qee.qew.viy>   
128 [0x80]:           nop   
129 [0x81]:           ret   


function: qed#qee.qew.viy[3241] params(0) in file: qeu:185:18: note:  
		    protected def reschedule() {
		                 ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #11   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3375 // <std#qaf.qjl.vou>   
17 [0x11]:           loadval ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           sub ecx, ebx -> ebx   
20 [0x14]:           smovr_2 ebx, fp+1   
21 [0x15]: line: 188 call @3263 // <qed#qee.qgy.vju>   
22 [0x16]:           movl 0   
23 [0x17]:           movn #5   
25 [0x19]:           pushobj   
26 [0x1a]:           call @3205 // <qed#qee.qeg.vhf>   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #11   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movg @47 // @std#qaf.qjx   
35 [0x23]:           movn #1   
37 [0x25]:           pushobj   
38 [0x26]:           call @3204 // <qed#qee.qeg.vhe>   
39 [0x27]:           popobj2    
40 [0x28]:           smovr_3 fp+2   
41 [0x29]: line: 192 movl 0   
42 [0x2a]:           movn #6   
44 [0x2c]:           sizeof ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movi #1, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           sub ecx, ebx -> ebx   
50 [0x32]:           newobj_arry ebx   
51 [0x33]:           popobj2    
52 [0x34]:           smovr_3 fp+3   
53 [0x35]: line: 193 istorel 0, fp+4   
55 [0x37]: line: 194 istorel 1, fp+5   
57 [0x39]:           ipushl #5   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #6   
61 [0x3d]:           sizeof ebx   
62 [0x3e]:           loadval ecx   
63 [0x3f]:           lt ecx, ebx   
64 [0x40]:           movr ebx, cmt   
65 [0x41]:           movr cmt, ebx   
66 [0x42]:           jne 91   
67 [0x43]: line: 195 movl 0   
68 [0x44]:           movn #6   
70 [0x46]:           pushobj   
71 [0x47]:           loadl ebx, fp+5   
72 [0x48]:           popobj2    
73 [0x49]:           movr adx, ebx   
74 [0x4a]:           chklen adx   
75 [0x4b]:           movnd adx   
76 [0x4c]:           pushobj   
77 [0x4d]:           pushl 3   
78 [0x4e]:           loadl ebx, fp+4   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+4   
82 [0x52]:           movr ebx, egx   
83 [0x53]:           popobj2    
84 [0x54]:           movr adx, ebx   
85 [0x55]:           chklen adx   
86 [0x56]:           movnd adx   
87 [0x57]:           popobj   
88 [0x58]:           iaddl 1, fp@5   
90 [0x5a]:           jmp @57   
91 [0x5b]: line: 198 movl 0   
92 [0x5c]:           movn #17   
94 [0x5e]:           movi #0, adx   
96 [0x60]:           iaload ebx, adx   
97 [0x61]:           movr cmt, ebx   
98 [0x62]:           jne 102   
99 [0x63]: line: 199 pushl 2   
100 [0x64]:           call @3208 // <qed#qee.qeg.vhi>   
101 [0x65]:           pop   
102 [0x66]:           nop   
103 [0x67]: line: 200 pushl 2   
104 [0x68]:           pushl 3   
105 [0x69]:           call @3206 // <qed#qee.qeg.vhg>   
106 [0x6a]:           pop   
107 [0x6b]: line: 202 movl 0   
108 [0x6c]:           movn #0   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           iaload ebx, adx   
113 [0x71]:           movr cmt, ebx   
114 [0x72]:           jne 132   
115 [0x73]: line: 203 movl 0   
116 [0x74]:           movn #0   
118 [0x76]:           movi #0, adx   
120 [0x78]:           iaload ebx, adx   
121 [0x79]:           rstore ebx   
122 [0x7a]:           movl 2   
123 [0x7b]:           movn #1   
125 [0x7d]:           movn #0   
127 [0x7f]:           loadval ebx   
128 [0x80]:           movi #0, adx   
130 [0x82]:           rmov adx, ebx   
131 [0x83]:           jmp @206   
132 [0x84]:           movl 0   
133 [0x85]:           movn #1   
135 [0x87]:           movi #0, adx   
137 [0x89]:           iaload ebx, adx   
138 [0x8a]:           movr cmt, ebx   
139 [0x8b]:           jne 157   
140 [0x8c]: line: 204 movl 0   
141 [0x8d]:           movn #1   
143 [0x8f]:           movi #0, adx   
145 [0x91]:           iaload ebx, adx   
146 [0x92]:           rstore ebx   
147 [0x93]:           movl 2   
148 [0x94]:           movn #1   
150 [0x96]:           movn #1   
152 [0x98]:           loadval ebx   
153 [0x99]:           movi #0, adx   
155 [0x9b]:           rmov adx, ebx   
156 [0x9c]:           jmp @206   
157 [0x9d]:           movl 0   
158 [0x9e]:           movn #2   
160 [0xa0]:           movi #0, adx   
162 [0xa2]:           iaload ebx, adx   
163 [0xa3]:           movr cmt, ebx   
164 [0xa4]:           jne 182   
165 [0xa5]: line: 205 movl 0   
166 [0xa6]:           movn #2   
168 [0xa8]:           movi #0, adx   
170 [0xaa]:           iaload ebx, adx   
171 [0xab]:           rstore ebx   
172 [0xac]:           movl 2   
173 [0xad]:           movn #1   
175 [0xaf]:           movn #2   
177 [0xb1]:           loadval ebx   
178 [0xb2]:           movi #0, adx   
180 [0xb4]:           rmov adx, ebx   
181 [0xb5]:           jmp @206   
182 [0xb6]:           movl 0   
183 [0xb7]:           movn #3   
185 [0xb9]:           movi #0, adx   
187 [0xbb]:           iaload ebx, adx   
188 [0xbc]:           movr cmt, ebx   
189 [0xbd]:           jne 206   
190 [0xbe]: line: 206 movl 0   
191 [0xbf]:           movn #3   
193 [0xc1]:           movi #0, adx   
195 [0xc3]:           iaload ebx, adx   
196 [0xc4]:           rstore ebx   
197 [0xc5]:           movl 2   
198 [0xc6]:           movn #1   
200 [0xc8]:           movn #3   
202 [0xca]:           loadval ebx   
203 [0xcb]:           movi #0, adx   
205 [0xcd]:           rmov adx, ebx   
206 [0xce]:           nop   
207 [0xcf]: line: 209 ipushl #1   
208 [0xd0]:           movi #0, ebx   
210 [0xd2]:           loadval ecx   
211 [0xd3]:           gt ecx, ebx   
212 [0xd4]:           movr ebx, cmt   
213 [0xd5]:           movr cmt, ebx   
214 [0xd6]:           jne 219   
215 [0xd7]: line: 210 pushl 2   
216 [0xd8]:           ipushl #1   
217 [0xd9]:           call @3203 // <qed#qee.qeg.vhd>   
218 [0xda]:           pop   
219 [0xdb]:           nop   
220 [0xdc]: line: 211 movl 0   
221 [0xdd]:           movn #8   
223 [0xdf]:           movi #0, adx   
225 [0xe1]:           iaload ebx, adx   
226 [0xe2]:           movr cmt, ebx   
227 [0xe3]:           jne 238   
228 [0xe4]: line: 212 pushl 2   
229 [0xe5]:           movl 0   
230 [0xe6]:           movn #9   
232 [0xe8]:           movi #0, adx   
234 [0xea]:           iaload ebx, adx   
235 [0xeb]:           rstore ebx   
236 [0xec]:           call @3202 // <qed#qee.qeg.vhc>   
237 [0xed]:           pop   
238 [0xee]:           nop   
239 [0xef]: line: 214 movl 2   
240 [0xf0]:           movn #1   
242 [0xf2]:           pushobj   
243 [0xf3]:           movl 0   
244 [0xf4]:           movn #13   
246 [0xf6]:           popobj   
247 [0xf7]: line: 215 movl 2   
248 [0xf8]:           movn #0   
250 [0xfa]:           pushobj   
251 [0xfb]:           movl 2   
252 [0xfc]:           movn #1   
254 [0xfe]:           pushobj   
255 [0xff]:           call @3218 // <qed#qee.qeo.vhx>   
256 [0x100]:           ret   


function: qed#qee.vjz[3242] params(0) in file: qfw:12:14: note:  
		protected def start_scheduler() {
		             ^

0 [0x0]: line: 13 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 14 movg @32 // @qed#qee   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 15 call @3243 // <qed#qee.vja>   
17 [0x11]:          nop   
18 [0x12]: line: 16 new_class @0 // pxo#pxp   
19 [0x13]:          chklen adx   
20 [0x14]:          dup    
21 [0x15]:          new_class @0 // pxo#pxp   
22 [0x16]:          movnd adx   
23 [0x17]:          dup    
24 [0x18]:          newstr @37 // task_scheduler   
25 [0x19]:          call @3475 // <std#string.string>   
26 [0x1a]:          istore 3246   
28 [0x1c]:          movg @32 // @qed#qee   
29 [0x1d]:          movn #5   
31 [0x1f]:          movn #2   
33 [0x21]:          pushobj   
34 [0x22]:          call @3320 // <std.io#thread.thread>   
35 [0x23]:          movg @32 // @qed#qee   
36 [0x24]:          movn #3   
38 [0x26]:          popobj   
39 [0x27]: line: 17 movg @32 // @qed#qee   
40 [0x28]:          movn #3   
42 [0x2a]:          pushobj   
43 [0x2b]:          pushnull    
44 [0x2c]:          call @3322 // <std.io#thread.start>   
45 [0x2d]:          pop   
46 [0x2e]:          movg @32 // @qed#qee   
47 [0x2f]:          movn #5   
49 [0x31]:          _ulck   
50 [0x32]:          ret   


function: qed#qee.vja[3243] params(0) in file: qfw:21:12: note:  
		private def calculate_max_threads() {
		           ^

0 [0x0]: line: 22 call @3415 // <platform.kernel#qlb.qli.vql>   
1 [0x1]:          ipopl 0   
2 [0x2]: line: 23 movi #2, ebx   
4 [0x4]:          mull ebx, fp@0   
5 [0x5]: line: 24 movi #4, ebx   
7 [0x7]:          subl ebx, fp@0   
8 [0x8]: line: 26 ipushl #0   
9 [0x9]:          movi #2, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 42   
16 [0x10]: line: 27 ipushl #0   
17 [0x11]:          ldc ebx // 0.75   
18 [0x12]:          loadval ecx   
19 [0x13]:          mul ecx, ebx -> ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          call @1933 // <qzv#qzw.tkf>   
22 [0x16]:          movg @32 // @qed#qee   
23 [0x17]:          movn #0   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 28 ipushl #0   
30 [0x1e]:          ldc ebx // 0.25   
31 [0x1f]:          loadval ecx   
32 [0x20]:          mul ecx, ebx -> ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @1933 // <qzv#qzw.tkf>   
35 [0x23]:          movg @32 // @qed#qee   
36 [0x24]:          movn #1   
38 [0x26]:          loadval ebx   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          nop   
43 [0x2b]: line: 31 movg @32 // @qed#qee   
44 [0x2c]:          movn #0   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          iaload ebx, adx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movi #0, ebx   
52 [0x34]:          loadval ecx   
53 [0x35]:          test ecx, ebx   
54 [0x36]:          jne 64   
55 [0x37]: line: 32 istore 1   
57 [0x39]:          movg @32 // @qed#qee   
58 [0x3a]:          movn #0   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]:          nop   
65 [0x41]: line: 34 movg @32 // @qed#qee   
66 [0x42]:          movn #1   
68 [0x44]:          movi #0, adx   
70 [0x46]:          iaload ebx, adx   
71 [0x47]:          rstore ebx   
72 [0x48]:          movi #0, ebx   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          test ecx, ebx   
76 [0x4c]:          jne 86   
77 [0x4d]: line: 35 istore 1   
79 [0x4f]:          movg @32 // @qed#qee   
80 [0x50]:          movn #1   
82 [0x52]:          loadval ebx   
83 [0x53]:          movi #0, adx   
85 [0x55]:          rmov adx, ebx   
86 [0x56]:          nop   
87 [0x57]: line: 36 movg @32 // @qed#qee   
88 [0x58]:          movn #0   
90 [0x5a]:          movi #0, adx   
92 [0x5c]:          iaload ebx, adx   
93 [0x5d]:          rstore ebx   
94 [0x5e]:          movg @32 // @qed#qee   
95 [0x5f]:          movn #1   
97 [0x61]:          movi #0, adx   
99 [0x63]:          iaload ebx, adx   
100 [0x64]:          loadval ecx   
101 [0x65]:          add ecx, ebx -> ebx   
102 [0x66]:          rstore ebx   
103 [0x67]:          movg @32 // @qed#qee   
104 [0x68]:          movn #2   
106 [0x6a]:          loadval ebx   
107 [0x6b]:          movi #0, adx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          ret   


function: qed#qee.vjb[3244] params(1) in file: qfw:39:4: note:  
		def set_thread_max(max: var) {
		   ^

0 [0x0]: line: 40 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 41 movg @32 // @qed#qee   
5 [0x5]:          movn #3   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          not ebx, ebx   
11 [0xb]:          movr cmt, ebx   
12 [0xc]:          jne 19   
13 [0xd]: line: 42 new_class @0 // pxo#pxp   
14 [0xe]:          skip @0 // pc = 14   
15 [0xf]:          dup    
16 [0x10]:          newstr @40 // cannot modify max thread count after task library has started, try calling this before your first task   
17 [0x11]:          call @3542 // <std#illegal_argument_exception.illegal_argument_exception>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 46 ipushl #0   
21 [0x15]:          movi #2, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          gte ecx, ebx   
25 [0x19]:          movr ebx, cmt   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 116   
28 [0x1c]: line: 47 ipushl #0   
29 [0x1d]:          movi #2, ebx   
31 [0x1f]:          loadval ecx   
32 [0x20]:          gt ecx, ebx   
33 [0x21]:          movr ebx, cmt   
34 [0x22]:          movr cmt, ebx   
35 [0x23]:          jne 62   
36 [0x24]: line: 48 ipushl #0   
37 [0x25]:          ldc ebx // 0.75   
38 [0x26]:          loadval ecx   
39 [0x27]:          mul ecx, ebx -> ebx   
40 [0x28]:          rstore ebx   
41 [0x29]:          call @1933 // <qzv#qzw.tkf>   
42 [0x2a]:          movg @32 // @qed#qee   
43 [0x2b]:          movn #0   
45 [0x2d]:          loadval ebx   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          rmov adx, ebx   
49 [0x31]: line: 49 ipushl #0   
50 [0x32]:          ldc ebx // 0.25   
51 [0x33]:          loadval ecx   
52 [0x34]:          mul ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @1933 // <qzv#qzw.tkf>   
55 [0x37]:          movg @32 // @qed#qee   
56 [0x38]:          movn #1   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          rmov adx, ebx   
62 [0x3e]:          nop   
63 [0x3f]: line: 52 movg @32 // @qed#qee   
64 [0x40]:          movn #0   
66 [0x42]:          movi #0, adx   
68 [0x44]:          iaload ebx, adx   
69 [0x45]:          rstore ebx   
70 [0x46]:          movi #0, ebx   
72 [0x48]:          loadval ecx   
73 [0x49]:          test ecx, ebx   
74 [0x4a]:          jne 84   
75 [0x4b]: line: 53 istore 1   
77 [0x4d]:          movg @32 // @qed#qee   
78 [0x4e]:          movn #0   
80 [0x50]:          loadval ebx   
81 [0x51]:          movi #0, adx   
83 [0x53]:          rmov adx, ebx   
84 [0x54]:          nop   
85 [0x55]: line: 55 movg @32 // @qed#qee   
86 [0x56]:          movn #1   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          iaload ebx, adx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          movi #0, ebx   
94 [0x5e]:          loadval ecx   
95 [0x5f]:          test ecx, ebx   
96 [0x60]:          jne 106   
97 [0x61]: line: 56 istore 1   
99 [0x63]:          movg @32 // @qed#qee   
100 [0x64]:          movn #1   
102 [0x66]:          loadval ebx   
103 [0x67]:          movi #0, adx   
105 [0x69]:          rmov adx, ebx   
106 [0x6a]:          nop   
107 [0x6b]: line: 57 ipushl #0   
108 [0x6c]:          movg @32 // @qed#qee   
109 [0x6d]:          movn #2   
111 [0x6f]:          loadval ebx   
112 [0x70]:          movi #0, adx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          jmp @122   
116 [0x74]: line: 59 new_class @0 // pxo#pxp   
117 [0x75]:          skip @0 // pc = 117   
118 [0x76]:          dup    
119 [0x77]:          newstr @41 // cannot have less than 2 max threads   
120 [0x78]:          call @3542 // <std#illegal_argument_exception.illegal_argument_exception>   
121 [0x79]:          throw    
122 [0x7a]:          nop   
123 [0x7b]:          movg @32 // @qed#qee   
124 [0x7c]:          movn #5   
126 [0x7e]:          _ulck   
127 [0x7f]:          ret   


function: qed#qee.vjc[3245] params(0) in file: qfw:64:4: note:  
		def get_thread_max() : var {
		   ^

0 [0x0]: line: 65 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 66 movg @32 // @qed#qee   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 67 call @3243 // <qed#qee.vja>   
17 [0x11]:          nop   
18 [0x12]: line: 68 movg @32 // @qed#qee   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          return_val ebx   
25 [0x19]:          movg @32 // @qed#qee   
26 [0x1a]:          movn #5   
28 [0x1c]:          _ulck   
29 [0x1d]:          ret   
30 [0x1e]:          movg @32 // @qed#qee   
31 [0x1f]:          movn #5   
33 [0x21]:          _ulck   


function: qed#qee.vjd[3246] params(1) in file: qfw:72:12: note:  
		private def scheduler_main(args : object[]) : var
		           ^

0 [0x0]: line: 74 istorel 36000, fp+1   
2 [0x2]: line: 75 movg @32 // @qed#qee   
3 [0x3]: line: 76 movn #5   
5 [0x5]:          movn #0   
7 [0x7]:          smovr_3 fp+2   
8 [0x8]: line: 77 movi #1, ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 194   
12 [0xc]: line: 79 call @3334 // <std.io#thread.yield>   
13 [0xd]: line: 80 istorel 0, fp+3   
15 [0xf]:          ipushl #3   
16 [0x10]:          pushl 2   
17 [0x11]:          call @3717 // <qed#qee.qja.wfr>   
18 [0x12]:          loadval ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 173   
24 [0x18]: line: 81 pushl 2   
25 [0x19]:          ipushl #3   
26 [0x1a]:          call @3680 // <qed#qee.qja.wdl>   
27 [0x1b]:          popobj2    
28 [0x1c]:          smovr_3 fp+4   
29 [0x1d]: line: 83 movl 4   
30 [0x1e]:          movn #12   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movi #0, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          tne ecx, ebx   
40 [0x28]:          jne 85   
41 [0x29]: line: 84 call @3375 // <std#qaf.qjl.vou>   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          rstore ebx   
44 [0x2c]:          movl 4   
45 [0x2d]:          movn #12   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          iaload ebx, adx   
50 [0x32]:          loadval ecx   
51 [0x33]:          gte ecx, ebx   
52 [0x34]:          movr ebx, cmt   
53 [0x35]:          movr cmt, ebx   
54 [0x36]:          jne 83   
55 [0x37]: line: 85 movi #0, ebx   
57 [0x39]:          movl 4   
58 [0x3a]:          movn #12   
60 [0x3c]:          movi #0, adx   
62 [0x3e]:          rmov adx, ebx   
63 [0x3f]: line: 86 pushl 4   
64 [0x40]:          call @3250 // <qed#qee.vjh>   
65 [0x41]:          ipopl 5   
66 [0x42]: line: 88 loadl ebx, fp+5   
67 [0x43]:          skne ebx // pc = 75   
68 [0x44]:          movl 4   
69 [0x45]:          movn #8   
71 [0x47]:          movi #0, adx   
73 [0x49]:          iaload ebx, adx   
74 [0x4a]:          not ebx, ebx   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 82   
77 [0x4d]: line: 89 pushl 2   
78 [0x4e]:          pushl 4   
79 [0x4f]:          istore 3864   
81 [0x51]:          call @3721 // <qed#qee.qja.wfy>   
82 [0x52]:          nop   
83 [0x53]:          nop   
84 [0x54]:          jmp @169   
85 [0x55]:          movl 4   
86 [0x56]:          movn #8   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          iaload ebx, adx   
91 [0x5b]:          movr cmt, ebx   
92 [0x5c]:          jne 158   
93 [0x5d]: line: 93 movl 4   
94 [0x5e]:          movn #4   
96 [0x60]:          pushobj   
97 [0x61]:          pushnull    
98 [0x62]:          itest ebx   
99 [0x63]:          movr cmt, ebx   
100 [0x64]:          jne 104   
101 [0x65]: line: 94 pushl 4   
102 [0x66]:          call @3250 // <qed#qee.vjh>   
103 [0x67]:          pop   
104 [0x68]:          nop   
105 [0x69]: line: 97 movl 4   
106 [0x6a]:          movn #18   
108 [0x6c]:          pushobj   
109 [0x6d]:          movg @36 // @qed#qee.qgi   
110 [0x6e]:          movn #1   
112 [0x70]:          pushobj   
113 [0x71]:          call @3364 // <std#_enum_.operator==>   
114 [0x72]:          loadval ebx   
115 [0x73]:          skne ebx // pc = 137   
116 [0x74]:          call @3375 // <std#qaf.qjl.vou>   
117 [0x75]:          loadval ebx   
118 [0x76]:          rstore ebx   
119 [0x77]:          movl 4   
120 [0x78]:          movn #10   
122 [0x7a]:          movi #0, adx   
124 [0x7c]:          iaload ebx, adx   
125 [0x7d]:          rstore ebx   
126 [0x7e]:          movl 4   
127 [0x7f]:          movn #9   
129 [0x81]:          movi #0, adx   
131 [0x83]:          iaload ebx, adx   
132 [0x84]:          loadval ecx   
133 [0x85]:          add ecx, ebx -> ebx   
134 [0x86]:          loadval ecx   
135 [0x87]:          gte ecx, ebx   
136 [0x88]:          movr ebx, cmt   
137 [0x89]:          movr cmt, ebx   
138 [0x8a]:          jne 156   
139 [0x8b]: line: 98 movl 4   
140 [0x8c]:          movn #13   
142 [0x8e]:          pushobj   
143 [0x8f]:          pushnull    
144 [0x90]:          itest ebx   
145 [0x91]:          movr cmt, ebx   
146 [0x92]:          jne 148   
147 [0x93]:          jmp @139   
148 [0x94]: line: 99 pushl 4   
149 [0x95]:          call @3225 // <qed#qee.qew.vie>   
150 [0x96]: line: 100 movg @32 // @qed#qee   
151 [0x97]:           movn #5   
153 [0x99]:           pushobj   
154 [0x9a]:           pushl 4   
155 [0x9b]:           call @3220 // <qed#qee.qeo.viz>   
156 [0x9c]:           nop   
157 [0x9d]:           jmp @169   
158 [0x9e]: line: 103 pushl 4   
159 [0x9f]:           call @3250 // <qed#qee.vjh>   
160 [0xa0]:           loadval ebx   
161 [0xa1]:           movr cmt, ebx   
162 [0xa2]:           jne 168   
163 [0xa3]: line: 104 pushl 2   
164 [0xa4]:           pushl 4   
165 [0xa5]:           istore 3865   
167 [0xa7]:           call @3721 // <qed#qee.qja.wfy>   
168 [0xa8]:           nop   
169 [0xa9]:           nop   
170 [0xaa]:           iaddl 1, fp@3   
172 [0xac]:           jmp @15   
173 [0xad]: line: 109 loadl ebx, fp+1   
174 [0xae]:           movr egx, ebx   
175 [0xaf]:           dec ebx   
176 [0xb0]:           smovr_2 ebx, fp+1   
177 [0xb1]:           movr ebx, egx   
178 [0xb2]:           rstore ebx   
179 [0xb3]:           movi #0, ebx   
181 [0xb5]:           loadval ecx   
182 [0xb6]:           lte ecx, ebx   
183 [0xb7]:           movr ebx, cmt   
184 [0xb8]:           movr cmt, ebx   
185 [0xb9]:           jne 189   
186 [0xba]: line: 110 istorel 36000, fp+1   
188 [0xbc]: line: 111 call @3248 // <qed#qee.vjf>   
189 [0xbd]:           nop   
190 [0xbe]: line: 114 istore 5   
192 [0xc0]:           call @3330 // <std.io#thread.sleep>   
193 [0xc1]:           jmp @8   
194 [0xc2]: line: 116 istorel 0, fp+0   
196 [0xc4]:           ret   


function: qed#qee.vje[3247] params(1) in file: qfw:119:12: note:  
		private def get_host(long_running : var) : thread {
		           ^

0 [0x0]: line: 120 movl 1   
1 [0x1]:           del   
2 [0x2]: line: 121 loadl ebx, fp+0   
3 [0x3]:           movr cmt, ebx   
4 [0x4]:           jne 12   
5 [0x5]: line: 122 movg @32 // @qed#qee   
6 [0x6]:           movn #5   
8 [0x8]:           movn #2   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]:           jmp @18   
12 [0xc]: line: 124 movg @32 // @qed#qee   
13 [0xd]:           movn #5   
15 [0xf]:           movn #3   
17 [0x11]:           smovr_3 fp+1   
18 [0x12]:           nop   
19 [0x13]: line: 127 pushl 1   
20 [0x14]:           istore 3866   
22 [0x16]:           call @3177 // <std.io#qbq.qcg.vgd>   
23 [0x17]:           popobj2    
24 [0x18]:           smovr_3 fp+2   
25 [0x19]: line: 135 movl 2   
26 [0x1a]:           checknull   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 166   
29 [0x1d]: line: 136 loadl ebx, fp+0   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 99   
32 [0x20]: line: 137 movg @32 // @qed#qee   
33 [0x21]:           movn #1   
35 [0x23]:           movi #0, adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           movi #0, ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           gt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 97   
46 [0x2e]: line: 138 movg @32 // @qed#qee   
47 [0x2f]:           movn #1   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           movr egx, ebx   
53 [0x35]:           dec ebx   
54 [0x36]:           movi #0, adx   
56 [0x38]:           rmov adx, ebx   
57 [0x39]: line: 139 new_class @0 // pxo#pxp   
58 [0x3a]:           movsl #0   
59 [0x3b]:           dup    
60 [0x3c]:           call @3254 // <qed#qee.qgs.vjl>   
61 [0x3d]:           popobj2    
62 [0x3e]:           smovr_3 fp+3   
63 [0x3f]: line: 140 new_class @0 // pxo#pxp   
64 [0x40]:           chklen adx   
65 [0x41]:           dup    
66 [0x42]:           new_class @0 // pxo#pxp   
67 [0x43]:           movnd adx   
68 [0x44]:           dup    
69 [0x45]:           newstr @42 // long_term_worker_thread#   
70 [0x46]:           call @3475 // <std#string.string>   
71 [0x47]:           pushl 1   
72 [0x48]:           call @3172 // <std.io#qbq.qcg.vfw>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movi #1, ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           add ecx, ebx -> ebx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           call @3507 // <std#string.operator+>   
81 [0x51]:           istore 3235   
83 [0x53]:           pushl 1   
84 [0x54]:           call @3320 // <std.io#thread.thread>   
85 [0x55]:           popobj2    
86 [0x56]:           smovr_3 fp+2   
87 [0x57]: line: 141 movg @32 // @qed#qee   
88 [0x58]:           movn #5   
90 [0x5a]:           movn #1   
92 [0x5c]:           pushobj   
93 [0x5d]:           pushl 2   
94 [0x5e]:           pushl 3   
95 [0x5f]:           call @3638 // <qed#qee.qao.wam>   
96 [0x60]:           pop   
97 [0x61]:           nop   
98 [0x62]:           jmp @165   
99 [0x63]: line: 144 movg @32 // @qed#qee   
100 [0x64]:           movn #0   
102 [0x66]:           movi #0, adx   
104 [0x68]:           iaload ebx, adx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           movi #0, ebx   
108 [0x6c]:           loadval ecx   
109 [0x6d]:           gt ecx, ebx   
110 [0x6e]:           movr ebx, cmt   
111 [0x6f]:           movr cmt, ebx   
112 [0x70]:           jne 164   
113 [0x71]: line: 145 movg @32 // @qed#qee   
114 [0x72]:           movn #0   
116 [0x74]:           movi #0, adx   
118 [0x76]:           iaload ebx, adx   
119 [0x77]:           movr egx, ebx   
120 [0x78]:           dec ebx   
121 [0x79]:           movi #0, adx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]: line: 146 new_class @0 // pxo#pxp   
125 [0x7d]:           movsl #0   
126 [0x7e]:           dup    
127 [0x7f]:           call @3254 // <qed#qee.qgs.vjl>   
128 [0x80]:           popobj2    
129 [0x81]:           smovr_3 fp+4   
130 [0x82]: line: 147 new_class @0 // pxo#pxp   
131 [0x83]:           chklen adx   
132 [0x84]:           dup    
133 [0x85]:           new_class @0 // pxo#pxp   
134 [0x86]:           movnd adx   
135 [0x87]:           dup    
136 [0x88]:           newstr @43 // worker_thread#   
137 [0x89]:           call @3475 // <std#string.string>   
138 [0x8a]:           pushl 1   
139 [0x8b]:           call @3172 // <std.io#qbq.qcg.vfw>   
140 [0x8c]:           loadval ebx   
141 [0x8d]:           rstore ebx   
142 [0x8e]:           movi #1, ebx   
144 [0x90]:           loadval ecx   
145 [0x91]:           add ecx, ebx -> ebx   
146 [0x92]:           rstore ebx   
147 [0x93]:           call @3507 // <std#string.operator+>   
148 [0x94]:           istore 3235   
150 [0x96]:           pushl 1   
151 [0x97]:           call @3320 // <std.io#thread.thread>   
152 [0x98]:           popobj2    
153 [0x99]:           smovr_3 fp+2   
154 [0x9a]: line: 148 movg @32 // @qed#qee   
155 [0x9b]:           movn #5   
157 [0x9d]:           movn #1   
159 [0x9f]:           pushobj   
160 [0xa0]:           pushl 2   
161 [0xa1]:           pushl 4   
162 [0xa2]:           call @3638 // <qed#qee.qao.wam>   
163 [0xa3]:           pop   
164 [0xa4]:           nop   
165 [0xa5]:           nop   
166 [0xa6]:           nop   
167 [0xa7]: line: 153 movl 2   
168 [0xa8]:           returnobj   
169 [0xa9]:           ret   


function: qed#qee.vjf[3248] params(0) in file: qfw:157:12: note:  
		private def kill_threads() {
		           ^

0 [0x0]: line: 158 movg @32 // @qed#qee   
1 [0x1]:           movn #5   
3 [0x3]:           movn #2   
5 [0x5]:           smovr_3 fp+0   
6 [0x6]: line: 160 call @3375 // <std#qaf.qjl.vou>   
7 [0x7]:           movg @32 // @qed#qee   
8 [0x8]:           movn #4   
10 [0xa]:           loadval ebx   
11 [0xb]:           movi #0, adx   
13 [0xd]:           rmov adx, ebx   
14 [0xe]: line: 161 pushl 0   
15 [0xf]:           istore 3867   
17 [0x11]:           call @3177 // <std.io#qbq.qcg.vgd>   
18 [0x12]:           popobj2    
19 [0x13]:           smovr_3 fp+1   
20 [0x14]: line: 170 movl 1   
21 [0x15]:           checknull   
22 [0x16]:           not ebx, ebx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 28   
25 [0x19]: line: 171 pushl 1   
26 [0x1a]:           call @3328 // <std.io#thread.interrupt>   
27 [0x1b]:           pop   
28 [0x1c]:           nop   
29 [0x1d]: line: 174 movg @32 // @qed#qee   
30 [0x1e]:           movn #5   
32 [0x20]:           movn #3   
34 [0x22]:           smovr_3 fp+0   
35 [0x23]: line: 176 pushl 0   
36 [0x24]:           istore 3868   
38 [0x26]:           call @3177 // <std.io#qbq.qcg.vgd>   
39 [0x27]:           popobj2    
40 [0x28]:           smovr_3 fp+1   
41 [0x29]: line: 183 movl 1   
42 [0x2a]:           checknull   
43 [0x2b]:           not ebx, ebx   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 49   
46 [0x2e]: line: 184 pushl 1   
47 [0x2f]:           call @3328 // <std.io#thread.interrupt>   
48 [0x30]:           pop   
49 [0x31]:           nop   
50 [0x32]:           ret   


function: qed#qee.vjg[3249] params(1) in file: qfw:188:14: note:  
		protected def execute_synchronous(scheduled_job : job) {
		             ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 35   
12 [0xc]: line: 190 movl 0   
13 [0xd]:           movn #12   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @3375 // <std#qaf.qjl.vou>   
20 [0x14]:           loadval ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           sub ecx, ebx -> ebx   
23 [0x17]:           smovr_2 ebx, fp+1   
24 [0x18]: line: 191 ipushl #1   
25 [0x19]:           movi #0, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           gt ecx, ebx   
29 [0x1d]:           movr ebx, cmt   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 34   
32 [0x20]:           ipushl #1   
33 [0x21]:           call @3330 // <std.io#thread.sleep>   
34 [0x22]:           nop   
35 [0x23]:           nop   
36 [0x24]: line: 193 pushl 0   
37 [0x25]:           call @3236 // <qed#qee.qew.vit>   
38 [0x26]:           ret   


function: qed#qee.vjh[3250] params(1) in file: qfw:196:14: note:  
		protected def execute_job(scheduled_job : job) : var {
		             ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #17   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @3247 // <qed#qee.vje>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+1   
10 [0xa]: line: 199 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 55   
15 [0xf]: line: 200 pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #4   
19 [0x13]:           popobj   
20 [0x14]: line: 201 movg @32 // @qed#qee   
21 [0x15]:           movn #5   
23 [0x17]:           pushobj   
24 [0x18]:           pushl 1   
25 [0x19]:           call @3219 // <qed#qee.qeo.vhy>   
26 [0x1a]:           movl 0   
27 [0x1b]:           movn #19   
29 [0x1d]:           popobj   
30 [0x1e]: line: 202 pushl 0   
31 [0x1f]:           call @3224 // <qed#qee.qew.vid>   
32 [0x20]:           loadval ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           tne ecx, ebx   
38 [0x26]:           jne 50   
39 [0x27]: line: 203 movl 0   
40 [0x28]:           movn #4   
42 [0x2a]:           del   
43 [0x2b]: line: 204 movl 0   
44 [0x2c]:           movn #19   
46 [0x2e]:           del   
47 [0x2f]: line: 205 istorel 0, fp+0   
49 [0x31]:           ret   
50 [0x32]:           nop   
51 [0x33]: line: 208 istorel 1, fp+0   
53 [0x35]:           ret   
54 [0x36]:           jmp @58   
55 [0x37]: line: 209 istorel 0, fp+0   
57 [0x39]:           ret   
58 [0x3a]:           nop   


constructor: qed#qee.qgp.vji[3251] params(1) in file: qgn:4:34: note:  
		    public cancellation_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3560 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: qed#qee.qgp.vjj[3252] params(1) in file: qgn:5:34: note:  
		    public cancellation_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3561 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: qed#qee.qgp.vjk[3253] params(0) in file: qgn:3:6: note:  
		class cancellation_exception base runtime_except {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3562 // <std#runtime_exception.runtime_exception>   
2 [0x2]:         ret   


constructor: qed#qee.qgs.vjl[3254] params(0) in file: qgq:5:6: note:  
		class job_controller {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: qed#qee.vjm[3255] params(0) in file: qgv:5:4: note:  
		def finish() {
		   ^

0 [0x0]: line: 6 new_class @0 // pxo#pxp   
1 [0x1]:         movl 0   
2 [0x2]:         dup    
3 [0x3]:         call @3253 // <qed#qee.qgp.vjk>   
4 [0x4]:         throw    
5 [0x5]:         ret   


function: qed#qee.qgy.vjn[3256] params(1) in file: qgv:10:15: note:  
		    static def with_timeout(mills_time : var) : job_builder {
		              ^

0 [0x0]: line: 11 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3216 // <qed#qee.qeo.vhv>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 12 new_class @0 // pxo#pxp   
8 [0x8]:          lt adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @32 // @qed#qee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3201 // <qed#qee.qeg.vhb>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 13 pushl 2   
19 [0x13]:          ipushl #0   
20 [0x14]:          call @3202 // <qed#qee.qeg.vhc>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: qed#qee.qgy.vjo[3257] params(1) in file: qgv:16:15: note:  
		    static def schedule(future : var) : job_builder {
		              ^

0 [0x0]: line: 17 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3216 // <qed#qee.qeo.vhv>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 18 new_class @0 // pxo#pxp   
8 [0x8]:          lt adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @32 // @qed#qee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3201 // <qed#qee.qeg.vhb>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 19 pushl 2   
19 [0x13]:          ipushl #0   
20 [0x14]:          call @3203 // <qed#qee.qeg.vhd>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: qed#qee.qgy.vjp[3258] params(1) in file: qgv:22:15: note:  
		    static def with_name(job_name : string) : job_builder {
		              ^

0 [0x0]: line: 23 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @3217 // <qed#qee.qeo.vhw>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 24 new_class @0 // pxo#pxp   
9 [0x9]:          lt adx, adx   
10 [0xa]:          dup    
11 [0xb]:          pushl 1   
12 [0xc]:          movg @32 // @qed#qee   
13 [0xd]:          movn #5   
15 [0xf]:          pushobj   
16 [0x10]:          call @3201 // <qed#qee.qeg.vhb>   
17 [0x11]:          popobj2    
18 [0x12]:          smovr_3 fp+2   
19 [0x13]: line: 25 pushl 2   
20 [0x14]:          pushl 0   
21 [0x15]:          call @3205 // <qed#qee.qeg.vhf>   
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   


function: qed#qee.qgy.vjq[3259] params(1) in file: qgv:28:15: note:  
		    static def with_args(args : object[]) : job_builder {
		              ^

0 [0x0]: line: 29 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3216 // <qed#qee.qeo.vhv>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 30 new_class @0 // pxo#pxp   
8 [0x8]:          lt adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @32 // @qed#qee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3201 // <qed#qee.qeg.vhb>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 31 pushl 2   
19 [0x13]:          pushl 0   
20 [0x14]:          call @3206 // <qed#qee.qeg.vhg>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: qed#qee.qgy.vjr[3260] params(2) in file: qgv:34:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]: line: 35 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3216 // <qed#qee.qeo.vhv>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 36 new_class @0 // pxo#pxp   
8 [0x8]:          lt adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 3   
11 [0xb]:          movg @32 // @qed#qee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3201 // <qed#qee.qeg.vhb>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+4   
18 [0x12]: line: 37 pushl 4   
19 [0x13]:          ipushl #1   
20 [0x14]:          pushl 2   
21 [0x15]:          call @3204 // <qed#qee.qeg.vhe>   
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   


function: qed#qee.qgy.vjs[3261] params(0) in file: qgv:40:12: note:  
			static def block() : job_builder {
		           ^

0 [0x0]: line: 41 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3216 // <qed#qee.qeo.vhv>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 42 new_class @0 // pxo#pxp   
8 [0x8]:          lt adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @32 // @qed#qee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3201 // <qed#qee.qeg.vhb>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 43 pushl 1   
19 [0x13]:          call @3207 // <qed#qee.qeg.vhh>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: qed#qee.qgy.vjt[3262] params(0) in file: qgv:46:12: note:  
			static def long_term() : job_builder {
		           ^

0 [0x0]: line: 47 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3216 // <qed#qee.qeo.vhv>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 48 new_class @0 // pxo#pxp   
8 [0x8]:          lt adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @32 // @qed#qee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3201 // <qed#qee.qeg.vhb>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 49 pushl 1   
19 [0x13]:          call @3208 // <qed#qee.qeg.vhi>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: qed#qee.qgy.vju[3263] params(0) in file: qgv:52:15: note:  
		    static def builder() : job_builder {
		              ^

0 [0x0]: line: 53 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @3216 // <qed#qee.qeo.vhv>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 54 new_class @0 // pxo#pxp   
8 [0x8]:          lt adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @32 // @qed#qee   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @3201 // <qed#qee.qeg.vhb>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 55 movl 1   
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: qed#qee.qgy.vjv[3264] params(1) in file: qgv:58:19: note:  
			public static def cancel_all_jobs_by_name(name: string) {
		                  ^

0 [0x0]: line: 59 movg @32 // @qed#qee   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @3221 // <qed#qee.qeo.via>   
6 [0x6]:          ret   


constructor: qed#qee.qgy.vjw[3265] params(0) in file: qgv:9:6: note:  
		class task {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std.io#qbq.vjx[3266] params(2) in file: qhz:4:4: note:  
		def realloc(data: object[], size: var) {
		   ^

0 [0x0]: line: 5 pushl 0   : protected asm start
1 [0x1]:         ipushl #1   
2 [0x2]:         int 0x23   
3 [0x3]:         ret   : protected asm end


function: std.io#qbq.vjy[3267] params(2) in file: qhz:12:4: note:  
		def realloc(data: var[], size: var) {
		   ^

0 [0x0]: line: 13 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#qbq.vkz[3268] params(2) in file: qhz:20:4: note:  
		def realloc(data: _int8[], size: var) {
		   ^

0 [0x0]: line: 21 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#qbq.vka[3269] params(2) in file: qhz:28:4: note:  
		def realloc(data: _int16[], size: var) {
		   ^

0 [0x0]: line: 29 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#qbq.vkb[3270] params(2) in file: qhz:36:4: note:  
		def realloc(data: _int32[], size: var) {
		   ^

0 [0x0]: line: 37 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#qbq.vkc[3271] params(2) in file: qhz:44:4: note:  
		def realloc(data: _int64[], size: var) {
		   ^

0 [0x0]: line: 45 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#qbq.vkd[3272] params(2) in file: qhz:52:4: note:  
		def realloc(data: _uint8[], size: var) {
		   ^

0 [0x0]: line: 53 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#qbq.vke[3273] params(2) in file: qhz:60:4: note:  
		def realloc(data: _uint16[], size: var) {
		   ^

0 [0x0]: line: 61 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#qbq.vkf[3274] params(2) in file: qhz:68:4: note:  
		def realloc(data: _uint32[], size: var) {
		   ^

0 [0x0]: line: 69 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#qbq.vkg[3275] params(2) in file: qhz:76:4: note:  
		def realloc(data: _uint64[], size: var) {
		   ^

0 [0x0]: line: 77 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#qbq.vkh[3276] params(5) in file: qhz:84:4: note:  
		def memcopy(src: object[], dest: object[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 85 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#qbq.vki[3277] params(5) in file: qhz:95:4: note:  
		def memcopy(src: var[], dest: var[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 96 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#qbq.vkj[3278] params(5) in file: qhz:106:4: note:  
		def memcopy(src: _int8[], dest: _int8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 107 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#qbq.vkk[3279] params(5) in file: qhz:117:4: note:  
		def memcopy(src: _int16[], dest: _int16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 118 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#qbq.vkl[3280] params(5) in file: qhz:128:4: note:  
		def memcopy(src: _int32[], dest: _int32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 129 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#qbq.vkm[3281] params(5) in file: qhz:139:4: note:  
		def memcopy(src: _int64[], dest: _int64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 140 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#qbq.vkn[3282] params(5) in file: qhz:150:4: note:  
		def memcopy(src: _uint8[], dest: _uint8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 151 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#qbq.vko[3283] params(5) in file: qhz:161:4: note:  
		def memcopy(src: _uint16[], dest: _uint16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 162 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#qbq.vkp[3284] params(5) in file: qhz:172:4: note:  
		def memcopy(src: _uint32[], dest: _uint32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 173 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#qbq.vkq[3285] params(5) in file: qhz:183:4: note:  
		def memcopy(src: _uint64[], dest: _uint64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 184 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#qbq.vkr[3286] params(3) in file: qhz:194:4: note:  
		def copy(src: object[], srcStart: var, srcEnd: var) : object[] {
		   ^

0 [0x0]: line: 195 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 204 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vks[3287] params(3) in file: qhz:207:4: note:  
		def copy(src: var[], srcStart: var, srcEnd: var) : var[] {
		   ^

0 [0x0]: line: 208 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 217 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vkt[3288] params(3) in file: qhz:220:4: note:  
		def copy(src: _int8[], srcStart: var, srcEnd: var) : _int8[] {
		   ^

0 [0x0]: line: 221 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 230 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vku[3289] params(3) in file: qhz:233:4: note:  
		def copy(src: _int16[], srcStart: var, srcEnd: var) : _int16[] {
		   ^

0 [0x0]: line: 234 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 243 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vkv[3290] params(3) in file: qhz:246:4: note:  
		def copy(src: _int32[], srcStart: var, srcEnd: var) : _int32[] {
		   ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 256 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vkw[3291] params(3) in file: qhz:259:4: note:  
		def copy(src: _uint8[], srcStart: var, srcEnd: var) : _uint8[] {
		   ^

0 [0x0]: line: 260 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 269 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vkx[3292] params(3) in file: qhz:272:4: note:  
		def copy(src: _uint16[], srcStart: var, srcEnd: var) : _uint16[] {
		   ^

0 [0x0]: line: 273 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 282 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vky[3293] params(3) in file: qhz:285:4: note:  
		def copy(src: _uint32[], srcStart: var, srcEnd: var) : _uint32[] {
		   ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 295 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vlz[3294] params(3) in file: qhz:298:4: note:  
		def copy(src: _uint64[], srcStart: var, srcEnd: var) : _uint64[] {
		   ^

0 [0x0]: line: 299 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 308 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vla[3295] params(3) in file: qhz:311:4: note:  
		def copy(src: _int64[], srcStart: var, srcEnd: var) : _int64[] {
		   ^

0 [0x0]: line: 312 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 321 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vlb[3296] params(3) in file: qhz:325:4: note:  
		def invert(src: object[], start: var, len: var) : object[] {
		   ^

0 [0x0]: line: 326 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 335 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vlc[3297] params(3) in file: qhz:338:4: note:  
		def invert(src: var[], start: var, len: var) : var[] {
		   ^

0 [0x0]: line: 339 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 348 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vld[3298] params(3) in file: qhz:351:4: note:  
		def invert(src: _int8[], start: var, len: var) : _int8[] {
		   ^

0 [0x0]: line: 352 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 361 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vle[3299] params(3) in file: qhz:364:4: note:  
		def invert(src: _int16[], start: var, len: var) : _int16[] {
		   ^

0 [0x0]: line: 365 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 374 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vlf[3300] params(3) in file: qhz:377:4: note:  
		def invert(src: _int32[], start: var, len: var) : _int32[] {
		   ^

0 [0x0]: line: 378 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 387 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vlg[3301] params(3) in file: qhz:390:4: note:  
		def invert(src: _int64[], start: var, len: var) : _int64[] {
		   ^

0 [0x0]: line: 391 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 400 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vlh[3302] params(3) in file: qhz:403:4: note:  
		def invert(src: _uint8[], start: var, len: var) : _uint8[] {
		   ^

0 [0x0]: line: 404 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 413 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vli[3303] params(3) in file: qhz:416:4: note:  
		def invert(src: _uint16[], start: var, len: var) : _uint16[] {
		   ^

0 [0x0]: line: 417 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 426 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vlj[3304] params(3) in file: qhz:429:4: note:  
		def invert(src: _uint32[], start: var, len: var) : _uint32[] {
		   ^

0 [0x0]: line: 430 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 439 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.vlk[3305] params(3) in file: qhz:442:4: note:  
		def invert(src: _uint64[], start: var, len: var) : _uint64[] {
		   ^

0 [0x0]: line: 443 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 452 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#qbq.qhp.vll[3306] params(0) in file: qhn:12:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 13 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#qbq.qhp.vlm[3307] params(1) in file: qhn:20:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 21 pushl 1   
1 [0x1]:          call @3516 // <std#string.size>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 22 istorel 0, fp+3   
5 [0x5]: line: 23 istorel 0, fp+4   
7 [0x7]:          ipushl #4   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 265   
14 [0xe]: line: 25 pushl 1   
15 [0xf]:          ipushl #4   
16 [0x10]:          call @3498 // <std#string.operator[>   
17 [0x11]:          loadval ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #92, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          test ecx, ebx   
23 [0x17]:          jne 112   
24 [0x18]: line: 26 ipushl #3   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          gt ecx, ebx   
29 [0x1d]:          movr ebx, cmt   
30 [0x1e]:          skne ebx // pc = 48   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #3   
36 [0x24]:          movi #1, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          sub ecx, ebx -> ebx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          iaload ebx, adx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #47, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          tne ecx, ebx   
49 [0x31]:          jne 66   
50 [0x32]: line: 27 istore 47   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          loadl ebx, fp+3   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          smovr_2 ebx, fp+3   
60 [0x3c]:          movr ebx, egx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          loadval ebx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          nop   
67 [0x43]: line: 29 ipushl #4   
68 [0x44]:          movi #1, ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          add ecx, ebx -> ebx   
72 [0x48]:          rstore ebx   
73 [0x49]:          loadl ebx, fp+2   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          lt ecx, ebx   
76 [0x4c]:          movr ebx, cmt   
77 [0x4d]:          skne ebx // pc = 92   
78 [0x4e]:          movl 1   
79 [0x4f]:          pushobj   
80 [0x50]:          ipushl #4   
81 [0x51]:          movi #1, ebx   
83 [0x53]:          loadval ecx   
84 [0x54]:          add ecx, ebx -> ebx   
85 [0x55]:          rstore ebx   
86 [0x56]:          call @3498 // <std#string.operator[>   
87 [0x57]:          loadval ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          movi #92, ebx   
91 [0x5b]:          loadval ecx   
92 [0x5c]:          test ecx, ebx   
93 [0x5d]:          jne 110   
94 [0x5e]: line: 30 iaddl 1, fp@4   
96 [0x60]: line: 31 pushl 1   
97 [0x61]:          ipushl #4   
98 [0x62]:          call @3498 // <std#string.operator[>   
99 [0x63]:          loadval ebx   
100 [0x64]:          rstore ebx   
101 [0x65]:          movi #92, ebx   
103 [0x67]:          loadval ecx   
104 [0x68]:          test ecx, ebx   
105 [0x69]:          je 94   
106 [0x6a]: line: 33 loadl ebx, fp+4   
107 [0x6b]:          movr egx, ebx   
108 [0x6c]:          dec ebx   
109 [0x6d]:          smovr_2 ebx, fp+4   
110 [0x6e]:          nop   
111 [0x6f]:          jmp @261   
112 [0x70]:          pushl 1   
113 [0x71]:          ipushl #4   
114 [0x72]:          call @3498 // <std#string.operator[>   
115 [0x73]:          loadval ebx   
116 [0x74]:          rstore ebx   
117 [0x75]:          movi #47, ebx   
119 [0x77]:          loadval ecx   
120 [0x78]:          test ecx, ebx   
121 [0x79]:          jne 244   
122 [0x7a]: line: 37 ipushl #4   
123 [0x7b]:          movi #1, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          add ecx, ebx -> ebx   
127 [0x7f]:          rstore ebx   
128 [0x80]:          loadl ebx, fp+2   
129 [0x81]:          loadval ecx   
130 [0x82]:          lt ecx, ebx   
131 [0x83]:          movr ebx, cmt   
132 [0x84]:          skne ebx // pc = 147   
133 [0x85]:          movl 1   
134 [0x86]:          pushobj   
135 [0x87]:          ipushl #4   
136 [0x88]:          movi #1, ebx   
138 [0x8a]:          loadval ecx   
139 [0x8b]:          add ecx, ebx -> ebx   
140 [0x8c]:          rstore ebx   
141 [0x8d]:          call @3498 // <std#string.operator[>   
142 [0x8e]:          loadval ebx   
143 [0x8f]:          rstore ebx   
144 [0x90]:          movi #47, ebx   
146 [0x92]:          loadval ecx   
147 [0x93]:          test ecx, ebx   
148 [0x94]:          jne 192   
149 [0x95]: line: 38 iaddl 1, fp@4   
151 [0x97]: line: 39 pushl 1   
152 [0x98]:          ipushl #4   
153 [0x99]:          call @3498 // <std#string.operator[>   
154 [0x9a]:          loadval ebx   
155 [0x9b]:          rstore ebx   
156 [0x9c]:          movi #47, ebx   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          test ecx, ebx   
160 [0xa0]:          je 149   
161 [0xa1]: line: 42 ipushl #3   
162 [0xa2]:          movi #0, ebx   
164 [0xa4]:          loadval ecx   
165 [0xa5]:          gt ecx, ebx   
166 [0xa6]:          movr ebx, cmt   
167 [0xa7]:          skne ebx // pc = 185   
168 [0xa8]:          movl 0   
169 [0xa9]:          movn #1   
171 [0xab]:          pushobj   
172 [0xac]:          ipushl #3   
173 [0xad]:          movi #1, ebx   
175 [0xaf]:          loadval ecx   
176 [0xb0]:          sub ecx, ebx -> ebx   
177 [0xb1]:          popobj2    
178 [0xb2]:          movr adx, ebx   
179 [0xb3]:          chklen adx   
180 [0xb4]:          iaload ebx, adx   
181 [0xb5]:          rstore ebx   
182 [0xb6]:          movi #47, ebx   
184 [0xb8]:          loadval ecx   
185 [0xb9]:          tne ecx, ebx   
186 [0xba]:          jne 191   
187 [0xbb]: line: 43 loadl ebx, fp+4   
188 [0xbc]:          movr egx, ebx   
189 [0xbd]:          dec ebx   
190 [0xbe]:          smovr_2 ebx, fp+4   
191 [0xbf]:          nop   
192 [0xc0]:          nop   
193 [0xc1]: line: 46 ipushl #3   
194 [0xc2]:          movi #0, ebx   
196 [0xc4]:          loadval ecx   
197 [0xc5]:          test ecx, ebx   
198 [0xc6]:          movr ebx, cmt   
199 [0xc7]:          skpe ebx // pc = 224   
200 [0xc8]:          ipushl #3   
201 [0xc9]:          movi #0, ebx   
203 [0xcb]:          loadval ecx   
204 [0xcc]:          gt ecx, ebx   
205 [0xcd]:          movr ebx, cmt   
206 [0xce]:          skne ebx // pc = 224   
207 [0xcf]:          movl 0   
208 [0xd0]:          movn #1   
210 [0xd2]:          pushobj   
211 [0xd3]:          ipushl #3   
212 [0xd4]:          movi #1, ebx   
214 [0xd6]:          loadval ecx   
215 [0xd7]:          sub ecx, ebx -> ebx   
216 [0xd8]:          popobj2    
217 [0xd9]:          movr adx, ebx   
218 [0xda]:          chklen adx   
219 [0xdb]:          iaload ebx, adx   
220 [0xdc]:          rstore ebx   
221 [0xdd]:          movi #47, ebx   
223 [0xdf]:          loadval ecx   
224 [0xe0]:          tne ecx, ebx   
225 [0xe1]:          jne 242   
226 [0xe2]: line: 47 istore 47   
228 [0xe4]:          movl 0   
229 [0xe5]:          movn #1   
231 [0xe7]:          pushobj   
232 [0xe8]:          loadl ebx, fp+3   
233 [0xe9]:          movr egx, ebx   
234 [0xea]:          inc ebx   
235 [0xeb]:          smovr_2 ebx, fp+3   
236 [0xec]:          movr ebx, egx   
237 [0xed]:          popobj2    
238 [0xee]:          movr adx, ebx   
239 [0xef]:          chklen adx   
240 [0xf0]:          loadval ebx   
241 [0xf1]:          rmov adx, ebx   
242 [0xf2]:          nop   
243 [0xf3]:          jmp @261   
244 [0xf4]: line: 50 pushl 1   
245 [0xf5]:          ipushl #4   
246 [0xf6]:          call @3498 // <std#string.operator[>   
247 [0xf7]:          movl 0   
248 [0xf8]:          movn #1   
250 [0xfa]:          pushobj   
251 [0xfb]:          loadl ebx, fp+3   
252 [0xfc]:          movr egx, ebx   
253 [0xfd]:          inc ebx   
254 [0xfe]:          smovr_2 ebx, fp+3   
255 [0xff]:          movr ebx, egx   
256 [0x100]:          popobj2    
257 [0x101]:          movr adx, ebx   
258 [0x102]:          chklen adx   
259 [0x103]:          loadval ebx   
260 [0x104]:          rmov adx, ebx   
261 [0x105]:          nop   
262 [0x106]:          iaddl 1, fp@4   
264 [0x108]:          jmp @7   
265 [0x109]: line: 53 new_class @0 // pxo#pxp   
266 [0x10a]:          movnd adx   
267 [0x10b]:          dup    
268 [0x10c]:          movl 0   
269 [0x10d]:          movn #1   
271 [0x10f]:          pushobj   
272 [0x110]:          istore 0   
274 [0x112]:          ipushl #3   
275 [0x113]:          call @3480 // <std#string.string>   
276 [0x114]:          popobj2    
277 [0x115]:          returnobj   
278 [0x116]:          ret   


function: std.io#qbq.qhp.vln[3308] params(1) in file: qhn:61:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 62 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3501 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 63 istorel 0, fp+3   
9 [0x9]: line: 69 pushl 2   : protected asm start
10 [0xa]:          int 0x25   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 75 loadl ebx, fp+3   : protected asm end
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std.io#qbq.qhp.vlo[3309] params(2) in file: qhn:85:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 86 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3501 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 87 istorel 0, fp+4   
9 [0x9]: line: 93 pushl 3   : protected asm start
10 [0xa]:          loadl ebx, fp+2   
11 [0xb]:          int 0x24   
12 [0xc]:          smovr_2 ebx, fp+4   
13 [0xd]: line: 100 loadl ebx, fp+4   : protected asm end
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


constructor: std.io#qbq.qhp.vlp[3310] params(0) in file: qhn:8:16: note:  
		protected class unix_fs base file_system {
		               ^

0 [0x0]:         movi #47, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx: 0   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


function: std.io#qbq.vlq[3311] params(0) in file: qhs:5:4: note:  
		def _srt_thread_start() {
		   ^

0 [0x0]: line: 6 call @3408 // <platform.kernel#qlb.qli.vqe>   
1 [0x1]:         popobj2    
2 [0x2]:         smovr_3 fp+0   
3 [0x3]: line: 7 pushl 0   
4 [0x4]:         call @3385 // <std#qaf.qkh.vph>   
5 [0x5]: line: 9 movi #1, ebx   : protected asm start
7 [0x7]:         movi #0, egx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         movl 0   
12 [0xc]:         movn #5   
14 [0xe]:         rmov adx, egx   
15 [0xf]:         movl 0   
16 [0x10]:         movn #8   
18 [0x12]:         rmov adx, ebx   : protected asm end
19 [0x13]: line: 22 istorel 1, fp+1   
21 [0x15]: line: 23 movl 0   : try start: try block start
22 [0x16]: line: 25 movn #11   
24 [0x18]: line: 26 movi #0, adx   
26 [0x1a]:          iaload ebx, adx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3414 // <platform.kernel#qlb.qli.vqk>   
29 [0x1d]:          smov ebx, sp+[-1]   
30 [0x1e]:          calld ebx   
31 [0x1f]:          ipopl 1   
32 [0x20]:          jmp @53   : try block end
33 [0x21]: line: 28 pushl 0   : catch(std#throwable)
34 [0x22]:          call @3349 // <std.io#thread.get_exception_handler>   
35 [0x23]:          pushnull    
36 [0x24]:          itest ebx   
37 [0x25]:          not ebx, ebx   
38 [0x26]:          movr cmt, ebx   
39 [0x27]:          jne 46   
40 [0x28]: line: 29 pushl 0   
41 [0x29]:          call @3349 // <std.io#thread.get_exception_handler>   
42 [0x2a]:          pushl 2   
43 [0x2b]:          invoke_delegate 3119 { static=0, args=1 }   
45 [0x2d]:          jmp @51   
46 [0x2e]: line: 31 pushl 0   
47 [0x2f]:          ipushl #1   
48 [0x30]:          call @3409 // <platform.kernel#qlb.qli.vqf>   
49 [0x31]: line: 32 pushl 2   
50 [0x32]:          throw    
51 [0x33]:          nop   
52 [0x34]:          jmp @53   
53 [0x35]:          nop   : try end
54 [0x36]: line: 36 pushl 0   
55 [0x37]:          ipushl #1   
56 [0x38]:          call @3409 // <platform.kernel#qlb.qli.vqf>   
57 [0x39]:          ret   


function: std.io#qbq.qcp.vlr[3312] params(1) in file: qhs:64:15: note:  
		    static def at(index: var) : thread_result {
		              ^

0 [0x0]: line: 65 ipushl #0   
1 [0x1]:          movg @30 // @std.io#qbq.qcp   
2 [0x2]:          movn #16   
4 [0x4]:          pushobj   
5 [0x5]:          call @3367 // <std#_enum_.get_ordinal>   
6 [0x6]:          loadval ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          jne 29   
10 [0xa]: line: 66 movg @30 // @std.io#qbq.qcp   
11 [0xb]:          movn #17   
13 [0xd]:          pushobj   
14 [0xe]:          movg @30 // @std.io#qbq.qcp   
15 [0xf]:          movn #17   
17 [0x11]:          sizeof ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #1, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          sub ecx, ebx -> ebx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   
29 [0x1d]:          nop   
30 [0x1e]: line: 68 movg @30 // @std.io#qbq.qcp   
31 [0x1f]:          movn #17   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+0   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


constructor: std.io#qbq.qcp.vls[3313] params(0) in file: qhs:39:7: note:  
		mutate thread_result {
		      ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3369 // <std#_enum_._enum_>   
2 [0x2]:         ret   


constructor: std.io#thread.thread[3314] params(0) in file: qhu:7:19: note:  
		    private thread() {} // the user must use standardized constructor
		                  ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movnd adx   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3475 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]:         ret   


constructor: std.io#thread.thread[3315] params(2) in file: qhu:9:15: note:  
			public thread(name : string, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movnd adx   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3475 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 10 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 11 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movg @29 // @std.io#qbq.qcg   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #7   
30 [0x1e]:          popobj   
31 [0x1f]: line: 13 movl 0   
32 [0x20]:          movn #7   
34 [0x22]:          pushobj   
35 [0x23]:          call @3174 // <std.io#qbq.qcg.vfy>   
36 [0x24]:          movl 0   
37 [0x25]:          movn #3   
39 [0x27]:          popobj   
40 [0x28]: line: 14 movi #-1, ebx   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 15 movg @42 // @std.io#thread   
49 [0x31]:          movn #0   
51 [0x33]:          movi #0, adx   
53 [0x35]:          iaload ebx, adx   
54 [0x36]:          movr egx, ebx   
55 [0x37]:          inc ebx   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          rmov adx, ebx   
59 [0x3b]:          rstore egx   
60 [0x3c]:          movl 0   
61 [0x3d]:          movn #2   
63 [0x3f]:          loadval ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]: line: 17 movl 0   
68 [0x44]:          movn #7   
70 [0x46]:          pushobj   
71 [0x47]:          pushl 0   
72 [0x48]:          call @3171 // <std.io#qbq.qcg.vfv>   
73 [0x49]:          ret   


constructor: std.io#thread.thread[3316] params(3) in file: qhu:20:15: note:  
			public thread(name : string, daemon: var, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movnd adx   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3475 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 21 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 22 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 23 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 24 movg @29 // @std.io#qbq.qcg   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #7   
38 [0x26]:          popobj   
39 [0x27]: line: 25 movl 0   
40 [0x28]:          movn #7   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @3174 // <std.io#qbq.qcg.vfy>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 26 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 27 movg @42 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 29 movl 0   
76 [0x4c]:          movn #7   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @3171 // <std.io#qbq.qcg.vfv>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[3317] params(3) in file: qhu:32:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movnd adx   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3475 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 33 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 34 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 35 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 36 movg @29 // @std.io#qbq.qcg   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #7   
38 [0x26]:          popobj   
39 [0x27]: line: 37 movl 0   
40 [0x28]:          movn #7   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @3174 // <std.io#qbq.qcg.vfy>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 38 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 39 movg @42 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 41 movl 0   
76 [0x4c]:          movn #7   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @3171 // <std.io#qbq.qcg.vfv>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[3318] params(4) in file: qhu:44:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movnd adx   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3475 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 45 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 46 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 47 ipushl #4   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 48 ipushl #2   
32 [0x20]:          movl 0   
33 [0x21]:          movn #4   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 49 movg @29 // @std.io#qbq.qcg   
40 [0x28]:          movn #0   
42 [0x2a]:          pushobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #7   
46 [0x2e]:          popobj   
47 [0x2f]: line: 50 movl 0   
48 [0x30]:          movn #7   
50 [0x32]:          pushobj   
51 [0x33]:          call @3174 // <std.io#qbq.qcg.vfy>   
52 [0x34]:          movl 0   
53 [0x35]:          movn #3   
55 [0x37]:          popobj   
56 [0x38]: line: 51 movi #-1, ebx   
58 [0x3a]:          movl 0   
59 [0x3b]:          movn #1   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]: line: 52 movg @42 // @std.io#thread   
65 [0x41]:          movn #0   
67 [0x43]:          movi #0, adx   
69 [0x45]:          iaload ebx, adx   
70 [0x46]:          movr egx, ebx   
71 [0x47]:          inc ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]:          rstore egx   
76 [0x4c]:          movl 0   
77 [0x4d]:          movn #2   
79 [0x4f]:          loadval ebx   
80 [0x50]:          movi #0, adx   
82 [0x52]:          rmov adx, ebx   
83 [0x53]: line: 54 movl 0   
84 [0x54]:          movn #7   
86 [0x56]:          pushobj   
87 [0x57]:          pushl 0   
88 [0x58]:          call @3171 // <std.io#qbq.qcg.vfv>   
89 [0x59]:          ret   


constructor: std.io#thread.thread[3319] params(4) in file: qhu:57:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movnd adx   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3475 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 58 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 59 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 60 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 61 pushl 4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #7   
35 [0x23]:          popobj   
36 [0x24]: line: 62 pushl 4   
37 [0x25]:          call @3174 // <std.io#qbq.qcg.vfy>   
38 [0x26]:          movl 0   
39 [0x27]:          movn #3   
41 [0x29]:          popobj   
42 [0x2a]: line: 63 movi #-1, ebx   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          rmov adx, ebx   
50 [0x32]: line: 64 movg @42 // @std.io#thread   
51 [0x33]:          movn #0   
53 [0x35]:          movi #0, adx   
55 [0x37]:          iaload ebx, adx   
56 [0x38]:          movr egx, ebx   
57 [0x39]:          inc ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]:          rstore egx   
62 [0x3e]:          movl 0   
63 [0x3f]:          movn #2   
65 [0x41]:          loadval ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]: line: 66 movl 0   
70 [0x46]:          movn #7   
72 [0x48]:          pushobj   
73 [0x49]:          pushl 0   
74 [0x4a]:          call @3171 // <std.io#qbq.qcg.vfv>   
75 [0x4b]:          ret   


constructor: std.io#thread.thread[3320] params(3) in file: qhu:69:18: note:  
		    public thread(name : string, main: (object[])(var), group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movnd adx   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3475 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 70 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 71 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 72 pushl 3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #7   
27 [0x1b]:          popobj   
28 [0x1c]: line: 73 pushl 3   
29 [0x1d]:          call @3174 // <std.io#qbq.qcg.vfy>   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #3   
33 [0x21]:          popobj   
34 [0x22]: line: 74 movi #-1, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 75 movg @42 // @std.io#thread   
43 [0x2b]:          movn #0   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]:          rstore egx   
54 [0x36]:          movl 0   
55 [0x37]:          movn #2   
57 [0x39]:          loadval ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 77 movl 0   
62 [0x3e]:          movn #7   
64 [0x40]:          pushobj   
65 [0x41]:          pushl 0   
66 [0x42]:          call @3171 // <std.io#qbq.qcg.vfv>   
67 [0x43]:          ret   


constructor: std.io#thread.thread[3321] params(5) in file: qhu:80:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movnd adx   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3475 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 81 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 82 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 83 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 84 ipushl #4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #10   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 85 pushl 5   
40 [0x28]:          movl 0   
41 [0x29]:          movn #7   
43 [0x2b]:          popobj   
44 [0x2c]: line: 86 pushl 5   
45 [0x2d]:          call @3174 // <std.io#qbq.qcg.vfy>   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #3   
49 [0x31]:          popobj   
50 [0x32]: line: 87 movi #-1, ebx   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          rmov adx, ebx   
58 [0x3a]: line: 88 movg @42 // @std.io#thread   
59 [0x3b]:          movn #0   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          iaload ebx, adx   
64 [0x40]:          movr egx, ebx   
65 [0x41]:          inc ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          rstore egx   
70 [0x46]:          movl 0   
71 [0x47]:          movn #2   
73 [0x49]:          loadval ebx   
74 [0x4a]:          movi #0, adx   
76 [0x4c]:          rmov adx, ebx   
77 [0x4d]: line: 90 movl 0   
78 [0x4e]:          movn #7   
80 [0x50]:          pushobj   
81 [0x51]:          pushl 0   
82 [0x52]:          call @3171 // <std.io#qbq.qcg.vfv>   
83 [0x53]:          ret   


function: std.io#thread.start[3322] params(1) in file: qhu:93:15: note:  
		    public def start(args : object[]) : thread_result {
		              ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #-1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 27   
12 [0xc]: line: 95 movl 0   
13 [0xd]:          movn #4   
15 [0xf]:          movi #0, adx   
17 [0x11]:          iaload ebx, adx   
18 [0x12]:          rstore ebx   
19 [0x13]:          call @3402 // <platform.kernel#qlb.qli.vpy>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]:          nop   
28 [0x1c]: line: 96 pushl 0   
29 [0x1d]:          pushl 1   
30 [0x1e]:          call @3411 // <platform.kernel#qlb.qli.vqh>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   


function: std.io#thread.start[3323] params(0) in file: qhu:99:15: note:  
		    public def start() : thread_result {
		              ^

0 [0x0]: line: 100 pushl 0   
1 [0x1]:           pushnull    
2 [0x2]:           call @3322 // <std.io#thread.start>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std.io#thread.suspend[3324] params(0) in file: qhu:103:12: note:  
			public def suspend() : thread_result {
		           ^

0 [0x0]: line: 104 pushl 0   
1 [0x1]:           call @3403 // <platform.kernel#qlb.qli.vqz>   
2 [0x2]:           popobj2    
3 [0x3]:           smovr_3 fp+1   
4 [0x4]: line: 105 pushl 1   
5 [0x5]:           movg @30 // @std.io#qbq.qcp   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3364 // <std#_enum_.operator==>   
10 [0xa]:           loadval ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]: line: 106 movi #1, ebx   
15 [0xf]:           movl 0   
16 [0x10]:           movn #9   
18 [0x12]:           movi #0, adx   
20 [0x14]:           rmov adx, ebx   
21 [0x15]:           nop   
22 [0x16]: line: 107 movl 1   
23 [0x17]:           returnobj   
24 [0x18]:           ret   


function: std.io#thread.unsuspend[3325] params(0) in file: qhu:110:12: note:  
			public def unsuspend() : thread_result {
		           ^

0 [0x0]: line: 111 pushl 0   
1 [0x1]:           istore 0   
3 [0x3]:           call @3404 // <platform.kernel#qlb.qli.vqa>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 112 pushl 1   
7 [0x7]:           movg @30 // @std.io#qbq.qcp   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @3364 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 113 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #9   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 114 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.unsuspend_and_wait[3326] params(0) in file: qhu:117:12: note:  
			public def unsuspend_and_wait() : thread_result {
		           ^

0 [0x0]: line: 118 pushl 0   
1 [0x1]:           istore 1   
3 [0x3]:           call @3404 // <platform.kernel#qlb.qli.vqa>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 119 pushl 1   
7 [0x7]:           movg @30 // @std.io#qbq.qcp   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @3364 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 120 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #9   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 121 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.join[3327] params(0) in file: qhu:124:15: note:  
		    public def join() := vm.thread_join(self);
		              ^

0 [0x0]: line: 124 pushl 0   
1 [0x1]:           call @3406 // <platform.kernel#qlb.qli.vqc>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.interrupt[3328] params(0) in file: qhu:126:15: note:  
		    public def interrupt() := vm.kill(self);
		              ^

0 [0x0]: line: 126 pushl 0   
1 [0x1]:           call @3407 // <platform.kernel#qlb.qli.vqd>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.current[3329] params(0) in file: qhu:128:22: note:  
		    public static def current() := vm.current_thread();
		                     ^

0 [0x0]: line: 128 call @3408 // <platform.kernel#qlb.qli.vqe>   
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#thread.sleep[3330] params(1) in file: qhu:130:22: note:  
		    public static def sleep(mills_time : var) := time.sleep(milliseconds, mills_time);
		                     ^

0 [0x0]: line: 130 movg @47 // @std#qaf.qjx   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #0   
5 [0x5]:           call @3377 // <std#qaf.qjl.vow>   
6 [0x6]:           ret   


function: std.io#thread.suspend_for[3331] params(1) in file: qhu:132:22: note:  
		    public static def suspend_for(mills_time : var) {
		                     ^

0 [0x0]: line: 133 istore 1   
2 [0x2]:           call @3408 // <platform.kernel#qlb.qli.vqe>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #9   
6 [0x6]:           loadval ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]: line: 134 movg @47 // @std#qaf.qjx   
11 [0xb]:           movn #1   
13 [0xd]:           pushobj   
14 [0xe]:           ipushl #0   
15 [0xf]:           call @3378 // <std#qaf.qjl.vox>   
16 [0x10]: line: 135 istore 0   
18 [0x12]:           call @3408 // <platform.kernel#qlb.qli.vqe>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #9   
22 [0x16]:           loadval ebx   
23 [0x17]:           movi #0, adx   
25 [0x19]:           rmov adx, ebx   
26 [0x1a]:           ret   


function: std.io#thread.exit[3332] params(1) in file: qhu:138:22: note:  
		    public static def exit(code : var) {
		                     ^

0 [0x0]: line: 139 call @3329 // <std.io#thread.current>   
1 [0x1]:           ipushl #0   
2 [0x2]:           call @3409 // <platform.kernel#qlb.qli.vqf>   
3 [0x3]: line: 140 hlt   : protected asm start
4 [0x4]:           ret   : protected asm end


function: std.io#thread.hash[3333] params(0) in file: qhu:143:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 144 new_class @0 // pxo#pxp   
1 [0x1]:           movu64 adx, adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #2   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           call @2051 // <std#qaf.qat.tot>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: std.io#thread.yield[3334] params(0) in file: qhu:147:22: note:  
		    public static def yield() := vm.thread_yield();
		                     ^

0 [0x0]: line: 147 call @3410 // <platform.kernel#qlb.qli.vqg>   
1 [0x1]:           ret   


function: std.io#thread.set_exception_handler[3335] params(1) in file: qhu:149:15: note:  
		    public def set_exception_handler(error_handler: uncaught_exception_handler) {
		              ^

0 [0x0]: line: 150 pushl 1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #12   
4 [0x4]:           popobj   
5 [0x5]:           ret   


function: std.io#thread.set_priority[3336] params(1) in file: qhu:153:15: note:  
		    public def set_priority(priority : thread_priority) : thread_result {
		              ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 155 pushl 1   
3 [0x3]:           movg @40 // @std.io#qbq.qhd   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3364 // <std#_enum_.operator==>   
8 [0x8]:           loadval ebx   
9 [0x9]:           movr cmt, ebx   
10 [0xa]:           je 29   
11 [0xb]:           pushl 1   
12 [0xc]:           movg @40 // @std.io#qbq.qhd   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @3364 // <std#_enum_.operator==>   
17 [0x11]:           loadval ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           je 29   
20 [0x14]:           pushl 1   
21 [0x15]:           movg @40 // @std.io#qbq.qhd   
22 [0x16]:           movn #2   
24 [0x18]:           pushobj   
25 [0x19]:           call @3364 // <std#_enum_.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 41   
29 [0x1d]: line: 159 pushl 0   
30 [0x1e]:           pushl 1   
31 [0x1f]:           call @3367 // <std#_enum_.get_ordinal>   
32 [0x20]:           call @3412 // <platform.kernel#qlb.qli.vqi>   
33 [0x21]:           popobj2    
34 [0x22]:           pushobj   
35 [0x23]:           movl 0   
36 [0x24]:           _ulck   
37 [0x25]:           popobj2    
38 [0x26]:           returnobj   
39 [0x27]:           ret   
40 [0x28]:           jmp @53   
41 [0x29]: line: 162 new_class @0 // pxo#pxp   
42 [0x2a]:           skip @0 // pc = 42   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @0 // pxo#pxp   
45 [0x2d]:           movnd adx   
46 [0x2e]:           dup    
47 [0x2f]:           newstr @44 // invalid thread priority    
48 [0x30]:           call @3475 // <std#string.string>   
49 [0x31]:           pushl 1   
50 [0x32]:           call @3489 // <std#string.operator+>   
51 [0x33]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
52 [0x34]:           throw    
53 [0x35]:           nop   
54 [0x36]:           movl 0   
55 [0x37]:           _ulck   


function: std.io#thread.remove_thread[3337] params(1) in file: qhu:168:16: note:  
		    private def remove_thread(t : thread) {
		               ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #7   
3 [0x3]:           pushobj   
4 [0x4]:           movl 1   
5 [0x5]:           movn #1   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @3175 // <std.io#qbq.qcg.vgz>   
12 [0xc]:           pop   
13 [0xd]:           ret   


function: std.io#thread.get_id[3338] params(0) in file: qhu:172:15: note:  
		    public def get_id() := id;
		              ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_native_handle[3339] params(0) in file: qhu:173:15: note:  
		    public def get_native_handle() := native_handle;
		              ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_stack_size[3340] params(0) in file: qhu:174:15: note:  
		    public def get_stack_size() := stack_size;
		              ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_name[3341] params(0) in file: qhu:175:15: note:  
		    public def get_name() := name;
		              ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #6   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.is_exited[3342] params(0) in file: qhu:176:15: note:  
		    public def is_exited() := exited;
		              ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #5   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_daemon[3343] params(0) in file: qhu:177:15: note:  
		    public def is_daemon() := daemon;
		              ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_started[3344] params(0) in file: qhu:178:15: note:  
		    public def is_started() := started;
		              ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_suspended[3345] params(0) in file: qhu:179:15: note:  
		    public def is_suspended() := suspended;
		              ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #9   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.set_main[3346] params(1) in file: qhu:180:12: note:  
			public def set_main(main: (object[])(var)) := self->main = main;
		           ^

0 [0x0]: line: 180 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #11   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std.io#thread.is_active[3347] params(0) in file: qhu:181:12: note:  
			public def is_active() := started && !exited;
		           ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           skne ebx // pc = 14   
7 [0x7]:           movl 0   
8 [0x8]:           movn #5   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


function: std.io#thread.get_exit_code[3348] params(0) in file: qhu:182:12: note:  
			public def get_exit_code() := exit_code;
		           ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_exception_handler[3349] params(0) in file: qhu:183:12: note:  
			public def get_exception_handler() := error_handler;
		           ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std.io#thread.operator==[3350] params(1) in file: qhu:185:15: note:  
		    public def operator==(t : thread) : var = native_handle==t.native_handle;
		              ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #1   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#qbq.vnv[3351] params(1) in file: qil:4:4: note:  
		def critical_section(block : ()()) {
		   ^

0 [0x0]: line: 5 movg @25 // @std.io#qbq   : protected asm start: try start: try block start
1 [0x1]: line: 6 movn #0   
3 [0x3]:         _lck    
4 [0x4]: line: 11 ipushl #0   : protected asm end
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]:          jmp @8   : try block end
8 [0x8]:          movl 1   : try end
9 [0x9]:          del   
10 [0xa]: line: 13 movg @25 // @std.io#qbq   : protected asm start: finally start
11 [0xb]:          movn #0   
13 [0xd]:          _ulck   
14 [0xe]:          movl 1   : protected asm end
15 [0xf]:          checknull   
16 [0x10]:          je 19   
17 [0x11]:          pushobj   
18 [0x12]:          ret ERR   
19 [0x13]:          nop   : finally end
20 [0x14]:          ret   


function: std.io#qbq.vnx[3352] params(2) in file: qil:21:4: note:  
		def critical_section(block : ()(), lock_obj : object) {
		   ^

0 [0x0]: line: 22 movl 1   : protected asm start: try start: try block start
1 [0x1]: line: 23 _lck    
2 [0x2]: line: 27 ipushl #0   : protected asm end
3 [0x3]:          loadval ebx   
4 [0x4]:          calld ebx   
5 [0x5]:          jmp @6   : try block end
6 [0x6]:          movl 2   : try end
7 [0x7]:          del   
8 [0x8]: line: 29 movl 1   : protected asm start: finally start
9 [0x9]:          _ulck   
10 [0xa]:          movl 2   : protected asm end
11 [0xb]:          checknull   
12 [0xc]:          je 15   
13 [0xd]:          pushobj   
14 [0xe]:          ret ERR   
15 [0xf]:          nop   : finally end
16 [0x10]:          ret   


function: std#qaf.vny[3353] params(0) in file: qio:6:4: note:  
		def rand() : var {
		   ^

0 [0x0]: line: 7 istore 0   
2 [0x2]:         movi #1, ebx   
4 [0x4]:         rstore ebx   
5 [0x5]:         call @3419 // <platform.kernel#qlb.qli.vqp>   
6 [0x6]:         loadval ebx   
7 [0x7]:         return_val ebx   
8 [0x8]:         ret   


function: std#qaf.voz[3354] params(2) in file: qio:10:4: note:  
		def rand_int(min: var, max: var) : var {
		   ^

0 [0x0]: line: 11 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          call @3417 // <platform.kernel#qlb.qli.vqn>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#qaf.voa[3355] params(2) in file: qio:14:4: note:  
		def rand_double(min: var, max: var) : var {
		   ^

0 [0x0]: line: 15 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          call @3419 // <platform.kernel#qlb.qli.vqp>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#qaf.vob[3356] params(0) in file: qio:18:4: note:  
		def rand_int() : var {
		   ^

0 [0x0]: line: 19 call @3416 // <platform.kernel#qlb.qli.vqm>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#qaf.voc[3357] params(0) in file: qio:22:4: note:  
		def rand_double() : var {
		   ^

0 [0x0]: line: 23 call @3418 // <platform.kernel#qlb.qli.vqo>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#qaf.vod[3358] params(1) in file: qio:26:4: note:  
		def set_seed(seed: var) {
		   ^

0 [0x0]: line: 27 ipushl #0   
1 [0x1]:          movg @11 // @std#qaf   
2 [0x2]:          movn #0   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 28 movg @11 // @std#qaf   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3420 // <platform.kernel#qlb.qli.vqq>   
16 [0x10]:          ret   


constructor: std#qaf.qir.voe[3359] params(0) in file: qio:32:5: note:  
		class tmp {
		    ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#_enum_._enum_[3360] params(1) in file: qjb:18:11: note:  
		    _enum_(ord : var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 19 ipushl #1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          mov64 ebx, ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          ret   


constructor: std#_enum_._enum_[3361] params(1) in file: qjb:22:11: note:  
		    _enum_(e : _enum_) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 23 movl 1   
2 [0x2]:          movn #1   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          mov64 ebx, ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]: line: 24 movl 1   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          istore 0   
20 [0x14]:          movl 1   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          call @3288 // <std.io#qbq.vkt>   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          popobj   
30 [0x1e]:          ret   


overload function: std#_enum_.operator!=[3362] params(1) in file: qjb:27:8: note:  
		    def operator!=(e : _enum_) : var {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#_enum_.operator!=[3363] params(1) in file: qjb:31:8: note:  
		    def operator!=(num : var) : var {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          tne ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


overload function: std#_enum_.operator==[3364] params(1) in file: qjb:35:8: note:  
		    def operator==(e : _enum_) : var {
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#_enum_.operator==[3365] params(1) in file: qjb:39:8: note:  
		    def operator==(num : var) : var {
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          test ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


function: std#_enum_.get_name[3366] params(0) in file: qjb:43:8: note:  
		    def get_name() : _int8[] {
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std#_enum_.get_ordinal[3367] params(0) in file: qjb:47:8: note:  
		    def get_ordinal() : _int64 {
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#_enum_.to_string[3368] params(0) in file: qjb:51:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 52 new_class @0 // pxo#pxp   
1 [0x1]:          movnd adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3475 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


constructor: std#_enum_._enum_[3369] params(0) in file: qjb:14:17: note:  
		stable ext class _enum_ {
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#qaf.qjl.vop[3370] params(0) in file: qjj:9:15: note:  
		    static def nano_time() : var {
		              ^

0 [0x0]: line: 10 istorel 0, fp+0   
2 [0x2]: line: 12 int 0xb   : protected asm start
3 [0x3]:          smovr_2 bmr, fp+0   
4 [0x4]: line: 17 loadl ebx, fp+0   : protected asm end
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#qaf.qjl.voq[3371] params(1) in file: qjj:20:15: note:  
		    static def get_os_time(tr: time_request)
		              ^

0 [0x0]: line: 21 pushl 0   
1 [0x1]:          call @3367 // <std#_enum_.get_ordinal>   
2 [0x2]:          call @3405 // <platform.kernel#qlb.qli.vqb>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#qaf.qjl.vor[3372] params(1) in file: qjj:23:15: note:  
		    static def nano_to_micro(nano: var) : var {
		              ^

0 [0x0]: line: 24 ipushl #0   
1 [0x1]:          movi #1000, ebx   
3 [0x3]:          loadval ecx   
4 [0x4]:          div ecx, ebx -> ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#qaf.qjl.vos[3373] params(1) in file: qjj:27:15: note:  
		    static def nano_to_mills(nano: var) : var {
		              ^

0 [0x0]: line: 28 ipushl #0   
1 [0x1]:          call @3372 // <std#qaf.qjl.vor>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#qaf.qjl.vot[3374] params(1) in file: qjj:31:22: note:  
		    public static def nano_to_secs(nano: var) : var {
		                     ^

0 [0x0]: line: 32 ipushl #0   
1 [0x1]:          call @3373 // <std#qaf.qjl.vos>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#qaf.qjl.vou[3375] params(0) in file: qjj:35:15: note:  
		    static def mills_time() : var {
		              ^

0 [0x0]: line: 36 call @3370 // <std#qaf.qjl.vop>   
1 [0x1]:          call @3373 // <std#qaf.qjl.vos>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std#qaf.qjl.vov[3376] params(1) in file: qjj:39:15: note:  
		    static def sleep(time: var) {
		              ^

0 [0x0]: line: 40 movg @47 // @std#qaf.qjx   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #0   
5 [0x5]:          call @3377 // <std#qaf.qjl.vow>   
6 [0x6]:          ret   


function: std#qaf.qjl.vow[3377] params(2) in file: qjj:43:15: note:  
		    static def sleep(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 44 loadl ecx, fp+1   
1 [0x1]:          movi #0, ebx   
3 [0x3]:          lt ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 19   
7 [0x7]: line: 45 new_class @0 // pxo#pxp   
8 [0x8]:          newstr @0 // nil   
9 [0x9]:          dup    
10 [0xa]:          new_class @0 // pxo#pxp   
11 [0xb]:          movnd adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @45 // cannot sleep for negative time:    
14 [0xe]:          call @3475 // <std#string.string>   
15 [0xf]:          ipushl #1   
16 [0x10]:          call @3507 // <std#string.operator+>   
17 [0x11]:          call @3585 // <std#error.error>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 47 pushl 0   
21 [0x15]:          movg @47 // @std#qaf.qjx   
22 [0x16]:          movn #0   
24 [0x18]:          pushobj   
25 [0x19]:          call @3364 // <std#_enum_.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 38   
29 [0x1d]: line: 48 ipushl #1   
30 [0x1e]:          movi #1000000, ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          mul ecx, ebx -> ebx   
34 [0x22]:          rstore ebx   
35 [0x23]:          call @3379 // <std#qaf.qjl.voy>   
36 [0x24]:          ipopl 1   
37 [0x25]:          jmp @68   
38 [0x26]:          pushl 0   
39 [0x27]:          movg @47 // @std#qaf.qjx   
40 [0x28]:          movn #1   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @3364 // <std#_enum_.operator==>   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 56   
47 [0x2f]: line: 50 ipushl #1   
48 [0x30]:          movi #1000, ebx   
50 [0x32]:          loadval ecx   
51 [0x33]:          mul ecx, ebx -> ebx   
52 [0x34]:          rstore ebx   
53 [0x35]:          call @3379 // <std#qaf.qjl.voy>   
54 [0x36]:          ipopl 1   
55 [0x37]:          jmp @68   
56 [0x38]:          pushl 0   
57 [0x39]:          movg @47 // @std#qaf.qjx   
58 [0x3a]:          movn #2   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @3364 // <std#_enum_.operator==>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 68   
65 [0x41]: line: 52 ipushl #1   
66 [0x42]:          call @3379 // <std#qaf.qjl.voy>   
67 [0x43]:          ipopl 1   
68 [0x44]:          nop   
69 [0x45]: line: 55 loadl ebx, fp+1   : protected asm start
70 [0x46]:          sleep ebx   
71 [0x47]:          ret   : protected asm end


function: std#qaf.qjl.vox[3378] params(2) in file: qjj:61:15: note:  
		    static def wait(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 62 ipushl #1   
1 [0x1]:          movg @45 // @std#qaf.qjl   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          tne ecx, ebx   
9 [0x9]:          jne 69   
10 [0xa]: line: 63 loadl ecx, fp+1   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          lt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 29   
17 [0x11]: line: 64 new_class @0 // pxo#pxp   
18 [0x12]:          newstr @0 // nil   
19 [0x13]:          dup    
20 [0x14]:          new_class @0 // pxo#pxp   
21 [0x15]:          movnd adx   
22 [0x16]:          dup    
23 [0x17]:          newstr @45 // cannot sleep for negative time:    
24 [0x18]:          call @3475 // <std#string.string>   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3507 // <std#string.operator+>   
27 [0x1b]:          call @3585 // <std#error.error>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 66 pushl 0   
31 [0x1f]:          movg @47 // @std#qaf.qjx   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          call @3364 // <std#_enum_.operator==>   
36 [0x24]:          loadval ebx   
37 [0x25]:          movr cmt, ebx   
38 [0x26]:          jne 43   
39 [0x27]: line: 67 movi #1000, ebx   
41 [0x29]:          mull ebx, fp@1   
42 [0x2a]:          jmp @68   
43 [0x2b]:          pushl 0   
44 [0x2c]:          movg @47 // @std#qaf.qjx   
45 [0x2d]:          movn #2   
47 [0x2f]:          pushobj   
48 [0x30]:          call @3364 // <std#_enum_.operator==>   
49 [0x31]:          loadval ebx   
50 [0x32]:          movr cmt, ebx   
51 [0x33]:          jne 56   
52 [0x34]: line: 69 movi #1000, ebx   
54 [0x36]:          divl ebx, fp@1   
55 [0x37]:          jmp @68   
56 [0x38]:          pushl 0   
57 [0x39]:          movg @47 // @std#qaf.qjx   
58 [0x3a]:          movn #3   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @3364 // <std#_enum_.operator==>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 68   
65 [0x41]: line: 71 movi #1000000, ebx   
67 [0x43]:          divl ebx, fp@1   
68 [0x44]:          nop   
69 [0x45]:          nop   
70 [0x46]: line: 75 loadl adx, fp+1   : protected asm start
71 [0x47]:          int 0x14   
72 [0x48]:          ret   : protected asm end


function: std#qaf.qjl.voy[3379] params(1) in file: qjj:87:23: note:  
		    private static def adjust_time(usec: var) : var {
		                      ^

0 [0x0]: line: 89 call @3396 // <qkn#qko.qku.vps>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 11   
4 [0x4]: line: 90 ipushl #0   
5 [0x5]:          movi #1000, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          div ecx, ebx -> ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   
11 [0xb]:          nop   
12 [0xc]: line: 93 loadl ebx, fp+0   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#qaf.qjl.vpa[3380] params(2) in file: qjj:96:15: note:  
		    static def measure(tm_unit: time_unit, block: ()()) : var {
		              ^

0 [0x0]: line: 97 call @3370 // <std#qaf.qjl.vop>   
1 [0x1]:          ipopl 2   
2 [0x2]:          istorel 0, fp+3   
4 [0x4]: line: 98 ipushl #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]: line: 99 call @3370 // <std#qaf.qjl.vop>   
8 [0x8]:          ipopl 3   
9 [0x9]: line: 101 pushl 0   
10 [0xa]:           movg @47 // @std#qaf.qjx   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           call @3364 // <std#_enum_.operator==>   
15 [0xf]:           loadval ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 103 ipushl #2   
19 [0x13]:           call @3374 // <std#qaf.qjl.vot>   
20 [0x14]:           ipopl 2   
21 [0x15]: line: 104 ipushl #3   
22 [0x16]:           call @3374 // <std#qaf.qjl.vot>   
23 [0x17]:           ipopl 3   
24 [0x18]:           jmp @56   
25 [0x19]:           pushl 0   
26 [0x1a]:           movg @47 // @std#qaf.qjx   
27 [0x1b]:           movn #1   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @3364 // <std#_enum_.operator==>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 41   
34 [0x22]: line: 107 ipushl #2   
35 [0x23]:           call @3373 // <std#qaf.qjl.vos>   
36 [0x24]:           ipopl 2   
37 [0x25]: line: 108 ipushl #3   
38 [0x26]:           call @3373 // <std#qaf.qjl.vos>   
39 [0x27]:           ipopl 3   
40 [0x28]:           jmp @56   
41 [0x29]:           pushl 0   
42 [0x2a]:           movg @47 // @std#qaf.qjx   
43 [0x2b]:           movn #2   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @3364 // <std#_enum_.operator==>   
47 [0x2f]:           loadval ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 56   
50 [0x32]: line: 111 ipushl #2   
51 [0x33]:           call @3372 // <std#qaf.qjl.vor>   
52 [0x34]:           ipopl 2   
53 [0x35]: line: 112 ipushl #3   
54 [0x36]:           call @3372 // <std#qaf.qjl.vor>   
55 [0x37]:           ipopl 3   
56 [0x38]:           nop   
57 [0x39]: line: 116 ipushl #3   
58 [0x3a]:           loadl ebx, fp+2   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           sub ecx, ebx -> ebx   
61 [0x3d]:           return_val ebx   
62 [0x3e]:           ret   


function: std#qaf.qjl.vpd[3381] params(3) in file: qjj:119:15: note:  
		    static def measure(tm_unit: time_unit, args: object[], block: (object[])()) : var {
		              ^

0 [0x0]: line: 120 call @3370 // <std#qaf.qjl.vop>   
1 [0x1]:           ipopl 3   
2 [0x2]:           istorel 0, fp+4   
4 [0x4]: line: 121 ipushl #2   
5 [0x5]:           pushl 1   
6 [0x6]:           smov ebx, sp+[-1]   
7 [0x7]:           calld ebx   
8 [0x8]: line: 122 call @3370 // <std#qaf.qjl.vop>   
9 [0x9]:           ipopl 4   
10 [0xa]: line: 124 pushl 0   
11 [0xb]:           movg @47 // @std#qaf.qjx   
12 [0xc]:           movn #0   
14 [0xe]:           pushobj   
15 [0xf]:           call @3364 // <std#_enum_.operator==>   
16 [0x10]:           loadval ebx   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 26   
19 [0x13]: line: 126 ipushl #3   
20 [0x14]:           call @3374 // <std#qaf.qjl.vot>   
21 [0x15]:           ipopl 3   
22 [0x16]: line: 127 ipushl #4   
23 [0x17]:           call @3374 // <std#qaf.qjl.vot>   
24 [0x18]:           ipopl 4   
25 [0x19]:           jmp @57   
26 [0x1a]:           pushl 0   
27 [0x1b]:           movg @47 // @std#qaf.qjx   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           call @3364 // <std#_enum_.operator==>   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 42   
35 [0x23]: line: 130 ipushl #3   
36 [0x24]:           call @3373 // <std#qaf.qjl.vos>   
37 [0x25]:           ipopl 3   
38 [0x26]: line: 131 ipushl #4   
39 [0x27]:           call @3373 // <std#qaf.qjl.vos>   
40 [0x28]:           ipopl 4   
41 [0x29]:           jmp @57   
42 [0x2a]:           pushl 0   
43 [0x2b]:           movg @47 // @std#qaf.qjx   
44 [0x2c]:           movn #2   
46 [0x2e]:           pushobj   
47 [0x2f]:           call @3364 // <std#_enum_.operator==>   
48 [0x30]:           loadval ebx   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 57   
51 [0x33]: line: 134 ipushl #3   
52 [0x34]:           call @3372 // <std#qaf.qjl.vor>   
53 [0x35]:           ipopl 3   
54 [0x36]: line: 135 ipushl #4   
55 [0x37]:           call @3372 // <std#qaf.qjl.vor>   
56 [0x38]:           ipopl 4   
57 [0x39]:           nop   
58 [0x3a]: line: 139 ipushl #4   
59 [0x3b]:           loadl ebx, fp+3   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           sub ecx, ebx -> ebx   
62 [0x3e]:           return_val ebx   
63 [0x3f]:           ret   


constructor: std#qaf.qjl.vpe[3382] params(0) in file: qjj:6:6: note:  
		class time {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#qaf.qkh.vpf[3383] params(0) in file: qkf:13:15: note:  
		    public def to_string() := new string();
		              ^

0 [0x0]: line: 13 new_class @0 // pxo#pxp   
1 [0x1]:          movnd adx   
2 [0x2]:          dup    
3 [0x3]:          call @3533 // <std#string.string>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#qaf.qkh.vpg[3384] params(0) in file: qkf:15:8: note:  
		    def wait() {
		       ^

0 [0x0]: line: 16 pushl 0   : protected asm start
1 [0x1]:          int 0x3c   
2 [0x2]:          ret   : protected asm end


function: std#qaf.qkh.vph[3385] params(0) in file: qkf:22:8: note:  
		    def notify() {
		       ^

0 [0x0]: line: 23 pushl 0   : protected asm start
1 [0x1]:          int 0x3d   
2 [0x2]:          ret   : protected asm end


function: std#qaf.qkh.vpi[3386] params(1) in file: qkf:29:8: note:  
		    def notify(mills: var) {
		       ^

0 [0x0]: line: 30 pushl 0   : protected asm start
1 [0x1]:          loadl ebx, fp+1   
2 [0x2]:          int 0x3e   
3 [0x3]:          ret   : protected asm end


function: std#qaf.qkh.vpj[3387] params(0) in file: qkf:37:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 39 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          istore 0   
5 [0x5]:          call @2051 // <std#qaf.qat.tot>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std#qaf.qkh.vpk[3388] params(0) in file: qkf:42:8: note:  
		    def guid() : long {
		       ^

0 [0x0]: line: 44 new_class @0 // pxo#pxp   
1 [0x1]:          movu64 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          movg @11 // @std#qaf   
4 [0x4]:          movn #1   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr egx, ebx   
10 [0xa]:          inc ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]:          rstore egx   
15 [0xf]:          call @2051 // <std#qaf.qat.tot>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


constructor: std#qaf.qkh.vpl[3389] params(0) in file: qkf:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         ret   


std#qaf.qkl.vpm[3390] params(0) in file: qkj:11:8: note:  
		    def hash() : long;
		       ^



std#qaf.qkl.vpn[3391] params(0) in file: qkj:12:8: note:  
		    def guid() : long;
		       ^



constructor: std#qaf.qkl.vpo[3392] params(0) in file: qkj:10:10: note:  
		interface unique {
		         ^

0 [0x0]:         ret   


function: qkn#qko.vpp[3393] params(1) in file: qkm:5:4: note:  
		def load_library(name: string) {
		   ^

0 [0x0]: line: 6 pushl 0   
1 [0x1]:         call @3426 // <platform.kernel#qlb.qll.vqw>   
2 [0x2]:         ret   


function: qkn#qko.vpq[3394] params(1) in file: qkm:9:4: note:  
		def free_library(name: string): var {
		   ^

0 [0x0]: line: 10 pushl 0   
1 [0x1]:          call @3427 // <platform.kernel#qlb.qll.vqx>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: qkn#qko.vpr[3395] params(2) in file: qkm:13:4: note:  
		def link(name: string, library: string): var {
		   ^

0 [0x0]: line: 14 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @3428 // <platform.kernel#qlb.qll.vqy>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: qkn#qko.qku.vps[3396] params(0) in file: qks:9:15: note:  
		    static def is_windows() : var {
		              ^

0 [0x0]: line: 10 movg @51 // @qkn#qko.qku   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @46 // win   
5 [0x5]:          call @3492 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: qkn#qko.qku.vpt[3397] params(0) in file: qks:13:15: note:  
		    static def is_linux() : var {
		              ^

0 [0x0]: line: 14 movg @51 // @qkn#qko.qku   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @47 // posix   
5 [0x5]:          call @3492 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: qkn#qko.qku.vpu[3398] params(0) in file: qks:3:6: note:  
		class build {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: platform.kernel#stack_state.stack_state[3399] params(0) in file: qlz:3:6: note:  
		class stack_state {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform.kernel#qlb.qli.vpw[3400] params(0) in file: qlg:6:15: note:  
		    static def get_frame_info() : stack_state {
		              ^

0 [0x0]: line: 7 int 0x35   : protected asm start
1 [0x1]:         popobj2    
2 [0x2]:         returnobj   
3 [0x3]:         ret   
4 [0x4]: line: 13 pushnull    : protected asm end
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: platform.kernel#qlb.qli.vpx[3401] params(1) in file: qlg:16:15: note:  
		    static def get_stack_trace(info : stack_state) : string {
		              ^

0 [0x0]: line: 17 pushl 0   : protected asm start
1 [0x1]:          int 0x36   
2 [0x2]:          popobj2    
3 [0x3]:          returnobj   
4 [0x4]:          ret   
5 [0x5]: line: 24 pushnull    : protected asm end
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: platform.kernel#qlb.qli.vpy[3402] params(1) in file: qlg:27:15: note:  
		    static def thread_create(daemon: var) : var {
		              ^

0 [0x0]: line: 28 istorel 0, fp+1   
2 [0x2]: line: 29 movi #3311, adx   : protected asm start
4 [0x4]:          loadl ebx, fp+0   
5 [0x5]:          int 0x10   
6 [0x6]:          smovr_2 ebx, fp+1   
7 [0x7]: line: 36 loadl ebx, fp+1   : protected asm end
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: platform.kernel#qlb.qli.vqz[3403] params(1) in file: qlg:39:15: note:  
		    static def suspend(t: thread) : thread_result {
		              ^

0 [0x0]: line: 40 pushl 0   
1 [0x1]:          call @3339 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 41 istorel 0, fp+2   
5 [0x5]: line: 43 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0x12   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 49 ipushl #2   : protected asm end
9 [0x9]:          call @3312 // <std.io#qbq.qcp.vlr>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#qlb.qli.vqa[3404] params(2) in file: qlg:52:15: note:  
		    static def unsuspend(t: thread, wait: var) : thread_result {
		              ^

0 [0x0]: line: 53 pushl 0   
1 [0x1]:          call @3339 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 54 istorel 0, fp+3   
5 [0x5]: line: 56 loadl adx, fp+2   : protected asm start
6 [0x6]:          loadl ebx, fp+1   
7 [0x7]:          int 0x13   
8 [0x8]:          smovr_2 cmt, fp+3   
9 [0x9]: line: 63 ipushl #3   : protected asm end
10 [0xa]:          call @3312 // <std.io#qbq.qcp.vlr>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


function: platform.kernel#qlb.qli.vqb[3405] params(1) in file: qlg:66:15: note:  
		    static def get_os_time(tr : var) : var {
		              ^

0 [0x0]: line: 67 istorel 0, fp+1   
2 [0x2]: line: 68 loadl ebx, fp+0   : protected asm start
3 [0x3]:          int 0x2   
4 [0x4]:          smovr_2 bmr, fp+1   
5 [0x5]: line: 74 loadl ebx, fp+1   : protected asm end
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: platform.kernel#qlb.qli.vqc[3406] params(1) in file: qlg:77:15: note:  
		    static def thread_join(t: thread) : thread_result {
		              ^

0 [0x0]: line: 78 pushl 0   
1 [0x1]:          call @3339 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 79 istorel 0, fp+2   
5 [0x5]: line: 81 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xd   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 87 ipushl #2   : protected asm end
9 [0x9]:          call @3312 // <std.io#qbq.qcp.vlr>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#qlb.qli.vqd[3407] params(1) in file: qlg:90:15: note:  
		    static def kill(t: thread) : thread_result {
		              ^

0 [0x0]: line: 91 pushl 0   
1 [0x1]:          call @3339 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 92 istorel 0, fp+2   
5 [0x5]: line: 94 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xe   
7 [0x7]:          smovr_2 cmt, fp+2   : protected asm end
8 [0x8]: line: 100 pushl 0   
9 [0x9]:           istore 1   
11 [0xb]:           call @3409 // <platform.kernel#qlb.qli.vqf>   
12 [0xc]: line: 101 ipushl #2   
13 [0xd]:           call @3312 // <std.io#qbq.qcp.vlr>   
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   


function: platform.kernel#qlb.qli.vqe[3408] params(0) in file: qlg:104:15: note:  
		    static def current_thread() : thread {
		              ^

0 [0x0]: line: 105 int 0x15   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 112 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#qlb.qli.vqf[3409] params(2) in file: qlg:115:15: note:  
		    static def exit_thread(t: thread, code: var) {
		              ^

0 [0x0]: line: 116 movi #1, ebx   : protected asm start
2 [0x2]:           movi #0, egx   
4 [0x4]:           movi #-1, ecx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #5   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movl 0   
13 [0xd]:           movn #8   
15 [0xf]:           rmov adx, egx   
16 [0x10]:           loadl egx, fp+1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           rmov adx, egx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           rmov adx, ecx   
25 [0x19]:           ret   : protected asm end


function: platform.kernel#qlb.qli.vqg[3410] params(0) in file: qlg:140:15: note:  
		    static def thread_yield() {
		              ^

0 [0x0]: line: 141 int 0x1c   : protected asm start
1 [0x1]:           ret   : protected asm end


function: platform.kernel#qlb.qli.vqh[3411] params(2) in file: qlg:146:15: note:  
		    static def thread_start(t: thread, args: object[]) : thread_result {
		              ^

0 [0x0]: line: 147 pushl 0   
1 [0x1]:           call @3339 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 148 pushl 0   
4 [0x4]:           call @3340 // <std.io#thread.get_stack_size>   
5 [0x5]:           ipopl 3   
6 [0x6]: line: 149 istorel 0, fp+4   
8 [0x8]: line: 151 loadl ebx, fp+3   : protected asm start
9 [0x9]:           loadl adx, fp+2   
10 [0xa]:           pushl 1   
11 [0xb]:           pushl 0   
12 [0xc]:           int 0xc   
13 [0xd]:           smovr_2 cmt, fp+4   
14 [0xe]: line: 160 ipushl #4   : protected asm end
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           jne 22   
20 [0x14]: line: 161 pushl 0   
21 [0x15]:           call @3384 // <std#qaf.qkh.vpg>   
22 [0x16]:           nop   
23 [0x17]: line: 164 ipushl #4   
24 [0x18]:           call @3312 // <std.io#qbq.qcp.vlr>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   


function: platform.kernel#qlb.qli.vqi[3412] params(2) in file: qlg:167:15: note:  
		    static def set_thread_priority(t: thread, priority: var) : thread_result {
		              ^

0 [0x0]: line: 168 pushl 0   
1 [0x1]:           call @3339 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 169 istorel 0, fp+3   
5 [0x5]: line: 171 loadl adx, fp+2   : protected asm start
6 [0x6]:           loadl egx, fp+1   
7 [0x7]:           int 0x11   
8 [0x8]:           smovr_2 cmt, fp+3   
9 [0x9]: line: 178 ipushl #3   : protected asm end
10 [0xa]:           call @3312 // <std.io#qbq.qcp.vlr>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: platform.kernel#qlb.qli.vqj[3413] params(1) in file: qlg:181:15: note:  
		    static def set_thread(t: thread) {
		              ^

0 [0x0]: line: 182 pushl 0   : protected asm start
1 [0x1]:           int 0x17   
2 [0x2]:           ret   : protected asm end


function: platform.kernel#qlb.qli.vqk[3414] params(0) in file: qlg:188:15: note:  
		    static def thread_args() : object[] {
		              ^

0 [0x0]: line: 189 int 0x16   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 196 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#qlb.qli.vql[3415] params(0) in file: qlg:199:15: note:  
		    static def cores() : var {
		              ^

0 [0x0]: line: 200 istorel 0, fp+0   
2 [0x2]: line: 202 int 0x38   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 207 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#qlb.qli.vqm[3416] params(0) in file: qlg:210:15: note:  
		    static def random_int() : var {
		              ^

0 [0x0]: line: 211 istorel 0, fp+0   
2 [0x2]: line: 213 int 0x19   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 218 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#qlb.qli.vqn[3417] params(2) in file: qlg:221:15: note:  
		    static def random_int(min: var, max : var) : var {
		              ^

0 [0x0]: line: 222 istorel 0, fp+2   
2 [0x2]: line: 224 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x3f   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 231 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#qlb.qli.vqo[3418] params(0) in file: qlg:234:15: note:  
		    static def random_double() : var {
		              ^

0 [0x0]: line: 235 istorel 0, fp+0   
2 [0x2]: line: 237 int 0x40   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 242 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#qlb.qli.vqp[3419] params(2) in file: qlg:245:15: note:  
		    static def random_double(min: var, max : var) : var {
		              ^

0 [0x0]: line: 246 istorel 0, fp+2   
2 [0x2]: line: 248 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x41   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 255 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#qlb.qli.vqq[3420] params(1) in file: qlg:258:15: note:  
		    static def random_seed(seed : var) {
		              ^

0 [0x0]: line: 259 loadl adx, fp+0   : protected asm start
1 [0x1]:           int 0x42   
2 [0x2]:           ret   : protected asm end


constructor: platform.kernel#qlb.qli.vqr[3421] params(0) in file: qlg:5:6: note:  
		class vm {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform.kernel#qlb.qll.vqs[3422] params(0) in file: qlj:13:15: note:  
		    static def tls_init() {}
		              ^

0 [0x0]: line: 13 ret   


function: platform.kernel#qlb.qll.vqt[3423] params(0) in file: qlj:14:23: note:  
		    private static def static_init() {}
		                      ^

0 [0x0]: line: 14 new_class @0 // pxo#pxp   
1 [0x1]:          ret   
2 [0x2]:          movg @3 // @pxt#pxu.pyz   
3 [0x3]:          movn #0   
5 [0x5]:          popobj   
6 [0x6]:          newstr @53 // class_property   
7 [0x7]:          movg @3 // @pxt#pxu.pyz   
8 [0x8]:          movn #0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]:          movi #17148, ebx   
15 [0xf]:          movg @3 // @pxt#pxu.pyz   
16 [0x10]:          movn #0   
18 [0x12]:          movn #1   
20 [0x14]:          movi #0, adx   
22 [0x16]:          rmov adx, ebx   
23 [0x17]:          new_class @0 // pxo#pxp   
24 [0x18]:          ret   
25 [0x19]:          movg @3 // @pxt#pxu.pyz   
26 [0x1a]:          movn #1   
28 [0x1c]:          popobj   
29 [0x1d]:          newstr @54 // field_property   
30 [0x1e]:          movg @3 // @pxt#pxu.pyz   
31 [0x1f]:          movn #1   
33 [0x21]:          movn #0   
35 [0x23]:          popobj   
36 [0x24]:          movi #17149, ebx   
38 [0x26]:          movg @3 // @pxt#pxu.pyz   
39 [0x27]:          movn #1   
41 [0x29]:          movn #1   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]:          new_class @0 // pxo#pxp   
47 [0x2f]:          ret   
48 [0x30]:          movg @3 // @pxt#pxu.pyz   
49 [0x31]:          movn #2   
51 [0x33]:          popobj   
52 [0x34]:          newstr @55 // function_property   
53 [0x35]:          movg @3 // @pxt#pxu.pyz   
54 [0x36]:          movn #2   
56 [0x38]:          movn #0   
58 [0x3a]:          popobj   
59 [0x3b]:          movi #17150, ebx   
61 [0x3d]:          movg @3 // @pxt#pxu.pyz   
62 [0x3e]:          movn #2   
64 [0x40]:          movn #1   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          new_class @0 // pxo#pxp   
70 [0x46]:          mov32 adx, adx   
71 [0x47]:          movg @9 // @pxt#pxu.qzc   
72 [0x48]:          movn #0   
74 [0x4a]:          popobj   
75 [0x4b]:          newstr @56 // int8   
76 [0x4c]:          movg @9 // @pxt#pxu.qzc   
77 [0x4d]:          movn #0   
79 [0x4f]:          movn #0   
81 [0x51]:          popobj   
82 [0x52]:          movi #0, ebx   
84 [0x54]:          movg @9 // @pxt#pxu.qzc   
85 [0x55]:          movn #0   
87 [0x57]:          movn #1   
89 [0x59]:          movi #0, adx   
91 [0x5b]:          rmov adx, ebx   
92 [0x5c]:          new_class @0 // pxo#pxp   
93 [0x5d]:          mov32 adx, adx   
94 [0x5e]:          movg @9 // @pxt#pxu.qzc   
95 [0x5f]:          movn #1   
97 [0x61]:          popobj   
98 [0x62]:          newstr @57 // int16   
99 [0x63]:          movg @9 // @pxt#pxu.qzc   
100 [0x64]:          movn #1   
102 [0x66]:          movn #0   
104 [0x68]:          popobj   
105 [0x69]:          movi #1, ebx   
107 [0x6b]:          movg @9 // @pxt#pxu.qzc   
108 [0x6c]:          movn #1   
110 [0x6e]:          movn #1   
112 [0x70]:          movi #0, adx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          new_class @0 // pxo#pxp   
116 [0x74]:          mov32 adx, adx   
117 [0x75]:          movg @9 // @pxt#pxu.qzc   
118 [0x76]:          movn #2   
120 [0x78]:          popobj   
121 [0x79]:          newstr @58 // int32   
122 [0x7a]:          movg @9 // @pxt#pxu.qzc   
123 [0x7b]:          movn #2   
125 [0x7d]:          movn #0   
127 [0x7f]:          popobj   
128 [0x80]:          movi #2, ebx   
130 [0x82]:          movg @9 // @pxt#pxu.qzc   
131 [0x83]:          movn #2   
133 [0x85]:          movn #1   
135 [0x87]:          movi #0, adx   
137 [0x89]:          rmov adx, ebx   
138 [0x8a]:          new_class @0 // pxo#pxp   
139 [0x8b]:          mov32 adx, adx   
140 [0x8c]:          movg @9 // @pxt#pxu.qzc   
141 [0x8d]:          movn #3   
143 [0x8f]:          popobj   
144 [0x90]:          newstr @59 // int64   
145 [0x91]:          movg @9 // @pxt#pxu.qzc   
146 [0x92]:          movn #3   
148 [0x94]:          movn #0   
150 [0x96]:          popobj   
151 [0x97]:          movi #3, ebx   
153 [0x99]:          movg @9 // @pxt#pxu.qzc   
154 [0x9a]:          movn #3   
156 [0x9c]:          movn #1   
158 [0x9e]:          movi #0, adx   
160 [0xa0]:          rmov adx, ebx   
161 [0xa1]:          new_class @0 // pxo#pxp   
162 [0xa2]:          mov32 adx, adx   
163 [0xa3]:          movg @9 // @pxt#pxu.qzc   
164 [0xa4]:          movn #4   
166 [0xa6]:          popobj   
167 [0xa7]:          newstr @60 // uint8   
168 [0xa8]:          movg @9 // @pxt#pxu.qzc   
169 [0xa9]:          movn #4   
171 [0xab]:          movn #0   
173 [0xad]:          popobj   
174 [0xae]:          movi #4, ebx   
176 [0xb0]:          movg @9 // @pxt#pxu.qzc   
177 [0xb1]:          movn #4   
179 [0xb3]:          movn #1   
181 [0xb5]:          movi #0, adx   
183 [0xb7]:          rmov adx, ebx   
184 [0xb8]:          new_class @0 // pxo#pxp   
185 [0xb9]:          mov32 adx, adx   
186 [0xba]:          movg @9 // @pxt#pxu.qzc   
187 [0xbb]:          movn #5   
189 [0xbd]:          popobj   
190 [0xbe]:          newstr @61 // uint16   
191 [0xbf]:          movg @9 // @pxt#pxu.qzc   
192 [0xc0]:          movn #5   
194 [0xc2]:          movn #0   
196 [0xc4]:          popobj   
197 [0xc5]:          movi #5, ebx   
199 [0xc7]:          movg @9 // @pxt#pxu.qzc   
200 [0xc8]:          movn #5   
202 [0xca]:          movn #1   
204 [0xcc]:          movi #0, adx   
206 [0xce]:          rmov adx, ebx   
207 [0xcf]:          new_class @0 // pxo#pxp   
208 [0xd0]:          mov32 adx, adx   
209 [0xd1]:          movg @9 // @pxt#pxu.qzc   
210 [0xd2]:          movn #6   
212 [0xd4]:          popobj   
213 [0xd5]:          newstr @62 // uint32   
214 [0xd6]:          movg @9 // @pxt#pxu.qzc   
215 [0xd7]:          movn #6   
217 [0xd9]:          movn #0   
219 [0xdb]:          popobj   
220 [0xdc]:          movi #6, ebx   
222 [0xde]:          movg @9 // @pxt#pxu.qzc   
223 [0xdf]:          movn #6   
225 [0xe1]:          movn #1   
227 [0xe3]:          movi #0, adx   
229 [0xe5]:          rmov adx, ebx   
230 [0xe6]:          new_class @0 // pxo#pxp   
231 [0xe7]:          mov32 adx, adx   
232 [0xe8]:          movg @9 // @pxt#pxu.qzc   
233 [0xe9]:          movn #7   
235 [0xeb]:          popobj   
236 [0xec]:          newstr @63 // uint64   
237 [0xed]:          movg @9 // @pxt#pxu.qzc   
238 [0xee]:          movn #7   
240 [0xf0]:          movn #0   
242 [0xf2]:          popobj   
243 [0xf3]:          movi #7, ebx   
245 [0xf5]:          movg @9 // @pxt#pxu.qzc   
246 [0xf6]:          movn #7   
248 [0xf8]:          movn #1   
250 [0xfa]:          movi #0, adx   
252 [0xfc]:          rmov adx, ebx   
253 [0xfd]:          new_class @0 // pxo#pxp   
254 [0xfe]:          mov32 adx, adx   
255 [0xff]:          movg @9 // @pxt#pxu.qzc   
256 [0x100]:          movn #8   
258 [0x102]:          popobj   
259 [0x103]:          newstr @64 // fnptr   
260 [0x104]:          movg @9 // @pxt#pxu.qzc   
261 [0x105]:          movn #8   
263 [0x107]:          movn #0   
265 [0x109]:          popobj   
266 [0x10a]:          movi #8, ebx   
268 [0x10c]:          movg @9 // @pxt#pxu.qzc   
269 [0x10d]:          movn #8   
271 [0x10f]:          movn #1   
273 [0x111]:          movi #0, adx   
275 [0x113]:          rmov adx, ebx   
276 [0x114]:          new_class @0 // pxo#pxp   
277 [0x115]:          mov32 adx, adx   
278 [0x116]:          movg @9 // @pxt#pxu.qzc   
279 [0x117]:          movn #9   
281 [0x119]:          popobj   
282 [0x11a]:          newstr @65 // _var   
283 [0x11b]:          movg @9 // @pxt#pxu.qzc   
284 [0x11c]:          movn #9   
286 [0x11e]:          movn #0   
288 [0x120]:          popobj   
289 [0x121]:          movi #9, ebx   
291 [0x123]:          movg @9 // @pxt#pxu.qzc   
292 [0x124]:          movn #9   
294 [0x126]:          movn #1   
296 [0x128]:          movi #0, adx   
298 [0x12a]:          rmov adx, ebx   
299 [0x12b]:          new_class @0 // pxo#pxp   
300 [0x12c]:          mov32 adx, adx   
301 [0x12d]:          movg @9 // @pxt#pxu.qzc   
302 [0x12e]:          movn #10   
304 [0x130]:          popobj   
305 [0x131]:          newstr @66 // _object   
306 [0x132]:          movg @9 // @pxt#pxu.qzc   
307 [0x133]:          movn #10   
309 [0x135]:          movn #0   
311 [0x137]:          popobj   
312 [0x138]:          movi #10, ebx   
314 [0x13a]:          movg @9 // @pxt#pxu.qzc   
315 [0x13b]:          movn #10   
317 [0x13d]:          movn #1   
319 [0x13f]:          movi #0, adx   
321 [0x141]:          rmov adx, ebx   
322 [0x142]:          new_class @0 // pxo#pxp   
323 [0x143]:          mov32 adx, adx   
324 [0x144]:          movg @9 // @pxt#pxu.qzc   
325 [0x145]:          movn #11   
327 [0x147]:          popobj   
328 [0x148]:          newstr @67 // _class   
329 [0x149]:          movg @9 // @pxt#pxu.qzc   
330 [0x14a]:          movn #11   
332 [0x14c]:          movn #0   
334 [0x14e]:          popobj   
335 [0x14f]:          movi #11, ebx   
337 [0x151]:          movg @9 // @pxt#pxu.qzc   
338 [0x152]:          movn #11   
340 [0x154]:          movn #1   
342 [0x156]:          movi #0, adx   
344 [0x158]:          rmov adx, ebx   
345 [0x159]:          new_class @0 // pxo#pxp   
346 [0x15a]:          mov32 adx, adx   
347 [0x15b]:          movg @9 // @pxt#pxu.qzc   
348 [0x15c]:          movn #12   
350 [0x15e]:          popobj   
351 [0x15f]:          newstr @68 // method   
352 [0x160]:          movg @9 // @pxt#pxu.qzc   
353 [0x161]:          movn #12   
355 [0x163]:          movn #0   
357 [0x165]:          popobj   
358 [0x166]:          movi #12, ebx   
360 [0x168]:          movg @9 // @pxt#pxu.qzc   
361 [0x169]:          movn #12   
363 [0x16b]:          movn #1   
365 [0x16d]:          movi #0, adx   
367 [0x16f]:          rmov adx, ebx   
368 [0x170]:          new_class @0 // pxo#pxp   
369 [0x171]:          mov32 adx, adx   
370 [0x172]:          movg @9 // @pxt#pxu.qzc   
371 [0x173]:          movn #13   
373 [0x175]:          popobj   
374 [0x176]:          newstr @69 // _nil   
375 [0x177]:          movg @9 // @pxt#pxu.qzc   
376 [0x178]:          movn #13   
378 [0x17a]:          movn #0   
380 [0x17c]:          popobj   
381 [0x17d]:          movi #13, ebx   
383 [0x17f]:          movg @9 // @pxt#pxu.qzc   
384 [0x180]:          movn #13   
386 [0x182]:          movn #1   
388 [0x184]:          movi #0, adx   
390 [0x186]:          rmov adx, ebx   
391 [0x187]:          new_class @0 // pxo#pxp   
392 [0x188]:          mov32 adx, adx   
393 [0x189]:          movg @9 // @pxt#pxu.qzc   
394 [0x18a]:          movn #14   
396 [0x18c]:          popobj   
397 [0x18d]:          newstr @70 // any   
398 [0x18e]:          movg @9 // @pxt#pxu.qzc   
399 [0x18f]:          movn #14   
401 [0x191]:          movn #0   
403 [0x193]:          popobj   
404 [0x194]:          movi #14, ebx   
406 [0x196]:          movg @9 // @pxt#pxu.qzc   
407 [0x197]:          movn #14   
409 [0x199]:          movn #1   
411 [0x19b]:          movi #0, adx   
413 [0x19d]:          rmov adx, ebx   
414 [0x19e]:          new_class @0 // pxo#pxp   
415 [0x19f]:          mov32 adx, adx   
416 [0x1a0]:          movg @9 // @pxt#pxu.qzc   
417 [0x1a1]:          movn #15   
419 [0x1a3]:          popobj   
420 [0x1a4]:          newstr @71 // untyped   
421 [0x1a5]:          movg @9 // @pxt#pxu.qzc   
422 [0x1a6]:          movn #15   
424 [0x1a8]:          movn #0   
426 [0x1aa]:          popobj   
427 [0x1ab]:          movi #15, ebx   
429 [0x1ad]:          movg @9 // @pxt#pxu.qzc   
430 [0x1ae]:          movn #15   
432 [0x1b0]:          movn #1   
434 [0x1b2]:          movi #0, adx   
436 [0x1b4]:          rmov adx, ebx   
437 [0x1b5]:          new_class @0 // pxo#pxp   
438 [0x1b6]:          mov32 adx, adx   
439 [0x1b7]:          movg @9 // @pxt#pxu.qzc   
440 [0x1b8]:          movn #16   
442 [0x1ba]:          popobj   
443 [0x1bb]:          newstr @72 // undefined   
444 [0x1bc]:          movg @9 // @pxt#pxu.qzc   
445 [0x1bd]:          movn #16   
447 [0x1bf]:          movn #0   
449 [0x1c1]:          popobj   
450 [0x1c2]:          movi #16, ebx   
452 [0x1c4]:          movg @9 // @pxt#pxu.qzc   
453 [0x1c5]:          movn #16   
455 [0x1c7]:          movn #1   
457 [0x1c9]:          movi #0, adx   
459 [0x1cb]:          rmov adx, ebx   
460 [0x1cc]:          new_class @0 // pxo#pxp   
461 [0x1cd]:          brh   
462 [0x1ce]:          movg @30 // @std.io#qbq.qcp   
463 [0x1cf]:          movn #0   
465 [0x1d1]:          popobj   
466 [0x1d2]:          newstr @73 // result_ok   
467 [0x1d3]:          movg @30 // @std.io#qbq.qcp   
468 [0x1d4]:          movn #0   
470 [0x1d6]:          movn #0   
472 [0x1d8]:          popobj   
473 [0x1d9]:          movi #0, ebx   
475 [0x1db]:          movg @30 // @std.io#qbq.qcp   
476 [0x1dc]:          movn #0   
478 [0x1de]:          movn #1   
480 [0x1e0]:          movi #0, adx   
482 [0x1e2]:          rmov adx, ebx   
483 [0x1e3]:          new_class @0 // pxo#pxp   
484 [0x1e4]:          brh   
485 [0x1e5]:          movg @30 // @std.io#qbq.qcp   
486 [0x1e6]:          movn #1   
488 [0x1e8]:          popobj   
489 [0x1e9]:          newstr @74 // result_ill_thread_start   
490 [0x1ea]:          movg @30 // @std.io#qbq.qcp   
491 [0x1eb]:          movn #1   
493 [0x1ed]:          movn #0   
495 [0x1ef]:          popobj   
496 [0x1f0]:          movi #1, ebx   
498 [0x1f2]:          movg @30 // @std.io#qbq.qcp   
499 [0x1f3]:          movn #1   
501 [0x1f5]:          movn #1   
503 [0x1f7]:          movi #0, adx   
505 [0x1f9]:          rmov adx, ebx   
506 [0x1fa]:          new_class @0 // pxo#pxp   
507 [0x1fb]:          brh   
508 [0x1fc]:          movg @30 // @std.io#qbq.qcp   
509 [0x1fd]:          movn #2   
511 [0x1ff]:          popobj   
512 [0x200]:          newstr @75 // result_thread_running   
513 [0x201]:          movg @30 // @std.io#qbq.qcp   
514 [0x202]:          movn #2   
516 [0x204]:          movn #0   
518 [0x206]:          popobj   
519 [0x207]:          movi #2, ebx   
521 [0x209]:          movg @30 // @std.io#qbq.qcp   
522 [0x20a]:          movn #2   
524 [0x20c]:          movn #1   
526 [0x20e]:          movi #0, adx   
528 [0x210]:          rmov adx, ebx   
529 [0x211]:          new_class @0 // pxo#pxp   
530 [0x212]:          brh   
531 [0x213]:          movg @30 // @std.io#qbq.qcp   
532 [0x214]:          movn #3   
534 [0x216]:          popobj   
535 [0x217]:          newstr @76 // result_thread_terminated   
536 [0x218]:          movg @30 // @std.io#qbq.qcp   
537 [0x219]:          movn #3   
539 [0x21b]:          movn #0   
541 [0x21d]:          popobj   
542 [0x21e]:          movi #3, ebx   
544 [0x220]:          movg @30 // @std.io#qbq.qcp   
545 [0x221]:          movn #3   
547 [0x223]:          movn #1   
549 [0x225]:          movi #0, adx   
551 [0x227]:          rmov adx, ebx   
552 [0x228]:          new_class @0 // pxo#pxp   
553 [0x229]:          brh   
554 [0x22a]:          movg @30 // @std.io#qbq.qcp   
555 [0x22b]:          movn #4   
557 [0x22d]:          popobj   
558 [0x22e]:          newstr @77 // result_invalid_stack_size   
559 [0x22f]:          movg @30 // @std.io#qbq.qcp   
560 [0x230]:          movn #4   
562 [0x232]:          movn #0   
564 [0x234]:          popobj   
565 [0x235]:          movi #4, ebx   
567 [0x237]:          movg @30 // @std.io#qbq.qcp   
568 [0x238]:          movn #4   
570 [0x23a]:          movn #1   
572 [0x23c]:          movi #0, adx   
574 [0x23e]:          rmov adx, ebx   
575 [0x23f]:          new_class @0 // pxo#pxp   
576 [0x240]:          brh   
577 [0x241]:          movg @30 // @std.io#qbq.qcp   
578 [0x242]:          movn #5   
580 [0x244]:          popobj   
581 [0x245]:          newstr @78 // result_thread_not_started   
582 [0x246]:          movg @30 // @std.io#qbq.qcp   
583 [0x247]:          movn #5   
585 [0x249]:          movn #0   
587 [0x24b]:          popobj   
588 [0x24c]:          movi #5, ebx   
590 [0x24e]:          movg @30 // @std.io#qbq.qcp   
591 [0x24f]:          movn #5   
593 [0x251]:          movn #1   
595 [0x253]:          movi #0, adx   
597 [0x255]:          rmov adx, ebx   
598 [0x256]:          new_class @0 // pxo#pxp   
599 [0x257]:          brh   
600 [0x258]:          movg @30 // @std.io#qbq.qcp   
601 [0x259]:          movn #6   
603 [0x25b]:          popobj   
604 [0x25c]:          newstr @79 // result_ill_thread_join   
605 [0x25d]:          movg @30 // @std.io#qbq.qcp   
606 [0x25e]:          movn #6   
608 [0x260]:          movn #0   
610 [0x262]:          popobj   
611 [0x263]:          movi #6, ebx   
613 [0x265]:          movg @30 // @std.io#qbq.qcp   
614 [0x266]:          movn #6   
616 [0x268]:          movn #1   
618 [0x26a]:          movi #0, adx   
620 [0x26c]:          rmov adx, ebx   
621 [0x26d]:          new_class @0 // pxo#pxp   
622 [0x26e]:          brh   
623 [0x26f]:          movg @30 // @std.io#qbq.qcp   
624 [0x270]:          movn #7   
626 [0x272]:          popobj   
627 [0x273]:          newstr @80 // result_thread_join_failed   
628 [0x274]:          movg @30 // @std.io#qbq.qcp   
629 [0x275]:          movn #7   
631 [0x277]:          movn #0   
633 [0x279]:          popobj   
634 [0x27a]:          movi #7, ebx   
636 [0x27c]:          movg @30 // @std.io#qbq.qcp   
637 [0x27d]:          movn #7   
639 [0x27f]:          movn #1   
641 [0x281]:          movi #0, adx   
643 [0x283]:          rmov adx, ebx   
644 [0x284]:          new_class @0 // pxo#pxp   
645 [0x285]:          brh   
646 [0x286]:          movg @30 // @std.io#qbq.qcp   
647 [0x287]:          movn #8   
649 [0x289]:          popobj   
650 [0x28a]:          newstr @81 // result_ill_thread_interrupt   
651 [0x28b]:          movg @30 // @std.io#qbq.qcp   
652 [0x28c]:          movn #8   
654 [0x28e]:          movn #0   
656 [0x290]:          popobj   
657 [0x291]:          movi #8, ebx   
659 [0x293]:          movg @30 // @std.io#qbq.qcp   
660 [0x294]:          movn #8   
662 [0x296]:          movn #1   
664 [0x298]:          movi #0, adx   
666 [0x29a]:          rmov adx, ebx   
667 [0x29b]:          new_class @0 // pxo#pxp   
668 [0x29c]:          brh   
669 [0x29d]:          movg @30 // @std.io#qbq.qcp   
670 [0x29e]:          movn #9   
672 [0x2a0]:          popobj   
673 [0x2a1]:          newstr @82 // result_thread_interrupt_failed   
674 [0x2a2]:          movg @30 // @std.io#qbq.qcp   
675 [0x2a3]:          movn #9   
677 [0x2a5]:          movn #0   
679 [0x2a7]:          popobj   
680 [0x2a8]:          movi #9, ebx   
682 [0x2aa]:          movg @30 // @std.io#qbq.qcp   
683 [0x2ab]:          movn #9   
685 [0x2ad]:          movn #1   
687 [0x2af]:          movi #0, adx   
689 [0x2b1]:          rmov adx, ebx   
690 [0x2b2]:          new_class @0 // pxo#pxp   
691 [0x2b3]:          brh   
692 [0x2b4]:          movg @30 // @std.io#qbq.qcp   
693 [0x2b5]:          movn #10   
695 [0x2b7]:          popobj   
696 [0x2b8]:          newstr @83 // result_ill_thread_destroy   
697 [0x2b9]:          movg @30 // @std.io#qbq.qcp   
698 [0x2ba]:          movn #10   
700 [0x2bc]:          movn #0   
702 [0x2be]:          popobj   
703 [0x2bf]:          movi #10, ebx   
705 [0x2c1]:          movg @30 // @std.io#qbq.qcp   
706 [0x2c2]:          movn #10   
708 [0x2c4]:          movn #1   
710 [0x2c6]:          movi #0, adx   
712 [0x2c8]:          rmov adx, ebx   
713 [0x2c9]:          new_class @0 // pxo#pxp   
714 [0x2ca]:          brh   
715 [0x2cb]:          movg @30 // @std.io#qbq.qcp   
716 [0x2cc]:          movn #11   
718 [0x2ce]:          popobj   
719 [0x2cf]:          newstr @84 // result_thread_create_failed   
720 [0x2d0]:          movg @30 // @std.io#qbq.qcp   
721 [0x2d1]:          movn #11   
723 [0x2d3]:          movn #0   
725 [0x2d5]:          popobj   
726 [0x2d6]:          movi #11, ebx   
728 [0x2d8]:          movg @30 // @std.io#qbq.qcp   
729 [0x2d9]:          movn #11   
731 [0x2db]:          movn #1   
733 [0x2dd]:          movi #0, adx   
735 [0x2df]:          rmov adx, ebx   
736 [0x2e0]:          new_class @0 // pxo#pxp   
737 [0x2e1]:          brh   
738 [0x2e2]:          movg @30 // @std.io#qbq.qcp   
739 [0x2e3]:          movn #12   
741 [0x2e5]:          popobj   
742 [0x2e6]:          newstr @85 // result_no_thread_id   
743 [0x2e7]:          movg @30 // @std.io#qbq.qcp   
744 [0x2e8]:          movn #12   
746 [0x2ea]:          movn #0   
748 [0x2ec]:          popobj   
749 [0x2ed]:          movi #12, ebx   
751 [0x2ef]:          movg @30 // @std.io#qbq.qcp   
752 [0x2f0]:          movn #12   
754 [0x2f2]:          movn #1   
756 [0x2f4]:          movi #0, adx   
758 [0x2f6]:          rmov adx, ebx   
759 [0x2f7]:          new_class @0 // pxo#pxp   
760 [0x2f8]:          brh   
761 [0x2f9]:          movg @30 // @std.io#qbq.qcp   
762 [0x2fa]:          movn #13   
764 [0x2fc]:          popobj   
765 [0x2fd]:          newstr @86 // result_thread_destroy_failed   
766 [0x2fe]:          movg @30 // @std.io#qbq.qcp   
767 [0x2ff]:          movn #13   
769 [0x301]:          movn #0   
771 [0x303]:          popobj   
772 [0x304]:          movi #13, ebx   
774 [0x306]:          movg @30 // @std.io#qbq.qcp   
775 [0x307]:          movn #13   
777 [0x309]:          movn #1   
779 [0x30b]:          movi #0, adx   
781 [0x30d]:          rmov adx, ebx   
782 [0x30e]:          new_class @0 // pxo#pxp   
783 [0x30f]:          brh   
784 [0x310]:          movg @30 // @std.io#qbq.qcp   
785 [0x311]:          movn #14   
787 [0x313]:          popobj   
788 [0x314]:          newstr @87 // result_ill_priority_set   
789 [0x315]:          movg @30 // @std.io#qbq.qcp   
790 [0x316]:          movn #14   
792 [0x318]:          movn #0   
794 [0x31a]:          popobj   
795 [0x31b]:          movi #14, ebx   
797 [0x31d]:          movg @30 // @std.io#qbq.qcp   
798 [0x31e]:          movn #14   
800 [0x320]:          movn #1   
802 [0x322]:          movi #0, adx   
804 [0x324]:          rmov adx, ebx   
805 [0x325]:          new_class @0 // pxo#pxp   
806 [0x326]:          brh   
807 [0x327]:          movg @30 // @std.io#qbq.qcp   
808 [0x328]:          movn #15   
810 [0x32a]:          popobj   
811 [0x32b]:          newstr @88 // result_ill_thread_suspend   
812 [0x32c]:          movg @30 // @std.io#qbq.qcp   
813 [0x32d]:          movn #15   
815 [0x32f]:          movn #0   
817 [0x331]:          popobj   
818 [0x332]:          movi #15, ebx   
820 [0x334]:          movg @30 // @std.io#qbq.qcp   
821 [0x335]:          movn #15   
823 [0x337]:          movn #1   
825 [0x339]:          movi #0, adx   
827 [0x33b]:          rmov adx, ebx   
828 [0x33c]:          new_class @0 // pxo#pxp   
829 [0x33d]:          brh   
830 [0x33e]:          movg @30 // @std.io#qbq.qcp   
831 [0x33f]:          movn #16   
833 [0x341]:          popobj   
834 [0x342]:          newstr @89 // result_max_spin   
835 [0x343]:          movg @30 // @std.io#qbq.qcp   
836 [0x344]:          movn #16   
838 [0x346]:          movn #0   
840 [0x348]:          popobj   
841 [0x349]:          movi #255, ebx   
843 [0x34b]:          movg @30 // @std.io#qbq.qcp   
844 [0x34c]:          movn #16   
846 [0x34e]:          movn #1   
848 [0x350]:          movi #0, adx   
850 [0x352]:          rmov adx, ebx   
851 [0x353]:          new_class @0 // pxo#pxp   
852 [0x354]:          brh   
853 [0x355]:          movg @30 // @std.io#qbq.qcp   
854 [0x356]:          movn #17   
856 [0x358]:          popobj   
857 [0x359]:          newstr @90 // enums   
858 [0x35a]:          movg @30 // @std.io#qbq.qcp   
859 [0x35b]:          movn #17   
861 [0x35d]:          movn #0   
863 [0x35f]:          popobj   
864 [0x360]:          movi #256, ebx   
866 [0x362]:          movg @30 // @std.io#qbq.qcp   
867 [0x363]:          movn #17   
869 [0x365]:          movn #1   
871 [0x367]:          movi #0, adx   
873 [0x369]:          rmov adx, ebx   
874 [0x36a]:          new_class @0 // pxo#pxp   
875 [0x36b]:          gte adx, adx   
876 [0x36c]:          movg @36 // @qed#qee.qgi   
877 [0x36d]:          movn #0   
879 [0x36f]:          popobj   
880 [0x370]:          newstr @91 // created   
881 [0x371]:          movg @36 // @qed#qee.qgi   
882 [0x372]:          movn #0   
884 [0x374]:          movn #0   
886 [0x376]:          popobj   
887 [0x377]:          movi #-1, ebx   
889 [0x379]:          movg @36 // @qed#qee.qgi   
890 [0x37a]:          movn #0   
892 [0x37c]:          movn #1   
894 [0x37e]:          movi #0, adx   
896 [0x380]:          rmov adx, ebx   
897 [0x381]:          new_class @0 // pxo#pxp   
898 [0x382]:          gte adx, adx   
899 [0x383]:          movg @36 // @qed#qee.qgi   
900 [0x384]:          movn #1   
902 [0x386]:          popobj   
903 [0x387]:          newstr @92 // active   
904 [0x388]:          movg @36 // @qed#qee.qgi   
905 [0x389]:          movn #1   
907 [0x38b]:          movn #0   
909 [0x38d]:          popobj   
910 [0x38e]:          movi #0, ebx   
912 [0x390]:          movg @36 // @qed#qee.qgi   
913 [0x391]:          movn #1   
915 [0x393]:          movn #1   
917 [0x395]:          movi #0, adx   
919 [0x397]:          rmov adx, ebx   
920 [0x398]:          new_class @0 // pxo#pxp   
921 [0x399]:          gte adx, adx   
922 [0x39a]:          movg @36 // @qed#qee.qgi   
923 [0x39b]:          movn #2   
925 [0x39d]:          popobj   
926 [0x39e]:          newstr @93 // completed   
927 [0x39f]:          movg @36 // @qed#qee.qgi   
928 [0x3a0]:          movn #2   
930 [0x3a2]:          movn #0   
932 [0x3a4]:          popobj   
933 [0x3a5]:          movi #1, ebx   
935 [0x3a7]:          movg @36 // @qed#qee.qgi   
936 [0x3a8]:          movn #2   
938 [0x3aa]:          movn #1   
940 [0x3ac]:          movi #0, adx   
942 [0x3ae]:          rmov adx, ebx   
943 [0x3af]:          new_class @0 // pxo#pxp   
944 [0x3b0]:          gte adx, adx   
945 [0x3b1]:          movg @36 // @qed#qee.qgi   
946 [0x3b2]:          movn #3   
948 [0x3b4]:          popobj   
949 [0x3b5]:          newstr @94 // cancelled   
950 [0x3b6]:          movg @36 // @qed#qee.qgi   
951 [0x3b7]:          movn #3   
953 [0x3b9]:          movn #0   
955 [0x3bb]:          popobj   
956 [0x3bc]:          movi #2, ebx   
958 [0x3be]:          movg @36 // @qed#qee.qgi   
959 [0x3bf]:          movn #3   
961 [0x3c1]:          movn #1   
963 [0x3c3]:          movi #0, adx   
965 [0x3c5]:          rmov adx, ebx   
966 [0x3c6]:          new_class @0 // pxo#pxp   
967 [0x3c7]:          put adx   
968 [0x3c8]:          movg @40 // @std.io#qbq.qhd   
969 [0x3c9]:          movn #0   
971 [0x3cb]:          popobj   
972 [0x3cc]:          newstr @95 // min_priority   
973 [0x3cd]:          movg @40 // @std.io#qbq.qhd   
974 [0x3ce]:          movn #0   
976 [0x3d0]:          movn #0   
978 [0x3d2]:          popobj   
979 [0x3d3]:          movi #1, ebx   
981 [0x3d5]:          movg @40 // @std.io#qbq.qhd   
982 [0x3d6]:          movn #0   
984 [0x3d8]:          movn #1   
986 [0x3da]:          movi #0, adx   
988 [0x3dc]:          rmov adx, ebx   
989 [0x3dd]:          new_class @0 // pxo#pxp   
990 [0x3de]:          put adx   
991 [0x3df]:          movg @40 // @std.io#qbq.qhd   
992 [0x3e0]:          movn #1   
994 [0x3e2]:          popobj   
995 [0x3e3]:          newstr @96 // norm_priority   
996 [0x3e4]:          movg @40 // @std.io#qbq.qhd   
997 [0x3e5]:          movn #1   
999 [0x3e7]:          movn #0   
1001 [0x3e9]:          popobj   
1002 [0x3ea]:          movi #4, ebx   
1004 [0x3ec]:          movg @40 // @std.io#qbq.qhd   
1005 [0x3ed]:          movn #1   
1007 [0x3ef]:          movn #1   
1009 [0x3f1]:          movi #0, adx   
1011 [0x3f3]:          rmov adx, ebx   
1012 [0x3f4]:          new_class @0 // pxo#pxp   
1013 [0x3f5]:          put adx   
1014 [0x3f6]:          movg @40 // @std.io#qbq.qhd   
1015 [0x3f7]:          movn #2   
1017 [0x3f9]:          popobj   
1018 [0x3fa]:          newstr @97 // max_priority   
1019 [0x3fb]:          movg @40 // @std.io#qbq.qhd   
1020 [0x3fc]:          movn #2   
1022 [0x3fe]:          movn #0   
1024 [0x400]:          popobj   
1025 [0x401]:          movi #6, ebx   
1027 [0x403]:          movg @40 // @std.io#qbq.qhd   
1028 [0x404]:          movn #2   
1030 [0x406]:          movn #1   
1032 [0x408]:          movi #0, adx   
1034 [0x40a]:          rmov adx, ebx   
1035 [0x40b]:          new_class @0 // pxo#pxp   
1036 [0x40c]:          del   
1037 [0x40d]:          movg @46 // @std#qaf.qjn   
1038 [0x40e]:          movn #0   
1040 [0x410]:          popobj   
1041 [0x411]:          newstr @98 // tm_seconds   
1042 [0x412]:          movg @46 // @std#qaf.qjn   
1043 [0x413]:          movn #0   
1045 [0x415]:          movn #0   
1047 [0x417]:          popobj   
1048 [0x418]:          movi #0, ebx   
1050 [0x41a]:          movg @46 // @std#qaf.qjn   
1051 [0x41b]:          movn #0   
1053 [0x41d]:          movn #1   
1055 [0x41f]:          movi #0, adx   
1057 [0x421]:          rmov adx, ebx   
1058 [0x422]:          new_class @0 // pxo#pxp   
1059 [0x423]:          del   
1060 [0x424]:          movg @46 // @std#qaf.qjn   
1061 [0x425]:          movn #1   
1063 [0x427]:          popobj   
1064 [0x428]:          newstr @99 // tm_minutes   
1065 [0x429]:          movg @46 // @std#qaf.qjn   
1066 [0x42a]:          movn #1   
1068 [0x42c]:          movn #0   
1070 [0x42e]:          popobj   
1071 [0x42f]:          movi #1, ebx   
1073 [0x431]:          movg @46 // @std#qaf.qjn   
1074 [0x432]:          movn #1   
1076 [0x434]:          movn #1   
1078 [0x436]:          movi #0, adx   
1080 [0x438]:          rmov adx, ebx   
1081 [0x439]:          new_class @0 // pxo#pxp   
1082 [0x43a]:          del   
1083 [0x43b]:          movg @46 // @std#qaf.qjn   
1084 [0x43c]:          movn #2   
1086 [0x43e]:          popobj   
1087 [0x43f]:          newstr @100 // tm_hour   
1088 [0x440]:          movg @46 // @std#qaf.qjn   
1089 [0x441]:          movn #2   
1091 [0x443]:          movn #0   
1093 [0x445]:          popobj   
1094 [0x446]:          movi #2, ebx   
1096 [0x448]:          movg @46 // @std#qaf.qjn   
1097 [0x449]:          movn #2   
1099 [0x44b]:          movn #1   
1101 [0x44d]:          movi #0, adx   
1103 [0x44f]:          rmov adx, ebx   
1104 [0x450]:          new_class @0 // pxo#pxp   
1105 [0x451]:          del   
1106 [0x452]:          movg @46 // @std#qaf.qjn   
1107 [0x453]:          movn #3   
1109 [0x455]:          popobj   
1110 [0x456]:          newstr @101 // tm_mday   
1111 [0x457]:          movg @46 // @std#qaf.qjn   
1112 [0x458]:          movn #3   
1114 [0x45a]:          movn #0   
1116 [0x45c]:          popobj   
1117 [0x45d]:          movi #3, ebx   
1119 [0x45f]:          movg @46 // @std#qaf.qjn   
1120 [0x460]:          movn #3   
1122 [0x462]:          movn #1   
1124 [0x464]:          movi #0, adx   
1126 [0x466]:          rmov adx, ebx   
1127 [0x467]:          new_class @0 // pxo#pxp   
1128 [0x468]:          del   
1129 [0x469]:          movg @46 // @std#qaf.qjn   
1130 [0x46a]:          movn #4   
1132 [0x46c]:          popobj   
1133 [0x46d]:          newstr @102 // tm_mon   
1134 [0x46e]:          movg @46 // @std#qaf.qjn   
1135 [0x46f]:          movn #4   
1137 [0x471]:          movn #0   
1139 [0x473]:          popobj   
1140 [0x474]:          movi #4, ebx   
1142 [0x476]:          movg @46 // @std#qaf.qjn   
1143 [0x477]:          movn #4   
1145 [0x479]:          movn #1   
1147 [0x47b]:          movi #0, adx   
1149 [0x47d]:          rmov adx, ebx   
1150 [0x47e]:          new_class @0 // pxo#pxp   
1151 [0x47f]:          del   
1152 [0x480]:          movg @46 // @std#qaf.qjn   
1153 [0x481]:          movn #5   
1155 [0x483]:          popobj   
1156 [0x484]:          newstr @103 // tm_year   
1157 [0x485]:          movg @46 // @std#qaf.qjn   
1158 [0x486]:          movn #5   
1160 [0x488]:          movn #0   
1162 [0x48a]:          popobj   
1163 [0x48b]:          movi #5, ebx   
1165 [0x48d]:          movg @46 // @std#qaf.qjn   
1166 [0x48e]:          movn #5   
1168 [0x490]:          movn #1   
1170 [0x492]:          movi #0, adx   
1172 [0x494]:          rmov adx, ebx   
1173 [0x495]:          new_class @0 // pxo#pxp   
1174 [0x496]:          del   
1175 [0x497]:          movg @46 // @std#qaf.qjn   
1176 [0x498]:          movn #6   
1178 [0x49a]:          popobj   
1179 [0x49b]:          newstr @104 // tm_wday   
1180 [0x49c]:          movg @46 // @std#qaf.qjn   
1181 [0x49d]:          movn #6   
1183 [0x49f]:          movn #0   
1185 [0x4a1]:          popobj   
1186 [0x4a2]:          movi #6, ebx   
1188 [0x4a4]:          movg @46 // @std#qaf.qjn   
1189 [0x4a5]:          movn #6   
1191 [0x4a7]:          movn #1   
1193 [0x4a9]:          movi #0, adx   
1195 [0x4ab]:          rmov adx, ebx   
1196 [0x4ac]:          new_class @0 // pxo#pxp   
1197 [0x4ad]:          del   
1198 [0x4ae]:          movg @46 // @std#qaf.qjn   
1199 [0x4af]:          movn #7   
1201 [0x4b1]:          popobj   
1202 [0x4b2]:          newstr @105 // tm_yday   
1203 [0x4b3]:          movg @46 // @std#qaf.qjn   
1204 [0x4b4]:          movn #7   
1206 [0x4b6]:          movn #0   
1208 [0x4b8]:          popobj   
1209 [0x4b9]:          movi #7, ebx   
1211 [0x4bb]:          movg @46 // @std#qaf.qjn   
1212 [0x4bc]:          movn #7   
1214 [0x4be]:          movn #1   
1216 [0x4c0]:          movi #0, adx   
1218 [0x4c2]:          rmov adx, ebx   
1219 [0x4c3]:          new_class @0 // pxo#pxp   
1220 [0x4c4]:          del   
1221 [0x4c5]:          movg @46 // @std#qaf.qjn   
1222 [0x4c6]:          movn #8   
1224 [0x4c8]:          popobj   
1225 [0x4c9]:          newstr @106 // tm_isdst   
1226 [0x4ca]:          movg @46 // @std#qaf.qjn   
1227 [0x4cb]:          movn #8   
1229 [0x4cd]:          movn #0   
1231 [0x4cf]:          popobj   
1232 [0x4d0]:          movi #8, ebx   
1234 [0x4d2]:          movg @46 // @std#qaf.qjn   
1235 [0x4d3]:          movn #8   
1237 [0x4d5]:          movn #1   
1239 [0x4d7]:          movi #0, adx   
1241 [0x4d9]:          rmov adx, ebx   
1242 [0x4da]:          new_class @0 // pxo#pxp   
1243 [0x4db]:          call @0 // <pxo#pxp.pxq>   
1244 [0x4dc]:          movg @47 // @std#qaf.qjx   
1245 [0x4dd]:          movn #0   
1247 [0x4df]:          popobj   
1248 [0x4e0]:          newstr @107 // seconds   
1249 [0x4e1]:          movg @47 // @std#qaf.qjx   
1250 [0x4e2]:          movn #0   
1252 [0x4e4]:          movn #0   
1254 [0x4e6]:          popobj   
1255 [0x4e7]:          movi #0, ebx   
1257 [0x4e9]:          movg @47 // @std#qaf.qjx   
1258 [0x4ea]:          movn #0   
1260 [0x4ec]:          movn #1   
1262 [0x4ee]:          movi #0, adx   
1264 [0x4f0]:          rmov adx, ebx   
1265 [0x4f1]:          new_class @0 // pxo#pxp   
1266 [0x4f2]:          call @0 // <pxo#pxp.pxq>   
1267 [0x4f3]:          movg @47 // @std#qaf.qjx   
1268 [0x4f4]:          movn #1   
1270 [0x4f6]:          popobj   
1271 [0x4f7]:          newstr @108 // milliseconds   
1272 [0x4f8]:          movg @47 // @std#qaf.qjx   
1273 [0x4f9]:          movn #1   
1275 [0x4fb]:          movn #0   
1277 [0x4fd]:          popobj   
1278 [0x4fe]:          movi #1, ebx   
1280 [0x500]:          movg @47 // @std#qaf.qjx   
1281 [0x501]:          movn #1   
1283 [0x503]:          movn #1   
1285 [0x505]:          movi #0, adx   
1287 [0x507]:          rmov adx, ebx   
1288 [0x508]:          new_class @0 // pxo#pxp   
1289 [0x509]:          call @0 // <pxo#pxp.pxq>   
1290 [0x50a]:          movg @47 // @std#qaf.qjx   
1291 [0x50b]:          movn #2   
1293 [0x50d]:          popobj   
1294 [0x50e]:          newstr @109 // microseconds   
1295 [0x50f]:          movg @47 // @std#qaf.qjx   
1296 [0x510]:          movn #2   
1298 [0x512]:          movn #0   
1300 [0x514]:          popobj   
1301 [0x515]:          movi #2, ebx   
1303 [0x517]:          movg @47 // @std#qaf.qjx   
1304 [0x518]:          movn #2   
1306 [0x51a]:          movn #1   
1308 [0x51c]:          movi #0, adx   
1310 [0x51e]:          rmov adx, ebx   
1311 [0x51f]:          new_class @0 // pxo#pxp   
1312 [0x520]:          call @0 // <pxo#pxp.pxq>   
1313 [0x521]:          movg @47 // @std#qaf.qjx   
1314 [0x522]:          movn #3   
1316 [0x524]:          popobj   
1317 [0x525]:          newstr @110 // nanoseconds   
1318 [0x526]:          movg @47 // @std#qaf.qjx   
1319 [0x527]:          movn #3   
1321 [0x529]:          movn #0   
1323 [0x52b]:          popobj   
1324 [0x52c]:          movi #3, ebx   
1326 [0x52e]:          movg @47 // @std#qaf.qjx   
1327 [0x52f]:          movn #3   
1329 [0x531]:          movn #1   
1331 [0x533]:          movi #0, adx   
1333 [0x535]:          rmov adx, ebx   
1334 [0x536]:          movg @55 // @platform.kernel#qlb.qll   
1335 [0x537]:          movn #2   
1337 [0x539]:          movi #0, adx   
1339 [0x53b]:          movi #1902, ebx   
1341 [0x53d]:          rmov adx, ebx   
1342 [0x53e]:          call @3764 // <pxo#pxp.wjr>   
1343 [0x53f]:          call @3765 // <std#qaf.qak.wjs>   
1344 [0x540]:          call @3766 // <std#qaf.qbf.wjt>   
1345 [0x541]:          call @3767 // <std.io#qbq.qbv.wju>   
1346 [0x542]:          call @3768 // <std.io#qbq.qcg.wjv>   
1347 [0x543]:          call @3769 // <qed#qee.qew.wjw>   
1348 [0x544]:          call @3770 // <qed#qee.wjx>   
1349 [0x545]:          call @3771 // <std.io#qbq.wjy>   
1350 [0x546]:          call @3772 // <std#qaf.qjl.wkz>   
1351 [0x547]:          call @3773 // <std#qaf.wka>   
1352 [0x548]:          call @3774 // <std#string.$03internal_static_init>   
1353 [0x549]:          call @3775 // <std.io#qbq.qcp.wkc>   
1354 [0x54a]:          call @3776 // <std#qaf.qir.wkv>   
1355 [0x54b]:          ret   


function: platform.kernel#qlb.qll.vqu[3424] params(1) in file: qlj:16:15: note:  
		    static def exit(value: var) {
		              ^

0 [0x0]: line: 17 ipushl #0   : protected asm start
1 [0x1]:          int 0x1d   
2 [0x2]:          ret   : protected asm end


function: platform.kernel#qlb.qll.vqv[3425] params(1) in file: qlj:23:23: note:  
		    private static def get_lib_path(name: string) : _int8[] {
		                      ^

0 [0x0]: line: 24 call @3396 // <qkn#qko.qku.vps>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 9   
4 [0x4]: line: 25 pushl 0   
5 [0x5]:          newstr @48 // .dll   
6 [0x6]:          call @3529 // <std#string.operator+=>   
7 [0x7]:          pop   
8 [0x8]:          jmp @13   
9 [0x9]: line: 27 pushl 0   
10 [0xa]:          newstr @49 // .so   
11 [0xb]:          call @3529 // <std#string.operator+=>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]: line: 30 new_class @0 // pxo#pxp   
15 [0xf]:          inc adx   
16 [0x10]:          dup    
17 [0x11]:          pushl 0   
18 [0x12]:          call @3121 // <std.io#qbq.qbv.vdx>   
19 [0x13]:          call @3128 // <std.io#qbq.qbv.vee>   
20 [0x14]:          call @3501 // <std#string.get_data>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: platform.kernel#qlb.qll.vqw[3426] params(1) in file: qlj:33:15: note:  
		    static def load_library(name: string) {
		              ^

0 [0x0]: line: 34 pushl 0   
1 [0x1]:          call @3425 // <platform.kernel#qlb.qll.vqv>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 35 pushl 1   : protected asm start
5 [0x5]:          int 0x39   
6 [0x6]:          ret   : protected asm end


function: platform.kernel#qlb.qll.vqx[3427] params(1) in file: qlj:41:15: note:  
		    static def free_library(name: string): var {
		              ^

0 [0x0]: line: 42 pushl 0   
1 [0x1]:          call @3425 // <platform.kernel#qlb.qll.vqv>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 43 istorel 0, fp+2   
6 [0x6]: line: 44 pushl 1   : protected asm start
7 [0x7]:          int 0x3a   
8 [0x8]:          smovr_2 ebx, fp+2   
9 [0x9]: line: 50 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: platform.kernel#qlb.qll.vqy[3428] params(2) in file: qlj:53:15: note:  
		    static def link_func(name: string, library: string): var {
		              ^

0 [0x0]: line: 54 pushl 0   
1 [0x1]:          call @3425 // <platform.kernel#qlb.qll.vqv>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 55 pushl 0   
5 [0x5]:          call @3501 // <std#string.get_data>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+3   
8 [0x8]: line: 56 istorel 0, fp+4   
10 [0xa]: line: 57 pushl 3   : protected asm start
11 [0xb]:          pushl 2   
12 [0xc]:          int 0x3b   
13 [0xd]:          smovr_2 ebx, fp+4   
14 [0xe]: line: 64 loadl ebx, fp+4   : protected asm end
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: platform.kernel#qlb.qll.vrz[3429] params(1) in file: qlj:67:23: note:  
		    private static def srt_init(args: object[]) : var {
		                      ^

0 [0x0]: line: 68 new_class @0 // pxo#pxp   
1 [0x1]:          movnd adx   
2 [0x2]:          dup    
3 [0x3]:          newstr @3 //    
4 [0x4]:          call @3475 // <std#string.string>   
5 [0x5]:          pushl 0   
6 [0x6]:          movi #0, ebx   
8 [0x8]:          popobj2    
9 [0x9]:          movr adx, ebx   
10 [0xa]:          chklen adx   
11 [0xb]:          movnd adx   
12 [0xc]:          vcast 0 -> []   
13 [0xd]:          pushobj   
14 [0xe]:          call @3487 // <std#string.operator+>   
15 [0xf]:          movg @51 // @qkn#qko.qku   
16 [0x10]:          movn #1   
18 [0x12]:          popobj   
19 [0x13]: line: 69 new_class @0 // pxo#pxp   
20 [0x14]:          movnd adx   
21 [0x15]:          dup    
22 [0x16]:          newstr @3 //    
23 [0x17]:          call @3475 // <std#string.string>   
24 [0x18]:          pushl 0   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          popobj2    
28 [0x1c]:          movr adx, ebx   
29 [0x1d]:          chklen adx   
30 [0x1e]:          movnd adx   
31 [0x1f]:          vcast 0 -> []   
32 [0x20]:          pushobj   
33 [0x21]:          call @3487 // <std#string.operator+>   
34 [0x22]:          movg @51 // @qkn#qko.qku   
35 [0x23]:          movn #3   
37 [0x25]:          popobj   
38 [0x26]: line: 70 new_class @0 // pxo#pxp   
39 [0x27]:          movnd adx   
40 [0x28]:          dup    
41 [0x29]:          newstr @3 //    
42 [0x2a]:          call @3475 // <std#string.string>   
43 [0x2b]:          pushl 0   
44 [0x2c]:          movi #2, ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          vcast 0 -> []   
51 [0x33]:          pushobj   
52 [0x34]:          call @3487 // <std#string.operator+>   
53 [0x35]:          movg @51 // @qkn#qko.qku   
54 [0x36]:          movn #2   
56 [0x38]:          popobj   
57 [0x39]: line: 71 new_class @0 // pxo#pxp   
58 [0x3a]:          movnd adx   
59 [0x3b]:          dup    
60 [0x3c]:          newstr @3 //    
61 [0x3d]:          call @3475 // <std#string.string>   
62 [0x3e]:          pushl 0   
63 [0x3f]:          movi #3, ebx   
65 [0x41]:          popobj2    
66 [0x42]:          movr adx, ebx   
67 [0x43]:          chklen adx   
68 [0x44]:          movnd adx   
69 [0x45]:          vcast 0 -> []   
70 [0x46]:          pushobj   
71 [0x47]:          call @3487 // <std#string.operator+>   
72 [0x48]:          movg @51 // @qkn#qko.qku   
73 [0x49]:          movn #0   
75 [0x4b]:          popobj   
76 [0x4c]: line: 73 call @3423 // <platform.kernel#qlb.qll.vqt>   
77 [0x4d]: line: 74 pushl 0   
78 [0x4e]: line: 76 movi #4, ebx   
80 [0x50]:          popobj2    
81 [0x51]:          movr adx, ebx   
82 [0x52]:          chklen adx   
83 [0x53]:          movnd adx   
84 [0x54]:          movi #42, cmt   
86 [0x56]:          cast cmt   
87 [0x57]:          smovr_3 fp+1   
88 [0x58]: line: 77 pushl 1   
89 [0x59]:          call @3413 // <platform.kernel#qlb.qli.vqj>   
90 [0x5a]: line: 79 movg @40 // @std.io#qbq.qhd   
91 [0x5b]:          movn #2   
93 [0x5d]:          smovr_3 fp+2   
94 [0x5e]: line: 80 movg @29 // @std.io#qbq.qcg   
95 [0x5f]:          movn #0   
97 [0x61]:          pushobj   
98 [0x62]:          pushl 1   
99 [0x63]:          call @3171 // <std.io#qbq.qcg.vfv>   
100 [0x64]: line: 82 movg @29 // @std.io#qbq.qcg   : protected asm start
101 [0x65]:          movn #0   
103 [0x67]:          pushobj   
104 [0x68]:          movl 1   
105 [0x69]:          movn #7   
107 [0x6b]:          popobj   
108 [0x6c]:          movl 2   
109 [0x6d]:          pushobj   
110 [0x6e]:          movl 1   
111 [0x6f]:          movn #3   
113 [0x71]:          popobj   
114 [0x72]: line: 99 movl 0   : protected asm end
115 [0x73]: line: 100 sizeof ebx   
116 [0x74]:           rstore ebx   
117 [0x75]:           movi #5, ebx   
119 [0x77]:           loadval ecx   
120 [0x78]:           sub ecx, ebx -> ebx   
121 [0x79]:           new_classarray ebx  // std#string[]   
123 [0x7b]:           popobj2    
124 [0x7c]:           smovr_3 fp+3   
125 [0x7d]: line: 101 istorel 0, fp+4   
127 [0x7f]: line: 103 istorel 5, fp+5   
129 [0x81]:           ipushl #5   
130 [0x82]:           movl 0   
131 [0x83]:           sizeof ebx   
132 [0x84]:           loadval ecx   
133 [0x85]:           lt ecx, ebx   
134 [0x86]:           movr ebx, cmt   
135 [0x87]:           movr cmt, ebx   
136 [0x88]:           jne 163   
137 [0x89]: line: 104 new_class @0 // pxo#pxp   
138 [0x8a]:           movnd adx   
139 [0x8b]:           dup    
140 [0x8c]:           pushl 0   
141 [0x8d]:           loadl ebx, fp+5   
142 [0x8e]:           popobj2    
143 [0x8f]:           movr adx, ebx   
144 [0x90]:           chklen adx   
145 [0x91]:           movnd adx   
146 [0x92]:           vcast 0 -> []   
147 [0x93]:           pushobj   
148 [0x94]:           call @3475 // <std#string.string>   
149 [0x95]:           pushl 3   
150 [0x96]:           loadl ebx, fp+4   
151 [0x97]:           movr egx, ebx   
152 [0x98]:           inc ebx   
153 [0x99]:           smovr_2 ebx, fp+4   
154 [0x9a]:           movr ebx, egx   
155 [0x9b]:           popobj2    
156 [0x9c]:           movr adx, ebx   
157 [0x9d]:           chklen adx   
158 [0x9e]:           movnd adx   
159 [0x9f]:           popobj   
160 [0xa0]:           iaddl 1, fp@5   
162 [0xa2]:           jmp @129   
163 [0xa3]: line: 107 istorel 0, fp+6   
165 [0xa5]: line: 108 movg @55 // @platform.kernel#qlb.qll   
166 [0xa6]:           movn #0   
168 [0xa8]:           movi #0, adx   
170 [0xaa]:           iaload ebx, adx   
171 [0xab]:           rstore ebx   
172 [0xac]:           movi #0, ebx   
174 [0xae]:           loadval ecx   
175 [0xaf]:           tne ecx, ebx   
176 [0xb0]:           jne 189   
177 [0xb1]: line: 109 movg @55 // @platform.kernel#qlb.qll   
178 [0xb2]:           movn #0   
180 [0xb4]:           movi #0, adx   
182 [0xb6]:           iaload ebx, adx   
183 [0xb7]:           rstore ebx   
184 [0xb8]:           pushl 3   
185 [0xb9]:           smov ebx, sp+[-1]   
186 [0xba]:           calld ebx   
187 [0xbb]:           ipopl 6   
188 [0xbc]:           jmp @256   
189 [0xbd]:           movg @55 // @platform.kernel#qlb.qll   
190 [0xbe]:           movn #1   
192 [0xc0]:           movi #0, adx   
194 [0xc2]:           iaload ebx, adx   
195 [0xc3]:           rstore ebx   
196 [0xc4]:           movi #0, ebx   
198 [0xc6]:           loadval ecx   
199 [0xc7]:           tne ecx, ebx   
200 [0xc8]:           jne 212   
201 [0xc9]: line: 110 movg @55 // @platform.kernel#qlb.qll   
202 [0xca]:           movn #1   
204 [0xcc]:           movi #0, adx   
206 [0xce]:           iaload ebx, adx   
207 [0xcf]:           rstore ebx   
208 [0xd0]:           pushl 3   
209 [0xd1]:           smov ebx, sp+[-1]   
210 [0xd2]:           calld ebx   
211 [0xd3]:           jmp @256   
212 [0xd4]:           movg @55 // @platform.kernel#qlb.qll   
213 [0xd5]:           movn #2   
215 [0xd7]:           movi #0, adx   
217 [0xd9]:           iaload ebx, adx   
218 [0xda]:           rstore ebx   
219 [0xdb]:           movi #0, ebx   
221 [0xdd]:           loadval ecx   
222 [0xde]:           tne ecx, ebx   
223 [0xdf]:           jne 234   
224 [0xe0]: line: 111 movg @55 // @platform.kernel#qlb.qll   
225 [0xe1]:           movn #2   
227 [0xe3]:           movi #0, adx   
229 [0xe5]:           iaload ebx, adx   
230 [0xe6]:           rstore ebx   
231 [0xe7]:           loadval ebx   
232 [0xe8]:           calld ebx   
233 [0xe9]:           jmp @256   
234 [0xea]:           movg @55 // @platform.kernel#qlb.qll   
235 [0xeb]:           movn #3   
237 [0xed]:           movi #0, adx   
239 [0xef]:           iaload ebx, adx   
240 [0xf0]:           rstore ebx   
241 [0xf1]:           movi #0, ebx   
243 [0xf3]:           loadval ecx   
244 [0xf4]:           tne ecx, ebx   
245 [0xf5]:           jne 256   
246 [0xf6]: line: 112 movg @55 // @platform.kernel#qlb.qll   
247 [0xf7]:           movn #3   
249 [0xf9]:           movi #0, adx   
251 [0xfb]:           iaload ebx, adx   
252 [0xfc]:           rstore ebx   
253 [0xfd]:           loadval ebx   
254 [0xfe]:           calld ebx   
255 [0xff]:           ipopl 6   
256 [0x100]:           nop   
257 [0x101]: line: 115 loadl ebx, fp+6   
258 [0x102]:           return_val ebx   
259 [0x103]:           ret   


constructor: platform.kernel#qlb.qll.vra[3430] params(0) in file: qlj:6:6: note:  
		class platform
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#qaf.vrb[3431] params(1) in file: qlt:3:4: note:  
		def strtod(str: string) : var {
		   ^

0 [0x0]: line: 4 pushl 0   
1 [0x1]:         call @3501 // <std#string.get_data>   
2 [0x2]:         popobj2    
3 [0x3]:         smovr_3 fp+1   
4 [0x4]: line: 5 istorel 0, fp+2   
6 [0x6]: line: 7 pushl 1   : protected asm start
7 [0x7]:         int 0x43   
8 [0x8]:         smovr_2 ebx, fp+2   
9 [0x9]: line: 13 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#qaf.vrc[3432] params(3) in file: qlt:16:4: note:  
		def snprintf(fmt: var, num: var, precision: var) : var[] {
		   ^

0 [0x0]: line: 17 loadl egx, fp+0   : protected asm start
1 [0x1]:          loadl ebx, fp+1   
2 [0x2]:          loadl ecx, fp+2   
3 [0x3]:          int 0x1   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]: line: 26 pushnull    : protected asm end
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#qaf.vrd[3433] params(1) in file: qlt:29:4: note:  
		def sys(str: string) : var {
		   ^

0 [0x0]: line: 30 pushl 0   
1 [0x1]:          call @3501 // <std#string.get_data>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 31 istorel 0, fp+2   
6 [0x6]: line: 32 pushl 1   : protected asm start
7 [0x7]:          int 0x1a   
8 [0x8]:          smovr_2 cmt, fp+2   
9 [0x9]: line: 38 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#qaf.vre[3434] params(1) in file: qlt:41:4: note:  
		def print(data: _int8[]) {
		   ^

0 [0x0]: line: 42 pushl 0   
1 [0x1]:          call @3462 // <std#qaf.vsg>   
2 [0x2]:          ret   


function: std#qaf.vrf[3435] params(1) in file: qlt:45:4: note:  
		def print(str: string) {
		   ^

0 [0x0]: line: 46 pushl 0   
1 [0x1]:          call @3501 // <std#string.get_data>   
2 [0x2]:          call @3462 // <std#qaf.vsg>   
3 [0x3]:          ret   


function: std#qaf.vrg[3436] params(1) in file: qlt:49:4: note:  
		def println(data: var[]) {
		   ^

0 [0x0]: line: 50 pushl 0   
1 [0x1]:          call @3465 // <std#qaf.vsj>   
2 [0x2]: line: 51 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vrh[3437] params(1) in file: qlt:54:4: note:  
		def println(data: _int8[]) {
		   ^

0 [0x0]: line: 55 pushl 0   
1 [0x1]:          call @3462 // <std#qaf.vsg>   
2 [0x2]: line: 56 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vri[3438] params(1) in file: qlt:59:4: note:  
		def println(data: _int16[]) {
		   ^

0 [0x0]: line: 60 pushl 0   
1 [0x1]:          call @3466 // <std#qaf.vsk>   
2 [0x2]: line: 61 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vrj[3439] params(1) in file: qlt:64:4: note:  
		def println(data: _int32[]) {
		   ^

0 [0x0]: line: 65 pushl 0   
1 [0x1]:          call @3467 // <std#qaf.vsl>   
2 [0x2]: line: 66 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vrk[3440] params(1) in file: qlt:69:4: note:  
		def println(data: _int64[]) {
		   ^

0 [0x0]: line: 70 pushl 0   
1 [0x1]:          call @3468 // <std#qaf.vsm>   
2 [0x2]: line: 71 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vrl[3441] params(1) in file: qlt:74:4: note:  
		def println(data: _uint8[]) {
		   ^

0 [0x0]: line: 75 pushl 0   
1 [0x1]:          call @3469 // <std#qaf.vsn>   
2 [0x2]: line: 76 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vrm[3442] params(1) in file: qlt:79:4: note:  
		def println(data: _uint16[]) {
		   ^

0 [0x0]: line: 80 pushl 0   
1 [0x1]:          call @3470 // <std#qaf.vso>   
2 [0x2]: line: 81 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vrn[3443] params(1) in file: qlt:84:4: note:  
		def println(data: _uint32[]) {
		   ^

0 [0x0]: line: 85 pushl 0   
1 [0x1]:          call @3471 // <std#qaf.vsp>   
2 [0x2]: line: 86 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vro[3444] params(1) in file: qlt:89:4: note:  
		def println(data: _uint64[]) {
		   ^

0 [0x0]: line: 90 pushl 0   
1 [0x1]:          call @3472 // <std#qaf.vsq>   
2 [0x2]: line: 91 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vrp[3445] params(1) in file: qlt:94:4: note:  
		def println(data: var) {
		   ^

0 [0x0]: line: 95 ipushl #0   
1 [0x1]:          call @3463 // <std#qaf.vsh>   
2 [0x2]: line: 96 istore 10   
4 [0x4]:          call @3464 // <std#qaf.vsi>   
5 [0x5]:          ret   


function: std#qaf.vrq[3446] params(0) in file: qlt:99:4: note:  
		def println() {
		   ^

0 [0x0]: line: 100 istore 10   
2 [0x2]:           call @3464 // <std#qaf.vsi>   
3 [0x3]:           ret   


function: std#qaf.vrr[3447] params(1) in file: qlt:103:4: note:  
		def println(e: _enum_) {
		   ^

0 [0x0]: line: 104 pushl 0   
1 [0x1]:           call @3366 // <std#_enum_.get_name>   
2 [0x2]:           call @3462 // <std#qaf.vsg>   
3 [0x3]: line: 105 istore 10   
5 [0x5]:           call @3464 // <std#qaf.vsi>   
6 [0x6]:           ret   


function: std#qaf.vrs[3448] params(0) in file: qlt:108:4: note:  
		def read_line() : string {
		   ^

0 [0x0]: line: 109 istorel 0, fp+0   
2 [0x2]: line: 110 new_class @0 // pxo#pxp   
3 [0x3]:           movnd adx   
4 [0x4]:           dup    
5 [0x5]:           newstr @3 //    
6 [0x6]:           call @3475 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 112 call @3450 // <std#qaf.vru>   
10 [0xa]:           loadval ebx   
11 [0xb]:           mov8 ebx, ebx   
12 [0xc]:           smovr_2 ebx, fp+0   
13 [0xd]: line: 113 ipushl #0   
14 [0xe]:           movi #13, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skne ebx // pc = 24   
20 [0x14]:           ipushl #0   
21 [0x15]:           movi #10, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           tne ecx, ebx   
25 [0x19]:           jne 35   
26 [0x1a]: line: 114 pushl 1   
27 [0x1b]:           ipushl #0   
28 [0x1c]:           call @3482 // <std#string.append>   
29 [0x1d]:           pop   
30 [0x1e]: line: 115 call @3450 // <std#qaf.vru>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           mov8 ebx, ebx   
33 [0x21]:           smovr_2 ebx, fp+0   
34 [0x22]:           jmp @13   
35 [0x23]: line: 118 movl 1   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: std#qaf.vrt[3449] params(0) in file: qlt:121:4: note:  
		def read_passwd() : string {
		   ^

0 [0x0]: line: 122 istorel 0, fp+0   
2 [0x2]: line: 123 new_class @0 // pxo#pxp   
3 [0x3]:           movnd adx   
4 [0x4]:           dup    
5 [0x5]:           newstr @3 //    
6 [0x6]:           call @3475 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 125 call @3451 // <std#qaf.vrv>   
10 [0xa]:           loadval ebx   
11 [0xb]:           mov8 ebx, ebx   
12 [0xc]:           smovr_2 ebx, fp+0   
13 [0xd]: line: 126 ipushl #0   
14 [0xe]:           movi #13, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skne ebx // pc = 24   
20 [0x14]:           ipushl #0   
21 [0x15]:           movi #10, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           tne ecx, ebx   
25 [0x19]:           jne 35   
26 [0x1a]: line: 127 pushl 1   
27 [0x1b]:           ipushl #0   
28 [0x1c]:           call @3482 // <std#string.append>   
29 [0x1d]:           pop   
30 [0x1e]: line: 128 call @3451 // <std#qaf.vrv>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           mov8 ebx, ebx   
33 [0x21]:           smovr_2 ebx, fp+0   
34 [0x22]:           jmp @13   
35 [0x23]: line: 131 movl 1   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: std#qaf.vru[3450] params(0) in file: qlt:134:4: note:  
		def read_char() : var {
		   ^

0 [0x0]: line: 135 istore 0   
2 [0x2]:           call @3474 // <std#qaf.vss>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#qaf.vrv[3451] params(0) in file: qlt:138:4: note:  
		def read_raw_char() : var {
		   ^

0 [0x0]: line: 139 istore 1   
2 [0x2]:           call @3474 // <std#qaf.vss>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#qaf.vrw[3452] params(1) in file: qlt:142:4: note:  
		def println(str: string) {
		   ^

0 [0x0]: line: 143 pushl 0   
1 [0x1]:           call @3501 // <std#string.get_data>   
2 [0x2]:           call @3462 // <std#qaf.vsg>   
3 [0x3]: line: 144 istore 10   
5 [0x5]:           call @3464 // <std#qaf.vsi>   
6 [0x6]:           ret   


function: std#qaf.vrx[3453] params(1) in file: qlt:147:4: note:  
		def println(o: printable) {
		   ^

0 [0x0]: line: 148 pushl 0   
1 [0x1]:           invoke_delegate 3592 { static=0, args=0 }   
3 [0x3]:           call @3501 // <std#string.get_data>   
4 [0x4]:           call @3462 // <std#qaf.vsg>   
5 [0x5]: line: 149 istore 10   
7 [0x7]:           call @3464 // <std#qaf.vsi>   
8 [0x8]:           ret   


function: std#qaf.vry[3454] params(1) in file: qlt:152:4: note:  
		def print(o: printable) {
		   ^

0 [0x0]: line: 153 pushl 0   
1 [0x1]:           invoke_delegate 3592 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3462 // <std#qaf.vsg>   
8 [0x8]:           ret   


function: std#qaf.vsz[3455] params(1) in file: qlt:156:4: note:  
		def print(data: var) {
		   ^

0 [0x0]: line: 157 ipushl #0   
1 [0x1]:           call @3463 // <std#qaf.vsh>   
2 [0x2]:           ret   


function: std#qaf.vsa[3456] params(0) in file: qlt:160:4: note:  
		def flush() {
		   ^

0 [0x0]: line: 161 int 0x34   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#qaf.vsb[3457] params(0) in file: qlt:164:4: note:  
		def utc_mills_time() : var {
		   ^

0 [0x0]: line: 165 call @3375 // <std#qaf.qjl.vou>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#qaf.vsc[3458] params(0) in file: qlt:168:4: note:  
		def nano_time() : var {
		   ^

0 [0x0]: line: 169 call @3370 // <std#qaf.qjl.vop>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#qaf.vsd[3459] params(0) in file: qlt:172:4: note:  
		def exit() {
		   ^

0 [0x0]: line: 173 int 0x1d   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#qaf.vse[3460] params(1) in file: qlt:176:4: note:  
		def sizeOf(data: object) : var {
		   ^

0 [0x0]: line: 177 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 183 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#qaf.vsf[3461] params(1) in file: qlt:186:4: note:  
		def sizeOf(data: object[]) : var {
		   ^

0 [0x0]: line: 187 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 193 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#qaf.vsg[3462] params(1) in file: qlt:196:10: note:  
		local def print_chars(str: _int8[]) {
		         ^

0 [0x0]: line: 197 istorel -1, fp+2   
2 [0x2]:           pushl 0   
3 [0x3]:           popl 3   
4 [0x4]:           iaddl 1, fp@2   
6 [0x6]:           movl 3   
7 [0x7]:           sizeof ecx   
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           lt ebx, ecx   
10 [0xa]:           jne 16   
11 [0xb]:           iaload ecx, ebx   
12 [0xc]:           smovr_2 ecx, fp+1   
13 [0xd]: line: 198 loadl ebx, fp+1   : protected asm start
14 [0xe]:           _putc ebx   
15 [0xf]:           jmp @4   : protected asm end
16 [0x10]:           ret   


function: std#qaf.vsh[3463] params(1) in file: qlt:205:10: note:  
		local def print_num(val: var) {
		         ^

0 [0x0]: line: 206 loadl ebx, fp+0   : protected asm start
1 [0x1]:           put ebx   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vsi[3464] params(1) in file: qlt:212:10: note:  
		local def print_char(val: _int8) {
		         ^

0 [0x0]: line: 213 loadl ebx, fp+0   : protected asm start
1 [0x1]:           _putc ebx   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vsj[3465] params(1) in file: qlt:219:10: note:  
		local def print_numbers(str: var[]) {
		         ^

0 [0x0]: line: 220 movi #91, ebx   : protected asm start
2 [0x2]:           movi #32, ecx   
4 [0x4]:           _putc ebx   
5 [0x5]:           _putc ecx   
6 [0x6]: line: 226 istorel 0, fp+1   : protected asm end
8 [0x8]:           ipushl #1   
9 [0x9]:           movl 0   
10 [0xa]:           sizeof ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 48   
16 [0x10]: line: 227 pushl 0   
17 [0x11]:           loadl ebx, fp+1   
18 [0x12]:           popobj2    
19 [0x13]:           movr adx, ebx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           smovr_2 ebx, fp+2   
23 [0x17]: line: 228 loadl ebx, fp+2   : protected asm start
24 [0x18]:           put ebx   
25 [0x19]: line: 233 ipushl #1   : protected asm end
26 [0x1a]:           movi #1, ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           add ecx, ebx -> ebx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movl 0   
32 [0x20]:           sizeof ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           lt ecx, ebx   
35 [0x23]:           movr ebx, cmt   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 44   
38 [0x26]: line: 234 movi #44, ebx   : protected asm start
40 [0x28]:           movi #32, ecx   
42 [0x2a]:           _putc ebx   
43 [0x2b]:           _putc ecx   
44 [0x2c]:           nop   : protected asm end
45 [0x2d]:           iaddl 1, fp@1   
47 [0x2f]:           jmp @8   
48 [0x30]: line: 242 movi #32, ebx   : protected asm start
50 [0x32]:           movi #93, ecx   
52 [0x34]:           _putc ebx   
53 [0x35]:           _putc ecx   
54 [0x36]:           ret   : protected asm end


function: std#qaf.vsk[3466] params(1) in file: qlt:250:10: note:  
		local def print_numbers(str: _int16[]) {
		         ^

0 [0x0]: line: 251 pushl 0   : protected asm start
1 [0x1]:           call @3465 // <std#qaf.vsj>   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vsl[3467] params(1) in file: qlt:257:10: note:  
		local def print_numbers(str: _int32[]) {
		         ^

0 [0x0]: line: 258 pushl 0   : protected asm start
1 [0x1]:           call @3465 // <std#qaf.vsj>   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vsm[3468] params(1) in file: qlt:264:10: note:  
		local def print_numbers(str: _int64[]) {
		         ^

0 [0x0]: line: 265 pushl 0   : protected asm start
1 [0x1]:           call @3465 // <std#qaf.vsj>   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vsn[3469] params(1) in file: qlt:271:10: note:  
		local def print_numbers(str: _uint8[]) {
		         ^

0 [0x0]: line: 272 pushl 0   : protected asm start
1 [0x1]:           call @3465 // <std#qaf.vsj>   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vso[3470] params(1) in file: qlt:278:10: note:  
		local def print_numbers(str: _uint16[]) {
		         ^

0 [0x0]: line: 279 pushl 0   : protected asm start
1 [0x1]:           call @3465 // <std#qaf.vsj>   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vsp[3471] params(1) in file: qlt:285:10: note:  
		local def print_numbers(str: _uint32[]) {
		         ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           call @3465 // <std#qaf.vsj>   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vsq[3472] params(1) in file: qlt:292:10: note:  
		local def print_numbers(str: _uint64[]) {
		         ^

0 [0x0]: line: 293 pushl 0   : protected asm start
1 [0x1]:           call @3465 // <std#qaf.vsj>   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vsr[3473] params(1) in file: qlt:299:10: note:  
		local def print_chars(str: _int16[]) {
		         ^

0 [0x0]: line: 300 pushl 0   : protected asm start
1 [0x1]:           call @3462 // <std#qaf.vsg>   
2 [0x2]:           ret   : protected asm end


function: std#qaf.vss[3474] params(1) in file: qlt:306:10: note:  
		local def read_ch(hide: var) : var {
		         ^

0 [0x0]: line: 307 loadl cmt, fp+0   : protected asm start
1 [0x1]:           get ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 313 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


constructor: std#string.string[3475] params(1) in file: qlv:10:11: note:  
		    string(str : _int8[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 11 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 10   
6 [0x6]: line: 12 pushl 0   
7 [0x7]:          pushl 1   
8 [0x8]:          call @3485 // <std#string.append>   
9 [0x9]:          pop   
10 [0xa]:          nop   
11 [0xb]:          ret   


constructor: std#string.string[3476] params(1) in file: qlv:16:11: note:  
		    string(ch: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 17 pushl 0   
2 [0x2]:          ipushl #1   
3 [0x3]:          call @3482 // <std#string.append>   
4 [0x4]:          pop   
5 [0x5]:          ret   


constructor: std#string.string[3477] params(1) in file: qlv:20:11: note:  
		    string(str : char[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 21 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 46   
6 [0x6]: line: 22 movl 1   
7 [0x7]:          sizeof ebx   
8 [0x8]:          newarry ebx: 8   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]: line: 23 istorel 0, fp+2   
15 [0xf]: line: 24 istorel -1, fp+4   
17 [0x11]:          pushl 1   
18 [0x12]:          popl 5   
19 [0x13]:          iaddl 1, fp@4   
21 [0x15]:          movl 5   
22 [0x16]:          sizeof ecx   
23 [0x17]:          loadl ebx, fp+4   
24 [0x18]:          lt ebx, ecx   
25 [0x19]:          jne 46   
26 [0x1a]:          movnd ebx   
27 [0x1b]:          pushobj   
28 [0x1c]:          popl 3   
29 [0x1d]: line: 25 pushl 3   
30 [0x1e]:          call @1678 // <std#qaf.qar.taj>   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          movr egx, ebx   
37 [0x25]:          inc ebx   
38 [0x26]:          smovr_2 ebx, fp+2   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]:          jmp @19   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


constructor: std#string.string[3478] params(1) in file: qlv:30:11: note:  
		    string(str: string) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 31 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 13   
6 [0x6]: line: 32 pushl 0   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3485 // <std#string.append>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]:          ret   


constructor: std#string.string[3479] params(2) in file: qlv:36:11: note:  
		    string(str : _int8[], offset: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 37 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 16   
6 [0x6]: line: 38 pushl 1   
7 [0x7]:          ipushl #2   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3288 // <std.io#qbq.vkt>   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]:          nop   
17 [0x11]:          ret   


constructor: std#string.string[3480] params(3) in file: qlv:42:11: note:  
		    string(str : _int8[], start: var, end: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 43 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          skne ebx // pc = 15   
5 [0x5]:          ipushl #3   
6 [0x6]:          loadl ebx, fp+2   
7 [0x7]:          loadval ecx   
8 [0x8]:          sub ecx, ebx -> ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #0, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          gt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 36   
17 [0x11]: line: 44 ipushl #3   
18 [0x12]:          loadl ebx, fp+2   
19 [0x13]:          loadval ecx   
20 [0x14]:          sub ecx, ebx -> ebx   
21 [0x15]:          newarry ebx: 0   
22 [0x16]:          movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          popobj   
26 [0x1a]: line: 45 pushl 1   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          pushobj   
31 [0x1f]:          istore 0   
33 [0x21]:          ipushl #2   
34 [0x22]:          ipushl #3   
35 [0x23]:          call @3278 // <std.io#qbq.vkj>   
36 [0x24]:          nop   
37 [0x25]:          ret   


function: std#string.replace[3481] params(2) in file: qlv:49:8: note:  
		    def replace(pos : var, ch: _int8) : string {
		       ^

0 [0x0]: line: 50 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          movr ebx, cmt   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 14   
10 [0xa]: line: 51 pushl 0   
11 [0xb]:          ipushl #1   
12 [0xc]:          call @3531 // <std#string.bounds_error>   
13 [0xd]:          throw    
14 [0xe]:          nop   
15 [0xf]: line: 54 ipushl #2   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+1   
21 [0x15]:          popobj2    
22 [0x16]:          movr adx, ebx   
23 [0x17]:          chklen adx   
24 [0x18]:          loadval ebx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 55 movl 0   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   


function: std#string.append[3482] params(1) in file: qlv:58:8: note:  
		    def append(ch: var) : string
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 61 movi #1, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @31   
16 [0x10]: line: 63 movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          add ecx, ebx -> ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3268 // <std.io#qbq.vkz>   
31 [0x1f]:          nop   
32 [0x20]: line: 65 ipushl #1   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          movl 0   
38 [0x26]:          movn #0   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          sub ecx, ebx -> ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          loadval ebx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 66 movl 0   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: std#string.empty[3483] params(0) in file: qlv:69:8: note:  
		    def empty() := sizeof(data)==0;
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          sizeof ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          movi #0, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          return_val cmt   
10 [0xa]:          ret   


function: std#string.append[3484] params(1) in file: qlv:71:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 71 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @1678 // <std#qaf.qar.taj>   
3 [0x3]:          call @3482 // <std#string.append>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#string.append[3485] params(1) in file: qlv:73:8: note:  
		    def append(immstr: _int8[]) : string
		       ^

0 [0x0]: line: 75 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 77 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          sizeof ebx   
12 [0xc]:          smovr_2 ebx, fp+2   
13 [0xd]: line: 79 movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          pushnull    
18 [0x12]:          itest ebx   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 29   
21 [0x15]: line: 80 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          newarry ebx: 0   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          popobj   
28 [0x1c]:          jmp @44   
29 [0x1d]: line: 82 movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          pushobj   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movl 1   
39 [0x27]:          sizeof ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          call @3268 // <std.io#qbq.vkz>   
44 [0x2c]:          nop   
45 [0x2d]: line: 84 pushl 1   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #0   
49 [0x31]:          pushobj   
50 [0x32]:          ipushl #2   
51 [0x33]:          istore 0   
53 [0x35]:          movl 1   
54 [0x36]:          sizeof ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          call @3278 // <std.io#qbq.vkj>   
57 [0x39]: line: 85 movl 0   
58 [0x3a]:          returnobj   
59 [0x3b]:          ret   


function: std#string.append[3486] params(2) in file: qlv:88:8: note:  
		    def append(immstr: _int8[], len: var) : string
		       ^

0 [0x0]: line: 90 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 91 loadl ecx, fp+2   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          lt ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 21   
15 [0xf]: line: 92 new_class @0 // pxo#pxp   
16 [0x10]:          newstr @0 // nil   
17 [0x11]:          dup    
18 [0x12]:          newstr @16 // length cannot be less than zero   
19 [0x13]:          call @3584 // <std#error.error>   
20 [0x14]:          throw    
21 [0x15]:          nop   
22 [0x16]: line: 94 ipushl #2   
23 [0x17]:          movl 1   
24 [0x18]:          sizeof ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          gt ecx, ebx   
27 [0x1b]:          movr ebx, cmt   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 48   
30 [0x1e]: line: 95 new_class @0 // pxo#pxp   
31 [0x1f]:          newstr @0 // nil   
32 [0x20]:          dup    
33 [0x21]:          new_class @0 // pxo#pxp   
34 [0x22]:          movnd adx   
35 [0x23]:          dup    
36 [0x24]:          newstr @17 // length of:    
37 [0x25]:          call @3475 // <std#string.string>   
38 [0x26]:          ipushl #2   
39 [0x27]:          call @3507 // <std#string.operator+>   
40 [0x28]:          newstr @18 //  is greater than the string:    
41 [0x29]:          call @3487 // <std#string.operator+>   
42 [0x2a]:          movl 1   
43 [0x2b]:          sizeof ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          call @3507 // <std#string.operator+>   
46 [0x2e]:          call @3585 // <std#error.error>   
47 [0x2f]:          throw    
48 [0x30]:          nop   
49 [0x31]: line: 97 movl 0   
50 [0x32]:          movn #0   
52 [0x34]:          sizeof ebx   
53 [0x35]:          smovr_2 ebx, fp+3   
54 [0x36]: line: 99 movl 0   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          pushnull    
59 [0x3b]:          itest ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 69   
62 [0x3e]: line: 100 loadl ebx, fp+2   
63 [0x3f]:           newarry ebx: 8   
64 [0x40]:           movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           popobj   
68 [0x44]:           jmp @83   
69 [0x45]: line: 102 movl 0   
70 [0x46]:           movn #0   
72 [0x48]:           pushobj   
73 [0x49]:           movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           sizeof ebx   
77 [0x4d]:           rstore ebx   
78 [0x4e]:           loadl ebx, fp+2   
79 [0x4f]:           loadval ecx   
80 [0x50]:           add ecx, ebx -> ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           call @3268 // <std.io#qbq.vkz>   
83 [0x53]:           nop   
84 [0x54]: line: 104 pushl 1   
85 [0x55]:           movl 0   
86 [0x56]:           movn #0   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           istore 0   
92 [0x5c]:           ipushl #2   
93 [0x5d]:           call @3278 // <std.io#qbq.vkj>   
94 [0x5e]: line: 105 movl 0   
95 [0x5f]:           returnobj   
96 [0x60]:           ret   


overload function: std#string.operator+[3487] params(1) in file: qlv:108:8: note:  
		    def operator+(immstr : _int8[]) : string {
		       ^

0 [0x0]: line: 109 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 110 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 22   
15 [0xf]: line: 111 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           call @3485 // <std#string.append>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   
21 [0x15]:           jmp @25   
22 [0x16]: line: 113 movl 2   
23 [0x17]:           returnobj   
24 [0x18]:           ret   
25 [0x19]:           nop   


function: std#string.to_lower[3488] params(0) in file: qlv:116:8: note:  
		    def to_lower() : string {
		       ^

0 [0x0]: line: 117 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           call @3533 // <std#string.string>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 118 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           pushnull    
11 [0xb]:           itest ebx   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 88   
15 [0xf]: line: 119 movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           istore 0   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           sizeof ebx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           call @3288 // <std.io#qbq.vkt>   
27 [0x1b]:           movl 1   
28 [0x1c]:           movn #0   
30 [0x1e]:           popobj   
31 [0x1f]: line: 121 istorel 0, fp+2   
33 [0x21]: line: 122 istorel -1, fp+4   
35 [0x23]:           movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           pushobj   
39 [0x27]:           popl 5   
40 [0x28]:           iaddl 1, fp@4   
42 [0x2a]:           movl 5   
43 [0x2b]:           sizeof ecx   
44 [0x2c]:           loadl ebx, fp+4   
45 [0x2d]:           lt ebx, ecx   
46 [0x2e]:           jne 88   
47 [0x2f]:           iaload ecx, ebx   
48 [0x30]:           smovr_2 ecx, fp+3   
49 [0x31]: line: 123 istore 65   
51 [0x33]:           loadl ebx, fp+3   
52 [0x34]:           loadval ecx   
53 [0x35]:           lte ecx, ebx   
54 [0x36]:           movr ebx, cmt   
55 [0x37]:           skne ebx // pc = 62   
56 [0x38]:           ipushl #3   
57 [0x39]:           movi #90, ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           lte ecx, ebx   
61 [0x3d]:           movr ebx, cmt   
62 [0x3e]:           movr cmt, ebx   
63 [0x3f]:           jne 84   
64 [0x40]: line: 124 istore 97   
66 [0x42]:           ipushl #3   
67 [0x43]:           movi #65, ebx   
69 [0x45]:           loadval ecx   
70 [0x46]:           sub ecx, ebx -> ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           add ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 1   
75 [0x4b]:           movn #0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+2   
79 [0x4f]:           popobj2    
80 [0x50]:           movr adx, ebx   
81 [0x51]:           chklen adx   
82 [0x52]:           loadval ebx   
83 [0x53]:           rmov adx, ebx   
84 [0x54]:           nop   
85 [0x55]: line: 125 iaddl 1, fp@2   
87 [0x57]:           jmp @40   
88 [0x58]:           nop   
89 [0x59]: line: 129 movl 1   
90 [0x5a]:           returnobj   
91 [0x5b]:           ret   


overload function: std#string.operator+[3489] params(1) in file: qlv:132:8: note:  
		    def operator+(obj : printable) : string {
		       ^

0 [0x0]: line: 133 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 134 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 43   
15 [0xf]: line: 135 pushl 1   
16 [0x10]:           invoke_delegate 3592 { static=0, args=0 }   
18 [0x12]:           popobj2    
19 [0x13]:           smovr_3 fp+3   
20 [0x14]: line: 136 movl 3   
21 [0x15]:           checknull   
22 [0x16]:           not ebx, ebx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 35   
25 [0x19]: line: 137 pushl 2   
26 [0x1a]:           movl 3   
27 [0x1b]:           movn #0   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @3485 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           jmp @41   
35 [0x23]: line: 139 pushl 2   
36 [0x24]:           newstr @19 // null   
37 [0x25]:           call @3485 // <std#string.append>   
38 [0x26]:           popobj2    
39 [0x27]:           returnobj   
40 [0x28]:           ret   
41 [0x29]:           nop   
42 [0x2a]:           jmp @49   
43 [0x2b]: line: 142 pushl 2   
44 [0x2c]:           newstr @19 // null   
45 [0x2d]:           call @3485 // <std#string.append>   
46 [0x2e]:           popobj2    
47 [0x2f]:           returnobj   
48 [0x30]:           ret   
49 [0x31]:           nop   


overload function: std#string.operator+[3490] params(1) in file: qlv:145:7: note:  
		   def operator+(str : string) : string {
		      ^

0 [0x0]: line: 146 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 147 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 25   
15 [0xf]: line: 148 pushl 2   
16 [0x10]:           movl 1   
17 [0x11]:           movn #0   
19 [0x13]:           pushobj   
20 [0x14]:           call @3485 // <std#string.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 150 pushl 2   
26 [0x1a]:           newstr @19 // null   
27 [0x1b]:           call @3485 // <std#string.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


function: std#string.to_string[3491] params(0) in file: qlv:153:8: note:  
		    def to_string() := new string(data);
		       ^

0 [0x0]: line: 153 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator==[3492] params(1) in file: qlv:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           sizeof ebx   
7 [0x7]:           loadval ecx   
8 [0x8]:           tne ecx, ebx   
9 [0x9]:           jne 13   
10 [0xa]: line: 157 istorel 0, fp+0   
12 [0xc]:           ret   
13 [0xd]:           nop   
14 [0xe]: line: 159 istorel 0, fp+2   
16 [0x10]: line: 160 istorel -1, fp+4   
18 [0x12]:           pushl 1   
19 [0x13]:           popl 5   
20 [0x14]:           iaddl 1, fp@4   
22 [0x16]:           movl 5   
23 [0x17]:           sizeof ecx   
24 [0x18]:           loadl ebx, fp+4   
25 [0x19]:           lt ebx, ecx   
26 [0x1a]:           jne 51   
27 [0x1b]:           iaload ecx, ebx   
28 [0x1c]:           smovr_2 ecx, fp+3   
29 [0x1d]: line: 161 ipushl #3   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           pushobj   
34 [0x22]:           loadl ebx, fp+2   
35 [0x23]:           movr egx, ebx   
36 [0x24]:           inc ebx   
37 [0x25]:           smovr_2 ebx, fp+2   
38 [0x26]:           movr ebx, egx   
39 [0x27]:           popobj2    
40 [0x28]:           movr adx, ebx   
41 [0x29]:           chklen adx   
42 [0x2a]:           iaload ebx, adx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           tne ecx, ebx   
45 [0x2d]:           jne 49   
46 [0x2e]: line: 162 istorel 0, fp+0   
48 [0x30]:           ret   
49 [0x31]:           nop   
50 [0x32]:           jmp @20   
51 [0x33]: line: 165 istorel 1, fp+0   
53 [0x35]:           ret   


overload function: std#string.operator==[3493] params(1) in file: qlv:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 15   
12 [0xc]: line: 170 istorel 0, fp+0   
14 [0xe]:           ret   
15 [0xf]:           nop   
16 [0x10]: line: 172 istorel 0, fp+2   
18 [0x12]: line: 173 istorel -1, fp+4   
20 [0x14]:           movl 1   
21 [0x15]:           movn #0   
23 [0x17]:           pushobj   
24 [0x18]:           popl 5   
25 [0x19]:           iaddl 1, fp@4   
27 [0x1b]:           movl 5   
28 [0x1c]:           sizeof ecx   
29 [0x1d]:           loadl ebx, fp+4   
30 [0x1e]:           lt ebx, ecx   
31 [0x1f]:           jne 56   
32 [0x20]:           iaload ecx, ebx   
33 [0x21]:           smovr_2 ecx, fp+3   
34 [0x22]: line: 174 ipushl #3   
35 [0x23]:           movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           pushobj   
39 [0x27]:           loadl ebx, fp+2   
40 [0x28]:           movr egx, ebx   
41 [0x29]:           inc ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]:           movr ebx, egx   
44 [0x2c]:           popobj2    
45 [0x2d]:           movr adx, ebx   
46 [0x2e]:           chklen adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           loadval ecx   
49 [0x31]:           tne ecx, ebx   
50 [0x32]:           jne 54   
51 [0x33]: line: 175 istorel 0, fp+0   
53 [0x35]:           ret   
54 [0x36]:           nop   
55 [0x37]:           jmp @25   
56 [0x38]: line: 178 istorel 1, fp+0   
58 [0x3a]:           ret   


overload function: std#string.operator!=[3494] params(1) in file: qlv:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3492 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator!=[3495] params(1) in file: qlv:183:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 183 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3493 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator=[3496] params(1) in file: qlv:185:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 187 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           del   
8 [0x8]:           jmp @20   
9 [0x9]: line: 189 pushl 1   
10 [0xa]:           istore 0   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @3288 // <std.io#qbq.vkt>   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           popobj   
20 [0x14]:           nop   
21 [0x15]:           ret   


function: std#string.at[3497] params(1) in file: qlv:192:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 193 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 14   
10 [0xa]: line: 194 pushl 0   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3531 // <std#string.bounds_error>   
13 [0xd]:           throw    
14 [0xe]:           nop   
15 [0xf]: line: 195 movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+1   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           return_val ebx   
25 [0x19]:           ret   


overload function: std#string.operator[[3498] params(1) in file: qlv:198:8: note:  
		    def operator[](pos: var) := at(pos);
		       ^

0 [0x0]: line: 198 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3497 // <std#string.at>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.fmt[3499] params(1) in file: qlv:200:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 201 ipushl #0   
1 [0x1]:           movg @56 // @std#string   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           ret   


function: std#string.set_precision[3500] params(1) in file: qlv:204:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 205 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 26   
14 [0xe]: line: 206 new_class @0 // pxo#pxp   
15 [0xf]:           skip @0 // pc = 15   
16 [0x10]:           dup    
17 [0x11]:           new_class @0 // pxo#pxp   
18 [0x12]:           movnd adx   
19 [0x13]:           dup    
20 [0x14]:           newstr @20 // invalid precision:    
21 [0x15]:           call @3475 // <std#string.string>   
22 [0x16]:           ipushl #0   
23 [0x17]:           call @3507 // <std#string.operator+>   
24 [0x18]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 207 ipushl #0   
28 [0x1c]:           movg @56 // @std#string   
29 [0x1d]:           movn #1   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           ret   


function: std#string.get_data[3501] params(0) in file: qlv:210:8: note:  
		    def get_data() := data;
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.get_elements[3502] params(0) in file: qlv:212:8: note:  
		    def get_elements() := data;
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.to_array[3503] params(0) in file: qlv:214:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 12   
8 [0x8]:           pushnull    
9 [0x9]:           popobj2    
10 [0xa]:           returnobj   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 217 movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           istore 0   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           sizeof ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @3288 // <std.io#qbq.vkt>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   


function: std#string.starts_with[3504] params(1) in file: qlv:221:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 222 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 15   
3 [0x3]:           movl 1   
4 [0x4]:           movn #0   
6 [0x6]:           sizeof ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           sizeof ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 20   
17 [0x11]: line: 223 istorel 0, fp+0   
19 [0x13]:           ret   
20 [0x14]:           nop   
21 [0x15]: line: 226 istorel 0, fp+2   
23 [0x17]:           ipushl #2   
24 [0x18]:           movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           sizeof ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           lt ecx, ebx   
30 [0x1e]:           movr ebx, cmt   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 62   
33 [0x21]: line: 228 movl 0   
34 [0x22]:           movn #0   
36 [0x24]:           pushobj   
37 [0x25]:           loadl ebx, fp+2   
38 [0x26]:           popobj2    
39 [0x27]:           movr adx, ebx   
40 [0x28]:           chklen adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 1   
44 [0x2c]:           movn #0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+2   
48 [0x30]:           popobj2    
49 [0x31]:           movr adx, ebx   
50 [0x32]:           chklen adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           tne ecx, ebx   
54 [0x36]:           jne 58   
55 [0x37]: line: 229 istorel 0, fp+0   
57 [0x39]:           ret   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @23   
62 [0x3e]: line: 231 istorel 1, fp+0   
64 [0x40]:           ret   


function: std#string.find[3505] params(1) in file: qlv:235:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 236 pushl 1   
1 [0x1]:           call @3516 // <std#string.size>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 237 movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           sizeof ebx   
7 [0x7]:           smovr_2 ebx, fp+3   
8 [0x8]: line: 240 istorel 0, fp+4   
10 [0xa]:           ipushl #4   
11 [0xb]:           ipushl #3   
12 [0xc]:           loadl ebx, fp+2   
13 [0xd]:           loadval ecx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 71   
20 [0x14]: line: 241 istorel 0, fp+5   
22 [0x16]: line: 245 ipushl #5   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           loadval ecx   
25 [0x19]:           lt ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 59   
29 [0x1d]: line: 246 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           pushobj   
33 [0x21]:           ipushl #4   
34 [0x22]:           loadl ebx, fp+5   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           movl 1   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           loadl ebx, fp+5   
47 [0x2f]:           popobj2    
48 [0x30]:           movr adx, ebx   
49 [0x31]:           chklen adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           loadval ecx   
52 [0x34]:           tne ecx, ebx   
53 [0x35]:           jne 55   
54 [0x36]: line: 248 jmp @59   
55 [0x37]:           nop   
56 [0x38]:           iaddl 1, fp@5   
58 [0x3a]:           jmp @22   
59 [0x3b]: line: 250 ipushl #5   
60 [0x3c]:           loadl ebx, fp+2   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           test ecx, ebx   
63 [0x3f]:           jne 67   
64 [0x40]: line: 251 istorel 1, fp+0   
66 [0x42]:           ret   
67 [0x43]:           nop   
68 [0x44]:           iaddl 1, fp@4   
70 [0x46]:           jmp @10   
71 [0x47]: line: 254 istorel 0, fp+0   
73 [0x49]:           ret   


function: std#string.ends_with[3506] params(1) in file: qlv:257:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 258 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 17   
14 [0xe]: line: 259 istorel 0, fp+0   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 261 istorel 0, fp+2   
20 [0x14]: line: 262 movl 0   
21 [0x15]:           movn #0   
23 [0x17]:           sizeof ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           movl 1   
26 [0x1a]:           movn #0   
28 [0x1c]:           sizeof ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           sub ecx, ebx -> ebx   
31 [0x1f]:           smovr_2 ebx, fp+3   
32 [0x20]:           ipushl #3   
33 [0x21]:           movl 0   
34 [0x22]:           movn #0   
36 [0x24]:           sizeof ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 75   
42 [0x2a]: line: 263 movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           loadl ebx, fp+3   
47 [0x2f]:           popobj2    
48 [0x30]:           movr adx, ebx   
49 [0x31]:           chklen adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           loadl ebx, fp+2   
57 [0x39]:           movr egx, ebx   
58 [0x3a]:           inc ebx   
59 [0x3b]:           smovr_2 ebx, fp+2   
60 [0x3c]:           movr ebx, egx   
61 [0x3d]:           popobj2    
62 [0x3e]:           movr adx, ebx   
63 [0x3f]:           chklen adx   
64 [0x40]:           iaload ebx, adx   
65 [0x41]:           loadval ecx   
66 [0x42]:           tne ecx, ebx   
67 [0x43]:           jne 71   
68 [0x44]: line: 264 istorel 0, fp+0   
70 [0x46]:           ret   
71 [0x47]:           nop   
72 [0x48]:           iaddl 1, fp@3   
74 [0x4a]:           jmp @32   
75 [0x4b]: line: 267 istorel 1, fp+0   
77 [0x4d]:           ret   


overload function: std#string.operator+[3507] params(1) in file: qlv:270:8: note:  
		    def operator+(num : var) : string {
		       ^

0 [0x0]: line: 271 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 272 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3517 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3485 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 273 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3508] params(1) in file: qlv:276:8: note:  
		    def operator+(num : _int8) : string {
		       ^

0 [0x0]: line: 277 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 278 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3482 // <std#string.append>   
13 [0xd]:           pop   
14 [0xe]: line: 279 movl 2   
15 [0xf]:           returnobj   
16 [0x10]:           ret   


overload function: std#string.operator+[3509] params(1) in file: qlv:282:8: note:  
		    def operator+(num : _int16) : string {
		       ^

0 [0x0]: line: 283 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 284 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3517 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3485 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 285 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3510] params(1) in file: qlv:288:8: note:  
		    def operator+(num : _int32) : string {
		       ^

0 [0x0]: line: 289 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 290 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3517 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3485 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 291 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3511] params(1) in file: qlv:294:8: note:  
		    def operator+(num : _int64) : string {
		       ^

0 [0x0]: line: 295 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 296 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3517 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3485 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 297 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3512] params(1) in file: qlv:300:8: note:  
		    def operator+(num : _uint8) : string {
		       ^

0 [0x0]: line: 301 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 302 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3517 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3485 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 303 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3513] params(1) in file: qlv:306:8: note:  
		    def operator+(num : _uint16) : string {
		       ^

0 [0x0]: line: 307 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 308 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3517 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3485 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 309 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3514] params(1) in file: qlv:312:8: note:  
		    def operator+(num : _uint32) : string {
		       ^

0 [0x0]: line: 313 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 314 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3517 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3485 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 315 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3515] params(1) in file: qlv:318:8: note:  
		    def operator+(num : _uint64) : string {
		       ^

0 [0x0]: line: 319 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 320 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3517 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3485 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 321 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: std#string.size[3516] params(0) in file: qlv:324:8: note:  
		    def size() := sizeof(data);
		       ^

0 [0x0]: line: 324 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.parse[3517] params(1) in file: qlv:326:15: note:  
		    static def parse( number : var ) := new string(snprintf(currentFormat, number, precision));
		              ^

0 [0x0]: line: 326 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           movg @56 // @std#string   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           ipushl #0   
11 [0xb]:           movg @56 // @std#string   
12 [0xc]:           movn #1   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @3432 // <std#qaf.vrc>   
19 [0x13]:           call @3475 // <std#string.string>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+=[3518] params(1) in file: qlv:328:8: note:  
		    def operator+=( num: var ) := append(parse(num).data);
		       ^

0 [0x0]: line: 328 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3517 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3485 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3519] params(1) in file: qlv:329:8: note:  
		    def operator+=( num: _int8 ) := append(num);
		       ^

0 [0x0]: line: 329 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3482 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[3520] params(1) in file: qlv:330:8: note:  
		    def operator+=( num: _uint8 ) := append(num);
		       ^

0 [0x0]: line: 330 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3482 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[3521] params(1) in file: qlv:331:8: note:  
		    def operator+=( num: _int16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 331 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3517 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3485 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3522] params(1) in file: qlv:332:8: note:  
		    def operator+=( num: _uint16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 332 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3517 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3485 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3523] params(1) in file: qlv:333:8: note:  
		    def operator+=( num: _int32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 333 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3517 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3485 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3524] params(1) in file: qlv:334:8: note:  
		    def operator+=( num: _uint32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 334 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3517 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3485 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3525] params(1) in file: qlv:335:8: note:  
		    def operator+=( num: _int64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 335 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3517 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3485 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3526] params(1) in file: qlv:336:8: note:  
		    def operator+=( num: _uint64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 336 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3517 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3485 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3527] params(1) in file: qlv:338:8: note:  
		    def operator+=( obj: printable ) : string
		       ^

0 [0x0]: line: 340 pushl 1   
1 [0x1]:           invoke_delegate 3592 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 341 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 16   
9 [0x9]:           movl 2   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           pushnull    
14 [0xe]:           itest ebx   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 28   
18 [0x12]: line: 342 pushl 0   
19 [0x13]:           movl 2   
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           call @3485 // <std#string.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           jmp @34   
28 [0x1c]: line: 344 pushl 0   
29 [0x1d]:           newstr @19 // null   
30 [0x1e]:           call @3485 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           nop   


overload function: std#string.operator+=[3528] params(1) in file: qlv:347:8: note:  
		    def operator+=( str: string ) := append(str.data);
		       ^

0 [0x0]: line: 347 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @3485 // <std#string.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string.operator+=[3529] params(1) in file: qlv:349:8: note:  
		    def operator+=( str: _int8[] ) := append(str);
		       ^

0 [0x0]: line: 349 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3485 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#string.substring[3530] params(2) in file: qlv:351:8: note:  
		    def substring(start_pos: var, end_pos: var) : string {
		       ^

0 [0x0]: line: 352 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           skpe ebx // pc = 14   
9 [0x9]:           loadl ecx, fp+1   
10 [0xa]:           movi #0, ebx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 20   
16 [0x10]: line: 353 pushl 0   
17 [0x11]:           ipushl #1   
18 [0x12]:           call @3531 // <std#string.bounds_error>   
19 [0x13]:           throw    
20 [0x14]:           nop   
21 [0x15]: line: 354 ipushl #2   
22 [0x16]:           loadl ebx, fp+1   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 44   
28 [0x1c]: line: 355 new_class @0 // pxo#pxp   
29 [0x1d]:           skip @0 // pc = 29   
30 [0x1e]:           dup    
31 [0x1f]:           new_class @0 // pxo#pxp   
32 [0x20]:           movnd adx   
33 [0x21]:           dup    
34 [0x22]:           newstr @50 // end_pos:    
35 [0x23]:           call @3475 // <std#string.string>   
36 [0x24]:           ipushl #2   
37 [0x25]:           call @3507 // <std#string.operator+>   
38 [0x26]:           newstr @51 //  cannot be less than the start_pos:    
39 [0x27]:           call @3487 // <std#string.operator+>   
40 [0x28]:           ipushl #1   
41 [0x29]:           call @3507 // <std#string.operator+>   
42 [0x2a]:           call @3543 // <std#illegal_argument_exception.illegal_argument_exception>   
43 [0x2b]:           throw    
44 [0x2c]:           nop   
45 [0x2d]: line: 359 new_class @0 // pxo#pxp   
46 [0x2e]:           movnd adx   
47 [0x2f]:           dup    
48 [0x30]:           call @3533 // <std#string.string>   
49 [0x31]:           popobj2    
50 [0x32]:           smovr_3 fp+3   
51 [0x33]: line: 360 movl 0   
52 [0x34]:           movn #0   
54 [0x36]:           pushobj   
55 [0x37]:           ipushl #1   
56 [0x38]:           ipushl #2   
57 [0x39]:           call @3288 // <std.io#qbq.vkt>   
58 [0x3a]:           movl 3   
59 [0x3b]:           movn #0   
61 [0x3d]:           popobj   
62 [0x3e]: line: 361 movl 3   
63 [0x3f]:           returnobj   
64 [0x40]:           ret   


function: std#string.bounds_error[3531] params(1) in file: qlv:364:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 365 new_class @0 // pxo#pxp   
1 [0x1]:           shl adx, adx -> adx   
2 [0x2]:           dup    
3 [0x3]:           new_class @0 // pxo#pxp   
4 [0x4]:           movnd adx   
5 [0x5]:           dup    
6 [0x6]:           newstr @23 // Index out of bounds exception at:    
7 [0x7]:           call @3475 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @3507 // <std#string.operator+>   
10 [0xa]:           newstr @24 //  with size of:    
11 [0xb]:           call @3487 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           sizeof ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @3507 // <std#string.operator+>   
18 [0x12]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
19 [0x13]:           popobj2    
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: std#string.hash[3532] params(0) in file: qlv:368:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 369 istorel 0, fp+1   
2 [0x2]: line: 370 istorel 1, fp+2   
4 [0x4]: line: 371 istorel -1, fp+4   
6 [0x6]: line: 372 movl 0   
7 [0x7]: line: 373 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 374 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 375 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 377 new_class @0 // pxo#pxp   
56 [0x38]:           movu64 adx, adx   
57 [0x39]:           dup    
58 [0x3a]:           ipushl #1   
59 [0x3b]:           call @2051 // <std#qaf.qat.tot>   
60 [0x3c]:           popobj2    
61 [0x3d]:           returnobj   
62 [0x3e]:           ret   


constructor: std#string.string[3533] params(0) in file: qlv:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#throwable.throwable[3534] params(1) in file: qmb:30:21: note:  
		    public throwable(message : _int8[]) {
		                    ^

0 [0x0]: line: 26 call @3400 // <platform.kernel#qlb.qli.vpw>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]: line: 31 pushl 1   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: std#throwable.throwable[3535] params(1) in file: qmb:34:21: note:  
		    public throwable(message : string) {
		                    ^

0 [0x0]: line: 26 call @3400 // <platform.kernel#qlb.qli.vpw>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]: line: 35 pushl 1   
7 [0x7]:          call @3501 // <std#string.get_data>   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          popobj   
12 [0xc]:          ret   


function: std#throwable.get_message[3536] params(0) in file: qmb:38:8: note:  
		    def get_message() : string {
		       ^

0 [0x0]: line: 39 new_class @0 // pxo#pxp   
1 [0x1]:          movnd adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3475 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#throwable.to_string[3537] params(0) in file: qmb:42:8: note:  
		    def to_string() : string
		       ^

0 [0x0]: line: 43 new_class @0 // pxo#pxp   
1 [0x1]:          movnd adx   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3475 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


constructor: std#throwable.throwable[3538] params(0) in file: qmb:10:6: note:  
		class throwable {
		     ^

0 [0x0]: line: 26 call @3400 // <platform.kernel#qlb.qli.vpw>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          ret   


constructor: std#exception.exception[3539] params(1) in file: qmb:50:21: note:  
		    public exception(message : _int8[]) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3534 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[3540] params(1) in file: qmb:51:21: note:  
		    public exception(message : string) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3535 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[3541] params(0) in file: qmb:49:6: note:  
		class exception base throwable {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3538 // <std#throwable.throwable>   
2 [0x2]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[3542] params(1) in file: qmb:55:38: note:  
		    public illegal_argument_exception(message : _int8[]) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[3543] params(1) in file: qmb:56:38: note:  
		    public illegal_argument_exception(message : string) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[3544] params(0) in file: qmb:54:6: note:  
		class illegal_argument_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[3545] params(1) in file: qmb:59:35: note:  
		    public illegal_state_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[3546] params(1) in file: qmb:60:35: note:  
		    public illegal_state_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[3547] params(0) in file: qmb:58:6: note:  
		class illegal_state_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[3548] params(1) in file: qmb:63:35: note:  
		    public out_of_bounds_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[3549] params(1) in file: qmb:64:35: note:  
		    public out_of_bounds_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[3550] params(0) in file: qmb:62:6: note:  
		class out_of_bounds_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#qaf.qml.vvr[3551] params(1) in file: qmb:67:24: note:  
		    public io_exception(message : _int8[]) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#qaf.qml.vvs[3552] params(1) in file: qmb:68:24: note:  
		    public io_exception(message : string) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#qaf.qml.vvt[3553] params(0) in file: qmb:66:6: note:  
		class io_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[3554] params(1) in file: qmb:71:39: note:  
		    public invalid_operation_exception(message : _int8[]) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[3555] params(1) in file: qmb:72:39: note:  
		    public invalid_operation_exception(message : string) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[3556] params(0) in file: qmb:70:6: note:  
		class invalid_operation_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#nullptr_exception.nullptr_exception[3557] params(1) in file: qmb:75:29: note:  
		    public nullptr_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[3558] params(1) in file: qmb:76:29: note:  
		    public nullptr_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[3559] params(0) in file: qmb:74:6: note:  
		class nullptr_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#runtime_exception.runtime_exception[3560] params(1) in file: qmb:79:29: note:  
		    public runtime_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[3561] params(1) in file: qmb:80:29: note:  
		    public runtime_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[3562] params(0) in file: qmb:78:6: note:  
		class runtime_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[3563] params(1) in file: qmb:83:36: note:  
		    public stack_overflow_exception(message : _int8[]) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[3564] params(1) in file: qmb:84:36: note:  
		    public stack_overflow_exception(message : string) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[3565] params(0) in file: qmb:82:6: note:  
		class stack_overflow_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[3566] params(1) in file: qmb:87:34: note:  
		    public thread_stack_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[3567] params(1) in file: qmb:88:34: note:  
		    public thread_stack_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[3568] params(0) in file: qmb:86:6: note:  
		class thread_stack_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#class_cast_exception.class_cast_exception[3569] params(1) in file: qmb:91:32: note:  
		    public class_cast_exception(message : _int8[]) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[3570] params(1) in file: qmb:92:32: note:  
		    public class_cast_exception(message : string) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[3571] params(0) in file: qmb:90:6: note:  
		class class_cast_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[3572] params(1) in file: qmb:95:35: note:  
		    public out_of_memory_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[3573] params(1) in file: qmb:96:35: note:  
		    public out_of_memory_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[3574] params(0) in file: qmb:94:6: note:  
		class out_of_memory_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#qaf.qmt.vwp[3575] params(1) in file: qmb:99:33: note:  
		    public not_implemented_error(message : _int8[]) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3584 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#qaf.qmt.vwq[3576] params(1) in file: qmb:100:33: note:  
		    public not_implemented_error(message : string) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3585 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#qaf.qmt.vwr[3577] params(0) in file: qmb:98:6: note:  
		class not_implemented_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3586 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[3578] params(1) in file: qmb:103:34: note:  
		    public unsatisfied_link_error(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3584 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[3579] params(1) in file: qmb:104:34: note:  
		    public unsatisfied_link_error(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3585 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[3580] params(0) in file: qmb:102:6: note:  
		class unsatisfied_link_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3586 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#qaf.qmv.vwv[3581] params(1) in file: qmb:107:27: note:  
		    public assertion_error(message : _int8[]) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3584 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#qaf.qmv.vww[3582] params(1) in file: qmb:108:27: note:  
		    public assertion_error(message : string) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3585 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#qaf.qmv.vwx[3583] params(0) in file: qmb:106:6: note:  
		class assertion_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3586 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#error.error[3584] params(1) in file: qmb:112:17: note:  
		    public error(message : _int8[]) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3539 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#error.error[3585] params(1) in file: qmb:113:17: note:  
		    public error(message : string) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#error.error[3586] params(0) in file: qmb:111:6: note:  
		class error base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3541 // <std#exception.exception>   
2 [0x2]:         ret   


function: std#qaf.vxb[3587] params(1) in file: qmb:129:4: note:  
		def runtime_error(message: string) : runtime_except {
		   ^

0 [0x0]: line: 130 new_class @0 // pxo#pxp   
1 [0x1]:           and adx, adx   
2 [0x2]:           dup    
3 [0x3]:           pushl 0   
4 [0x4]:           call @3561 // <std#runtime_exception.runtime_exception>   
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: std#qaf.vxc[3588] params(0) in file: qmb:133:4: note:  
		def runtime_error() : runtime_except {
		   ^

0 [0x0]: line: 134 new_class @0 // pxo#pxp   
1 [0x1]:           and adx, adx   
2 [0x2]:           dup    
3 [0x3]:           call @3562 // <std#runtime_exception.runtime_exception>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#qaf.vxd[3589] params(1) in file: qmb:137:4: note:  
		def todo(message: string) {
		   ^

0 [0x0]: line: 138 new_class @0 // pxo#pxp   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           pushl 0   
4 [0x4]:           call @3576 // <std#qaf.qmt.vwq>   
5 [0x5]:           throw    
6 [0x6]:           ret   


function: std#qaf.vxe[3590] params(1) in file: qmb:141:4: note:  
		def assert(cond : var) {
		   ^

0 [0x0]: line: 142 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 10   
4 [0x4]: line: 143 new_class @0 // pxo#pxp   
5 [0x5]:           new_classarray adx out of bounds: 112   
7 [0x7]:           newstr @52 // assertion failed!   
8 [0x8]:           call @3581 // <std#qaf.qmv.vwv>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]:           ret   


function: std#qaf.vxf[3591] params(2) in file: qmb:147:4: note:  
		def assert(cond : var, message: string) {
		   ^

0 [0x0]: line: 148 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 10   
4 [0x4]: line: 149 new_class @0 // pxo#pxp   
5 [0x5]:           new_classarray adx out of bounds: 112   
7 [0x7]:           pushl 1   
8 [0x8]:           call @3582 // <std#qaf.qmv.vww>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]:           ret   


std#qaf.qni.vxg[3592] params(0) in file: qng:11:8: note:  
		    def to_string() : string;
		       ^



constructor: std#qaf.qni.vxh[3593] params(0) in file: qng:10:10: note:  
		interface printable {
		         ^

0 [0x0]:         ret   


std.io#qbq.qke.vxp[3594] params(0) in file: qkc:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std.io#qbq.qke.vxq[3595] params(0) in file: qkc:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#qbq.qah.vxr[3596] params(0) in file: qad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std#string[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std.io#qbq.qah.vxs[3597] params(1) in file: qad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std#string[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std.io#qbq.qah.vxt[3598] params(1) in file: qad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3609 // <std.io#qbq.qah.vye>   
4 [0x4]:          ret   


function: std.io#qbq.qah.vxu[3599] params(0) in file: qad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std.io#qbq.qah.vxv[3600] params(1) in file: qad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std.io#qbq.qah.vxw[3601] params(0) in file: qad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3286 // <std.io#qbq.vkr>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std.io#qbq.qah.vxx[3602] params(1) in file: qad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3623 // <std.io#qbq.qah.wzh>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std.io#qbq.qah.vxy[3603] params(1) in file: qad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3623 // <std.io#qbq.qah.wzh>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std.io#qbq.qah.vyz[3604] params(0) in file: qad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3603 // <std.io#qbq.qah.vxy>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std.io#qbq.qah.vya[3605] params(2) in file: qad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3623 // <std.io#qbq.qah.wzh>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std.io#qbq.qah.vyb[3606] params(0) in file: qad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3266 // <std.io#qbq.vjx>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3266 // <std.io#qbq.vjx>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std.io#qbq.qah.vyc[3607] params(0) in file: qad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std#string[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std.io#qbq.qah.vyd[3608] params(1) in file: qad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3286 // <std.io#qbq.vkr>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #56, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std.io#qbq.qah.vye[3609] params(1) in file: qad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3286 // <std.io#qbq.vkr>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #56, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std#string[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std.io#qbq.qah.vyf[3610] params(1) in file: qad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3606 // <std.io#qbq.qah.vyb>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std.io#qbq.qah.vyg[3611] params(1) in file: qad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 36   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          call @3493 // <std#string.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 32   
29 [0x1d]: line: 97 loadl ebx, fp+2   
30 [0x1e]:          return_val ebx   
31 [0x1f]:          ret   
32 [0x20]:          nop   
33 [0x21]:          iaddl 1, fp@2   
35 [0x23]:          jmp @2   
36 [0x24]: line: 101 istorel -1, fp+0   
38 [0x26]:           ret   


function: std.io#qbq.qah.vyh[3612] params(0) in file: qad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std.io#qbq.qah.vyi[3613] params(0) in file: qad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#qbq.qah.vyj[3614] params(2) in file: qad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3623 // <std.io#qbq.qah.wzh>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3610 // <std.io#qbq.qah.vyf>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3606 // <std.io#qbq.qah.vyb>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std.io#qbq.qah.vyn[3615] params(2) in file: qad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std.io#qbq.qah.vyo[3616] params(1) in file: qad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 37   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           call @3493 // <std#string.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 143 pushl 0   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @3620 // <std.io#qbq.qah.wzb>   
32 [0x20]: line: 144 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@2   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: std.io#qbq.qah.vys[3617] params(2) in file: qad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3620 // <std.io#qbq.qah.wzb>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std.io#qbq.qah.vyw[3618] params(2) in file: qad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std.io#qbq.qah.wza[3619] params(1) in file: qad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std.io#qbq.qah.wzb[3620] params(1) in file: qad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3623 // <std.io#qbq.qah.wzh>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3276 // <std.io#qbq.vkh>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3612 // <std.io#qbq.qah.vyh>   
77 [0x4d]:           ret   


function: std.io#qbq.qah.wzf[3621] params(2) in file: qad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std.io#qbq.qah.wzg[3622] params(0) in file: qad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // pxo#pxp   
1 [0x1]:           idiv adx, #? (112)   
3 [0x3]:           call @3118 // <std#qaf.qbf.vdu>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @7 // [    
8 [0x8]:           call @3114 // <std#qaf.qbf.vdq>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3111 // <std#qaf.qbf.vdn>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @8 // ,    
56 [0x38]:           call @3114 // <std#qaf.qbf.vdq>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @9 //  ]   
64 [0x40]:           call @3114 // <std#qaf.qbf.vdq>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3091 // <std#qaf.qbf.vct>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std.io#qbq.qah.wzh[3623] params(1) in file: qad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @10 // Index:    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3507 // <std#string.operator+>   
7 [0x7]:           newstr @11 // , size:    
8 [0x8]:           call @3487 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3507 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std.io#qbq.qao.wzq[3624] params(1) in file: qam:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 11 loadl ebx, fp+1   
17 [0x11]:          new_classarray ebx  // std.io#qbq.qao.wzp[]   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          loadval ecx   
35 [0x23]:          mul ecx, ebx -> ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          ret   


constructor: std.io#qbq.qao.wzr[3625] params(0) in file: qam:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 16 movi #128, ebx   
18 [0x12]:          new_classarray ebx  // std.io#qbq.qao.wzp[]   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          popobj   
24 [0x18]:          ret   


function: std.io#qbq.qao.wzs[3626] params(1) in file: qam:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 22 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          loadval ecx   
17 [0x11]:          mul ecx, ebx -> ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          movl 0   
25 [0x19]:          _ulck   
26 [0x1a]:          ret   


function: std.io#qbq.qao.wzt[3627] params(1) in file: qam:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 pushl 1   
1 [0x1]:          call @636 // <std#qaf.qar.rmd>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @299 // <std#qaf.qar.rzc>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std.io#qbq.qao.wzu[3628] params(0) in file: qam:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io#qbq.qao.wzp[]   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          popobj   
22 [0x16]: line: 33 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          sizeof ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #2   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 34 istorel -1, fp+3   
43 [0x2b]:          pushl 1   
44 [0x2c]:          popl 4   
45 [0x2d]:          iaddl 1, fp@3   
47 [0x2f]:          movl 4   
48 [0x30]:          sizeof ecx   
49 [0x31]:          loadl ebx, fp+3   
50 [0x32]:          lt ebx, ecx   
51 [0x33]:          jne 100   
52 [0x34]:          movnd ebx   
53 [0x35]:          pushobj   
54 [0x36]:          popl 2   
55 [0x37]: line: 36 movl 2   
56 [0x38]:          checknull   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 99   
60 [0x3c]: line: 38 movl 2   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 39 pushl 0   
65 [0x41]:          movl 2   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @3627 // <std.io#qbq.qao.wzt>   
70 [0x46]:          ipopl 6   
71 [0x47]: line: 40 movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          loadl ebx, fp+6   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          pushobj   
81 [0x51]:          movl 2   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]: line: 41 pushl 2   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+6   
91 [0x5b]:          popobj2    
92 [0x5c]:          movr adx, ebx   
93 [0x5d]:          chklen adx   
94 [0x5e]:          movnd adx   
95 [0x5f]:          popobj   
96 [0x60]: line: 42 movl 5   
97 [0x61]:          smovr_3 fp+2   
98 [0x62]:          jmp @55   
99 [0x63]:          jmp @45   
100 [0x64]: line: 46 pushnull    
101 [0x65]:          popobj2    
102 [0x66]:          smovr_3 fp+1   
103 [0x67]:          ret   


function: std.io#qbq.qao.wzv[3629] params(1) in file: qam:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3627 // <std.io#qbq.qao.wzt>   
5 [0x5]:          ipopl 2   
6 [0x6]: line: 52 istorel -1, fp+3   
8 [0x8]: line: 53 movl 4   
9 [0x9]:          del   
10 [0xa]: line: 55 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          popobj2    
16 [0x10]:          movr adx, ebx   
17 [0x11]:          chklen adx   
18 [0x12]:          movnd adx   
19 [0x13]:          pushobj   
20 [0x14]:          pushnull    
21 [0x15]:          itest ebx   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 56 pushl 4   
25 [0x19]:          movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]:          popobj2    
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   
30 [0x1e]:          jmp @88   
31 [0x1f]: line: 58 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          smovr_3 fp+5   
41 [0x29]: line: 59 movl 5   
42 [0x2a]:          checknull   
43 [0x2b]:          not ebx, ebx   
44 [0x2c]:          skne ebx // pc = 60   
45 [0x2d]:          movl 5   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          call @643 // <std#qaf.qar.rmk>   
51 [0x33]:          loadval ebx   
52 [0x34]:          skne ebx // pc = 60   
53 [0x35]:          movl 5   
54 [0x36]:          movn #2   
56 [0x38]:          pushobj   
57 [0x39]:          pushnull    
58 [0x3a]:          itest ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 61 movl 5   
63 [0x3f]:          movn #2   
65 [0x41]:          smovr_3 fp+5   
66 [0x42]:          jmp @41   
67 [0x43]: line: 63 movl 5   
68 [0x44]:          checknull   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 78   
71 [0x47]: line: 64 pushl 4   
72 [0x48]:          movl 0   
73 [0x49]:          _ulck   
74 [0x4a]:          popobj2    
75 [0x4b]:          returnobj   
76 [0x4c]:          ret   
77 [0x4d]:          jmp @87   
78 [0x4e]: line: 66 movl 5   
79 [0x4f]:          movn #1   
81 [0x51]:          pushobj   
82 [0x52]:          movl 0   
83 [0x53]:          _ulck   
84 [0x54]:          popobj2    
85 [0x55]:          returnobj   
86 [0x56]:          ret   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   


function: std.io#qbq.qao.wzw[3630] params(2) in file: qam:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3627 // <std.io#qbq.qao.wzt>   
5 [0x5]:          ipopl 3   
6 [0x6]: line: 75 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 76 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+3   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          smovr_3 fp+5   
18 [0x12]: line: 78 movl 5   
19 [0x13]:          checknull   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          skne ebx // pc = 29   
22 [0x16]:          movl 5   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          pushl 1   
27 [0x1b]:          call @643 // <std#qaf.qar.rmk>   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 79 movl 5   
32 [0x20]:          smovr_3 fp+4   
33 [0x21]: line: 80 movl 5   
34 [0x22]:          movn #2   
36 [0x24]:          smovr_3 fp+5   
37 [0x25]:          jmp @18   
38 [0x26]: line: 83 movl 5   
39 [0x27]:          checknull   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 89   
42 [0x2a]: line: 84 movl 0   
43 [0x2b]:          movn #3   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 85 new_class @0 // pxo#pxp   
54 [0x36]:          istorel 112, fp+0   
56 [0x38]:          pushl 1   
57 [0x39]:          pushl 2   
58 [0x3a]:          call @3758 // <std.io#qbq.qao.wzp.wjh>   
59 [0x3b]:          popobj2    
60 [0x3c]:          smovr_3 fp+5   
61 [0x3d]: line: 86 movl 4   
62 [0x3e]:          checknull   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 77   
65 [0x41]: line: 87 pushl 5   
66 [0x42]:          movl 0   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          popobj2    
72 [0x48]:          movr adx, ebx   
73 [0x49]:          chklen adx   
74 [0x4a]:          movnd adx   
75 [0x4b]:          popobj   
76 [0x4c]:          jmp @82   
77 [0x4d]: line: 89 pushl 5   
78 [0x4e]:          movl 4   
79 [0x4f]:          movn #2   
81 [0x51]:          popobj   
82 [0x52]:          nop   
83 [0x53]: line: 92 istorel 1, fp+0   
85 [0x55]:          movl 0   
86 [0x56]:          _ulck   
87 [0x57]:          ret   
88 [0x58]:          jmp @99   
89 [0x59]: line: 94 pushl 2   
90 [0x5a]:          movl 5   
91 [0x5b]:          movn #1   
93 [0x5d]:          popobj   
94 [0x5e]: line: 95 istorel 0, fp+0   
96 [0x60]:          movl 0   
97 [0x61]:          _ulck   
98 [0x62]:          ret   
99 [0x63]:          nop   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   


function: std.io#qbq.qao.wzx[3631] params(1) in file: qam:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 pushl 0   
3 [0x3]:           pushl 1   
4 [0x4]:           call @3627 // <std.io#qbq.qao.wzt>   
5 [0x5]:           ipopl 2   
6 [0x6]: line: 103 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           popobj2    
12 [0xc]:           movr adx, ebx   
13 [0xd]:           chklen adx   
14 [0xe]:           movnd adx   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 100   
20 [0x14]: line: 104 movl 3   
21 [0x15]:           del   
22 [0x16]: line: 105 movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           smovr_3 fp+4   
32 [0x20]: line: 106 movl 4   
33 [0x21]:           checknull   
34 [0x22]:           not ebx, ebx   
35 [0x23]:           skne ebx // pc = 43   
36 [0x24]:           movl 4   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           pushl 1   
41 [0x29]:           call @643 // <std#qaf.qar.rmk>   
42 [0x2a]:           loadval ebx   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 52   
45 [0x2d]: line: 107 movl 4   
46 [0x2e]:           smovr_3 fp+3   
47 [0x2f]: line: 108 movl 4   
48 [0x30]:           movn #2   
50 [0x32]:           smovr_3 fp+4   
51 [0x33]:           jmp @32   
52 [0x34]: line: 111 movl 4   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           pushl 1   
57 [0x39]:           call @644 // <std#qaf.qar.rml>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 99   
61 [0x3d]: line: 112 movl 3   
62 [0x3e]:           checknull   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 81   
65 [0x41]: line: 113 movl 4   
66 [0x42]:           movn #2   
68 [0x44]:           smovr_3 fp+5   
69 [0x45]: line: 114 pushl 5   
70 [0x46]:           movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           pushobj   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           popobj2    
76 [0x4c]:           movr adx, ebx   
77 [0x4d]:           chklen adx   
78 [0x4e]:           movnd adx   
79 [0x4f]:           popobj   
80 [0x50]:           jmp @93   
81 [0x51]: line: 116 movl 4   
82 [0x52]:           movn #2   
84 [0x54]:           smovr_3 fp+6   
85 [0x55]: line: 117 pushl 6   
86 [0x56]:           movl 3   
87 [0x57]:           movn #2   
89 [0x59]:           popobj   
90 [0x5a]: line: 118 pushnull    
91 [0x5b]:           popobj2    
92 [0x5c]:           smovr_3 fp+4   
93 [0x5d]:           nop   
94 [0x5e]: line: 121 istorel 1, fp+0   
96 [0x60]:           movl 0   
97 [0x61]:           _ulck   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           nop   
101 [0x65]: line: 125 istorel 0, fp+0   
103 [0x67]:           movl 0   
104 [0x68]:           _ulck   
105 [0x69]:           ret   
106 [0x6a]:           movl 0   
107 [0x6b]:           _ulck   


constructor: qed#qee.qao.wag[3632] params(1) in file: qam:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 11 loadl ebx, fp+1   
17 [0x11]:          new_classarray ebx  // qed#qee.qao.waf[]   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          loadval ecx   
35 [0x23]:          mul ecx, ebx -> ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          ret   


constructor: qed#qee.qao.wah[3633] params(0) in file: qam:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 16 movi #128, ebx   
18 [0x12]:          new_classarray ebx  // qed#qee.qao.waf[]   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          popobj   
24 [0x18]:          ret   


function: qed#qee.qao.wai[3634] params(1) in file: qam:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 22 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          loadval ecx   
17 [0x11]:          mul ecx, ebx -> ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          movl 0   
25 [0x19]:          _ulck   
26 [0x1a]:          ret   


function: qed#qee.qao.waj[3635] params(1) in file: qam:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 pushl 1   
1 [0x1]:          call @3333 // <std.io#thread.hash>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @299 // <std#qaf.qar.rzc>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: qed#qee.qao.wak[3636] params(0) in file: qam:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // qed#qee.qao.waf[]   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          popobj   
22 [0x16]: line: 33 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          sizeof ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #2   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 34 istorel -1, fp+3   
43 [0x2b]:          pushl 1   
44 [0x2c]:          popl 4   
45 [0x2d]:          iaddl 1, fp@3   
47 [0x2f]:          movl 4   
48 [0x30]:          sizeof ecx   
49 [0x31]:          loadl ebx, fp+3   
50 [0x32]:          lt ebx, ecx   
51 [0x33]:          jne 100   
52 [0x34]:          movnd ebx   
53 [0x35]:          pushobj   
54 [0x36]:          popl 2   
55 [0x37]: line: 36 movl 2   
56 [0x38]:          checknull   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 99   
60 [0x3c]: line: 38 movl 2   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 39 pushl 0   
65 [0x41]:          movl 2   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @3635 // <qed#qee.qao.waj>   
70 [0x46]:          ipopl 6   
71 [0x47]: line: 40 movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          loadl ebx, fp+6   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          pushobj   
81 [0x51]:          movl 2   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]: line: 41 pushl 2   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+6   
91 [0x5b]:          popobj2    
92 [0x5c]:          movr adx, ebx   
93 [0x5d]:          chklen adx   
94 [0x5e]:          movnd adx   
95 [0x5f]:          popobj   
96 [0x60]: line: 42 movl 5   
97 [0x61]:          smovr_3 fp+2   
98 [0x62]:          jmp @55   
99 [0x63]:          jmp @45   
100 [0x64]: line: 46 pushnull    
101 [0x65]:          popobj2    
102 [0x66]:          smovr_3 fp+1   
103 [0x67]:          ret   


function: qed#qee.qao.wal[3637] params(1) in file: qam:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3635 // <qed#qee.qao.waj>   
5 [0x5]:          ipopl 2   
6 [0x6]: line: 52 istorel -1, fp+3   
8 [0x8]: line: 53 movl 4   
9 [0x9]:          del   
10 [0xa]: line: 55 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          popobj2    
16 [0x10]:          movr adx, ebx   
17 [0x11]:          chklen adx   
18 [0x12]:          movnd adx   
19 [0x13]:          pushobj   
20 [0x14]:          pushnull    
21 [0x15]:          itest ebx   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 56 pushl 4   
25 [0x19]:          movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]:          popobj2    
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   
30 [0x1e]:          jmp @88   
31 [0x1f]: line: 58 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          smovr_3 fp+5   
41 [0x29]: line: 59 movl 5   
42 [0x2a]:          checknull   
43 [0x2b]:          not ebx, ebx   
44 [0x2c]:          skne ebx // pc = 60   
45 [0x2d]:          movl 5   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          itest ebx   
51 [0x33]:          not ebx, ebx   
52 [0x34]:          skne ebx // pc = 60   
53 [0x35]:          movl 5   
54 [0x36]:          movn #2   
56 [0x38]:          pushobj   
57 [0x39]:          pushnull    
58 [0x3a]:          itest ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 61 movl 5   
63 [0x3f]:          movn #2   
65 [0x41]:          smovr_3 fp+5   
66 [0x42]:          jmp @41   
67 [0x43]: line: 63 movl 5   
68 [0x44]:          checknull   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 78   
71 [0x47]: line: 64 pushl 4   
72 [0x48]:          movl 0   
73 [0x49]:          _ulck   
74 [0x4a]:          popobj2    
75 [0x4b]:          returnobj   
76 [0x4c]:          ret   
77 [0x4d]:          jmp @87   
78 [0x4e]: line: 66 movl 5   
79 [0x4f]:          movn #1   
81 [0x51]:          pushobj   
82 [0x52]:          movl 0   
83 [0x53]:          _ulck   
84 [0x54]:          popobj2    
85 [0x55]:          returnobj   
86 [0x56]:          ret   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   


function: qed#qee.qao.wam[3638] params(2) in file: qam:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3635 // <qed#qee.qao.waj>   
5 [0x5]:          ipopl 3   
6 [0x6]: line: 75 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 76 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+3   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          smovr_3 fp+5   
18 [0x12]: line: 78 movl 5   
19 [0x13]:          checknull   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          skne ebx // pc = 29   
22 [0x16]:          movl 5   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          pushl 1   
27 [0x1b]:          itest ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 79 movl 5   
32 [0x20]:          smovr_3 fp+4   
33 [0x21]: line: 80 movl 5   
34 [0x22]:          movn #2   
36 [0x24]:          smovr_3 fp+5   
37 [0x25]:          jmp @18   
38 [0x26]: line: 83 movl 5   
39 [0x27]:          checknull   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 89   
42 [0x2a]: line: 84 movl 0   
43 [0x2b]:          movn #3   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 85 new_class @0 // pxo#pxp   
54 [0x36]:          popl 0   
55 [0x37]:          dup    
56 [0x38]:          pushl 1   
57 [0x39]:          pushl 2   
58 [0x3a]:          call @3761 // <qed#qee.qao.waf.wjo>   
59 [0x3b]:          popobj2    
60 [0x3c]:          smovr_3 fp+5   
61 [0x3d]: line: 86 movl 4   
62 [0x3e]:          checknull   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 77   
65 [0x41]: line: 87 pushl 5   
66 [0x42]:          movl 0   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          popobj2    
72 [0x48]:          movr adx, ebx   
73 [0x49]:          chklen adx   
74 [0x4a]:          movnd adx   
75 [0x4b]:          popobj   
76 [0x4c]:          jmp @82   
77 [0x4d]: line: 89 pushl 5   
78 [0x4e]:          movl 4   
79 [0x4f]:          movn #2   
81 [0x51]:          popobj   
82 [0x52]:          nop   
83 [0x53]: line: 92 istorel 1, fp+0   
85 [0x55]:          movl 0   
86 [0x56]:          _ulck   
87 [0x57]:          ret   
88 [0x58]:          jmp @99   
89 [0x59]: line: 94 pushl 2   
90 [0x5a]:          movl 5   
91 [0x5b]:          movn #1   
93 [0x5d]:          popobj   
94 [0x5e]: line: 95 istorel 0, fp+0   
96 [0x60]:          movl 0   
97 [0x61]:          _ulck   
98 [0x62]:          ret   
99 [0x63]:          nop   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   


function: qed#qee.qao.wan[3639] params(1) in file: qam:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 pushl 0   
3 [0x3]:           pushl 1   
4 [0x4]:           call @3635 // <qed#qee.qao.waj>   
5 [0x5]:           ipopl 2   
6 [0x6]: line: 103 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           popobj2    
12 [0xc]:           movr adx, ebx   
13 [0xd]:           chklen adx   
14 [0xe]:           movnd adx   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 100   
20 [0x14]: line: 104 movl 3   
21 [0x15]:           del   
22 [0x16]: line: 105 movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           smovr_3 fp+4   
32 [0x20]: line: 106 movl 4   
33 [0x21]:           checknull   
34 [0x22]:           not ebx, ebx   
35 [0x23]:           skne ebx // pc = 43   
36 [0x24]:           movl 4   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           pushl 1   
41 [0x29]:           itest ebx   
42 [0x2a]:           not ebx, ebx   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 52   
45 [0x2d]: line: 107 movl 4   
46 [0x2e]:           smovr_3 fp+3   
47 [0x2f]: line: 108 movl 4   
48 [0x30]:           movn #2   
50 [0x32]:           smovr_3 fp+4   
51 [0x33]:           jmp @32   
52 [0x34]: line: 111 movl 4   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           pushl 1   
57 [0x39]:           call @3350 // <std.io#thread.operator==>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 99   
61 [0x3d]: line: 112 movl 3   
62 [0x3e]:           checknull   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 81   
65 [0x41]: line: 113 movl 4   
66 [0x42]:           movn #2   
68 [0x44]:           smovr_3 fp+5   
69 [0x45]: line: 114 pushl 5   
70 [0x46]:           movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           pushobj   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           popobj2    
76 [0x4c]:           movr adx, ebx   
77 [0x4d]:           chklen adx   
78 [0x4e]:           movnd adx   
79 [0x4f]:           popobj   
80 [0x50]:           jmp @93   
81 [0x51]: line: 116 movl 4   
82 [0x52]:           movn #2   
84 [0x54]:           smovr_3 fp+6   
85 [0x55]: line: 117 pushl 6   
86 [0x56]:           movl 3   
87 [0x57]:           movn #2   
89 [0x59]:           popobj   
90 [0x5a]: line: 118 pushnull    
91 [0x5b]:           popobj2    
92 [0x5c]:           smovr_3 fp+4   
93 [0x5d]:           nop   
94 [0x5e]: line: 121 istorel 1, fp+0   
96 [0x60]:           movl 0   
97 [0x61]:           _ulck   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           nop   
101 [0x65]: line: 125 istorel 0, fp+0   
103 [0x67]:           movl 0   
104 [0x68]:           _ulck   
105 [0x69]:           ret   
106 [0x6a]:           movl 0   
107 [0x6b]:           _ulck   


function: pxt#pxu.pyo.wat[3640] params(1) in file: pym:5:35: note:  
		        get { return reflect_obj; }
		                                  ^

0 [0x0]:         ret   


function: pxt#pxu.pyo.wau[3641] params(0) in file: pym:4:25: note:  
		    reflect_obj : object;
		                        ^

0 [0x0]: line: 5 movl 0   
1 [0x1]:         movn #0   
3 [0x3]:         returnobj   
4 [0x4]:         ret   


function: std#qaf.qak.waw[3642] params(1) in file: qai:11:44: note:  
		    static instance : _nil_ = new _nil_ { };
		                                           ^

0 [0x0]:         ret   


std.io#qbq.qke.wbe[3643] params(0) in file: qkc:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std.io#qbq.qke.wbf[3644] params(0) in file: qkc:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#qbq.qah.wbg[3645] params(0) in file: qad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          newarry ebx: 8   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std.io#qbq.qah.wbh[3646] params(1) in file: qad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          newarry ebx: 8   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]:          ret   


constructor: std.io#qbq.qah.wbi[3647] params(1) in file: qad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3658 // <std.io#qbq.qah.wbt>   
4 [0x4]:          ret   


function: std.io#qbq.qah.wbj[3648] params(0) in file: qad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std.io#qbq.qah.wbk[3649] params(1) in file: qad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std.io#qbq.qah.wbl[3650] params(0) in file: qad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3287 // <std.io#qbq.vks>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std.io#qbq.qah.wbm[3651] params(1) in file: qad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3672 // <std.io#qbq.qah.wcw>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          return_val ebx   
37 [0x25]:          ret   


function: std.io#qbq.qah.wbn[3652] params(1) in file: qad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3672 // <std.io#qbq.qah.wcw>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          return_val ebx   
37 [0x25]:          ret   


function: std.io#qbq.qah.wbo[3653] params(0) in file: qad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3652 // <std.io#qbq.qah.wbn>   
14 [0xe]:          loadval ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: std.io#qbq.qah.wbp[3654] params(2) in file: qad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3672 // <std.io#qbq.qah.wcw>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          smovr_2 ebx, fp+3   
37 [0x25]: line: 57 ipushl #2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          loadval ebx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 58 loadl ebx, fp+3   
49 [0x31]:          return_val ebx   
50 [0x32]:          ret   


function: std.io#qbq.qah.wbq[3655] params(0) in file: qad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3267 // <std.io#qbq.vjy>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3267 // <std.io#qbq.vjy>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std.io#qbq.qah.wbr[3656] params(0) in file: qad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          newarry ebx: 8   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 70 movi #0, ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]:          ret   


function: std.io#qbq.qah.wbs[3657] params(1) in file: qad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3287 // <std.io#qbq.vks>   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          popobj   
18 [0x12]: line: 75 movl 1   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          ret   


function: std.io#qbq.qah.wbt[3658] params(1) in file: qad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 25   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3287 // <std.io#qbq.vks>   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          popobj   
16 [0x10]: line: 81 movl 1   
17 [0x11]:          sizeof ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          jmp @40   
25 [0x19]: line: 83 movi #0, ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]: line: 84 movi #10, ebx   
35 [0x23]:          newarry ebx: 8   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          popobj   
40 [0x28]:          nop   
41 [0x29]:          ret   


function: std.io#qbq.qah.wbu[3659] params(1) in file: qad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3655 // <std.io#qbq.qah.wbq>   
18 [0x12]:          nop   
19 [0x13]: line: 91 ipushl #1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          loadval ebx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]:          ret   


function: std.io#qbq.qah.wbv[3660] params(1) in file: qad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 34   
14 [0xe]: line: 96 ipushl #1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          loadval ecx   
25 [0x19]:          test ecx, ebx   
26 [0x1a]:          jne 30   
27 [0x1b]: line: 97 loadl ebx, fp+2   
28 [0x1c]:          return_val ebx   
29 [0x1d]:          ret   
30 [0x1e]:          nop   
31 [0x1f]:          iaddl 1, fp@2   
33 [0x21]:          jmp @2   
34 [0x22]: line: 101 istorel -1, fp+0   
36 [0x24]:           ret   


function: std.io#qbq.qah.wbw[3661] params(0) in file: qad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 istorel 0, fp+1   
16 [0x10]: line: 107 ipushl #1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           loadval ebx   
37 [0x25]:           rmov adx, ebx   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std.io#qbq.qah.wbx[3662] params(0) in file: qad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#qbq.qah.wby[3663] params(2) in file: qad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3672 // <std.io#qbq.qah.wcw>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           ipushl #2   
41 [0x29]:           call @3659 // <std.io#qbq.qah.wbu>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3655 // <std.io#qbq.qah.wbq>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           iaload ebx, adx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           loadval ebx   
115 [0x73]:           rmov adx, ebx   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 ipushl #2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           loadval ebx   
131 [0x83]:           rmov adx, ebx   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std.io#qbq.qah.wcc[3664] params(2) in file: qad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           rstore ebx   
25 [0x19]:           ipushl #1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           return_val ebx   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 istorel 0, fp+4   
48 [0x30]: line: 137 loadl ebx, fp+4   
49 [0x31]:           return_val ebx   
50 [0x32]:           ret   


function: std.io#qbq.qah.wcd[3665] params(1) in file: qad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 35   
14 [0xe]: line: 142 ipushl #1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           loadval ecx   
25 [0x19]:           test ecx, ebx   
26 [0x1a]:           jne 31   
27 [0x1b]: line: 143 pushl 0   
28 [0x1c]:           ipushl #2   
29 [0x1d]:           call @3669 // <std.io#qbq.qah.wcq>   
30 [0x1e]: line: 144 ret   
31 [0x1f]:           nop   
32 [0x20]:           iaddl 1, fp@2   
34 [0x22]:           jmp @2   
35 [0x23]:           ret   


function: std.io#qbq.qah.wch[3666] params(2) in file: qad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           ipushl #1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3669 // <std.io#qbq.qah.wcq>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std.io#qbq.qah.wcl[3667] params(2) in file: qad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           ipushl #1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 ipushl #1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           loadval ebx   
41 [0x29]:           rmov adx, ebx   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std.io#qbq.qah.wcp[3668] params(1) in file: qad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           rstore ebx   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           iaload ebx, adx   
69 [0x45]:           rstore ebx   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           smovr_2 ebx, fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           iaload ebx, adx   
98 [0x62]:           rstore ebx   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           loadval ebx   
108 [0x6c]:           rmov adx, ebx   
109 [0x6d]: line: 176 ipushl #4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           loadval ebx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std.io#qbq.qah.wcq[3669] params(1) in file: qad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3672 // <std.io#qbq.qah.wcw>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3277 // <std.io#qbq.vki>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3661 // <std.io#qbq.qah.wbw>   
77 [0x4d]:           ret   


function: std.io#qbq.qah.wcu[3670] params(2) in file: qad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           rstore ebx   
25 [0x19]:           ipushl #1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std.io#qbq.qah.wcv[3671] params(0) in file: qad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // pxo#pxp   
1 [0x1]:           idiv adx, #? (112)   
3 [0x3]:           call @3118 // <std#qaf.qbf.vdu>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @7 // [    
8 [0x8]:           call @3114 // <std#qaf.qbf.vdq>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           call @3109 // <std#qaf.qbf.vdl>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @8 // ,    
56 [0x38]:           call @3114 // <std#qaf.qbf.vdq>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @9 //  ]   
64 [0x40]:           call @3114 // <std#qaf.qbf.vdq>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3091 // <std#qaf.qbf.vct>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std.io#qbq.qah.wcw[3672] params(1) in file: qad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @10 // Index:    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3507 // <std#string.operator+>   
7 [0x7]:           newstr @11 // , size:    
8 [0x8]:           call @3487 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3507 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


qed#qee.qke.wde[3673] params(0) in file: qkc:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: qed#qee.qke.wdf[3674] params(0) in file: qkc:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: qed#qee.qja.wdg[3675] params(0) in file: qiy:13:16: note:  
		    synced_list() {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // qed#qee.qew[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: qed#qee.qja.wdh[3676] params(1) in file: qiy:17:16: note:  
		    synced_list(starting_capacity: var) {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // qed#qee.qew[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: qed#qee.qja.wdi[3677] params(1) in file: qiy:21:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 23 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #2   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          _ulck   
12 [0xc]:          ret   


function: qed#qee.qja.wdj[3678] params(0) in file: qiy:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 23   
14 [0xe]:          pushnull    
15 [0xf]:          popobj2    
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          _ulck   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   
22 [0x16]:          jmp @44   
23 [0x17]: line: 30 movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @3286 // <std.io#qbq.vkr>   
37 [0x25]:          popobj2    
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          nop   
45 [0x2d]:          movl 0   
46 [0x2e]:          _ulck   


overload function: qed#qee.qja.wdk[3679] params(1) in file: qiy:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 36 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 37 new_class @0 // pxo#pxp   
21 [0x15]:          shl adx, adx -> adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3728 // <qed#qee.qja.wgr>   
26 [0x1a]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 38 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: qed#qee.qja.wdl[3680] params(1) in file: qiy:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 44 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 45 new_class @0 // pxo#pxp   
21 [0x15]:          shl adx, adx -> adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3728 // <qed#qee.qja.wgr>   
26 [0x1a]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 46 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: qed#qee.qja.wdm[3681] params(0) in file: qiy:50:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 51 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3680 // <qed#qee.qja.wdl>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: qed#qee.qja.wdn[3682] params(2) in file: qiy:54:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 57 new_class @0 // pxo#pxp   
21 [0x15]:          shl adx, adx -> adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3728 // <qed#qee.qja.wgr>   
26 [0x1a]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 59 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          smovr_3 fp+3   
39 [0x27]: line: 60 pushl 2   
40 [0x28]:          movl 0   
41 [0x29]:          movn #1   
43 [0x2b]:          pushobj   
44 [0x2c]:          loadl ebx, fp+1   
45 [0x2d]:          popobj2    
46 [0x2e]:          movr adx, ebx   
47 [0x2f]:          chklen adx   
48 [0x30]:          movnd adx   
49 [0x31]:          popobj   
50 [0x32]: line: 61 pushl 3   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          popobj2    
54 [0x36]:          returnobj   
55 [0x37]:          ret   
56 [0x38]:          movl 0   
57 [0x39]:          _ulck   


function: qed#qee.qja.wdo[3683] params(0) in file: qiy:65:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 67 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3266 // <std.io#qbq.vjx>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 69 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3266 // <std.io#qbq.vjx>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: qed#qee.qja.wdp[3684] params(0) in file: qiy:72:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // qed#qee.qew[]   
6 [0x6]:          movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          popobj   
10 [0xa]: line: 75 movi #0, ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]:          movl 0   
19 [0x13]:          _ulck   
20 [0x14]:          ret   


constructor: qed#qee.qah.wdw[3685] params(0) in file: qad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // qed#qee.qew[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: qed#qee.qah.wdx[3686] params(1) in file: qad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // qed#qee.qew[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: qed#qee.qah.wdy[3687] params(1) in file: qad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3698 // <qed#qee.qah.wej>   
4 [0x4]:          ret   


function: qed#qee.qah.wez[3688] params(0) in file: qad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: qed#qee.qah.wea[3689] params(1) in file: qad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: qed#qee.qah.web[3690] params(0) in file: qad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3286 // <std.io#qbq.vkr>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: qed#qee.qah.wec[3691] params(1) in file: qad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3712 // <qed#qee.qah.wfm>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: qed#qee.qah.wed[3692] params(1) in file: qad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3712 // <qed#qee.qah.wfm>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: qed#qee.qah.wee[3693] params(0) in file: qad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3692 // <qed#qee.qah.wed>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: qed#qee.qah.wef[3694] params(2) in file: qad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3712 // <qed#qee.qah.wfm>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: qed#qee.qah.weg[3695] params(0) in file: qad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3266 // <std.io#qbq.vjx>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3266 // <std.io#qbq.vjx>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: qed#qee.qah.weh[3696] params(0) in file: qad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // qed#qee.qew[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: qed#qee.qah.wei[3697] params(1) in file: qad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3286 // <std.io#qbq.vkr>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #35, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: qed#qee.qah.wej[3698] params(1) in file: qad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3286 // <std.io#qbq.vkr>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #35, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // qed#qee.qew[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: qed#qee.qah.wek[3699] params(1) in file: qad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3695 // <qed#qee.qah.weg>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: qed#qee.qah.wel[3700] params(1) in file: qad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: qed#qee.qah.wem[3701] params(0) in file: qad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: qed#qee.qah.wen[3702] params(0) in file: qad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: qed#qee.qah.weo[3703] params(2) in file: qad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3712 // <qed#qee.qah.wfm>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3699 // <qed#qee.qah.wek>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3695 // <qed#qee.qah.weg>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: qed#qee.qah.wes[3704] params(2) in file: qad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: qed#qee.qah.wet[3705] params(1) in file: qad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3709 // <qed#qee.qah.wfg>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: qed#qee.qah.wex[3706] params(2) in file: qad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3709 // <qed#qee.qah.wfg>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: qed#qee.qah.wfb[3707] params(2) in file: qad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: qed#qee.qah.wff[3708] params(1) in file: qad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: qed#qee.qah.wfg[3709] params(1) in file: qad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3712 // <qed#qee.qah.wfm>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3276 // <std.io#qbq.vkh>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3701 // <qed#qee.qah.wem>   
77 [0x4d]:           ret   


function: qed#qee.qah.wfk[3710] params(2) in file: qad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: qed#qee.qah.wfl[3711] params(0) in file: qad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // pxo#pxp   
1 [0x1]:           idiv adx, #? (112)   
3 [0x3]:           call @3118 // <std#qaf.qbf.vdu>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @7 // [    
8 [0x8]:           call @3114 // <std#qaf.qbf.vdq>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3110 // <std#qaf.qbf.vdm>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @8 // ,    
56 [0x38]:           call @3114 // <std#qaf.qbf.vdq>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @9 //  ]   
64 [0x40]:           call @3114 // <std#qaf.qbf.vdq>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3091 // <std#qaf.qbf.vct>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: qed#qee.qah.wfm[3712] params(1) in file: qad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @10 // Index:    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3507 // <std#string.operator+>   
7 [0x7]:           newstr @11 // , size:    
8 [0x8]:           call @3487 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3507 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: qed#qee.qja.wfn[3713] params(1) in file: qiy:79:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 81 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3286 // <std.io#qbq.vkr>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #35, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 82 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movl 0   
38 [0x26]:          _ulck   
39 [0x27]:          ret   


function: qed#qee.qja.wfo[3714] params(1) in file: qiy:86:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 88 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          sizeof ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 20   
18 [0x12]: line: 89 pushl 0   
19 [0x13]:          call @3683 // <qed#qee.qja.wdo>   
20 [0x14]:          nop   
21 [0x15]: line: 90 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #1   
25 [0x19]:          pushobj   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          movr egx, ebx   
33 [0x21]:          inc ebx   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movr ebx, egx   
38 [0x26]:          popobj2    
39 [0x27]:          movr adx, ebx   
40 [0x28]:          chklen adx   
41 [0x29]:          movnd adx   
42 [0x2a]:          popobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          _ulck   
45 [0x2d]:          ret   


function: qed#qee.qja.wfp[3715] params(1) in file: qiy:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 96 istorel 0, fp+2   
4 [0x4]:          ipushl #2   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          lt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 39   
16 [0x10]: line: 97 pushl 1   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          loadl ebx, fp+2   
22 [0x16]:          popobj2    
23 [0x17]:          movr adx, ebx   
24 [0x18]:          chklen adx   
25 [0x19]:          movnd adx   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 35   
30 [0x1e]: line: 98 loadl ebx, fp+2   
31 [0x1f]:          return_val ebx   
32 [0x20]:          movl 0   
33 [0x21]:          _ulck   
34 [0x22]:          ret   
35 [0x23]:          nop   
36 [0x24]:          iaddl 1, fp@2   
38 [0x26]:          jmp @4   
39 [0x27]: line: 102 istorel -1, fp+0   
41 [0x29]:           movl 0   
42 [0x2a]:           _ulck   
43 [0x2b]:           ret   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   


function: qed#qee.qja.wfq[3716] params(0) in file: qiy:106:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 108 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 109 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: qed#qee.qja.wfr[3717] params(0) in file: qiy:113:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 115 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           return_val ebx   
9 [0x9]:           movl 0   
10 [0xa]:           _ulck   
11 [0xb]:           ret   
12 [0xc]:           movl 0   
13 [0xd]:           _ulck   


function: qed#qee.qja.wfs[3718] params(0) in file: qiy:119:8: note:  
		    def empty() : var {
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 121 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           test ecx, ebx   
13 [0xd]:           return_val cmt   
14 [0xe]:           movl 0   
15 [0xf]:           _ulck   
16 [0x10]:           ret   
17 [0x11]:           movl 0   
18 [0x12]:           _ulck   


function: qed#qee.qja.wft[3719] params(2) in file: qiy:125:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 127 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 128 new_class @0 // pxo#pxp   
21 [0x15]:           shl adx, adx -> adx   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3728 // <qed#qee.qja.wgr>   
26 [0x1a]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 130 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #0, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           test ecx, ebx   
40 [0x28]:           jne 45   
41 [0x29]: line: 131 pushl 0   
42 [0x2a]:           pushl 2   
43 [0x2b]:           call @3714 // <qed#qee.qja.wfo>   
44 [0x2c]:           jmp @134   
45 [0x2d]: line: 133 movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 0   
53 [0x35]:           movn #1   
55 [0x37]:           sizeof ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           gte ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 63   
61 [0x3d]: line: 134 pushl 0   
62 [0x3e]:           call @3683 // <qed#qee.qja.wdo>   
63 [0x3f]:           nop   
64 [0x40]: line: 135 movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           movi #0, adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           movr egx, ebx   
71 [0x47]:           inc ebx   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           rmov adx, ebx   
75 [0x4b]: line: 136 movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #1, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           smovr_2 ebx, fp+3   
87 [0x57]:           ipushl #3   
88 [0x58]:           loadl ebx, fp+1   
89 [0x59]:           loadval ecx   
90 [0x5a]:           gt ecx, ebx   
91 [0x5b]:           movr ebx, cmt   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 123   
94 [0x5e]: line: 137 movl 0   
95 [0x5f]:           movn #1   
97 [0x61]:           pushobj   
98 [0x62]:           ipushl #3   
99 [0x63]:           movi #1, ebx   
101 [0x65]:           loadval ecx   
102 [0x66]:           sub ecx, ebx -> ebx   
103 [0x67]:           popobj2    
104 [0x68]:           movr adx, ebx   
105 [0x69]:           chklen adx   
106 [0x6a]:           movnd adx   
107 [0x6b]:           pushobj   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #1   
111 [0x6f]:           pushobj   
112 [0x70]:           loadl ebx, fp+3   
113 [0x71]:           popobj2    
114 [0x72]:           movr adx, ebx   
115 [0x73]:           chklen adx   
116 [0x74]:           movnd adx   
117 [0x75]:           popobj   
118 [0x76]:           loadl ebx, fp+3   
119 [0x77]:           movr egx, ebx   
120 [0x78]:           dec ebx   
121 [0x79]:           smovr_2 ebx, fp+3   
122 [0x7a]:           jmp @87   
123 [0x7b]: line: 138 pushl 2   
124 [0x7c]:           movl 0   
125 [0x7d]:           movn #1   
127 [0x7f]:           pushobj   
128 [0x80]:           loadl ebx, fp+1   
129 [0x81]:           popobj2    
130 [0x82]:           movr adx, ebx   
131 [0x83]:           chklen adx   
132 [0x84]:           movnd adx   
133 [0x85]:           popobj   
134 [0x86]:           nop   
135 [0x87]:           movl 0   
136 [0x88]:           _ulck   
137 [0x89]:           ret   


function: qed#qee.qja.wfu[3720] params(1) in file: qiy:144:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 146 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 40   
16 [0x10]: line: 147 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+2   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           itest ebx   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 148 pushl 0   
31 [0x1f]:           ipushl #2   
32 [0x20]:           call @3722 // <qed#qee.qja.wgz>   
33 [0x21]: line: 149 movl 0   
34 [0x22]:           _ulck   
35 [0x23]:           ret   
36 [0x24]:           nop   
37 [0x25]:           iaddl 1, fp@2   
39 [0x27]:           jmp @4   
40 [0x28]:           movl 0   
41 [0x29]:           _ulck   
42 [0x2a]:           ret   


function: qed#qee.qja.wfy[3721] params(2) in file: qiy:155:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 157 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 43   
16 [0x10]: line: 158 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 39   
33 [0x21]: line: 159 pushl 0   
34 [0x22]:           ipushl #3   
35 [0x23]:           call @3722 // <qed#qee.qja.wgz>   
36 [0x24]: line: 160 movl 0   
37 [0x25]:           _ulck   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @4   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           ret   


function: qed#qee.qja.wgz[3722] params(1) in file: qiy:166:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 168 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 169 new_class @0 // pxo#pxp   
21 [0x15]:           shl adx, adx -> adx   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3728 // <qed#qee.qja.wgr>   
26 [0x1a]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 171 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           loadl ebx, fp+1   
37 [0x25]:           loadval ecx   
38 [0x26]:           sub ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           sub ecx, ebx -> ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]: line: 172 ipushl #2   
46 [0x2e]:           movi #0, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           gt ecx, ebx   
50 [0x32]:           movr ebx, cmt   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 76   
53 [0x35]: line: 173 movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           pushobj   
57 [0x39]:           movl 0   
58 [0x3a]:           movn #1   
60 [0x3c]:           pushobj   
61 [0x3d]:           ipushl #1   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           call @3276 // <std.io#qbq.vkh>   
76 [0x4c]:           nop   
77 [0x4d]: line: 175 pushl 0   
78 [0x4e]:           call @3716 // <qed#qee.qja.wfq>   
79 [0x4f]:           movl 0   
80 [0x50]:           _ulck   
81 [0x51]:           ret   


function: qed#qee.qja.wgd[3723] params(2) in file: qiy:179:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 180 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 181 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 42   
16 [0x10]: line: 182 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 38   
33 [0x21]: line: 183 loadl ebx, fp+3   
34 [0x22]:           return_val ebx   
35 [0x23]:           movl 0   
36 [0x24]:           _ulck   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @4   
42 [0x2a]: line: 187 istorel -1, fp+0   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   
46 [0x2e]:           ret   
47 [0x2f]:           movl 0   
48 [0x30]:           _ulck   


function: qed#qee.qja.wgh[3724] params(1) in file: qiy:191:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 193 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 134   
16 [0x10]: line: 195 istorel 0, fp+3   
18 [0x12]:           ipushl #3   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           movi #0, adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           lt ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 131   
30 [0x1e]: line: 196 ipushl #3   
31 [0x1f]:           movi #1, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           add ecx, ebx -> ebx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           movi #0, adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           lt ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 127   
47 [0x2f]: line: 198 ipushl #1   
48 [0x30]:           movl 0   
49 [0x31]:           movn #1   
51 [0x33]:           pushobj   
52 [0x34]:           loadl ebx, fp+3   
53 [0x35]:           popobj2    
54 [0x36]:           movr adx, ebx   
55 [0x37]:           chklen adx   
56 [0x38]:           movnd adx   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #3   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           popobj2    
68 [0x44]:           movr adx, ebx   
69 [0x45]:           chklen adx   
70 [0x46]:           movnd adx   
71 [0x47]:           pushobj   
72 [0x48]:           smov ebx, sp+[-2]   
73 [0x49]:           calld ebx   
74 [0x4a]:           loadval ebx   
75 [0x4b]:           movr cmt, ebx   
76 [0x4c]:           jne 126   
77 [0x4d]: line: 199 movl 0   
78 [0x4e]:           movn #1   
80 [0x50]:           pushobj   
81 [0x51]:           loadl ebx, fp+3   
82 [0x52]:           popobj2    
83 [0x53]:           movr adx, ebx   
84 [0x54]:           chklen adx   
85 [0x55]:           movnd adx   
86 [0x56]:           smovr_3 fp+4   
87 [0x57]: line: 200 movl 0   
88 [0x58]:           movn #1   
90 [0x5a]:           pushobj   
91 [0x5b]:           ipushl #3   
92 [0x5c]:           movi #1, ebx   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           add ecx, ebx -> ebx   
96 [0x60]:           popobj2    
97 [0x61]:           movr adx, ebx   
98 [0x62]:           chklen adx   
99 [0x63]:           movnd adx   
100 [0x64]:           pushobj   
101 [0x65]:           movl 0   
102 [0x66]:           movn #1   
104 [0x68]:           pushobj   
105 [0x69]:           loadl ebx, fp+3   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           popobj   
111 [0x6f]: line: 201 pushl 4   
112 [0x70]:           movl 0   
113 [0x71]:           movn #1   
115 [0x73]:           pushobj   
116 [0x74]:           ipushl #3   
117 [0x75]:           movi #1, ebx   
119 [0x77]:           loadval ecx   
120 [0x78]:           add ecx, ebx -> ebx   
121 [0x79]:           popobj2    
122 [0x7a]:           movr adx, ebx   
123 [0x7b]:           chklen adx   
124 [0x7c]:           movnd adx   
125 [0x7d]:           popobj   
126 [0x7e]:           nop   
127 [0x7f]:           nop   
128 [0x80]:           iaddl 1, fp@3   
130 [0x82]:           jmp @18   
131 [0x83]:           iaddl 1, fp@2   
133 [0x85]:           jmp @4   
134 [0x86]:           movl 0   
135 [0x87]:           _ulck   
136 [0x88]:           ret   


function: qed#qee.qja.wgl[3725] params(2) in file: qiy:209:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 211 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 52   
16 [0x10]: line: 212 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 48   
33 [0x21]: line: 213 movl 0   
34 [0x22]:           movn #1   
36 [0x24]:           pushobj   
37 [0x25]:           loadl ebx, fp+3   
38 [0x26]:           popobj2    
39 [0x27]:           movr adx, ebx   
40 [0x28]:           chklen adx   
41 [0x29]:           movnd adx   
42 [0x2a]:           pushobj   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           popobj2    
46 [0x2e]:           returnobj   
47 [0x2f]:           ret   
48 [0x30]:           nop   
49 [0x31]:           iaddl 1, fp@3   
51 [0x33]:           jmp @4   
52 [0x34]: line: 217 movl 4   
53 [0x35]:           del   
54 [0x36]: line: 218 pushl 4   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           popobj2    
58 [0x3a]:           returnobj   
59 [0x3b]:           ret   
60 [0x3c]:           movl 0   
61 [0x3d]:           _ulck   


function: qed#qee.qja.wgp[3726] params(2) in file: qiy:222:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 223 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 224 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 53   
16 [0x10]: line: 225 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 49   
33 [0x21]: line: 226 pushl 1   
34 [0x22]:           movl 0   
35 [0x23]:           movn #1   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+3   
39 [0x27]:           popobj2    
40 [0x28]:           movr adx, ebx   
41 [0x29]:           chklen adx   
42 [0x2a]:           movnd adx   
43 [0x2b]:           popobj   
44 [0x2c]: line: 227 istorel 1, fp+0   
46 [0x2e]:           movl 0   
47 [0x2f]:           _ulck   
48 [0x30]:           ret   
49 [0x31]:           nop   
50 [0x32]:           iaddl 1, fp@3   
52 [0x34]:           jmp @4   
53 [0x35]: line: 231 istorel 0, fp+0   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           ret   
58 [0x3a]:           movl 0   
59 [0x3b]:           _ulck   


function: qed#qee.qja.wgq[3727] params(0) in file: qiy:235:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 236 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 237 new_class @0 // pxo#pxp   
3 [0x3]:           idiv adx, #? (112)   
5 [0x5]:           call @3118 // <std#qaf.qbf.vdu>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 239 pushl 1   
9 [0x9]:           newstr @7 // [    
10 [0xa]:           call @3114 // <std#qaf.qbf.vdq>   
11 [0xb]:           pop   
12 [0xc]: line: 240 istorel 0, fp+2   
14 [0xe]:           ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           loadval ecx   
22 [0x16]:           lt ecx, ebx   
23 [0x17]:           movr ebx, cmt   
24 [0x18]:           movr cmt, ebx   
25 [0x19]:           jne 64   
26 [0x1a]: line: 241 pushl 1   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           loadl ebx, fp+2   
32 [0x20]:           popobj2    
33 [0x21]:           movr adx, ebx   
34 [0x22]:           chklen adx   
35 [0x23]:           movnd adx   
36 [0x24]:           pushobj   
37 [0x25]:           call @3110 // <std#qaf.qbf.vdm>   
38 [0x26]:           pop   
39 [0x27]: line: 243 ipushl #2   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           add ecx, ebx -> ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           loadval ecx   
52 [0x34]:           lt ecx, ebx   
53 [0x35]:           movr ebx, cmt   
54 [0x36]:           movr cmt, ebx   
55 [0x37]:           jne 60   
56 [0x38]: line: 244 pushl 1   
57 [0x39]:           newstr @8 // ,    
58 [0x3a]:           call @3114 // <std#qaf.qbf.vdq>   
59 [0x3b]:           pop   
60 [0x3c]:           nop   
61 [0x3d]:           iaddl 1, fp@2   
63 [0x3f]:           jmp @14   
64 [0x40]: line: 248 pushl 1   
65 [0x41]:           newstr @9 //  ]   
66 [0x42]:           call @3114 // <std#qaf.qbf.vdq>   
67 [0x43]:           pop   
68 [0x44]: line: 249 pushl 1   
69 [0x45]:           call @3091 // <std#qaf.qbf.vct>   
70 [0x46]:           popobj2    
71 [0x47]:           pushobj   
72 [0x48]:           movl 0   
73 [0x49]:           _ulck   
74 [0x4a]:           popobj2    
75 [0x4b]:           returnobj   
76 [0x4c]:           ret   
77 [0x4d]:           movl 0   
78 [0x4e]:           _ulck   


function: qed#qee.qja.wgr[3728] params(1) in file: qiy:253:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 254 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @10 // Index:    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3507 // <std#string.operator+>   
7 [0x7]:           newstr @11 // , size:    
8 [0x8]:           call @3487 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3507 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: qed#qee.qah.whf[3729] params(0) in file: qad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std.io#thread[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: qed#qee.qah.whg[3730] params(1) in file: qad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: qed#qee.qah.whh[3731] params(1) in file: qad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3742 // <qed#qee.qah.whs>   
4 [0x4]:          ret   


function: qed#qee.qah.whi[3732] params(0) in file: qad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: qed#qee.qah.whj[3733] params(1) in file: qad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: qed#qee.qah.whk[3734] params(0) in file: qad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3286 // <std.io#qbq.vkr>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: qed#qee.qah.whl[3735] params(1) in file: qad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3756 // <qed#qee.qah.wiv>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: qed#qee.qah.whm[3736] params(1) in file: qad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3756 // <qed#qee.qah.wiv>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: qed#qee.qah.whn[3737] params(0) in file: qad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3736 // <qed#qee.qah.whm>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: qed#qee.qah.who[3738] params(2) in file: qad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3756 // <qed#qee.qah.wiv>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: qed#qee.qah.whp[3739] params(0) in file: qad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3266 // <std.io#qbq.vjx>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3266 // <std.io#qbq.vjx>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: qed#qee.qah.whq[3740] params(0) in file: qad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: qed#qee.qah.whr[3741] params(1) in file: qad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3286 // <std.io#qbq.vkr>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #42, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: qed#qee.qah.whs[3742] params(1) in file: qad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3286 // <std.io#qbq.vkr>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #42, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std.io#thread[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: qed#qee.qah.wht[3743] params(1) in file: qad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3739 // <qed#qee.qah.whp>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: qed#qee.qah.whu[3744] params(1) in file: qad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 36   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          call @3350 // <std.io#thread.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 32   
29 [0x1d]: line: 97 loadl ebx, fp+2   
30 [0x1e]:          return_val ebx   
31 [0x1f]:          ret   
32 [0x20]:          nop   
33 [0x21]:          iaddl 1, fp@2   
35 [0x23]:          jmp @2   
36 [0x24]: line: 101 istorel -1, fp+0   
38 [0x26]:           ret   


function: qed#qee.qah.whv[3745] params(0) in file: qad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: qed#qee.qah.whw[3746] params(0) in file: qad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: qed#qee.qah.whx[3747] params(2) in file: qad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3756 // <qed#qee.qah.wiv>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3743 // <qed#qee.qah.wht>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3739 // <qed#qee.qah.whp>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: qed#qee.qah.wib[3748] params(2) in file: qad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: qed#qee.qah.wic[3749] params(1) in file: qad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 37   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           call @3350 // <std.io#thread.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 143 pushl 0   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @3753 // <qed#qee.qah.wip>   
32 [0x20]: line: 144 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@2   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: qed#qee.qah.wig[3750] params(2) in file: qad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3753 // <qed#qee.qah.wip>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: qed#qee.qah.wik[3751] params(2) in file: qad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: qed#qee.qah.wio[3752] params(1) in file: qad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: qed#qee.qah.wip[3753] params(1) in file: qad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3756 // <qed#qee.qah.wiv>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3276 // <std.io#qbq.vkh>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3745 // <qed#qee.qah.whv>   
77 [0x4d]:           ret   


function: qed#qee.qah.wit[3754] params(2) in file: qad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: qed#qee.qah.wiu[3755] params(0) in file: qad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // pxo#pxp   
1 [0x1]:           idiv adx, #? (112)   
3 [0x3]:           call @3118 // <std#qaf.qbf.vdu>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @7 // [    
8 [0x8]:           call @3114 // <std#qaf.qbf.vdq>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3110 // <std#qaf.qbf.vdm>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @8 // ,    
56 [0x38]:           call @3114 // <std#qaf.qbf.vdq>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @9 //  ]   
64 [0x40]:           call @3114 // <std#qaf.qbf.vdq>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3091 // <std#qaf.qbf.vct>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: qed#qee.qah.wiv[3756] params(1) in file: qad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @10 // Index:    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3507 // <std#string.operator+>   
7 [0x7]:           newstr @11 // , size:    
8 [0x8]:           call @3487 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3507 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#throwable.get_stack_trace[3757] params(0) in file: qmb:13:25: note:  
		    stack_trace : string;
		                        ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 17   
8 [0x8]: line: 16 movl 0   
9 [0x9]:          movn #2   
11 [0xb]:          pushobj   
12 [0xc]:          call @3401 // <platform.kernel#qlb.qli.vpx>   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          popobj   
17 [0x11]:          nop   
18 [0x12]: line: 20 movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          returnobj   
22 [0x16]:          ret   


constructor: std.io#qbq.qao.wzp.wjh[3758] params(2) in file: qam:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 135 pushl 1   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           popobj   
6 [0x6]: line: 136 pushl 2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           popobj   
11 [0xb]:           ret   


function: std.io#qbq.qao.wzp.wji[3759] params(0) in file: qam:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // key    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3489 // <std#string.operator+>   
10 [0xa]:           newstr @113 //  value    
11 [0xb]:           call @3487 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @3489 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std.io#qbq.qao.wzp.wjj[3760] params(0) in file: qam:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: qed#qee.qao.waf.wjo[3761] params(2) in file: qam:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 135 pushl 1   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           popobj   
6 [0x6]: line: 136 pushl 2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           popobj   
11 [0xb]:           ret   


function: qed#qee.qao.waf.wjp[3762] params(0) in file: qam:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @112 // key    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3489 // <std#string.operator+>   
10 [0xa]:           newstr @113 //  value    
11 [0xb]:           call @3487 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @3489 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: qed#qee.qao.waf.wjq[3763] params(0) in file: qam:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: pxo#pxp.wjr[3764] params(0) in file: pxn:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         isub adx, #? (112)   
3 [0x3]:         istore 0   
5 [0x5]:         call @2879 // <std#qaf.qbb.uup>   
6 [0x6]:         movg @0 // @pxo#pxp   
7 [0x7]:         movn #0   
9 [0x9]:         popobj   
10 [0xa]:         ret   


function: std#qaf.qak.wjs[3765] params(0) in file: qai:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movu16 adx, adx   
2 [0x2]:         movg @12 // @std#qaf.qak   
3 [0x3]:         movn #0   
5 [0x5]:         popobj   
6 [0x6]:         ret   
7 [0x7]:         ret   


function: std#qaf.qbf.wjt[3766] params(0) in file: qbd:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @24 // @std#qaf.qbf   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @24 // @std#qaf.qbf   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std.io#qbq.qbv.wju[3767] params(0) in file: qbt:17:13: note:  
		public class file {
		            ^

0 [0x0]:         call @3161 // <std.io#qbq.qbv.vfl>   
1 [0x1]:         movg @27 // @std.io#qbq.qbv   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         movg @27 // @std.io#qbq.qbv   
6 [0x6]:         movn #0   
8 [0x8]:         pushobj   
9 [0x9]:         invoke_delegate 3180 { static=0, args=0 }   
11 [0xb]:         movg @27 // @std.io#qbq.qbv   
12 [0xc]:         movn #1   
14 [0xe]:         loadval ebx   
15 [0xf]:         movi #0, adx   
17 [0x11]:         rmov adx, ebx   
18 [0x12]:         ret   
19 [0x13]:         ret   


function: std.io#qbq.qcg.wjv[3768] params(0) in file: qce:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         movr adx, adx   
2 [0x2]:         dup    
3 [0x3]:         new_class @0 // pxo#pxp   
4 [0x4]:         movnd adx   
5 [0x5]:         dup    
6 [0x6]:         newstr @2 // main   
7 [0x7]:         call @3475 // <std#string.string>   
8 [0x8]:         call @3168 // <std.io#qbq.qcg.vfs>   
9 [0x9]:         movg @29 // @std.io#qbq.qcg   
10 [0xa]:         movn #0   
12 [0xc]:         popobj   
13 [0xd]:         ret   
14 [0xe]:         ret   


function: qed#qee.qew.wjw[3769] params(0) in file: qeu:5:13: note:  
		public class job {
		            ^

0 [0x0]:         istore 0   
2 [0x2]:         movg @35 // @qed#qee.qew   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: qed#qee.wjx[3770] params(0) in file: qgv:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         gt adx, adx   
2 [0x2]:         dup    
3 [0x3]:         call @3214 // <qed#qee.qeo.vhs>   
4 [0x4]:         movg @32 // @qed#qee   
5 [0x5]:         movn #5   
7 [0x7]:         popobj   
8 [0x8]:         ret   


function: std.io#qbq.wjy[3771] params(0) in file: qil:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         new_class @0 // pxo#pxp   
2 [0x2]:         dup    
3 [0x3]:         movg @25 // @std.io#qbq   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std#qaf.qjl.wkz[3772] params(0) in file: qjj:6:6: note:  
		class time {
		     ^

0 [0x0]:         istore 4294967295   
2 [0x2]:         movg @45 // @std#qaf.qjl   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std#qaf.wka[3773] params(0) in file: qkf:0:0: note:  
		End of File
		^

0 [0x0]:         istore 0   
2 [0x2]:         movg @11 // @std#qaf   
3 [0x3]:         movn #1   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#string.$03internal_static_init[3774] params(0) in file: qlv:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @56 // @std#string   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @56 // @std#string   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std.io#qbq.qcp.wkc[3775] params(0) in file: qhs:3:5: note:  
		import platform.kernel;
		    ^

0 [0x0]: line: 43 istorel 0, fp+0   
2 [0x2]: line: 44 movi #17, ebx   
4 [0x4]:          new_classarray ebx  // std.io#qbq.qcp[]   
6 [0x6]:          movg @30 // @std.io#qbq.qcp   
7 [0x7]:          movn #17   
9 [0x9]:          popobj   
10 [0xa]: line: 45 movg @30 // @std.io#qbq.qcp   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movg @30 // @std.io#qbq.qcp   
15 [0xf]:          movn #17   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+0   
19 [0x13]:          movr egx, ebx   
20 [0x14]:          inc ebx   
21 [0x15]:          smovr_2 ebx, fp+0   
22 [0x16]:          movr ebx, egx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          popobj   
28 [0x1c]: line: 46 movg @30 // @std.io#qbq.qcp   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movg @30 // @std.io#qbq.qcp   
33 [0x21]:          movn #17   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+0   
37 [0x25]:          movr egx, ebx   
38 [0x26]:          inc ebx   
39 [0x27]:          smovr_2 ebx, fp+0   
40 [0x28]:          movr ebx, egx   
41 [0x29]:          popobj2    
42 [0x2a]:          movr adx, ebx   
43 [0x2b]:          chklen adx   
44 [0x2c]:          movnd adx   
45 [0x2d]:          popobj   
46 [0x2e]: line: 47 movg @30 // @std.io#qbq.qcp   
47 [0x2f]:          movn #2   
49 [0x31]:          pushobj   
50 [0x32]:          movg @30 // @std.io#qbq.qcp   
51 [0x33]:          movn #17   
53 [0x35]:          pushobj   
54 [0x36]:          loadl ebx, fp+0   
55 [0x37]:          movr egx, ebx   
56 [0x38]:          inc ebx   
57 [0x39]:          smovr_2 ebx, fp+0   
58 [0x3a]:          movr ebx, egx   
59 [0x3b]:          popobj2    
60 [0x3c]:          movr adx, ebx   
61 [0x3d]:          chklen adx   
62 [0x3e]:          movnd adx   
63 [0x3f]:          popobj   
64 [0x40]: line: 48 movg @30 // @std.io#qbq.qcp   
65 [0x41]:          movn #3   
67 [0x43]:          pushobj   
68 [0x44]:          movg @30 // @std.io#qbq.qcp   
69 [0x45]:          movn #17   
71 [0x47]:          pushobj   
72 [0x48]:          loadl ebx, fp+0   
73 [0x49]:          movr egx, ebx   
74 [0x4a]:          inc ebx   
75 [0x4b]:          smovr_2 ebx, fp+0   
76 [0x4c]:          movr ebx, egx   
77 [0x4d]:          popobj2    
78 [0x4e]:          movr adx, ebx   
79 [0x4f]:          chklen adx   
80 [0x50]:          movnd adx   
81 [0x51]:          popobj   
82 [0x52]: line: 49 movg @30 // @std.io#qbq.qcp   
83 [0x53]:          movn #4   
85 [0x55]:          pushobj   
86 [0x56]:          movg @30 // @std.io#qbq.qcp   
87 [0x57]:          movn #17   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+0   
91 [0x5b]:          movr egx, ebx   
92 [0x5c]:          inc ebx   
93 [0x5d]:          smovr_2 ebx, fp+0   
94 [0x5e]:          movr ebx, egx   
95 [0x5f]:          popobj2    
96 [0x60]:          movr adx, ebx   
97 [0x61]:          chklen adx   
98 [0x62]:          movnd adx   
99 [0x63]:          popobj   
100 [0x64]: line: 50 movg @30 // @std.io#qbq.qcp   
101 [0x65]:          movn #5   
103 [0x67]:          pushobj   
104 [0x68]:          movg @30 // @std.io#qbq.qcp   
105 [0x69]:          movn #17   
107 [0x6b]:          pushobj   
108 [0x6c]:          loadl ebx, fp+0   
109 [0x6d]:          movr egx, ebx   
110 [0x6e]:          inc ebx   
111 [0x6f]:          smovr_2 ebx, fp+0   
112 [0x70]:          movr ebx, egx   
113 [0x71]:          popobj2    
114 [0x72]:          movr adx, ebx   
115 [0x73]:          chklen adx   
116 [0x74]:          movnd adx   
117 [0x75]:          popobj   
118 [0x76]: line: 51 movg @30 // @std.io#qbq.qcp   
119 [0x77]:          movn #6   
121 [0x79]:          pushobj   
122 [0x7a]:          movg @30 // @std.io#qbq.qcp   
123 [0x7b]:          movn #17   
125 [0x7d]:          pushobj   
126 [0x7e]:          loadl ebx, fp+0   
127 [0x7f]:          movr egx, ebx   
128 [0x80]:          inc ebx   
129 [0x81]:          smovr_2 ebx, fp+0   
130 [0x82]:          movr ebx, egx   
131 [0x83]:          popobj2    
132 [0x84]:          movr adx, ebx   
133 [0x85]:          chklen adx   
134 [0x86]:          movnd adx   
135 [0x87]:          popobj   
136 [0x88]: line: 52 movg @30 // @std.io#qbq.qcp   
137 [0x89]:          movn #7   
139 [0x8b]:          pushobj   
140 [0x8c]:          movg @30 // @std.io#qbq.qcp   
141 [0x8d]:          movn #17   
143 [0x8f]:          pushobj   
144 [0x90]:          loadl ebx, fp+0   
145 [0x91]:          movr egx, ebx   
146 [0x92]:          inc ebx   
147 [0x93]:          smovr_2 ebx, fp+0   
148 [0x94]:          movr ebx, egx   
149 [0x95]:          popobj2    
150 [0x96]:          movr adx, ebx   
151 [0x97]:          chklen adx   
152 [0x98]:          movnd adx   
153 [0x99]:          popobj   
154 [0x9a]: line: 53 movg @30 // @std.io#qbq.qcp   
155 [0x9b]:          movn #8   
157 [0x9d]:          pushobj   
158 [0x9e]:          movg @30 // @std.io#qbq.qcp   
159 [0x9f]:          movn #17   
161 [0xa1]:          pushobj   
162 [0xa2]:          loadl ebx, fp+0   
163 [0xa3]:          movr egx, ebx   
164 [0xa4]:          inc ebx   
165 [0xa5]:          smovr_2 ebx, fp+0   
166 [0xa6]:          movr ebx, egx   
167 [0xa7]:          popobj2    
168 [0xa8]:          movr adx, ebx   
169 [0xa9]:          chklen adx   
170 [0xaa]:          movnd adx   
171 [0xab]:          popobj   
172 [0xac]: line: 54 movg @30 // @std.io#qbq.qcp   
173 [0xad]:          movn #9   
175 [0xaf]:          pushobj   
176 [0xb0]:          movg @30 // @std.io#qbq.qcp   
177 [0xb1]:          movn #17   
179 [0xb3]:          pushobj   
180 [0xb4]:          loadl ebx, fp+0   
181 [0xb5]:          movr egx, ebx   
182 [0xb6]:          inc ebx   
183 [0xb7]:          smovr_2 ebx, fp+0   
184 [0xb8]:          movr ebx, egx   
185 [0xb9]:          popobj2    
186 [0xba]:          movr adx, ebx   
187 [0xbb]:          chklen adx   
188 [0xbc]:          movnd adx   
189 [0xbd]:          popobj   
190 [0xbe]: line: 55 movg @30 // @std.io#qbq.qcp   
191 [0xbf]:          movn #10   
193 [0xc1]:          pushobj   
194 [0xc2]:          movg @30 // @std.io#qbq.qcp   
195 [0xc3]:          movn #17   
197 [0xc5]:          pushobj   
198 [0xc6]:          loadl ebx, fp+0   
199 [0xc7]:          movr egx, ebx   
200 [0xc8]:          inc ebx   
201 [0xc9]:          smovr_2 ebx, fp+0   
202 [0xca]:          movr ebx, egx   
203 [0xcb]:          popobj2    
204 [0xcc]:          movr adx, ebx   
205 [0xcd]:          chklen adx   
206 [0xce]:          movnd adx   
207 [0xcf]:          popobj   
208 [0xd0]: line: 56 movg @30 // @std.io#qbq.qcp   
209 [0xd1]:          movn #11   
211 [0xd3]:          pushobj   
212 [0xd4]:          movg @30 // @std.io#qbq.qcp   
213 [0xd5]:          movn #17   
215 [0xd7]:          pushobj   
216 [0xd8]:          loadl ebx, fp+0   
217 [0xd9]:          movr egx, ebx   
218 [0xda]:          inc ebx   
219 [0xdb]:          smovr_2 ebx, fp+0   
220 [0xdc]:          movr ebx, egx   
221 [0xdd]:          popobj2    
222 [0xde]:          movr adx, ebx   
223 [0xdf]:          chklen adx   
224 [0xe0]:          movnd adx   
225 [0xe1]:          popobj   
226 [0xe2]: line: 57 movg @30 // @std.io#qbq.qcp   
227 [0xe3]:          movn #12   
229 [0xe5]:          pushobj   
230 [0xe6]:          movg @30 // @std.io#qbq.qcp   
231 [0xe7]:          movn #17   
233 [0xe9]:          pushobj   
234 [0xea]:          loadl ebx, fp+0   
235 [0xeb]:          movr egx, ebx   
236 [0xec]:          inc ebx   
237 [0xed]:          smovr_2 ebx, fp+0   
238 [0xee]:          movr ebx, egx   
239 [0xef]:          popobj2    
240 [0xf0]:          movr adx, ebx   
241 [0xf1]:          chklen adx   
242 [0xf2]:          movnd adx   
243 [0xf3]:          popobj   
244 [0xf4]: line: 58 movg @30 // @std.io#qbq.qcp   
245 [0xf5]:          movn #13   
247 [0xf7]:          pushobj   
248 [0xf8]:          movg @30 // @std.io#qbq.qcp   
249 [0xf9]:          movn #17   
251 [0xfb]:          pushobj   
252 [0xfc]:          loadl ebx, fp+0   
253 [0xfd]:          movr egx, ebx   
254 [0xfe]:          inc ebx   
255 [0xff]:          smovr_2 ebx, fp+0   
256 [0x100]:          movr ebx, egx   
257 [0x101]:          popobj2    
258 [0x102]:          movr adx, ebx   
259 [0x103]:          chklen adx   
260 [0x104]:          movnd adx   
261 [0x105]:          popobj   
262 [0x106]: line: 59 movg @30 // @std.io#qbq.qcp   
263 [0x107]:          movn #14   
265 [0x109]:          pushobj   
266 [0x10a]:          movg @30 // @std.io#qbq.qcp   
267 [0x10b]:          movn #17   
269 [0x10d]:          pushobj   
270 [0x10e]:          loadl ebx, fp+0   
271 [0x10f]:          movr egx, ebx   
272 [0x110]:          inc ebx   
273 [0x111]:          smovr_2 ebx, fp+0   
274 [0x112]:          movr ebx, egx   
275 [0x113]:          popobj2    
276 [0x114]:          movr adx, ebx   
277 [0x115]:          chklen adx   
278 [0x116]:          movnd adx   
279 [0x117]:          popobj   
280 [0x118]: line: 60 movg @30 // @std.io#qbq.qcp   
281 [0x119]:          movn #15   
283 [0x11b]:          pushobj   
284 [0x11c]:          movg @30 // @std.io#qbq.qcp   
285 [0x11d]:          movn #17   
287 [0x11f]:          pushobj   
288 [0x120]:          loadl ebx, fp+0   
289 [0x121]:          movr egx, ebx   
290 [0x122]:          inc ebx   
291 [0x123]:          smovr_2 ebx, fp+0   
292 [0x124]:          movr ebx, egx   
293 [0x125]:          popobj2    
294 [0x126]:          movr adx, ebx   
295 [0x127]:          chklen adx   
296 [0x128]:          movnd adx   
297 [0x129]:          popobj   
298 [0x12a]: line: 61 movg @30 // @std.io#qbq.qcp   
299 [0x12b]:          movn #16   
301 [0x12d]:          pushobj   
302 [0x12e]:          movg @30 // @std.io#qbq.qcp   
303 [0x12f]:          movn #17   
305 [0x131]:          pushobj   
306 [0x132]:          loadl ebx, fp+0   
307 [0x133]:          movr egx, ebx   
308 [0x134]:          inc ebx   
309 [0x135]:          smovr_2 ebx, fp+0   
310 [0x136]:          movr ebx, egx   
311 [0x137]:          popobj2    
312 [0x138]:          movr adx, ebx   
313 [0x139]:          chklen adx   
314 [0x13a]:          movnd adx   
315 [0x13b]:          popobj   
316 [0x13c]:          ret   
317 [0x13d]:          ret   


function: std#qaf.qir.wkv[3776] params(0) in file: qio:32:5: note:  
		class tmp {
		    ^

0 [0x0]: line: 34 call @3457 // <std#qaf.vsb>   
1 [0x1]:          loadval ebx   
2 [0x2]:          rstore ebx   
3 [0x3]:          movi #4, ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          shr ecx, ebx -> ebx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movg @11 // @std#qaf   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]: line: 35 movg @11 // @std#qaf   
16 [0x10]:          movn #0   
18 [0x12]:          movi #0, adx   
20 [0x14]:          iaload ebx, adx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3420 // <platform.kernel#qlb.qli.vqq>   
23 [0x17]:          ret   
24 [0x18]:          ret   


lambda: pxo#pxp.wkw[3777] params(0) in file: pxn:15:15: note:  
		   launcher = { ->
		              ^

0 [0x0]: line: 16 newstr @114 // I'm a quick task!   
1 [0x1]:          call @3437 // <std#qaf.vrh>   
2 [0x2]:          ret   


lambda: pxo#pxp.wkx[3778] params(0) in file: pxn:27:20: note:  
			.schedule(3000) = { ->
		                   ^

0 [0x0]: line: 28 newstr @115 // I'm a delayed task!   
1 [0x1]:          call @3437 // <std#qaf.vrh>   
2 [0x2]:          ret   


lambda: pxo#pxp.wky[3779] params(0) in file: pxn:38:20: note:  
			.schedule(1000) = { ->
		                   ^

0 [0x0]: line: 39 newstr @116 // I'm a joined task!   
1 [0x1]:          call @3437 // <std#qaf.vrh>   
2 [0x2]:          ret   


lambda: pxo#pxp.wla[3780] params(0) in file: pxn:51:13: note:  
			.block() = { ->
		            ^

0 [0x0]: line: 52 newstr @117 // I'm a blocked task!   
1 [0x1]:          call @3437 // <std#qaf.vrh>   
2 [0x2]:          ret   


lambda: pxo#pxp.wle[3781] params(1) in file: pxn:65:13: note:  
			.block() = { args : object[] ->
		            ^

0 [0x0]: line: 66 pushl 0   
1 [0x1]:          movi #1, ebx   
3 [0x3]:          popobj2    
4 [0x4]:          movr adx, ebx   
5 [0x5]:          chklen adx   
6 [0x6]:          movnd adx   
7 [0x7]:          movi #56, cmt   
9 [0x9]:          cast cmt   
10 [0xa]:          smovr_3 fp+1   
11 [0xb]: line: 67 pushl 1   
12 [0xc]:          call @3452 // <std#qaf.vrw>   
13 [0xd]:          ret   


lambda: pxo#pxp.wlg[3782] params(0) in file: pxn:80:27: note:  
		    .with_timeout(1000) = { ->
		                          ^

0 [0x0]: line: 81 istore 4000   
2 [0x2]:          call @3330 // <std.io#thread.sleep>   
3 [0x3]: line: 82 movg @0 // @pxo#pxp   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          istore 1   
9 [0x9]:          call @1664 // <std#qaf.qar.tzv>   
10 [0xa]:          pop   
11 [0xb]:          ret   


lambda: pxo#pxp.wli[3783] params(0) in file: pxn:100:38: note:  
		    .recurring(1000, milliseconds) = { ->
		                                     ^

0 [0x0]: line: 101 newstr @118 // Hello   
1 [0x1]:           call @3437 // <std#qaf.vrh>   
2 [0x2]:           ret   


constructor: pxo#pxp.qel.wlu[3784] params(1) in file: qej:7:19: note:  
			public observable(initial : t) {
		                  ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         itest adx   
2 [0x2]:         dup    
3 [0x3]:         call @3793 // <pxo#pxp.qja.wmo>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #3   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]: line: 8 ipushl #1   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         loadval ebx   
14 [0xe]:         movi #0, adx   
16 [0x10]:         rmov adx, ebx   
17 [0x11]:         ret   


function: pxo#pxp.qel.wlv[3785] params(1) in file: qej:11:12: note:  
			public def post(data : t) {
		           ^

0 [0x0]: line: 12 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 13 movi #1, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]: line: 14 pushl 0   
17 [0x11]:          call @3787 // <pxo#pxp.qel.wmz>   
18 [0x12]:          ret   


function: pxo#pxp.qel.wly[3786] params(1) in file: qej:17:12: note:  
			public def observe(on_update: (observable<t>)()) {
		           ^

0 [0x0]: line: 18 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 19 movl 0   
9 [0x9]:          movn #3   
11 [0xb]:          pushobj   
12 [0xc]:          pushl 0   
13 [0xd]:          call @3832 // <pxo#pxp.qja.wsp>   
14 [0xe]:          ret   


function: pxo#pxp.qel.wmz[3787] params(0) in file: qej:22:13: note:  
			private def notify_all() {
		            ^

0 [0x0]: line: 23 istorel -1, fp+2   
2 [0x2]:          movl 0   
3 [0x3]:          movn #3   
5 [0x5]:          pushobj   
6 [0x6]:          invoke_delegate 3791 { static=0, args=0 }   
8 [0x8]:          popl 3   
9 [0x9]:          iaddl 1, fp@2   
11 [0xb]:          movl 3   
12 [0xc]:          sizeof ecx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          lt ebx, ecx   
15 [0xf]:          jne 52   
16 [0x10]:          movnd ebx   
17 [0x11]:          pushobj   
18 [0x12]:          popl 1   
19 [0x13]: line: 24 movl 1   : try start: try block start
20 [0x14]: line: 25 movn #2   
22 [0x16]:          movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          pushl 0   
27 [0x1b]:          smov ebx, sp+[-1]   
28 [0x1c]:          calld ebx   
29 [0x1d]:          jmp @50   : try block end
30 [0x1e]: line: 27 movl 0   : catch(qed#qee.qgp)
31 [0x1f]:          movn #3   
33 [0x21]:          pushobj   
34 [0x22]:          pushl 1   
35 [0x23]:          istore 3847   
37 [0x25]:          call @3839 // <pxo#pxp.qja.wtz>   
38 [0x26]:          jmp @50   
39 [0x27]: line: 29 movl 0   : catch(std#error)
40 [0x28]:          movn #3   
42 [0x2a]:          pushobj   
43 [0x2b]:          pushl 1   
44 [0x2c]:          istore 3848   
46 [0x2e]:          call @3839 // <pxo#pxp.qja.wtz>   
47 [0x2f]: line: 30 pushl 4   
48 [0x30]:          throw    
49 [0x31]:          jmp @50   
50 [0x32]:          nop   : try end
51 [0x33]:          jmp @9   
52 [0x34]:          ret   


function: pxo#pxp.qel.wma[3788] params(0) in file: qej:35:12: note:  
			public def stop_listening() {
		           ^

0 [0x0]: line: 36 new_class @0 // pxo#pxp   
1 [0x1]:          movl 0   
2 [0x2]:          dup    
3 [0x3]:          call @3253 // <qed#qee.qgp.vjk>   
4 [0x4]:          throw    
5 [0x5]:          ret   


function: pxo#pxp.qel.wmb[3789] params(0) in file: qej:39:12: note:  
			public def get_data() : t = data;
		           ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


constructor: pxo#pxp.qel.wmc[3790] params(0) in file: qej:5:13: note:  
		public class observable<t> {
		            ^

0 [0x0]:         new_class @0 // pxo#pxp   
1 [0x1]:         itest adx   
2 [0x2]:         dup    
3 [0x3]:         call @3793 // <pxo#pxp.qja.wmo>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #3   
7 [0x7]:         popobj   
8 [0x8]:         ret   


pxo#pxp.qke.wmm[3791] params(0) in file: qkc:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: pxo#pxp.qke.wmn[3792] params(0) in file: qkc:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: pxo#pxp.qja.wmo[3793] params(0) in file: qiy:13:16: note:  
		    synced_list() {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // pxo#pxp.qel[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: pxo#pxp.qja.wmp[3794] params(1) in file: qiy:17:16: note:  
		    synced_list(starting_capacity: var) {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // pxo#pxp.qel[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: pxo#pxp.qja.wmq[3795] params(1) in file: qiy:21:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 23 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #2   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          _ulck   
12 [0xc]:          ret   


function: pxo#pxp.qja.wmr[3796] params(0) in file: qiy:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 23   
14 [0xe]:          pushnull    
15 [0xf]:          popobj2    
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          _ulck   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   
22 [0x16]:          jmp @44   
23 [0x17]: line: 30 movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @3286 // <std.io#qbq.vkr>   
37 [0x25]:          popobj2    
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          nop   
45 [0x2d]:          movl 0   
46 [0x2e]:          _ulck   


overload function: pxo#pxp.qja.wms[3797] params(1) in file: qiy:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 36 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 37 new_class @0 // pxo#pxp   
21 [0x15]:          shl adx, adx -> adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3846 // <pxo#pxp.qja.wts>   
26 [0x1a]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 38 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: pxo#pxp.qja.wmt[3798] params(1) in file: qiy:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 44 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 45 new_class @0 // pxo#pxp   
21 [0x15]:          shl adx, adx -> adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3846 // <pxo#pxp.qja.wts>   
26 [0x1a]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 46 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: pxo#pxp.qja.wmu[3799] params(0) in file: qiy:50:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 51 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3798 // <pxo#pxp.qja.wmt>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: pxo#pxp.qja.wmv[3800] params(2) in file: qiy:54:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 57 new_class @0 // pxo#pxp   
21 [0x15]:          shl adx, adx -> adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3846 // <pxo#pxp.qja.wts>   
26 [0x1a]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 59 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          smovr_3 fp+3   
39 [0x27]: line: 60 pushl 2   
40 [0x28]:          movl 0   
41 [0x29]:          movn #1   
43 [0x2b]:          pushobj   
44 [0x2c]:          loadl ebx, fp+1   
45 [0x2d]:          popobj2    
46 [0x2e]:          movr adx, ebx   
47 [0x2f]:          chklen adx   
48 [0x30]:          movnd adx   
49 [0x31]:          popobj   
50 [0x32]: line: 61 pushl 3   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          popobj2    
54 [0x36]:          returnobj   
55 [0x37]:          ret   
56 [0x38]:          movl 0   
57 [0x39]:          _ulck   


function: pxo#pxp.qja.wmw[3801] params(0) in file: qiy:65:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 67 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3266 // <std.io#qbq.vjx>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 69 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3266 // <std.io#qbq.vjx>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: pxo#pxp.qja.wmx[3802] params(0) in file: qiy:72:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // pxo#pxp.qel[]   
6 [0x6]:          movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          popobj   
10 [0xa]: line: 75 movi #0, ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]:          movl 0   
19 [0x13]:          _ulck   
20 [0x14]:          ret   


constructor: pxo#pxp.qah.wne[3803] params(0) in file: qad:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // pxo#pxp.qel[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: pxo#pxp.qah.wnf[3804] params(1) in file: qad:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // pxo#pxp.qel[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: pxo#pxp.qah.wng[3805] params(1) in file: qad:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3816 // <pxo#pxp.qah.wnr>   
4 [0x4]:          ret   


function: pxo#pxp.qah.wnh[3806] params(0) in file: qad:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: pxo#pxp.qah.wni[3807] params(1) in file: qad:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: pxo#pxp.qah.wnj[3808] params(0) in file: qad:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3286 // <std.io#qbq.vkr>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: pxo#pxp.qah.wnk[3809] params(1) in file: qad:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3830 // <pxo#pxp.qah.wou>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: pxo#pxp.qah.wnl[3810] params(1) in file: qad:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3830 // <pxo#pxp.qah.wou>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: pxo#pxp.qah.wnm[3811] params(0) in file: qad:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3810 // <pxo#pxp.qah.wnl>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: pxo#pxp.qah.wnn[3812] params(2) in file: qad:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // pxo#pxp   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3830 // <pxo#pxp.qah.wou>   
24 [0x18]:          call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: pxo#pxp.qah.wno[3813] params(0) in file: qad:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3266 // <std.io#qbq.vjx>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @3266 // <std.io#qbq.vjx>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: pxo#pxp.qah.wnp[3814] params(0) in file: qad:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // pxo#pxp.qel[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: pxo#pxp.qah.wnq[3815] params(1) in file: qad:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3286 // <std.io#qbq.vkr>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #100, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: pxo#pxp.qah.wnr[3816] params(1) in file: qad:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @3286 // <std.io#qbq.vkr>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #100, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // pxo#pxp.qel[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: pxo#pxp.qah.wns[3817] params(1) in file: qad:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3813 // <pxo#pxp.qah.wno>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: pxo#pxp.qah.wnt[3818] params(1) in file: qad:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: pxo#pxp.qah.wnu[3819] params(0) in file: qad:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: pxo#pxp.qah.wnv[3820] params(0) in file: qad:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: pxo#pxp.qah.wnw[3821] params(2) in file: qad:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3830 // <pxo#pxp.qah.wou>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3817 // <pxo#pxp.qah.wns>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3813 // <pxo#pxp.qah.wno>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: pxo#pxp.qah.woa[3822] params(2) in file: qad:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: pxo#pxp.qah.wob[3823] params(1) in file: qad:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3827 // <pxo#pxp.qah.woo>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: pxo#pxp.qah.wof[3824] params(2) in file: qad:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3827 // <pxo#pxp.qah.woo>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: pxo#pxp.qah.woj[3825] params(2) in file: qad:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: pxo#pxp.qah.won[3826] params(1) in file: qad:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: pxo#pxp.qah.woo[3827] params(1) in file: qad:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // pxo#pxp   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3830 // <pxo#pxp.qah.wou>   
24 [0x18]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @3276 // <std.io#qbq.vkh>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3819 // <pxo#pxp.qah.wnu>   
77 [0x4d]:           ret   


function: pxo#pxp.qah.wos[3828] params(2) in file: qad:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: pxo#pxp.qah.wot[3829] params(0) in file: qad:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // pxo#pxp   
1 [0x1]:           idiv adx, #? (112)   
3 [0x3]:           call @3118 // <std#qaf.qbf.vdu>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @7 // [    
8 [0x8]:           call @3114 // <std#qaf.qbf.vdq>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3110 // <std#qaf.qbf.vdm>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @8 // ,    
56 [0x38]:           call @3114 // <std#qaf.qbf.vdq>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @9 //  ]   
64 [0x40]:           call @3114 // <std#qaf.qbf.vdq>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3091 // <std#qaf.qbf.vct>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: pxo#pxp.qah.wou[3830] params(1) in file: qad:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @10 // Index:    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3507 // <std#string.operator+>   
7 [0x7]:           newstr @11 // , size:    
8 [0x8]:           call @3487 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3507 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: pxo#pxp.qja.wso[3831] params(1) in file: qiy:79:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 81 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3286 // <std.io#qbq.vkr>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #100, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 82 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movl 0   
38 [0x26]:          _ulck   
39 [0x27]:          ret   


function: pxo#pxp.qja.wsp[3832] params(1) in file: qiy:86:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 88 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          sizeof ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 20   
18 [0x12]: line: 89 pushl 0   
19 [0x13]:          call @3801 // <pxo#pxp.qja.wmw>   
20 [0x14]:          nop   
21 [0x15]: line: 90 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #1   
25 [0x19]:          pushobj   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          movr egx, ebx   
33 [0x21]:          inc ebx   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movr ebx, egx   
38 [0x26]:          popobj2    
39 [0x27]:          movr adx, ebx   
40 [0x28]:          chklen adx   
41 [0x29]:          movnd adx   
42 [0x2a]:          popobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          _ulck   
45 [0x2d]:          ret   


function: pxo#pxp.qja.wsq[3833] params(1) in file: qiy:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 96 istorel 0, fp+2   
4 [0x4]:          ipushl #2   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          lt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 39   
16 [0x10]: line: 97 pushl 1   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          loadl ebx, fp+2   
22 [0x16]:          popobj2    
23 [0x17]:          movr adx, ebx   
24 [0x18]:          chklen adx   
25 [0x19]:          movnd adx   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 35   
30 [0x1e]: line: 98 loadl ebx, fp+2   
31 [0x1f]:          return_val ebx   
32 [0x20]:          movl 0   
33 [0x21]:          _ulck   
34 [0x22]:          ret   
35 [0x23]:          nop   
36 [0x24]:          iaddl 1, fp@2   
38 [0x26]:          jmp @4   
39 [0x27]: line: 102 istorel -1, fp+0   
41 [0x29]:           movl 0   
42 [0x2a]:           _ulck   
43 [0x2b]:           ret   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   


function: pxo#pxp.qja.wsr[3834] params(0) in file: qiy:106:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 108 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 109 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: pxo#pxp.qja.wss[3835] params(0) in file: qiy:113:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 115 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           return_val ebx   
9 [0x9]:           movl 0   
10 [0xa]:           _ulck   
11 [0xb]:           ret   
12 [0xc]:           movl 0   
13 [0xd]:           _ulck   


function: pxo#pxp.qja.wst[3836] params(0) in file: qiy:119:8: note:  
		    def empty() : var {
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 121 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           test ecx, ebx   
13 [0xd]:           return_val cmt   
14 [0xe]:           movl 0   
15 [0xf]:           _ulck   
16 [0x10]:           ret   
17 [0x11]:           movl 0   
18 [0x12]:           _ulck   


function: pxo#pxp.qja.wsu[3837] params(2) in file: qiy:125:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 127 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 128 new_class @0 // pxo#pxp   
21 [0x15]:           shl adx, adx -> adx   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3846 // <pxo#pxp.qja.wts>   
26 [0x1a]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 130 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #0, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           test ecx, ebx   
40 [0x28]:           jne 45   
41 [0x29]: line: 131 pushl 0   
42 [0x2a]:           pushl 2   
43 [0x2b]:           call @3832 // <pxo#pxp.qja.wsp>   
44 [0x2c]:           jmp @134   
45 [0x2d]: line: 133 movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 0   
53 [0x35]:           movn #1   
55 [0x37]:           sizeof ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           gte ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 63   
61 [0x3d]: line: 134 pushl 0   
62 [0x3e]:           call @3801 // <pxo#pxp.qja.wmw>   
63 [0x3f]:           nop   
64 [0x40]: line: 135 movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           movi #0, adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           movr egx, ebx   
71 [0x47]:           inc ebx   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           rmov adx, ebx   
75 [0x4b]: line: 136 movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #1, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           smovr_2 ebx, fp+3   
87 [0x57]:           ipushl #3   
88 [0x58]:           loadl ebx, fp+1   
89 [0x59]:           loadval ecx   
90 [0x5a]:           gt ecx, ebx   
91 [0x5b]:           movr ebx, cmt   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 123   
94 [0x5e]: line: 137 movl 0   
95 [0x5f]:           movn #1   
97 [0x61]:           pushobj   
98 [0x62]:           ipushl #3   
99 [0x63]:           movi #1, ebx   
101 [0x65]:           loadval ecx   
102 [0x66]:           sub ecx, ebx -> ebx   
103 [0x67]:           popobj2    
104 [0x68]:           movr adx, ebx   
105 [0x69]:           chklen adx   
106 [0x6a]:           movnd adx   
107 [0x6b]:           pushobj   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #1   
111 [0x6f]:           pushobj   
112 [0x70]:           loadl ebx, fp+3   
113 [0x71]:           popobj2    
114 [0x72]:           movr adx, ebx   
115 [0x73]:           chklen adx   
116 [0x74]:           movnd adx   
117 [0x75]:           popobj   
118 [0x76]:           loadl ebx, fp+3   
119 [0x77]:           movr egx, ebx   
120 [0x78]:           dec ebx   
121 [0x79]:           smovr_2 ebx, fp+3   
122 [0x7a]:           jmp @87   
123 [0x7b]: line: 138 pushl 2   
124 [0x7c]:           movl 0   
125 [0x7d]:           movn #1   
127 [0x7f]:           pushobj   
128 [0x80]:           loadl ebx, fp+1   
129 [0x81]:           popobj2    
130 [0x82]:           movr adx, ebx   
131 [0x83]:           chklen adx   
132 [0x84]:           movnd adx   
133 [0x85]:           popobj   
134 [0x86]:           nop   
135 [0x87]:           movl 0   
136 [0x88]:           _ulck   
137 [0x89]:           ret   


function: pxo#pxp.qja.wsv[3838] params(1) in file: qiy:144:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 146 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 40   
16 [0x10]: line: 147 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+2   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           itest ebx   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 148 pushl 0   
31 [0x1f]:           ipushl #2   
32 [0x20]:           call @3840 // <pxo#pxp.qja.wta>   
33 [0x21]: line: 149 movl 0   
34 [0x22]:           _ulck   
35 [0x23]:           ret   
36 [0x24]:           nop   
37 [0x25]:           iaddl 1, fp@2   
39 [0x27]:           jmp @4   
40 [0x28]:           movl 0   
41 [0x29]:           _ulck   
42 [0x2a]:           ret   


function: pxo#pxp.qja.wtz[3839] params(2) in file: qiy:155:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 157 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 43   
16 [0x10]: line: 158 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 39   
33 [0x21]: line: 159 pushl 0   
34 [0x22]:           ipushl #3   
35 [0x23]:           call @3840 // <pxo#pxp.qja.wta>   
36 [0x24]: line: 160 movl 0   
37 [0x25]:           _ulck   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @4   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           ret   


function: pxo#pxp.qja.wta[3840] params(1) in file: qiy:166:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 168 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 169 new_class @0 // pxo#pxp   
21 [0x15]:           shl adx, adx -> adx   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3846 // <pxo#pxp.qja.wts>   
26 [0x1a]:           call @3549 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 171 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           loadl ebx, fp+1   
37 [0x25]:           loadval ecx   
38 [0x26]:           sub ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           sub ecx, ebx -> ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]: line: 172 ipushl #2   
46 [0x2e]:           movi #0, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           gt ecx, ebx   
50 [0x32]:           movr ebx, cmt   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 76   
53 [0x35]: line: 173 movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           pushobj   
57 [0x39]:           movl 0   
58 [0x3a]:           movn #1   
60 [0x3c]:           pushobj   
61 [0x3d]:           ipushl #1   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           call @3276 // <std.io#qbq.vkh>   
76 [0x4c]:           nop   
77 [0x4d]: line: 175 pushl 0   
78 [0x4e]:           call @3834 // <pxo#pxp.qja.wsr>   
79 [0x4f]:           movl 0   
80 [0x50]:           _ulck   
81 [0x51]:           ret   


function: pxo#pxp.qja.wte[3841] params(2) in file: qiy:179:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 180 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 181 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 42   
16 [0x10]: line: 182 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 38   
33 [0x21]: line: 183 loadl ebx, fp+3   
34 [0x22]:           return_val ebx   
35 [0x23]:           movl 0   
36 [0x24]:           _ulck   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @4   
42 [0x2a]: line: 187 istorel -1, fp+0   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   
46 [0x2e]:           ret   
47 [0x2f]:           movl 0   
48 [0x30]:           _ulck   


function: pxo#pxp.qja.wti[3842] params(1) in file: qiy:191:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 193 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 134   
16 [0x10]: line: 195 istorel 0, fp+3   
18 [0x12]:           ipushl #3   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           movi #0, adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           lt ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 131   
30 [0x1e]: line: 196 ipushl #3   
31 [0x1f]:           movi #1, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           add ecx, ebx -> ebx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           movi #0, adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           lt ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 127   
47 [0x2f]: line: 198 ipushl #1   
48 [0x30]:           movl 0   
49 [0x31]:           movn #1   
51 [0x33]:           pushobj   
52 [0x34]:           loadl ebx, fp+3   
53 [0x35]:           popobj2    
54 [0x36]:           movr adx, ebx   
55 [0x37]:           chklen adx   
56 [0x38]:           movnd adx   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #3   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           popobj2    
68 [0x44]:           movr adx, ebx   
69 [0x45]:           chklen adx   
70 [0x46]:           movnd adx   
71 [0x47]:           pushobj   
72 [0x48]:           smov ebx, sp+[-2]   
73 [0x49]:           calld ebx   
74 [0x4a]:           loadval ebx   
75 [0x4b]:           movr cmt, ebx   
76 [0x4c]:           jne 126   
77 [0x4d]: line: 199 movl 0   
78 [0x4e]:           movn #1   
80 [0x50]:           pushobj   
81 [0x51]:           loadl ebx, fp+3   
82 [0x52]:           popobj2    
83 [0x53]:           movr adx, ebx   
84 [0x54]:           chklen adx   
85 [0x55]:           movnd adx   
86 [0x56]:           smovr_3 fp+4   
87 [0x57]: line: 200 movl 0   
88 [0x58]:           movn #1   
90 [0x5a]:           pushobj   
91 [0x5b]:           ipushl #3   
92 [0x5c]:           movi #1, ebx   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           add ecx, ebx -> ebx   
96 [0x60]:           popobj2    
97 [0x61]:           movr adx, ebx   
98 [0x62]:           chklen adx   
99 [0x63]:           movnd adx   
100 [0x64]:           pushobj   
101 [0x65]:           movl 0   
102 [0x66]:           movn #1   
104 [0x68]:           pushobj   
105 [0x69]:           loadl ebx, fp+3   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           popobj   
111 [0x6f]: line: 201 pushl 4   
112 [0x70]:           movl 0   
113 [0x71]:           movn #1   
115 [0x73]:           pushobj   
116 [0x74]:           ipushl #3   
117 [0x75]:           movi #1, ebx   
119 [0x77]:           loadval ecx   
120 [0x78]:           add ecx, ebx -> ebx   
121 [0x79]:           popobj2    
122 [0x7a]:           movr adx, ebx   
123 [0x7b]:           chklen adx   
124 [0x7c]:           movnd adx   
125 [0x7d]:           popobj   
126 [0x7e]:           nop   
127 [0x7f]:           nop   
128 [0x80]:           iaddl 1, fp@3   
130 [0x82]:           jmp @18   
131 [0x83]:           iaddl 1, fp@2   
133 [0x85]:           jmp @4   
134 [0x86]:           movl 0   
135 [0x87]:           _ulck   
136 [0x88]:           ret   


function: pxo#pxp.qja.wtm[3843] params(2) in file: qiy:209:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 211 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 52   
16 [0x10]: line: 212 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 48   
33 [0x21]: line: 213 movl 0   
34 [0x22]:           movn #1   
36 [0x24]:           pushobj   
37 [0x25]:           loadl ebx, fp+3   
38 [0x26]:           popobj2    
39 [0x27]:           movr adx, ebx   
40 [0x28]:           chklen adx   
41 [0x29]:           movnd adx   
42 [0x2a]:           pushobj   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           popobj2    
46 [0x2e]:           returnobj   
47 [0x2f]:           ret   
48 [0x30]:           nop   
49 [0x31]:           iaddl 1, fp@3   
51 [0x33]:           jmp @4   
52 [0x34]: line: 217 movl 4   
53 [0x35]:           del   
54 [0x36]: line: 218 pushl 4   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           popobj2    
58 [0x3a]:           returnobj   
59 [0x3b]:           ret   
60 [0x3c]:           movl 0   
61 [0x3d]:           _ulck   


function: pxo#pxp.qja.wtq[3844] params(2) in file: qiy:222:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 223 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 224 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 53   
16 [0x10]: line: 225 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 49   
33 [0x21]: line: 226 pushl 1   
34 [0x22]:           movl 0   
35 [0x23]:           movn #1   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+3   
39 [0x27]:           popobj2    
40 [0x28]:           movr adx, ebx   
41 [0x29]:           chklen adx   
42 [0x2a]:           movnd adx   
43 [0x2b]:           popobj   
44 [0x2c]: line: 227 istorel 1, fp+0   
46 [0x2e]:           movl 0   
47 [0x2f]:           _ulck   
48 [0x30]:           ret   
49 [0x31]:           nop   
50 [0x32]:           iaddl 1, fp@3   
52 [0x34]:           jmp @4   
53 [0x35]: line: 231 istorel 0, fp+0   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           ret   
58 [0x3a]:           movl 0   
59 [0x3b]:           _ulck   


function: pxo#pxp.qja.wtr[3845] params(0) in file: qiy:235:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 236 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 237 new_class @0 // pxo#pxp   
3 [0x3]:           idiv adx, #? (112)   
5 [0x5]:           call @3118 // <std#qaf.qbf.vdu>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 239 pushl 1   
9 [0x9]:           newstr @7 // [    
10 [0xa]:           call @3114 // <std#qaf.qbf.vdq>   
11 [0xb]:           pop   
12 [0xc]: line: 240 istorel 0, fp+2   
14 [0xe]:           ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           loadval ecx   
22 [0x16]:           lt ecx, ebx   
23 [0x17]:           movr ebx, cmt   
24 [0x18]:           movr cmt, ebx   
25 [0x19]:           jne 64   
26 [0x1a]: line: 241 pushl 1   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           loadl ebx, fp+2   
32 [0x20]:           popobj2    
33 [0x21]:           movr adx, ebx   
34 [0x22]:           chklen adx   
35 [0x23]:           movnd adx   
36 [0x24]:           pushobj   
37 [0x25]:           call @3110 // <std#qaf.qbf.vdm>   
38 [0x26]:           pop   
39 [0x27]: line: 243 ipushl #2   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           add ecx, ebx -> ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           loadval ecx   
52 [0x34]:           lt ecx, ebx   
53 [0x35]:           movr ebx, cmt   
54 [0x36]:           movr cmt, ebx   
55 [0x37]:           jne 60   
56 [0x38]: line: 244 pushl 1   
57 [0x39]:           newstr @8 // ,    
58 [0x3a]:           call @3114 // <std#qaf.qbf.vdq>   
59 [0x3b]:           pop   
60 [0x3c]:           nop   
61 [0x3d]:           iaddl 1, fp@2   
63 [0x3f]:           jmp @14   
64 [0x40]: line: 248 pushl 1   
65 [0x41]:           newstr @9 //  ]   
66 [0x42]:           call @3114 // <std#qaf.qbf.vdq>   
67 [0x43]:           pop   
68 [0x44]: line: 249 pushl 1   
69 [0x45]:           call @3091 // <std#qaf.qbf.vct>   
70 [0x46]:           popobj2    
71 [0x47]:           pushobj   
72 [0x48]:           movl 0   
73 [0x49]:           _ulck   
74 [0x4a]:           popobj2    
75 [0x4b]:           returnobj   
76 [0x4c]:           ret   
77 [0x4d]:           movl 0   
78 [0x4e]:           _ulck   


function: pxo#pxp.qja.wts[3846] params(1) in file: qiy:253:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 254 new_class @0 // pxo#pxp   
1 [0x1]:           movnd adx   
2 [0x2]:           dup    
3 [0x3]:           newstr @10 // Index:    
4 [0x4]:           call @3475 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3507 // <std#string.operator+>   
7 [0x7]:           newstr @11 // , size:    
8 [0x8]:           call @3487 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3507 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


lambda: pxo#pxp.wxu[3847] params(2) in file: qej:27:39: note:  
		                observers.remove(obs, {it, it2 -> return it == it2; });
		                                      ^

0 [0x0]: line: 27 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          itest ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


lambda: pxo#pxp.wxy[3848] params(2) in file: qej:29:39: note:  
		                observers.remove(obs, {it, it2 -> return it == it2; });
		                                      ^

0 [0x0]: line: 29 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          itest ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


constructor: pxo#pxp.qgf.wyz[3849] params(1) in file: qgd:13:10: note:  
			deferred(scheduled_job : job) {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3790 // <pxo#pxp.qel.wmc>   
2 [0x2]: line: 14 pushl 1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #6   
6 [0x6]:          popobj   
7 [0x7]:          ret   


function: pxo#pxp.qgf.wya[3850] params(0) in file: qgd:17:13: note:  
			private def await(): t {
		            ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #6   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 19 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          return_val ebx   
15 [0xf]:          ret   
16 [0x10]:          nop   
17 [0x11]: line: 21 movi #1, ebx   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 59   
21 [0x15]: line: 22 movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          iaload ebx, adx   
27 [0x1b]:          skpe ebx // pc = 34   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #6   
31 [0x1f]:          pushobj   
32 [0x20]:          call @3237 // <qed#qee.qew.viu>   
33 [0x21]:          loadval ebx   
34 [0x22]:          movr cmt, ebx   
35 [0x23]:          jne 53   
36 [0x24]: line: 23 movi #0, ebx   
38 [0x26]:          movl 0   
39 [0x27]:          movn #0   
41 [0x29]:          movi #0, adx   
43 [0x2b]:          rmov adx, ebx   
44 [0x2c]: line: 24 movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          iaload ebx, adx   
50 [0x32]:          return_val ebx   
51 [0x33]:          ret   
52 [0x34]:          jmp @56   
53 [0x35]: line: 26 istore 2   
55 [0x37]:          call @3330 // <std.io#thread.sleep>   
56 [0x38]:          nop   
57 [0x39]: line: 27 call @3334 // <std.io#thread.yield>   
58 [0x3a]:          jmp @17   
59 [0x3b]: line: 30 movl 0   
60 [0x3c]:          movn #1   
62 [0x3e]:          movi #0, adx   
64 [0x40]:          iaload ebx, adx   
65 [0x41]:          return_val ebx   
66 [0x42]:          ret   


function: pxo#pxp.qgf.wyb[3851] params(0) in file: qgd:33:5: note:  
			def get_job() := scheduled_job;
		    ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #6   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


constructor: pxo#pxp.qgf.wyc[3852] params(0) in file: qgd:5:6: note:  
		class deferred<t> base observable<t> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3790 // <pxo#pxp.qel.wmc>   
2 [0x2]:         ret   


function: pxo#pxp.qgf.wyd[3853] params(0) in file: qgd:7:17: note:  
		    response : t;
		                ^

0 [0x0]: line: 9 pushl 0   
1 [0x1]:         call @3850 // <pxo#pxp.qgf.wya>   
2 [0x2]:         movl 0   
3 [0x3]:         movn #4   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]: line: 10 movl 0   
10 [0xa]:          movn #4   
12 [0xc]:          movi #0, adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


constructor: pxo#pxp.qfv.wyj[3854] params(1) in file: qft:4:15: note:  
			deferred_task(scheduled_job : job) -> base(scheduled_job) {}
		              ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3849 // <pxo#pxp.qgf.wyz>   
3 [0x3]:         ret   


function: pxo#pxp.qfv.wyn[3855] params(2) in file: qft:6:15: note:  
		    static def for_result(builder : job_builder, main: (object, object[])()) : deferred<t> {
		              ^

0 [0x0]: line: 7 new_class @0 // pxo#pxp   
1 [0x1]:         pushnull    
2 [0x2]:         dup    
3 [0x3]:         movl 0   
4 [0x4]:         movn #1   
6 [0x6]:         pushobj   
7 [0x7]:         call @3854 // <pxo#pxp.qfv.wyj>   
8 [0x8]:         popobj2    
9 [0x9]:         smovr_3 fp+2   
10 [0xa]: line: 8 pushl 2   
11 [0xb]:         movl 0   
12 [0xc]:         movn #1   
14 [0xe]:         movn #7   
16 [0x10]:         popobj   
17 [0x11]: line: 9 pushl 0   
18 [0x12]:         ipushl #1   
19 [0x13]:         call @3211 // <qed#qee.qeg.vho>   
20 [0x14]:         pop   
21 [0x15]: line: 10 movl 2   
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: pxo#pxp.qfv.wyq[3856] params(2) in file: qft:13:15: note:  
		    static def for_result(builder : job_builder, main: (object)()) : deferred<t> {
		              ^

0 [0x0]: line: 14 new_class @0 // pxo#pxp   
1 [0x1]:          pushnull    
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          pushobj   
7 [0x7]:          call @3854 // <pxo#pxp.qfv.wyj>   
8 [0x8]:          popobj2    
9 [0x9]:          smovr_3 fp+2   
10 [0xa]: line: 15 pushl 2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          movn #7   
16 [0x10]:          popobj   
17 [0x11]: line: 16 pushl 0   
18 [0x12]:          ipushl #1   
19 [0x13]:          call @3212 // <qed#qee.qeg.vhq>   
20 [0x14]:          pop   
21 [0x15]: line: 17 movl 2   
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: pxo#pxp.qfv.wyu[3857] params(1) in file: qft:20:15: note:  
		    static def for_result(main: (object, object[])()) : deferred<t> {
		              ^

0 [0x0]: line: 21 call @3263 // <qed#qee.qgy.vju>   
1 [0x1]:          popobj2    
2 [0x2]:          smovr_3 fp+1   
3 [0x3]: line: 22 new_class @0 // pxo#pxp   
4 [0x4]:          pushnull    
5 [0x5]:          dup    
6 [0x6]:          movl 1   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          call @3854 // <pxo#pxp.qfv.wyj>   
11 [0xb]:          popobj2    
12 [0xc]:          smovr_3 fp+2   
13 [0xd]: line: 23 pushl 2   
14 [0xe]:          movl 1   
15 [0xf]:          movn #1   
17 [0x11]:          movn #7   
19 [0x13]:          popobj   
20 [0x14]: line: 24 pushl 1   
21 [0x15]:          ipushl #0   
22 [0x16]:          call @3211 // <qed#qee.qeg.vho>   
23 [0x17]:          pop   
24 [0x18]: line: 25 movl 2   
25 [0x19]:          returnobj   
26 [0x1a]:          ret   


function: pxo#pxp.qfv.wyx[3858] params(1) in file: qft:28:15: note:  
		    static def for_result(main: (object)()) : deferred<t> {
		              ^

0 [0x0]: line: 29 call @3263 // <qed#qee.qgy.vju>   
1 [0x1]:          popobj2    
2 [0x2]:          smovr_3 fp+1   
3 [0x3]: line: 30 new_class @0 // pxo#pxp   
4 [0x4]:          ipushl #0   
5 [0x5]:          dup    
6 [0x6]:          movl 1   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          call @3849 // <pxo#pxp.qgf.wyz>   
11 [0xb]:          popobj2    
12 [0xc]:          smovr_3 fp+2   
13 [0xd]: line: 31 pushl 2   
14 [0xe]:          movl 1   
15 [0xf]:          movn #1   
17 [0x11]:          movn #7   
19 [0x13]:          popobj   
20 [0x14]: line: 32 pushl 1   
21 [0x15]:          ipushl #0   
22 [0x16]:          call @3212 // <qed#qee.qeg.vhq>   
23 [0x17]:          pop   
24 [0x18]: line: 33 movl 2   
25 [0x19]:          returnobj   
26 [0x1a]:          ret   


constructor: pxo#pxp.qfv.wyy[3859] params(0) in file: qft:3:6: note:  
		class deferred_task<t> base deferred<t> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3852 // <pxo#pxp.qgf.wyc>   
2 [0x2]:         ret   


lambda: pxo#pxp.xzq[3860] params(1) in file: pxn:118:9: note:  
		        { task: object ->
		        ^

0 [0x0]: line: 119 istore 500   
2 [0x2]:           call @3330 // <std.io#thread.sleep>   
3 [0x3]: line: 120 movl 0   
4 [0x4]:           movi #98, cmt   
6 [0x6]:           cast cmt   
7 [0x7]:           pushobj   
8 [0x8]:           istore 1500   
10 [0xa]:           call @3785 // <pxo#pxp.qel.wlv>   
11 [0xb]:           ret   


lambda: pxo#pxp.xzt[3861] params(1) in file: pxn:137:9: note:  
		        { task: object ->
		        ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movi #98, cmt   
3 [0x3]:           cast cmt   
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 139 istorel 0, fp+2   
7 [0x7]:           loadl ecx, fp+2   
8 [0x8]:           movi #10, ebx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 23   
14 [0xe]: line: 140 istore 500   
16 [0x10]:           call @3330 // <std.io#thread.sleep>   
17 [0x11]: line: 141 pushl 1   
18 [0x12]:           ipushl #2   
19 [0x13]:           call @3785 // <pxo#pxp.qel.wlv>   
20 [0x14]:           iaddl 1, fp@2   
22 [0x16]:           jmp @7   
23 [0x17]:           ret   


lambda: pxo#pxp.xzw[3862] params(1) in file: pxn:146:22: note:  
		    deferred.observe({ obs: observable<var> ->
		                     ^

0 [0x0]: line: 147 pushl 0   
1 [0x1]:           call @3789 // <pxo#pxp.qel.wmb>   
2 [0x2]:           loadval ebx   
3 [0x3]:           rstore ebx   
4 [0x4]:           movi #9, ebx   
6 [0x6]:           loadval ecx   
7 [0x7]:           test ecx, ebx   
8 [0x8]:           jne 11   
9 [0x9]: line: 148 pushl 0   
10 [0xa]:           call @3788 // <pxo#pxp.qel.wma>   
11 [0xb]:           nop   
12 [0xc]: line: 151 new_class @0 // pxo#pxp   
13 [0xd]:           movnd adx   
14 [0xe]:           dup    
15 [0xf]:           newstr @119 // received:    
16 [0x10]:           call @3475 // <std#string.string>   
17 [0x11]:           pushl 0   
18 [0x12]:           call @3789 // <pxo#pxp.qel.wmb>   
19 [0x13]:           call @3507 // <std#string.operator+>   
20 [0x14]:           call @3452 // <std#qaf.vrw>   
21 [0x15]:           ret   


lambda: qed#qee.xnw[3863] params(2) in file: qem:71:35: note:  
				job_queue.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                  ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: qed#qee.xso[3864] params(2) in file: qfw:89:52: note:  
		                        jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                                   ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: qed#qee.xsx[3865] params(2) in file: qfw:104:48: note:  
		                    jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                               ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #15   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #15   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


lambda: qed#qee.xtf[3866] params(1) in file: qfw:128:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 129 pushl 0   
1 [0x1]:           movg @32 // @qed#qee   
2 [0x2]:           movn #3   
4 [0x4]:           pushobj   
5 [0x5]:           call @3350 // <std.io#thread.operator==>   
6 [0x6]:           loadval ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 12   
9 [0x9]:           istorel 0, fp+0   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 131 movg @32 // @qed#qee   
14 [0xe]:           movn #5   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           call @3219 // <qed#qee.qeo.vhy>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           pushnull    
24 [0x18]:           itest ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


lambda: qed#qee.xts[3867] params(1) in file: qfw:162:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 163 pushl 0   
1 [0x1]:           movg @32 // @qed#qee   
2 [0x2]:           movn #3   
4 [0x4]:           pushobj   
5 [0x5]:           call @3350 // <std.io#thread.operator==>   
6 [0x6]:           loadval ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 12   
9 [0x9]:           istorel 0, fp+0   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 164 movg @32 // @qed#qee   
14 [0xe]:           movn #5   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           call @3219 // <qed#qee.qeo.vhy>   
19 [0x13]:           popobj2    
20 [0x14]:           smovr_3 fp+1   
21 [0x15]: line: 166 movl 1   
22 [0x16]:           movn #0   
24 [0x18]:           pushobj   
25 [0x19]:           pushnull    
26 [0x1a]:           itest ebx   
27 [0x1b]:           skne ebx // pc = 61   
28 [0x1c]:           movl 1   
29 [0x1d]:           movn #1   
31 [0x1f]:           movi #0, adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movi #0, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           gt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           skne ebx // pc = 61   
41 [0x29]:           movg @32 // @qed#qee   
42 [0x2a]:           movn #4   
44 [0x2c]:           movi #0, adx   
46 [0x2e]:           iaload ebx, adx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 1   
49 [0x31]:           movn #1   
51 [0x33]:           movi #0, adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           loadval ecx   
55 [0x37]:           sub ecx, ebx -> ebx   
56 [0x38]:           rstore ebx   
57 [0x39]:           movi #180000, ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           gt ecx, ebx   
61 [0x3d]:           return_val cmt   
62 [0x3e]:           ret   


lambda: qed#qee.xtv[3868] params(1) in file: qfw:177:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 178 movg @32 // @qed#qee   
1 [0x1]:           movn #5   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @3219 // <qed#qee.qeo.vhy>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 179 movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           skne ebx // pc = 48   
15 [0xf]:           movl 1   
16 [0x10]:           movn #1   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           rstore ebx   
22 [0x16]:           movi #0, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           gt ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           skne ebx // pc = 48   
28 [0x1c]:           movg @32 // @qed#qee   
29 [0x1d]:           movn #4   
31 [0x1f]:           movi #0, adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movl 1   
36 [0x24]:           movn #1   
38 [0x26]:           movi #0, adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movi #180000, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           return_val cmt   
49 [0x31]:           ret   


