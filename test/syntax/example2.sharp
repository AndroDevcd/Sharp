mod application;

import system.io;

    macros internal () {

    };
class Main {

     dynamic_object o = 9;
     public static const Heap heap = null;

    public Main(Math i) {

    }

    macros internal () {

    };

     public function operator+(SimpleClass simple) : dynamic_object {
         return value + simple.value;
     }

     public static function initGc(int x, Heap heap) : dynamic_object {
        o = new Gc();
        Thread thread = new Thread("gc_thread", o);
        thread.start();
        base->run();
        self->run();
     }

     public static function initHeap() {
        heap = new Heap(128, Heap.KB_UNIT);
        if(heap == null) {
            throw new OutOfMemoryException("could not create the heap.");
        }

        heap.attachToGc();
     }

     public static function __init(String[] args) {
        initGc();
        initHeap();
        return 0;
     }
}