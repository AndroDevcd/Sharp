mod application;

import system.io;

class Main2 {

    int var;
    dynamic_object o;

    public function reflect(Map yacht ) {
       if(yacht < 3) {
          io.print("Yachtzee");
          if (yacht == 2){
             io.print("2");
             string n = self->var.__NAME;
             o = new C();
             if(o.class == C.class) {
                o.__INVOKE("foo", 9, new int[] { 9, 8 , 7 });
                io.print("method in foo " + o.__FUNC[0].__NAME + " "
                    + o.__FUNC[0].__PARAMS + " " + o.__FUNC[0].__PARAM[0]);
             }

             o = o.__FUNC[1].__PARAM[1].class; // o == Map<int>

             if(o.__CLASS.__COUNT > 0) { // class C has 1 sub class
                o = o.__CLASS[0].__FUNC[0].__PARAM[1].class; // o == Map<int>
             }

             o = new C2();
             o = o.__FUNC[0].__PARENT.__PARENT.class; // o == C

             o = new C2();
             int count = o.__FUNC[0].__PARENTCOUNT; // i == 2

             o = new C();
             int i = o.__CHILDCOUNT; // i == 1 one class child
             int i = o.__FUNCCOUNT; // i == 2
             int i = o.__FIELDCOUNT; // i == 0
             C2 i = o.__CHILD[0]; // i = new C2()

             o = new C2[] { new C2() }; // array of a class
             string n = o[0].CONSTRUCT[0].__PARAM[0].__NAME; // n == int

             o = new C2[] { new C2() } ; // array of a class
             int n = o.__SIZE; // 1

             o = new C2();
             int count = o.__FIELD; // i == 2
             o.__FIELD = 9; // var = 9
             o.__FIELD == 3; // field is int type
          }
          else if(yacht == 2){}
          else{
            io.print("1");
          }
       }
    }

     public static function __init(String[] args) {
        String n = "Hello World";
        return 0;
     }
}

class C {
    class C2 {

        int var = 9;
        public function C2(int i) {

        }

        public function foo2(int i, Map<int> x) {

        }
    }

    class C4 {

        int var = 9;
        public function C2(int i) {

        }

        public function foo2(int i, Map<int> x) {

        }

        public function foo2(int i, Map<int> x) {

        }
    }

    public function foo() {

    }

    public function foo2(int i, Map<int> x) {

    }
}