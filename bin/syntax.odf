## Object Dump file for bin/syntax:

class: main#__srt_global[0] fields(0) methods(2)
class: std#__srt_global[1] fields(0) methods(1)
class: std#_enum_[2] fields(4) methods(14)
class: std#throwable[3] fields(3) methods(9)
class: std#exception[4] fields(3) methods(12)
class: std#illegal_argument_exception[5] fields(3) methods(15)
class: std#illegal_state_exception[6] fields(3) methods(15)
class: std#out_of_bounds_exception[7] fields(3) methods(15)
class: std#invalid_operation_exception[8] fields(3) methods(15)
class: std#nullptr_exception[9] fields(3) methods(15)
class: std#runtime_exception[10] fields(3) methods(15)
class: std#stack_overflow_exception[11] fields(3) methods(15)
class: std#thread_stack_exception[12] fields(3) methods(15)
class: std#class_cast_exception[13] fields(3) methods(15)
class: std#out_of_memory_exception[14] fields(3) methods(15)
class: std.io#__srt_global[15] fields(1) methods(4)
class: std#_nil_[16] fields(2) methods(10)
class: std#_object_[17] fields(1) methods(6)
class: platform#__srt_global[18] fields(0) methods(1)
class: platform.kernel#__srt_global[19] fields(0) methods(1)
class: platform.kernel#platform[20] fields(5) methods(10)
class: std#ulong[21] fields(2) methods(26)
class: std#long[22] fields(2) methods(27)
class: std#uint[23] fields(2) methods(26)
class: std#int[24] fields(2) methods(26)
class: std#ushort[25] fields(2) methods(26)
class: std#short[26] fields(2) methods(26)
class: std#uchar[27] fields(2) methods(26)
class: std#char[28] fields(2) methods(26)
class: std#byte[29] fields(2) methods(28)
class: std#bool[30] fields(2) methods(25)
interface: std#printable[31] fields(1) methods(8)
class: std.reflect#__srt_global[32] fields(0) methods(1)
class: std.reflect#_class_[33] fields(2) methods(8)
class: std.reflect#data_entity[34] fields(2) methods(7)
enum: std.reflect#property_type[35] fields(7) methods(14)
class: std.reflect#data_property[36] fields(2) methods(8)
class: std.reflect#field[37] fields(3) methods(7)
class: std.reflect#function[38] fields(2) methods(8)
class: std.reflect#reflect[39] fields(4) methods(10)
class: std#string[40] fields(2) methods(13)
interface: std#unique[41] fields(1) methods(9)
generic: std#integer<_uint64>[42] fields(2) methods(24)
generic: std#integer<_int64>[43] fields(2) methods(24)
generic: std#integer<_uint32>[44] fields(2) methods(24)
generic: std#integer<_int32>[45] fields(2) methods(24)
generic: std#integer<_uint16>[46] fields(2) methods(24)
generic: std#integer<_int16>[47] fields(2) methods(24)
generic: std#integer<_uint8>[48] fields(2) methods(24)
generic: std#integer<_int8>[49] fields(2) methods(24)


 strings: 

[0]: nil
[1]: 
[2]: class_property
[3]: field_property
[4]: function_property

 constants: 

[0]: 1e+09

 methods: 
constructor: main#__srt_global.__srt_global[0] params(0) in file: tests/syntax.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret


constructor: std#__srt_global.__srt_global[1] params(0) in file: lib/support/0.2.805//dictionary.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret


constructor: std.io#__srt_global.__srt_global[2] params(0) in file: lib/support/0.2.805//io//atomic.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret


constructor: platform#__srt_global.__srt_global[3] params(0) in file: lib/support/0.2.805//platform//dependencies.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret


constructor: platform.kernel#__srt_global.__srt_global[4] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret


constructor: std.reflect#__srt_global.__srt_global[5] params(0) in file: lib/support/0.2.805//reflect//class.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret


constructor: std#integer<_uint64>.integer[6] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+0
1 [0x1]:         rstore ebx
2 [0x2]:         movl 0
3 [0x3]:         movn #0
5 [0x5]:         loadval ebx
6 [0x6]:         movu64 ebx, ebx
7 [0x7]:         movi #0, adx
9 [0x9]:         rmov adx, ebx
10 [0xa]:         ret


constructor: std#integer<_uint64>.integer[7] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          loadval ebx
12 [0xc]:          movu64 ebx, ebx
13 [0xd]:          movi #0, adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          ret


function: std#integer<_uint64>.hash[8] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          movi #0, adx
7 [0x7]:          chklen adx
8 [0x8]:          iaload ebx, adx
9 [0x9]:          rstore ebx
10 [0xa]:          call @211 // <0xd3ccd0>
11 [0xb]:          return_val ebx
12 [0xc]:          ret


overload function: std#integer<_uint64>.operator!=[9] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          tne ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_uint64>.operator==[10] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          test ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_uint64>.operator!=[11] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


overload function: std#integer<_uint64>.operator=[12] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


function: std#integer<_uint64>.to_ulong[13] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @21 // std#ulong
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint64>.to_long[14] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @22 // std#long
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint64>.to_uint[15] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @23 // std#uint
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint64>.to_int[16] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @24 // std#int
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint64>.to_ushort[17] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @25 // std#ushort
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint64>.to_short[18] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @26 // std#short
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint64>.to_uchar[19] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @27 // std#uchar
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint64>.to_char[20] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @28 // std#char
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint64>.to_byte[21] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @29 // std#byte
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint64>.to_bool[22] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @30 // std#bool
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


constructor: std#integer<_uint64>.integer<_uint64>[23] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret


constructor: std#integer<_int64>.integer[24] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+0
1 [0x1]:         rstore ebx
2 [0x2]:         movl 0
3 [0x3]:         movn #0
5 [0x5]:         loadval ebx
6 [0x6]:         mov64 ebx, ebx
7 [0x7]:         movi #0, adx
9 [0x9]:         rmov adx, ebx
10 [0xa]:         ret


constructor: std#integer<_int64>.integer[25] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          loadval ebx
12 [0xc]:          mov64 ebx, ebx
13 [0xd]:          movi #0, adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          ret


function: std#integer<_int64>.hash[26] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          movi #0, adx
7 [0x7]:          chklen adx
8 [0x8]:          iaload ebx, adx
9 [0x9]:          rstore ebx
10 [0xa]:          call @211 // <0xd3ccd0>
11 [0xb]:          return_val ebx
12 [0xc]:          ret


overload function: std#integer<_int64>.operator!=[27] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          tne ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_int64>.operator==[28] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          test ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_int64>.operator!=[29] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


overload function: std#integer<_int64>.operator=[30] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


function: std#integer<_int64>.to_ulong[31] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @21 // std#ulong
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int64>.to_long[32] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @22 // std#long
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int64>.to_uint[33] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @23 // std#uint
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int64>.to_int[34] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @24 // std#int
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int64>.to_ushort[35] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @25 // std#ushort
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int64>.to_short[36] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @26 // std#short
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int64>.to_uchar[37] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @27 // std#uchar
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int64>.to_char[38] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @28 // std#char
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int64>.to_byte[39] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @29 // std#byte
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int64>.to_bool[40] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @30 // std#bool
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


constructor: std#integer<_int64>.integer<_int64>[41] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret


constructor: std#integer<_uint32>.integer[42] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+0
1 [0x1]:         rstore ebx
2 [0x2]:         movl 0
3 [0x3]:         movn #0
5 [0x5]:         loadval ebx
6 [0x6]:         movu32 ebx, ebx
7 [0x7]:         movi #0, adx
9 [0x9]:         rmov adx, ebx
10 [0xa]:         ret


constructor: std#integer<_uint32>.integer[43] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          loadval ebx
12 [0xc]:          movu32 ebx, ebx
13 [0xd]:          movi #0, adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          ret


function: std#integer<_uint32>.hash[44] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          movi #0, adx
7 [0x7]:          chklen adx
8 [0x8]:          iaload ebx, adx
9 [0x9]:          rstore ebx
10 [0xa]:          call @211 // <0xd3ccd0>
11 [0xb]:          return_val ebx
12 [0xc]:          ret


overload function: std#integer<_uint32>.operator!=[45] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          tne ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_uint32>.operator==[46] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          test ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_uint32>.operator!=[47] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


overload function: std#integer<_uint32>.operator=[48] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


function: std#integer<_uint32>.to_ulong[49] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @21 // std#ulong
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint32>.to_long[50] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @22 // std#long
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint32>.to_uint[51] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @23 // std#uint
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint32>.to_int[52] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @24 // std#int
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint32>.to_ushort[53] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @25 // std#ushort
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint32>.to_short[54] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @26 // std#short
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint32>.to_uchar[55] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @27 // std#uchar
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint32>.to_char[56] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @28 // std#char
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint32>.to_byte[57] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @29 // std#byte
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint32>.to_bool[58] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @30 // std#bool
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


constructor: std#integer<_uint32>.integer<_uint32>[59] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret


constructor: std#integer<_int32>.integer[60] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+0
1 [0x1]:         rstore ebx
2 [0x2]:         movl 0
3 [0x3]:         movn #0
5 [0x5]:         loadval ebx
6 [0x6]:         mov32 ebx, ebx
7 [0x7]:         movi #0, adx
9 [0x9]:         rmov adx, ebx
10 [0xa]:         ret


constructor: std#integer<_int32>.integer[61] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          loadval ebx
12 [0xc]:          mov32 ebx, ebx
13 [0xd]:          movi #0, adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          ret


function: std#integer<_int32>.hash[62] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          movi #0, adx
7 [0x7]:          chklen adx
8 [0x8]:          iaload ebx, adx
9 [0x9]:          rstore ebx
10 [0xa]:          call @211 // <0xd3ccd0>
11 [0xb]:          return_val ebx
12 [0xc]:          ret


overload function: std#integer<_int32>.operator!=[63] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          tne ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_int32>.operator==[64] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          test ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_int32>.operator!=[65] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


overload function: std#integer<_int32>.operator=[66] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


function: std#integer<_int32>.to_ulong[67] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @21 // std#ulong
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int32>.to_long[68] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @22 // std#long
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int32>.to_uint[69] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @23 // std#uint
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int32>.to_int[70] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @24 // std#int
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int32>.to_ushort[71] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @25 // std#ushort
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int32>.to_short[72] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @26 // std#short
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int32>.to_uchar[73] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @27 // std#uchar
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int32>.to_char[74] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @28 // std#char
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int32>.to_byte[75] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @29 // std#byte
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int32>.to_bool[76] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @30 // std#bool
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


constructor: std#integer<_int32>.integer<_int32>[77] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret


constructor: std#integer<_uint16>.integer[78] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+0
1 [0x1]:         rstore ebx
2 [0x2]:         movl 0
3 [0x3]:         movn #0
5 [0x5]:         loadval ebx
6 [0x6]:         movu16 ebx, ebx
7 [0x7]:         movi #0, adx
9 [0x9]:         rmov adx, ebx
10 [0xa]:         ret


constructor: std#integer<_uint16>.integer[79] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          loadval ebx
12 [0xc]:          movu16 ebx, ebx
13 [0xd]:          movi #0, adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          ret


function: std#integer<_uint16>.hash[80] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          movi #0, adx
7 [0x7]:          chklen adx
8 [0x8]:          iaload ebx, adx
9 [0x9]:          rstore ebx
10 [0xa]:          call @211 // <0xd3ccd0>
11 [0xb]:          return_val ebx
12 [0xc]:          ret


overload function: std#integer<_uint16>.operator!=[81] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          tne ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_uint16>.operator==[82] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          test ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_uint16>.operator!=[83] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


overload function: std#integer<_uint16>.operator=[84] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


function: std#integer<_uint16>.to_ulong[85] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @21 // std#ulong
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint16>.to_long[86] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @22 // std#long
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint16>.to_uint[87] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @23 // std#uint
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint16>.to_int[88] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @24 // std#int
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint16>.to_ushort[89] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @25 // std#ushort
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint16>.to_short[90] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @26 // std#short
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint16>.to_uchar[91] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @27 // std#uchar
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint16>.to_char[92] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @28 // std#char
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint16>.to_byte[93] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @29 // std#byte
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint16>.to_bool[94] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @30 // std#bool
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


constructor: std#integer<_uint16>.integer<_uint16>[95] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret


constructor: std#integer<_int16>.integer[96] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+0
1 [0x1]:         rstore ebx
2 [0x2]:         movl 0
3 [0x3]:         movn #0
5 [0x5]:         loadval ebx
6 [0x6]:         mov16 ebx, ebx
7 [0x7]:         movi #0, adx
9 [0x9]:         rmov adx, ebx
10 [0xa]:         ret


constructor: std#integer<_int16>.integer[97] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          loadval ebx
12 [0xc]:          mov16 ebx, ebx
13 [0xd]:          movi #0, adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          ret


function: std#integer<_int16>.hash[98] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          movi #0, adx
7 [0x7]:          chklen adx
8 [0x8]:          iaload ebx, adx
9 [0x9]:          rstore ebx
10 [0xa]:          call @211 // <0xd3ccd0>
11 [0xb]:          return_val ebx
12 [0xc]:          ret


overload function: std#integer<_int16>.operator!=[99] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          tne ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_int16>.operator==[100] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          test ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_int16>.operator!=[101] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


overload function: std#integer<_int16>.operator=[102] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


function: std#integer<_int16>.to_ulong[103] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @21 // std#ulong
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int16>.to_long[104] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @22 // std#long
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int16>.to_uint[105] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @23 // std#uint
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int16>.to_int[106] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @24 // std#int
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int16>.to_ushort[107] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @25 // std#ushort
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int16>.to_short[108] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @26 // std#short
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int16>.to_uchar[109] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @27 // std#uchar
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int16>.to_char[110] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @28 // std#char
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int16>.to_byte[111] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @29 // std#byte
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int16>.to_bool[112] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @30 // std#bool
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


constructor: std#integer<_int16>.integer<_int16>[113] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret


constructor: std#integer<_uint8>.integer[114] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+0
1 [0x1]:         rstore ebx
2 [0x2]:         movl 0
3 [0x3]:         movn #0
5 [0x5]:         loadval ebx
6 [0x6]:         movu8 ebx, ebx
7 [0x7]:         movi #0, adx
9 [0x9]:         rmov adx, ebx
10 [0xa]:         ret


constructor: std#integer<_uint8>.integer[115] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          loadval ebx
12 [0xc]:          movu8 ebx, ebx
13 [0xd]:          movi #0, adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          ret


function: std#integer<_uint8>.hash[116] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          movi #0, adx
7 [0x7]:          chklen adx
8 [0x8]:          iaload ebx, adx
9 [0x9]:          rstore ebx
10 [0xa]:          call @211 // <0xd3ccd0>
11 [0xb]:          return_val ebx
12 [0xc]:          ret


overload function: std#integer<_uint8>.operator!=[117] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          tne ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_uint8>.operator==[118] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          test ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_uint8>.operator!=[119] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


overload function: std#integer<_uint8>.operator=[120] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


function: std#integer<_uint8>.to_ulong[121] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @21 // std#ulong
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint8>.to_long[122] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @22 // std#long
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint8>.to_uint[123] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @23 // std#uint
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint8>.to_int[124] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @24 // std#int
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint8>.to_ushort[125] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @25 // std#ushort
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint8>.to_short[126] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @26 // std#short
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint8>.to_uchar[127] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @27 // std#uchar
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint8>.to_char[128] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @28 // std#char
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint8>.to_byte[129] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @29 // std#byte
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_uint8>.to_bool[130] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @30 // std#bool
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


constructor: std#integer<_uint8>.integer<_uint8>[131] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret


constructor: std#integer<_int8>.integer[132] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+0
1 [0x1]:         rstore ebx
2 [0x2]:         movl 0
3 [0x3]:         movn #0
5 [0x5]:         loadval ebx
6 [0x6]:         mov8 ebx, ebx
7 [0x7]:         movi #0, adx
9 [0x9]:         rmov adx, ebx
10 [0xa]:         ret


constructor: std#integer<_int8>.integer[133] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          loadval ebx
12 [0xc]:          mov8 ebx, ebx
13 [0xd]:          movi #0, adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          ret


function: std#integer<_int8>.hash[134] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movl 0
3 [0x3]:          movn #0
5 [0x5]:          movi #0, adx
7 [0x7]:          chklen adx
8 [0x8]:          iaload ebx, adx
9 [0x9]:          rstore ebx
10 [0xa]:          call @211 // <0xd3ccd0>
11 [0xb]:          return_val ebx
12 [0xc]:          ret


overload function: std#integer<_int8>.operator!=[135] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          tne ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_int8>.operator==[136] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0
1 [0x1]:          movn #0
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          test ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#integer<_int8>.operator!=[137] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


overload function: std#integer<_int8>.operator=[138] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


function: std#integer<_int8>.to_ulong[139] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @21 // std#ulong
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int8>.to_long[140] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @22 // std#long
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov64 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int8>.to_uint[141] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @23 // std#uint
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int8>.to_int[142] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @24 // std#int
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov32 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int8>.to_ushort[143] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @25 // std#ushort
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int8>.to_short[144] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @26 // std#short
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov16 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int8>.to_uchar[145] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @27 // std#uchar
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int8>.to_char[146] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @28 // std#char
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int8>.to_byte[147] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @29 // std#byte
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          movu8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


function: std#integer<_int8>.to_bool[148] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @30 // std#bool
1 [0x1]:          movl 0
2 [0x2]:          movn #0
4 [0x4]:          movi #0, adx
6 [0x6]:          chklen adx
7 [0x7]:          iaload ebx, adx
8 [0x8]:          mov8 ebx, ebx
9 [0x9]:          movsl #0
10 [0xa]:          movn #0
12 [0xc]:          movi #0, adx
14 [0xe]:          chklen adx
15 [0xf]:          rmov adx, ebx
16 [0x10]:          popobj2 
17 [0x11]:          returnobj
18 [0x12]:          ret


constructor: std#integer<_int8>.integer<_int8>[149] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret


function: main#__srt_global.main[150] params(0) in file: tests/syntax.sharp:3:4: note:  
		def main() {
		   ^

0 [0x0]:         ret


constructor: std#_enum_._enum_[151] params(1) in file: lib/support/0.2.805//enum.sharp:17:11: note:  
		    _enum_(ord : var) {
		          ^

0 [0x0]: line: 18 loadl ebx, fp+0
1 [0x1]:          rstore ebx
2 [0x2]:          movl 0
3 [0x3]:          movn #1
5 [0x5]:          loadval ebx
6 [0x6]:          mov64 ebx, ebx
7 [0x7]:          movi #0, adx
9 [0x9]:          rmov adx, ebx
10 [0xa]:          ret


overload function: std#_enum_.operator!=[152] params(1) in file: lib/support/0.2.805//enum.sharp:26:15: note:  
		    public def operator!=(e : _enum_) : var {
		              ^

0 [0x0]: line: 27 movl 0
1 [0x1]:          movn #1
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #1
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          tne ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#_enum_.operator!=[153] params(1) in file: lib/support/0.2.805//enum.sharp:30:15: note:  
		    public def operator!=(num : var) : var {
		              ^

0 [0x0]: line: 31 movl 0
1 [0x1]:          movn #1
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          loadl ebx, fp+0
9 [0x9]:          loadval ecx
10 [0xa]:          tne ecx, ebx
11 [0xb]:          movr ebx, cmt
12 [0xc]:          return_val ebx
13 [0xd]:          ret


overload function: std#_enum_.operator==[154] params(1) in file: lib/support/0.2.805//enum.sharp:34:15: note:  
		    public def operator==(e : _enum_) : var {
		              ^

0 [0x0]: line: 35 movl 0
1 [0x1]:          movn #1
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          movl 0
9 [0x9]:          movn #1
11 [0xb]:          movi #0, adx
13 [0xd]:          chklen adx
14 [0xe]:          iaload ebx, adx
15 [0xf]:          loadval ecx
16 [0x10]:          test ecx, ebx
17 [0x11]:          movr ebx, cmt
18 [0x12]:          return_val ebx
19 [0x13]:          ret


overload function: std#_enum_.operator==[155] params(1) in file: lib/support/0.2.805//enum.sharp:38:15: note:  
		    public def operator==(num : var) : var {
		              ^

0 [0x0]: line: 39 movl 0
1 [0x1]:          movn #1
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          rstore ebx
8 [0x8]:          loadl ebx, fp+0
9 [0x9]:          loadval ecx
10 [0xa]:          test ecx, ebx
11 [0xb]:          movr ebx, cmt
12 [0xc]:          return_val ebx
13 [0xd]:          ret


function: std#_enum_.get_name[156] params(0) in file: lib/support/0.2.805//enum.sharp:42:15: note:  
		    public def get_name() : _int8[] {
		              ^

0 [0x0]: line: 43 movl 0
1 [0x1]:          movn #0
3 [0x3]:          return_val ebx
4 [0x4]:          ret


function: std#_enum_.get_ordinal[157] params(0) in file: lib/support/0.2.805//enum.sharp:46:15: note:  
		    public def get_ordinal() : _int64 {
		              ^

0 [0x0]: line: 47 movl 0
1 [0x1]:          movn #1
3 [0x3]:          movi #0, adx
5 [0x5]:          chklen adx
6 [0x6]:          iaload ebx, adx
7 [0x7]:          return_val ebx
8 [0x8]:          ret


constructor: std#_enum_._enum_[158] params(0) in file: lib/support/0.2.805//enum.sharp:12:17: note:  
		stable ext class _enum_ {
		                ^

0 [0x0]:         ret


constructor: std#throwable.throwable[159] params(1) in file: lib/support/0.2.805//exceptions.sharp:15:21: note:  
		    public throwable(message : _int8[]) {
		                    ^

0 [0x0]:         ret


constructor: std#throwable.throwable[160] params(1) in file: lib/support/0.2.805//exceptions.sharp:19:21: note:  
		    public throwable(message : string) {
		                    ^

0 [0x0]:         ret


constructor: std#throwable.throwable[161] params(0) in file: lib/support/0.2.805//exceptions.sharp:8:6: note:  
		class throwable {
		     ^

0 [0x0]:         ret


constructor: std#exception.exception[162] params(1) in file: lib/support/0.2.805//exceptions.sharp:28:21: note:  
		    public exception(message : _int8[]) { base->throwable(message); }
		                    ^

0 [0x0]: line: 28 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @159 // <0xd332b0>
5 [0x5]:          ret


constructor: std#exception.exception[163] params(1) in file: lib/support/0.2.805//exceptions.sharp:29:21: note:  
		    public exception(message : string) { base->throwable(message); }
		                    ^

0 [0x0]: line: 29 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @160 // <0xd32e00>
5 [0x5]:          ret


constructor: std#exception.exception[164] params(0) in file: lib/support/0.2.805//exceptions.sharp:27:6: note:  
		class exception base throwable {
		     ^

0 [0x0]:         ret


constructor: std#illegal_argument_exception.illegal_argument_exception[165] params(1) in file: lib/support/0.2.805//exceptions.sharp:33:38: note:  
		    public illegal_argument_exception(message : _int8[]) { base->exception(message); }
		                                     ^

0 [0x0]: line: 33 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#illegal_argument_exception.illegal_argument_exception[166] params(1) in file: lib/support/0.2.805//exceptions.sharp:34:38: note:  
		    public illegal_argument_exception(message : string) { base->exception(message); }
		                                     ^

0 [0x0]: line: 34 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#illegal_argument_exception.illegal_argument_exception[167] params(0) in file: lib/support/0.2.805//exceptions.sharp:32:6: note:  
		class illegal_argument_exception base exception {
		     ^

0 [0x0]:         ret


constructor: std#illegal_state_exception.illegal_state_exception[168] params(1) in file: lib/support/0.2.805//exceptions.sharp:37:35: note:  
		    public illegal_state_exception(message : _int8[]) { base->exception(message); }
		                                  ^

0 [0x0]: line: 37 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#illegal_state_exception.illegal_state_exception[169] params(1) in file: lib/support/0.2.805//exceptions.sharp:38:35: note:  
		    public illegal_state_exception(message : string) { base->exception(message); }
		                                  ^

0 [0x0]: line: 38 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#illegal_state_exception.illegal_state_exception[170] params(0) in file: lib/support/0.2.805//exceptions.sharp:36:6: note:  
		class illegal_state_exception base exception {
		     ^

0 [0x0]:         ret


constructor: std#out_of_bounds_exception.out_of_bounds_exception[171] params(1) in file: lib/support/0.2.805//exceptions.sharp:41:35: note:  
		    public out_of_bounds_exception(message : _int8[]) { base->exception(message); }
		                                  ^

0 [0x0]: line: 41 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#out_of_bounds_exception.out_of_bounds_exception[172] params(1) in file: lib/support/0.2.805//exceptions.sharp:42:35: note:  
		    public out_of_bounds_exception(message : string) { base->exception(message); }
		                                  ^

0 [0x0]: line: 42 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#out_of_bounds_exception.out_of_bounds_exception[173] params(0) in file: lib/support/0.2.805//exceptions.sharp:40:6: note:  
		class out_of_bounds_exception base exception {
		     ^

0 [0x0]:         ret


constructor: std#invalid_operation_exception.invalid_operation_exception[174] params(1) in file: lib/support/0.2.805//exceptions.sharp:45:39: note:  
		    public invalid_operation_exception(message : _int8[]) { base->exception(message); }
		                                      ^

0 [0x0]: line: 45 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#invalid_operation_exception.invalid_operation_exception[175] params(1) in file: lib/support/0.2.805//exceptions.sharp:46:39: note:  
		    public invalid_operation_exception(message : string) { base->exception(message); }
		                                      ^

0 [0x0]: line: 46 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#invalid_operation_exception.invalid_operation_exception[176] params(0) in file: lib/support/0.2.805//exceptions.sharp:44:6: note:  
		class invalid_operation_exception base exception {
		     ^

0 [0x0]:         ret


constructor: std#nullptr_exception.nullptr_exception[177] params(1) in file: lib/support/0.2.805//exceptions.sharp:49:29: note:  
		    public nullptr_exception(message : _int8[]) { base->exception(message); }
		                            ^

0 [0x0]: line: 49 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#nullptr_exception.nullptr_exception[178] params(1) in file: lib/support/0.2.805//exceptions.sharp:50:29: note:  
		    public nullptr_exception(message : string) { base->exception(message); }
		                            ^

0 [0x0]: line: 50 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#nullptr_exception.nullptr_exception[179] params(0) in file: lib/support/0.2.805//exceptions.sharp:48:6: note:  
		class nullptr_exception base exception {
		     ^

0 [0x0]:         ret


constructor: std#runtime_exception.runtime_exception[180] params(1) in file: lib/support/0.2.805//exceptions.sharp:53:29: note:  
		    public runtime_exception(message : _int8[]) { base->exception(message); }
		                            ^

0 [0x0]: line: 53 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#runtime_exception.runtime_exception[181] params(1) in file: lib/support/0.2.805//exceptions.sharp:54:29: note:  
		    public runtime_exception(message : string) { base->exception(message); }
		                            ^

0 [0x0]: line: 54 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#runtime_exception.runtime_exception[182] params(0) in file: lib/support/0.2.805//exceptions.sharp:52:6: note:  
		class runtime_exception base exception {
		     ^

0 [0x0]:         ret


constructor: std#stack_overflow_exception.stack_overflow_exception[183] params(1) in file: lib/support/0.2.805//exceptions.sharp:57:36: note:  
		    public stack_overflow_exception(message : _int8[]) { base->exception(message); }
		                                   ^

0 [0x0]: line: 57 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#stack_overflow_exception.stack_overflow_exception[184] params(1) in file: lib/support/0.2.805//exceptions.sharp:58:36: note:  
		    public stack_overflow_exception(message : string) { base->exception(message); }
		                                   ^

0 [0x0]: line: 58 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#stack_overflow_exception.stack_overflow_exception[185] params(0) in file: lib/support/0.2.805//exceptions.sharp:56:6: note:  
		class stack_overflow_exception base exception {
		     ^

0 [0x0]:         ret


constructor: std#thread_stack_exception.thread_stack_exception[186] params(1) in file: lib/support/0.2.805//exceptions.sharp:61:34: note:  
		    public thread_stack_exception(message : _int8[]) { base->exception(message); }
		                                 ^

0 [0x0]: line: 61 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#thread_stack_exception.thread_stack_exception[187] params(1) in file: lib/support/0.2.805//exceptions.sharp:62:34: note:  
		    public thread_stack_exception(message : string) { base->exception(message); }
		                                 ^

0 [0x0]: line: 62 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#thread_stack_exception.thread_stack_exception[188] params(0) in file: lib/support/0.2.805//exceptions.sharp:60:6: note:  
		class thread_stack_exception base exception {
		     ^

0 [0x0]:         ret


constructor: std#class_cast_exception.class_cast_exception[189] params(1) in file: lib/support/0.2.805//exceptions.sharp:65:32: note:  
		    public class_cast_exception(message : _int8[]) { base->exception(message); }
		                               ^

0 [0x0]: line: 65 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#class_cast_exception.class_cast_exception[190] params(1) in file: lib/support/0.2.805//exceptions.sharp:66:32: note:  
		    public class_cast_exception(message : string) { base->exception(message); }
		                               ^

0 [0x0]: line: 66 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#class_cast_exception.class_cast_exception[191] params(0) in file: lib/support/0.2.805//exceptions.sharp:64:6: note:  
		class class_cast_exception base exception {
		     ^

0 [0x0]:         ret


constructor: std#out_of_memory_exception.out_of_memory_exception[192] params(1) in file: lib/support/0.2.805//exceptions.sharp:69:35: note:  
		    public out_of_memory_exception(message : _int8[]) { base->exception(message); }
		                                  ^

0 [0x0]: line: 69 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @162 // <0xd34700>
5 [0x5]:          ret


constructor: std#out_of_memory_exception.out_of_memory_exception[193] params(1) in file: lib/support/0.2.805//exceptions.sharp:70:35: note:  
		    public out_of_memory_exception(message : string) { base->exception(message); }
		                                  ^

0 [0x0]: line: 70 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @163 // <0xd32f90>
5 [0x5]:          ret


constructor: std#out_of_memory_exception.out_of_memory_exception[194] params(0) in file: lib/support/0.2.805//exceptions.sharp:68:6: note:  
		class out_of_memory_exception base exception {
		     ^

0 [0x0]:         ret


function: std.io#__srt_global.critical_section[195] params(1) in file: lib/support/0.2.805//io//critical_section.sharp:4:4: note:  
		def critical_section(block : ()()) {
		   ^

0 [0x0]: line: 5 movl 1
1 [0x1]:         del
2 [0x2]: line: 6 movg @15 // @std.io#__srt_global
3 [0x3]:         movn #0
5 [0x5]:         _lck 
6 [0x6]: line: 7 loadl ebx, fp+0
7 [0x7]: line: 8 rstore ebx
8 [0x8]:         loadval ebx
9 [0x9]:         calld ebx
10 [0xa]:         jmp @14
11 [0xb]: line: 10 movl 2
12 [0xc]:          smovr_3 fp+1
13 [0xd]:          jmp @14
14 [0xe]:          nop
15 [0xf]:          movg @15 // @std.io#__srt_global
16 [0x10]:          movn #0
18 [0x12]:          _ulck
19 [0x13]: line: 14 movl 1
20 [0x14]:          pushobj
21 [0x15]:          pushnull 
22 [0x16]:          popobj2 
23 [0x17]:          itest ebx
24 [0x18]:          movr cmt, ebx
25 [0x19]:          jne 29
26 [0x1a]:          movl 1
27 [0x1b]:          pushobj
28 [0x1c]:          throw 
29 [0x1d]:          nop
30 [0x1e]:          ret


function: std.io#__srt_global.critical_section[196] params(2) in file: lib/support/0.2.805//io//critical_section.sharp:30:4: note:  
		def critical_section(block : ()(), lock_obj : object) {
		   ^

0 [0x0]: line: 31 movl 2
1 [0x1]:          del
2 [0x2]: line: 32 movl 1
3 [0x3]:          _lck 
4 [0x4]: line: 33 loadl ebx, fp+0
5 [0x5]: line: 34 rstore ebx
6 [0x6]:          loadval ebx
7 [0x7]:          calld ebx
8 [0x8]:          jmp @12
9 [0x9]: line: 36 movl 3
10 [0xa]:          smovr_3 fp+2
11 [0xb]:          jmp @12
12 [0xc]:          nop
13 [0xd]:          movl 1
14 [0xe]:          _ulck
15 [0xf]: line: 40 movl 2
16 [0x10]:          pushobj
17 [0x11]:          pushnull 
18 [0x12]:          popobj2 
19 [0x13]:          itest ebx
20 [0x14]:          movr cmt, ebx
21 [0x15]:          jne 25
22 [0x16]:          movl 2
23 [0x17]:          pushobj
24 [0x18]:          throw 
25 [0x19]:          nop
26 [0x1a]:          ret


function: std#_nil_.to_string[197] params(0) in file: lib/support/0.2.805//nil.sharp:18:15: note:  
		    public def to_string() := new string("nil");
		              ^

0 [0x0]: line: 18 new_class @40 // std#string
1 [0x1]:          dup 
2 [0x2]:          newstr @0 // nil
3 [0x3]:          call @237 // <0xd464e0>
4 [0x4]:          movsl #0
5 [0x5]:          returnobj
6 [0x6]:          ret


constructor: std#_nil_._nil_[198] params(0) in file: lib/support/0.2.805//nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         ret


overload function: std#_object_.operator==[199] params(1) in file: lib/support/0.2.805//object.sharp:14:15: note:  
		    public def operator==(o : object) : var {
		              ^

0 [0x0]: line: 15 movl 0
1 [0x1]:          itest ebx
2 [0x2]:          return_val ebx
3 [0x3]:          ret


function: std#_object_.to_string[200] params(0) in file: lib/support/0.2.805//object.sharp:18:15: note:  
		    public def to_string() := new string("");
		              ^

0 [0x0]: line: 18 new_class @40 // std#string
1 [0x1]:          dup 
2 [0x2]:          newstr @1 // 
3 [0x3]:          call @237 // <0xd464e0>
4 [0x4]:          movsl #0
5 [0x5]:          returnobj
6 [0x6]:          ret


function: std#_object_.hash[201] params(0) in file: lib/support/0.2.805//object.sharp:20:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 22 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movi #0, ebx
4 [0x4]:          rstore ebx
5 [0x5]:          call @211 // <0xd3ccd0>
6 [0x6]:          return_val ebx
7 [0x7]:          ret


function: std#_object_.guid[202] params(0) in file: lib/support/0.2.805//object.sharp:25:8: note:  
		    def guid() : long {
		       ^

0 [0x0]: line: 27 new_class @22 // std#long
1 [0x1]:          dup 
2 [0x2]:          movg @17 // @std#_object_
3 [0x3]:          movn #0
5 [0x5]:          movi #0, adx
7 [0x7]:          chklen adx
8 [0x8]:          iaload ebx, adx
9 [0x9]:          movr egx, ebx
10 [0xa]:          inc ebx
11 [0xb]:          movi #0, adx
13 [0xd]:          rmov adx, ebx
14 [0xe]:          rstore egx
15 [0xf]:          call @211 // <0xd3ccd0>
16 [0x10]:          return_val ebx
17 [0x11]:          ret


constructor: std#_object_._object_[203] params(0) in file: lib/support/0.2.805//object.sharp:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         ret


function: platform.kernel#platform.tls_init[204] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:10:15: note:  
		    static def tls_init() {}
		              ^

0 [0x0]: line: 10 ret


function: platform.kernel#platform.static_init[205] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:11:23: note:  
		    private static def static_init() {}
		                      ^

0 [0x0]: line: 11 call @250 // <0xd47ac0>
1 [0x1]:          call @251 // <0xd47f70>
2 [0x2]:          call @252 // <0xd46fd0>
3 [0x3]:          call @250 // <0xd47ac0>
4 [0x4]:          call @251 // <0xd47f70>
5 [0x5]:          call @252 // <0xd46fd0>
6 [0x6]:          newstr @2 // class_property
7 [0x7]:          movg @35 // @std.reflect#property_type
8 [0x8]:          movn #2
10 [0xa]:          movn #0
12 [0xc]:          popobj
13 [0xd]:          movi #92525, ebx
15 [0xf]:          movg @35 // @std.reflect#property_type
16 [0x10]:          movn #2
18 [0x12]:          movn #1
20 [0x14]:          movi #0, adx
22 [0x16]:          rmov adx, ebx
23 [0x17]:          newstr @3 // field_property
24 [0x18]:          movg @35 // @std.reflect#property_type
25 [0x19]:          movn #3
27 [0x1b]:          movn #0
29 [0x1d]:          popobj
30 [0x1e]:          movi #92526, ebx
32 [0x20]:          movg @35 // @std.reflect#property_type
33 [0x21]:          movn #3
35 [0x23]:          movn #1
37 [0x25]:          movi #0, adx
39 [0x27]:          rmov adx, ebx
40 [0x28]:          newstr @4 // function_property
41 [0x29]:          movg @35 // @std.reflect#property_type
42 [0x2a]:          movn #4
44 [0x2c]:          movn #0
46 [0x2e]:          popobj
47 [0x2f]:          movi #92527, ebx
49 [0x31]:          movg @35 // @std.reflect#property_type
50 [0x32]:          movn #4
52 [0x34]:          movn #1
54 [0x36]:          movi #0, adx
56 [0x38]:          rmov adx, ebx
57 [0x39]:          movi #3, ebx
59 [0x3b]:          new_classarray ebx  // std.reflect#property_type[]
60 [0x3c]:          movg @35 // @std.reflect#property_type
61 [0x3d]:          movn #2
63 [0x3f]:          pushobj
64 [0x40]:          movsl #-1
65 [0x41]:          movn #0
67 [0x43]:          popobj
68 [0x44]:          movg @35 // @std.reflect#property_type
69 [0x45]:          movn #3
71 [0x47]:          pushobj
72 [0x48]:          movsl #-1
73 [0x49]:          movn #1
75 [0x4b]:          popobj
76 [0x4c]:          movg @35 // @std.reflect#property_type
77 [0x4d]:          movn #4
79 [0x4f]:          pushobj
80 [0x50]:          movsl #-1
81 [0x51]:          movn #2
83 [0x53]:          popobj
84 [0x54]:          movg @35 // @std.reflect#property_type
85 [0x55]:          movn #1
87 [0x57]:          popobj
88 [0x58]:          movg @20 // @platform.kernel#platform
89 [0x59]:          movn #3
91 [0x5b]:          movi #0, adx
93 [0x5d]:          movi #150, ebx
95 [0x5f]:          rmov adx, ebx
96 [0x60]:          ret


function: platform.kernel#platform.srt_init[206] params(1) in file: lib/support/0.2.805//platform//kernel//platform.sharp:13:23: note:  
		    private static def srt_init(args: object[]) : var {
		                      ^

0 [0x0]: line: 14 movi #1, ebx
2 [0x2]:          put ebx
3 [0x3]: line: 18 movi #0, ebx
5 [0x5]:          return_val ebx
6 [0x6]:          ret


constructor: platform.kernel#platform.platform[207] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:3:6: note:  
		class platform
		     ^

0 [0x0]:         ret


constructor: std#ulong.ulong[208] params(1) in file: lib/support/0.2.805//primitives.sharp:42:10: note:  
		    ulong(i : var) {
		         ^

0 [0x0]:         ret


constructor: std#ulong.ulong[209] params(0) in file: lib/support/0.2.805//primitives.sharp:40:6: note:  
		class ulong base integer<_uint64> {
		     ^

0 [0x0]:         ret


constructor: std#long.long[210] params(1) in file: lib/support/0.2.805//primitives.sharp:47:9: note:  
		    long(i : int) {
		        ^

0 [0x0]:         ret


constructor: std#long.long[211] params(1) in file: lib/support/0.2.805//primitives.sharp:50:9: note:  
		    long(i : var) {
		        ^

0 [0x0]:         ret


constructor: std#long.long[212] params(0) in file: lib/support/0.2.805//primitives.sharp:46:6: note:  
		class long base integer<_int64> {
		     ^

0 [0x0]:         ret


constructor: std#uint.uint[213] params(1) in file: lib/support/0.2.805//primitives.sharp:56:9: note:  
		    uint(i : var) {
		        ^

0 [0x0]:         ret


constructor: std#uint.uint[214] params(0) in file: lib/support/0.2.805//primitives.sharp:54:6: note:  
		class uint base integer<_uint32> {
		     ^

0 [0x0]:         ret


constructor: std#int.int[215] params(1) in file: lib/support/0.2.805//primitives.sharp:62:8: note:  
		    int(i : var) {
		       ^

0 [0x0]:         ret


constructor: std#int.int[216] params(0) in file: lib/support/0.2.805//primitives.sharp:60:6: note:  
		class int base integer<_int32> {
		     ^

0 [0x0]:         ret


constructor: std#ushort.ushort[217] params(1) in file: lib/support/0.2.805//primitives.sharp:68:11: note:  
		    ushort(i : var) {
		          ^

0 [0x0]:         ret


constructor: std#ushort.ushort[218] params(0) in file: lib/support/0.2.805//primitives.sharp:66:6: note:  
		class ushort base integer<_uint16> {
		     ^

0 [0x0]:         ret


constructor: std#short.short[219] params(1) in file: lib/support/0.2.805//primitives.sharp:74:10: note:  
		    short(i : var) {
		         ^

0 [0x0]:         ret


constructor: std#short.short[220] params(0) in file: lib/support/0.2.805//primitives.sharp:72:6: note:  
		class short base integer<_int16> {
		     ^

0 [0x0]:         ret


constructor: std#uchar.uchar[221] params(1) in file: lib/support/0.2.805//primitives.sharp:80:10: note:  
		    uchar(i : var) {
		         ^

0 [0x0]:         ret


constructor: std#uchar.uchar[222] params(0) in file: lib/support/0.2.805//primitives.sharp:78:6: note:  
		class uchar base integer<_uint8> {
		     ^

0 [0x0]:         ret


constructor: std#char.char[223] params(1) in file: lib/support/0.2.805//primitives.sharp:86:9: note:  
		    char(i : var) {
		        ^

0 [0x0]:         ret


constructor: std#char.char[224] params(0) in file: lib/support/0.2.805//primitives.sharp:84:6: note:  
		class char base integer<_int8> {
		     ^

0 [0x0]:         ret


constructor: std#byte.byte[225] params(1) in file: lib/support/0.2.805//primitives.sharp:92:9: note:  
		    byte(i : var) {
		        ^

0 [0x0]:         ret


constructor: std#byte.byte[226] params(0) in file: lib/support/0.2.805//primitives.sharp:90:6: note:  
		class byte base uchar {
		     ^

0 [0x0]:         ret


constructor: std#bool.bool[227] params(0) in file: lib/support/0.2.805//primitives.sharp:96:6: note:  
		class bool base integer<_int8> { /* TDOO: override base class methods */ }
		     ^

0 [0x0]:         ret


std#printable.to_string[228] params(0) in file: lib/support/0.2.805//printable.sharp:11:8: note:  
		    def to_string() : string;
		       ^



constructor: std#printable.printable[229] params(0) in file: lib/support/0.2.805//printable.sharp:10:10: note:  
		interface printable {
		         ^

0 [0x0]:         ret


constructor: std.reflect#_class_._class_[230] params(0) in file: lib/support/0.2.805//reflect//class.sharp:4:6: note:  
		class _class_ base data_entity {
		     ^

0 [0x0]:         ret


constructor: std.reflect#data_entity.data_entity[231] params(0) in file: lib/support/0.2.805//reflect//data_entity.sharp:4:6: note:  
		class data_entity {
		     ^

0 [0x0]:         ret


constructor: std.reflect#data_property.data_property[232] params(0) in file: lib/support/0.2.805//reflect//data_property.sharp:11:6: note:  
		class data_property base data_entity {
		     ^

0 [0x0]:         ret


constructor: std.reflect#field.field[233] params(0) in file: lib/support/0.2.805//reflect//field.sharp:4:6: note:  
		class field {
		     ^

0 [0x0]:         ret


constructor: std.reflect#function.function[234] params(0) in file: lib/support/0.2.805//reflect//function.sharp:4:6: note:  
		class function base data_entity {
		     ^

0 [0x0]:         ret


constructor: std.reflect#reflect.reflect[235] params(1) in file: lib/support/0.2.805//reflect//reflection.sharp:15:12: note:  
		    reflect(ref_obj : object) {
		           ^

0 [0x0]: line: 16 movl 0
1 [0x1]:          pushobj
2 [0x2]:          movl 0
3 [0x3]:          pushobj
4 [0x4]:          call @248 // <0xd48d80>
5 [0x5]:          ret


constructor: std.reflect#reflect.reflect[236] params(0) in file: lib/support/0.2.805//reflect//reflection.sharp:3:6: note:  
		class reflect {
		     ^

0 [0x0]:         ret


constructor: std#string.string[237] params(1) in file: lib/support/0.2.805//string.sharp:6:11: note:  
		    string(str : _int8[]) {
		          ^

0 [0x0]:         ret


constructor: std#string.string[238] params(1) in file: lib/support/0.2.805//string.sharp:10:11: note:  
		    string(str : string) {
		          ^

0 [0x0]:         ret


overload function: std#string.operator+[239] params(1) in file: lib/support/0.2.805//string.sharp:14:8: note:  
		    def operator+(num : _int8[]) : string {
		       ^

0 [0x0]: line: 15 pushnull 
1 [0x1]:          popobj2 
2 [0x2]:          returnobj
3 [0x3]:          ret


overload function: std#string.operator+[240] params(1) in file: lib/support/0.2.805//string.sharp:18:8: note:  
		    def operator+(num : var) : string {
		       ^

0 [0x0]: line: 19 pushnull 
1 [0x1]:          popobj2 
2 [0x2]:          returnobj
3 [0x3]:          ret


function: std#string.foo[241] params(0) in file: lib/support/0.2.805//string.sharp:22:8: note:  
		    def foo() { }
		       ^

0 [0x0]:         ret


function: std#string.hash[242] params(0) in file: lib/support/0.2.805//string.sharp:24:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 25 movi #0, ebx
2 [0x2]: line: 26 smovr_2 ebx, fp+1
3 [0x3]: line: 27 movi #1, ebx
5 [0x5]: line: 28 smovr_2 ebx, fp+2
6 [0x6]: line: 29 istorel -1, fp+4
8 [0x8]:          movl 0
9 [0x9]:          movn #0
11 [0xb]:          pushobj
12 [0xc]:          movl 5
13 [0xd]:          popobj
14 [0xe]:          iaddl 1, fp@4
16 [0x10]:          movl 5
17 [0x11]:          sizeof ecx
18 [0x12]:          loadl ebx, fp+4
19 [0x13]:          lt ebx, ecx
20 [0x14]:          jne 64
21 [0x15]:          movnd ebx
22 [0x16]:          movi #0, adx
24 [0x18]:          iaload ebx, adx
25 [0x19]:          smovr_2 ebx, fp+3
26 [0x1a]: line: 30 loadl ebx, fp+1
27 [0x1b]:          rstore ebx
28 [0x1c]:          loadl ebx, fp+3
29 [0x1d]:          rstore ebx
30 [0x1e]:          movi #97, ebx
32 [0x20]:          loadval ecx
33 [0x21]:          sub ecx, ebx -> ebx
34 [0x22]:          rstore ebx
35 [0x23]:          movi #1, ebx
37 [0x25]:          loadval ecx
38 [0x26]:          add ecx, ebx -> ebx
39 [0x27]:          rstore ebx
40 [0x28]:          loadl ebx, fp+2
41 [0x29]:          loadval ecx
42 [0x2a]:          mul ecx, ebx -> ebx
43 [0x2b]:          loadval ecx
44 [0x2c]:          add ecx, ebx -> ebx
45 [0x2d]:          rstore ebx
46 [0x2e]:          movi #1000000009, ebx
48 [0x30]:          loadval ecx
49 [0x31]:          mod ecx, ebx -> ebx
50 [0x32]:          smovr_2 ebx, fp+1
51 [0x33]: line: 31 loadl ebx, fp+2
52 [0x34]:          rstore ebx
53 [0x35]:          movi #31, ebx
55 [0x37]:          loadval ecx
56 [0x38]:          mul ecx, ebx -> ebx
57 [0x39]:          rstore ebx
58 [0x3a]:          movi #1000000009, ebx
60 [0x3c]:          loadval ecx
61 [0x3d]:          mod ecx, ebx -> ebx
62 [0x3e]:          smovr_2 ebx, fp+2
63 [0x3f]:          jmp @14
64 [0x40]: line: 33 new_class @22 // std#long
65 [0x41]:          dup 
66 [0x42]:          loadl ebx, fp+1
67 [0x43]:          rstore ebx
68 [0x44]:          call @211 // <0xd3ccd0>
69 [0x45]:          return_val ebx
70 [0x46]:          ret


constructor: std#string.string[243] params(0) in file: lib/support/0.2.805//string.sharp:3:6: note:  
		class string {
		     ^

0 [0x0]:         ret


std#unique.hash[244] params(0) in file: lib/support/0.2.805//unique.sharp:11:8: note:  
		    def hash() : long;
		       ^



std#unique.guid[245] params(0) in file: lib/support/0.2.805//unique.sharp:12:8: note:  
		    def guid() : long;
		       ^



constructor: std#unique.unique[246] params(0) in file: lib/support/0.2.805//unique.sharp:10:10: note:  
		interface unique {
		         ^

0 [0x0]:         ret


function: std#_nil_.set_instance[247] params(2) in file: lib/support/0.2.805//nil.sharp:11:44: note:  
		    static instance : _nil_ = new _nil_ { };
		                                           ^

0 [0x0]:         ret


function: std.reflect#reflect.set_reflect_obj[248] params(2) in file: lib/support/0.2.805//reflect//reflection.sharp:5:35: note:  
		        get { return reflect_obj; }
		                                  ^

0 [0x0]:         ret


function: std.reflect#reflect.get_reflect_obj[249] params(0) in file: lib/support/0.2.805//reflect//reflection.sharp:4:25: note:  
		    reflect_obj : object;
		                        ^

0 [0x0]: line: 5 movl 0
1 [0x1]:         movn #0
3 [0x3]:         returnobj
4 [0x4]:         ret


function: std.io#__srt_global.$03internal_static_init[250] params(0) in file: lib/support/0.2.805//io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @17 // std#_object_
1 [0x1]:         dup 
2 [0x2]:         call @203 // <0xd401f0>
3 [0x3]:         movg @15 // @std.io#__srt_global
4 [0x4]:         movn #0
6 [0x6]:         popobj


function: std#_nil_.$03internal_static_init[251] params(0) in file: lib/support/0.2.805//nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         new_class @16 // std#_nil_
1 [0x1]:         movg @16 // @std#_nil_
2 [0x2]:         movn #1
4 [0x4]:         popobj


function: std#_object_.$03internal_static_init[252] params(0) in file: lib/support/0.2.805//object.sharp:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         movi #0, ebx
2 [0x2]:         rstore ebx
3 [0x3]:         movg @17 // @std#_object_
4 [0x4]:         movn #0
6 [0x6]:         loadval ebx
7 [0x7]:         movi #0, adx
9 [0x9]:         rmov adx, ebx


