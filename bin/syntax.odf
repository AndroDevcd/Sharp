## Object Dump file for bin/syntax:

pre codebase size: 64420
post codebase size: 57877
optimized opcodes: 6543
net % gain 10.1568


class: app#__srt_global[0] fields(2) methods(5)
class: std#__srt_global[1] fields(1) methods(47)
class: std#_enum_[2] fields(2) methods(14)
class: std#throwable[3] fields(3) methods(9)
class: std#exception[4] fields(3) methods(12)
class: std#illegal_argument_exception[5] fields(3) methods(15)
class: std#illegal_state_exception[6] fields(3) methods(15)
class: std#out_of_bounds_exception[7] fields(3) methods(15)
class: std#invalid_operation_exception[8] fields(3) methods(15)
class: std#nullptr_exception[9] fields(3) methods(15)
class: std#runtime_exception[10] fields(3) methods(15)
class: std#stack_overflow_exception[11] fields(3) methods(15)
class: std#thread_stack_exception[12] fields(3) methods(15)
class: std#class_cast_exception[13] fields(3) methods(15)
class: std#out_of_memory_exception[14] fields(3) methods(15)
class: std#not_implemented_error[15] fields(3) methods(15)
class: std.io#__srt_global[16] fields(1) methods(45)
class: std.io.task#__srt_global[17] fields(3) methods(13)
class: std.io.task#cancellation_exception[18] fields(3) methods(18)
class: std.io.task#job[19] fields(19) methods(20)
class: std.io.task#job_builder[20] fields(2) methods(18)
class: std.io.task#job_controller[21] fields(1) methods(5)
class: std.io.task#job_master[22] fields(5) methods(11)
enum: std.io.task#job_state[23] fields(6) methods(14)
class: std.io.task#task[24] fields(0) methods(13)
class: std.io#thread[25] fields(15) methods(43)
class: std.io#thread_group[26] fields(6) methods(17)
enum: std.io#thread_priority[27] fields(5) methods(14)
enum: std.io#thread_result[28] fields(20) methods(17)
interface: std.io#uncaught_exception_handler[29] fields(0) methods(6)
class: std.math#__srt_global[30] fields(2) methods(25)
class: std#_nil_[31] fields(1) methods(8)
class: std#_object_[32] fields(0) methods(4)
class: platform#__srt_global[33] fields(0) methods(1)
class: platform#build[34] fields(4) methods(7)
class: platform.kernel#__srt_global[35] fields(0) methods(1)
class: platform.kernel#platform[36] fields(4) methods(9)
class: platform.kernel#stack_state[37] fields(2) methods(5)
class: platform.kernel#vm[38] fields(0) methods(20)
class: std#ulong[39] fields(1) methods(291)
class: std#long[40] fields(1) methods(291)
class: std#uint[41] fields(1) methods(291)
class: std#int[42] fields(1) methods(291)
class: std#ushort[43] fields(1) methods(291)
class: std#short[44] fields(1) methods(291)
class: std#uchar[45] fields(1) methods(291)
class: std#char[46] fields(1) methods(297)
class: std#byte[47] fields(1) methods(391)
class: std#bool[48] fields(1) methods(292)
interface: std#printable[49] fields(0) methods(6)
class: std.reflect#__srt_global[50] fields(0) methods(1)
class: std.reflect#_class_[51] fields(1) methods(6)
class: std.reflect#data_entity[52] fields(1) methods(5)
enum: std.reflect#property_type[53] fields(5) methods(14)
class: std.reflect#data_property[54] fields(1) methods(6)
class: std.reflect#field[55] fields(2) methods(5)
class: std.reflect#function[56] fields(1) methods(6)
class: std.reflect#reflect[57] fields(3) methods(8)
class: std#string[58] fields(3) methods(46)
class: std#string_builder[59] fields(7) methods(49)
class: std#time[60] fields(1) methods(16)
enum: std#time_unit[61] fields(6) methods(14)
interface: std#unique[62] fields(0) methods(7)
std#loopable<std.io#thread>[63] fields(0) methods(6)
generic: std#integer<_uint64>[64] fields(1) methods(197)
generic: std#integer<_int64>[65] fields(1) methods(197)
generic: std#integer<_uint32>[66] fields(1) methods(197)
generic: std#integer<_int32>[67] fields(1) methods(197)
generic: std#integer<_uint16>[68] fields(1) methods(197)
generic: std#integer<_int16>[69] fields(1) methods(197)
generic: std#integer<_uint8>[70] fields(1) methods(197)
generic: std#integer<_int8>[71] fields(1) methods(197)
std#loopable<_int8>[72] fields(0) methods(6)
generic: std#hashmap<std.io#thread,std.io.task#job_controller>[73] fields(5) methods(12)
generic: std#hashmap<std#int,std.io#thread>[74] fields(5) methods(12)
generic: std.io.task#deferred<var>[75] fields(4) methods(15)
generic: std.io.task#observable<var>[76] fields(3) methods(11)
generic: std#list<std.io#thread>[77] fields(5) methods(26)
generic: std#synced_list<std.io.task#job>[78] fields(5) methods(26)
std#loopable<std.io.task#job>[79] fields(0) methods(6)
generic: std#list<std.io.task#job>[80] fields(5) methods(26)
generic: std#list<var>[81] fields(5) methods(26)
std#loopable<var>[82] fields(0) methods(6)
generic: std.io.task#entry<std.io#thread,std.io.task#job_controller>[83] fields(3) methods(7)
generic: std.io#entry<std#int,std.io#thread>[84] fields(3) methods(7)
generic: std#synced_list<std.io#thread>[85] fields(5) methods(26)
generic: std.io.task#deferred_task<var>[86] fields(4) methods(20)


 strings: 

[0]: job#
[1]: nil
[2]: main
[3]: 
[4]: cannot set a timeout on a job that's blocking the calling thread
[5]: cannot block calling thread on job that has a timeout
[6]: Long term jobs
[7]: Short term jobs
[8]: task_scheduler
[9]: worker_thread#
[10]: invalid thread priority 
[11]: win
[12]: posix
[13]: length cannot be less than zero
[14]: length of: 
[15]:  is greater than the string: 
[16]: null
[17]: invalid precision: 
[18]: endPos: 
[19]:  cannot be less than the startPos: 
[20]: Index out of bounds exception at: 
[21]:  with size of: 
[22]: cannot sleep for negative time: 
[23]: created
[24]: active
[25]: completed
[26]: cancelled
[27]: min_priority
[28]: norm_priority
[29]: max_priority
[30]: result_ok
[31]: result_ill_thread_start
[32]: result_thread_running
[33]: result_thread_terminated
[34]: result_invalid_stack_size
[35]: result_thread_not_started
[36]: result_ill_thread_join
[37]: result_thread_join_failed
[38]: result_ill_thread_interrupt
[39]: result_thread_interrupt_failed
[40]: result_ill_thread_destroy
[41]: result_thread_create_failed
[42]: result_no_thread_id
[43]: result_thread_destroy_failed
[44]: result_ill_priority_set
[45]: result_ill_thread_suspend
[46]: result_max_spin
[47]: enums
[48]: class_property
[49]: field_property
[50]: function_property
[51]: seconds
[52]: milliseconds
[53]: microseconds
[54]: nanoseconds
[55]: illegal char in string: 
[56]: [ 
[57]: , 
[58]:  ]
[59]: Index: 
[60]: , size: 
[61]: key 
[62]:  value 
[63]: recieved: 

 constants: 

[0]: 2.7182818284590451e+00
[1]: 3.1415926535897931e+00
[2]: 7.5000000000000000e-01
[3]: 2.5000000000000000e-01
[4]: 5.0000000000000000e-01
[5]: 1.0000000000000000e+09

 methods: 
constructor: app#__srt_global.__srt_global[0] params(0) in file: tests/syntax.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std#__srt_global.__srt_global[1] params(0) in file: lib/support/0.2.805//console.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io#__srt_global.__srt_global[2] params(0) in file: lib/support/0.2.805//io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io.task#__srt_global.__srt_global[3] params(0) in file: lib/support/0.2.805//io//task//cancellation_exception.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.math#__srt_global.__srt_global[4] params(0) in file: lib/support/0.2.805//math//math.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform#__srt_global.__srt_global[5] params(0) in file: lib/support/0.2.805//platform//build.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform.kernel#__srt_global.__srt_global[6] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.reflect#__srt_global.__srt_global[7] params(0) in file: lib/support/0.2.805//reflect//class.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


std#loopable<std.io#thread>.get_elements[8] params(0) in file: lib/support/0.2.805//io//thread_group.sharp:4:8: note:  
			
		       ^



constructor: std#loopable<std.io#thread>.loopable[9] params(0) in file: lib/support/0.2.805//io//thread_group.sharp:3:10: note:  
		public class thread_group : loopable<thread> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_uint64>.integer[10] params(1) in file: lib/support/0.2.805//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 9 ipushl #1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         movu64 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         ret   


function: std#integer<_uint64>.hash[11] params(0) in file: lib/support/0.2.805//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          call @1965 // <std#long.long>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


overload function: std#integer<_uint64>.operator!=[12] params(1) in file: lib/support/0.2.805//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[13] params(1) in file: lib/support/0.2.805//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[14] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[15] params(1) in file: lib/support/0.2.805//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[16] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[17] params(1) in file: lib/support/0.2.805//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[18] params(1) in file: lib/support/0.2.805//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[19] params(1) in file: lib/support/0.2.805//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[20] params(1) in file: lib/support/0.2.805//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[21] params(1) in file: lib/support/0.2.805//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[22] params(1) in file: lib/support/0.2.805//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[23] params(1) in file: lib/support/0.2.805//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[24] params(1) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[25] params(1) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[26] params(1) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[27] params(1) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[28] params(1) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[29] params(1) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[30] params(1) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[31] params(1) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[32] params(1) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[33] params(1) in file: lib/support/0.2.805//primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[34] params(1) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[35] params(1) in file: lib/support/0.2.805//primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[36] params(1) in file: lib/support/0.2.805//primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[37] params(1) in file: lib/support/0.2.805//primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[38] params(1) in file: lib/support/0.2.805//primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[39] params(1) in file: lib/support/0.2.805//primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[40] params(1) in file: lib/support/0.2.805//primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[41] params(1) in file: lib/support/0.2.805//primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[42] params(1) in file: lib/support/0.2.805//primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator-[43] params(1) in file: lib/support/0.2.805//primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[44] params(1) in file: lib/support/0.2.805//primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[45] params(1) in file: lib/support/0.2.805//primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[46] params(1) in file: lib/support/0.2.805//primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[47] params(1) in file: lib/support/0.2.805//primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[48] params(1) in file: lib/support/0.2.805//primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[49] params(1) in file: lib/support/0.2.805//primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[50] params(1) in file: lib/support/0.2.805//primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[51] params(1) in file: lib/support/0.2.805//primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[52] params(1) in file: lib/support/0.2.805//primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[53] params(1) in file: lib/support/0.2.805//primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator*[54] params(1) in file: lib/support/0.2.805//primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[55] params(1) in file: lib/support/0.2.805//primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[56] params(1) in file: lib/support/0.2.805//primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[57] params(1) in file: lib/support/0.2.805//primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[58] params(1) in file: lib/support/0.2.805//primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[59] params(1) in file: lib/support/0.2.805//primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[60] params(1) in file: lib/support/0.2.805//primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[61] params(1) in file: lib/support/0.2.805//primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[62] params(1) in file: lib/support/0.2.805//primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[63] params(1) in file: lib/support/0.2.805//primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[64] params(1) in file: lib/support/0.2.805//primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator/[65] params(1) in file: lib/support/0.2.805//primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[66] params(1) in file: lib/support/0.2.805//primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[67] params(1) in file: lib/support/0.2.805//primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[68] params(1) in file: lib/support/0.2.805//primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[69] params(1) in file: lib/support/0.2.805//primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[70] params(1) in file: lib/support/0.2.805//primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[71] params(1) in file: lib/support/0.2.805//primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[72] params(1) in file: lib/support/0.2.805//primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[73] params(1) in file: lib/support/0.2.805//primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[74] params(1) in file: lib/support/0.2.805//primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[75] params(1) in file: lib/support/0.2.805//primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator%[76] params(1) in file: lib/support/0.2.805//primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[77] params(1) in file: lib/support/0.2.805//primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[78] params(1) in file: lib/support/0.2.805//primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[79] params(1) in file: lib/support/0.2.805//primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[80] params(1) in file: lib/support/0.2.805//primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[81] params(1) in file: lib/support/0.2.805//primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[82] params(1) in file: lib/support/0.2.805//primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[83] params(1) in file: lib/support/0.2.805//primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[84] params(1) in file: lib/support/0.2.805//primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[85] params(1) in file: lib/support/0.2.805//primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[86] params(1) in file: lib/support/0.2.805//primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator<[87] params(1) in file: lib/support/0.2.805//primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator<[88] params(1) in file: lib/support/0.2.805//primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator<[89] params(1) in file: lib/support/0.2.805//primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator<[90] params(1) in file: lib/support/0.2.805//primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[91] params(1) in file: lib/support/0.2.805//primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[92] params(1) in file: lib/support/0.2.805//primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[93] params(1) in file: lib/support/0.2.805//primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[94] params(1) in file: lib/support/0.2.805//primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[95] params(1) in file: lib/support/0.2.805//primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[96] params(1) in file: lib/support/0.2.805//primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[97] params(1) in file: lib/support/0.2.805//primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator>[98] params(1) in file: lib/support/0.2.805//primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[99] params(1) in file: lib/support/0.2.805//primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[100] params(1) in file: lib/support/0.2.805//primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[101] params(1) in file: lib/support/0.2.805//primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[102] params(1) in file: lib/support/0.2.805//primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[103] params(1) in file: lib/support/0.2.805//primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[104] params(1) in file: lib/support/0.2.805//primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[105] params(1) in file: lib/support/0.2.805//primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[106] params(1) in file: lib/support/0.2.805//primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[107] params(1) in file: lib/support/0.2.805//primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[108] params(1) in file: lib/support/0.2.805//primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<=[109] params(1) in file: lib/support/0.2.805//primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[110] params(1) in file: lib/support/0.2.805//primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[111] params(1) in file: lib/support/0.2.805//primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[112] params(1) in file: lib/support/0.2.805//primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[113] params(1) in file: lib/support/0.2.805//primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[114] params(1) in file: lib/support/0.2.805//primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[115] params(1) in file: lib/support/0.2.805//primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[116] params(1) in file: lib/support/0.2.805//primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[117] params(1) in file: lib/support/0.2.805//primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[118] params(1) in file: lib/support/0.2.805//primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[119] params(1) in file: lib/support/0.2.805//primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator**[120] params(1) in file: lib/support/0.2.805//primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[121] params(1) in file: lib/support/0.2.805//primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[122] params(1) in file: lib/support/0.2.805//primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[123] params(1) in file: lib/support/0.2.805//primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[124] params(1) in file: lib/support/0.2.805//primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[125] params(1) in file: lib/support/0.2.805//primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[126] params(1) in file: lib/support/0.2.805//primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[127] params(1) in file: lib/support/0.2.805//primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[128] params(1) in file: lib/support/0.2.805//primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[129] params(1) in file: lib/support/0.2.805//primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[130] params(1) in file: lib/support/0.2.805//primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<<[131] params(1) in file: lib/support/0.2.805//primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[132] params(1) in file: lib/support/0.2.805//primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[133] params(1) in file: lib/support/0.2.805//primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[134] params(1) in file: lib/support/0.2.805//primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[135] params(1) in file: lib/support/0.2.805//primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[136] params(1) in file: lib/support/0.2.805//primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[137] params(1) in file: lib/support/0.2.805//primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[138] params(1) in file: lib/support/0.2.805//primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[139] params(1) in file: lib/support/0.2.805//primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[140] params(1) in file: lib/support/0.2.805//primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[141] params(1) in file: lib/support/0.2.805//primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator>>[142] params(1) in file: lib/support/0.2.805//primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[143] params(1) in file: lib/support/0.2.805//primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[144] params(1) in file: lib/support/0.2.805//primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[145] params(1) in file: lib/support/0.2.805//primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[146] params(1) in file: lib/support/0.2.805//primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[147] params(1) in file: lib/support/0.2.805//primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[148] params(1) in file: lib/support/0.2.805//primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[149] params(1) in file: lib/support/0.2.805//primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[150] params(1) in file: lib/support/0.2.805//primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[151] params(1) in file: lib/support/0.2.805//primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[152] params(1) in file: lib/support/0.2.805//primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator^[153] params(1) in file: lib/support/0.2.805//primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[154] params(1) in file: lib/support/0.2.805//primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[155] params(1) in file: lib/support/0.2.805//primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[156] params(1) in file: lib/support/0.2.805//primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[157] params(1) in file: lib/support/0.2.805//primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[158] params(1) in file: lib/support/0.2.805//primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[159] params(1) in file: lib/support/0.2.805//primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[160] params(1) in file: lib/support/0.2.805//primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[161] params(1) in file: lib/support/0.2.805//primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[162] params(1) in file: lib/support/0.2.805//primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[163] params(1) in file: lib/support/0.2.805//primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator&[164] params(1) in file: lib/support/0.2.805//primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[165] params(1) in file: lib/support/0.2.805//primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[166] params(1) in file: lib/support/0.2.805//primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[167] params(1) in file: lib/support/0.2.805//primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[168] params(1) in file: lib/support/0.2.805//primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[169] params(1) in file: lib/support/0.2.805//primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[170] params(1) in file: lib/support/0.2.805//primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[171] params(1) in file: lib/support/0.2.805//primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[172] params(1) in file: lib/support/0.2.805//primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[173] params(1) in file: lib/support/0.2.805//primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[174] params(1) in file: lib/support/0.2.805//primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator|[175] params(1) in file: lib/support/0.2.805//primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[176] params(1) in file: lib/support/0.2.805//primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[177] params(1) in file: lib/support/0.2.805//primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[178] params(1) in file: lib/support/0.2.805//primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[179] params(1) in file: lib/support/0.2.805//primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[180] params(1) in file: lib/support/0.2.805//primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[181] params(1) in file: lib/support/0.2.805//primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[182] params(1) in file: lib/support/0.2.805//primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[183] params(1) in file: lib/support/0.2.805//primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[184] params(1) in file: lib/support/0.2.805//primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[185] params(1) in file: lib/support/0.2.805//primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator!=[186] params(1) in file: lib/support/0.2.805//primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator==[187] params(1) in file: lib/support/0.2.805//primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator=[188] params(1) in file: lib/support/0.2.805//primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint64>.to_string[189] params(0) in file: lib/support/0.2.805//primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 210 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2853 // <std#string.operator+>   
12 [0xc]:           popobj2    
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std#integer<_uint64>.parse[190] params(1) in file: lib/support/0.2.805//primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           movu64 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2854 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2843 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           jne 77   
32 [0x20]: line: 226 pushl 0   
33 [0x21]:           ipushl #1   
34 [0x22]:           call @2843 // <std#string.at>   
35 [0x23]:           call @2612 // <std#char.is_digit>   
36 [0x24]:           loadval ebx   
37 [0x25]:           not ebx, ebx   
38 [0x26]:           movr cmt, ebx   
39 [0x27]:           jne 52   
40 [0x28]: line: 227 new_class @5 // std#illegal_argument_exception   
41 [0x29]:           dup    
42 [0x2a]:           new_class @58 // std#string   
43 [0x2b]:           dup    
44 [0x2c]:           newstr @55 // illegal char in string:    
45 [0x2d]:           call @2823 // <std#string.string>   
46 [0x2e]:           pushl 0   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @2843 // <std#string.at>   
49 [0x31]:           call @2853 // <std#string.operator+>   
50 [0x32]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
51 [0x33]:           throw    
52 [0x34]:           nop   
53 [0x35]: line: 231 movi #10, ebx   
55 [0x37]:           loadl ecx, fp+2   
56 [0x38]:           mul ecx, ebx -> ebx   
57 [0x39]:           movu64 ebx, ebx   
58 [0x3a]:           smovr_2 ebx, fp+2   
59 [0x3b]: line: 232 pushl 0   
60 [0x3c]:           loadl ebx, fp+1   
61 [0x3d]:           movr egx, ebx   
62 [0x3e]:           inc ebx   
63 [0x3f]:           smovr_2 ebx, fp+1   
64 [0x40]:           rstore egx   
65 [0x41]:           call @2843 // <std#string.at>   
66 [0x42]:           loadval ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movi #48, ebx   
70 [0x46]:           loadval ecx   
71 [0x47]:           sub ecx, ebx -> ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           movu64 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]:           jmp @27   
77 [0x4d]: line: 234 loadl ebx, fp+3   
78 [0x4e]:           movr cmt, ebx   
79 [0x4f]:           jne 84   
80 [0x50]: line: 235 loadl ebx, fp+2   
81 [0x51]:           neg ebx, ebx   
82 [0x52]:           movu64 ebx, ebx   
83 [0x53]:           smovr_2 ebx, fp+2   
84 [0x54]:           nop   
85 [0x55]: line: 236 loadl ebx, fp+2   
86 [0x56]:           return_val ebx   
87 [0x57]:           ret   


function: std#integer<_uint64>.to_ulong[191] params(0) in file: lib/support/0.2.805//primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @39 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_long[192] params(0) in file: lib/support/0.2.805//primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @40 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_uint[193] params(0) in file: lib/support/0.2.805//primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @41 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_int[194] params(0) in file: lib/support/0.2.805//primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @42 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_ushort[195] params(0) in file: lib/support/0.2.805//primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @43 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_short[196] params(0) in file: lib/support/0.2.805//primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @44 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_uchar[197] params(0) in file: lib/support/0.2.805//primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @45 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_char[198] params(0) in file: lib/support/0.2.805//primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @46 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_byte[199] params(0) in file: lib/support/0.2.805//primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @47 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_bool[200] params(0) in file: lib/support/0.2.805//primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @48 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.get_value[201] params(0) in file: lib/support/0.2.805//primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint64>.integer[202] params(0) in file: lib/support/0.2.805//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_int64>.integer[203] params(1) in file: lib/support/0.2.805//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 9 ipushl #1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         mov64 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         ret   


function: std#integer<_int64>.hash[204] params(0) in file: lib/support/0.2.805//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          call @1965 // <std#long.long>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


overload function: std#integer<_int64>.operator!=[205] params(1) in file: lib/support/0.2.805//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[206] params(1) in file: lib/support/0.2.805//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[207] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[208] params(1) in file: lib/support/0.2.805//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[209] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[210] params(1) in file: lib/support/0.2.805//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[211] params(1) in file: lib/support/0.2.805//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[212] params(1) in file: lib/support/0.2.805//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[213] params(1) in file: lib/support/0.2.805//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[214] params(1) in file: lib/support/0.2.805//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[215] params(1) in file: lib/support/0.2.805//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[216] params(1) in file: lib/support/0.2.805//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[217] params(1) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[218] params(1) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[219] params(1) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[220] params(1) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[221] params(1) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[222] params(1) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[223] params(1) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[224] params(1) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[225] params(1) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[226] params(1) in file: lib/support/0.2.805//primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[227] params(1) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[228] params(1) in file: lib/support/0.2.805//primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[229] params(1) in file: lib/support/0.2.805//primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[230] params(1) in file: lib/support/0.2.805//primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[231] params(1) in file: lib/support/0.2.805//primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[232] params(1) in file: lib/support/0.2.805//primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[233] params(1) in file: lib/support/0.2.805//primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[234] params(1) in file: lib/support/0.2.805//primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[235] params(1) in file: lib/support/0.2.805//primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator-[236] params(1) in file: lib/support/0.2.805//primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[237] params(1) in file: lib/support/0.2.805//primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[238] params(1) in file: lib/support/0.2.805//primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[239] params(1) in file: lib/support/0.2.805//primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[240] params(1) in file: lib/support/0.2.805//primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[241] params(1) in file: lib/support/0.2.805//primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[242] params(1) in file: lib/support/0.2.805//primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[243] params(1) in file: lib/support/0.2.805//primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[244] params(1) in file: lib/support/0.2.805//primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[245] params(1) in file: lib/support/0.2.805//primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[246] params(1) in file: lib/support/0.2.805//primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator*[247] params(1) in file: lib/support/0.2.805//primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[248] params(1) in file: lib/support/0.2.805//primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[249] params(1) in file: lib/support/0.2.805//primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[250] params(1) in file: lib/support/0.2.805//primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[251] params(1) in file: lib/support/0.2.805//primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[252] params(1) in file: lib/support/0.2.805//primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[253] params(1) in file: lib/support/0.2.805//primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[254] params(1) in file: lib/support/0.2.805//primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[255] params(1) in file: lib/support/0.2.805//primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[256] params(1) in file: lib/support/0.2.805//primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[257] params(1) in file: lib/support/0.2.805//primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator/[258] params(1) in file: lib/support/0.2.805//primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[259] params(1) in file: lib/support/0.2.805//primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[260] params(1) in file: lib/support/0.2.805//primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[261] params(1) in file: lib/support/0.2.805//primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[262] params(1) in file: lib/support/0.2.805//primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[263] params(1) in file: lib/support/0.2.805//primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[264] params(1) in file: lib/support/0.2.805//primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[265] params(1) in file: lib/support/0.2.805//primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[266] params(1) in file: lib/support/0.2.805//primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[267] params(1) in file: lib/support/0.2.805//primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[268] params(1) in file: lib/support/0.2.805//primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator%[269] params(1) in file: lib/support/0.2.805//primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[270] params(1) in file: lib/support/0.2.805//primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[271] params(1) in file: lib/support/0.2.805//primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[272] params(1) in file: lib/support/0.2.805//primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[273] params(1) in file: lib/support/0.2.805//primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[274] params(1) in file: lib/support/0.2.805//primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[275] params(1) in file: lib/support/0.2.805//primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[276] params(1) in file: lib/support/0.2.805//primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[277] params(1) in file: lib/support/0.2.805//primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[278] params(1) in file: lib/support/0.2.805//primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[279] params(1) in file: lib/support/0.2.805//primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator<[280] params(1) in file: lib/support/0.2.805//primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator<[281] params(1) in file: lib/support/0.2.805//primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator<[282] params(1) in file: lib/support/0.2.805//primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator<[283] params(1) in file: lib/support/0.2.805//primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[284] params(1) in file: lib/support/0.2.805//primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[285] params(1) in file: lib/support/0.2.805//primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[286] params(1) in file: lib/support/0.2.805//primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[287] params(1) in file: lib/support/0.2.805//primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[288] params(1) in file: lib/support/0.2.805//primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[289] params(1) in file: lib/support/0.2.805//primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[290] params(1) in file: lib/support/0.2.805//primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator>[291] params(1) in file: lib/support/0.2.805//primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[292] params(1) in file: lib/support/0.2.805//primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[293] params(1) in file: lib/support/0.2.805//primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[294] params(1) in file: lib/support/0.2.805//primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[295] params(1) in file: lib/support/0.2.805//primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[296] params(1) in file: lib/support/0.2.805//primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[297] params(1) in file: lib/support/0.2.805//primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[298] params(1) in file: lib/support/0.2.805//primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[299] params(1) in file: lib/support/0.2.805//primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[300] params(1) in file: lib/support/0.2.805//primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[301] params(1) in file: lib/support/0.2.805//primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<=[302] params(1) in file: lib/support/0.2.805//primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[303] params(1) in file: lib/support/0.2.805//primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[304] params(1) in file: lib/support/0.2.805//primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[305] params(1) in file: lib/support/0.2.805//primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[306] params(1) in file: lib/support/0.2.805//primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[307] params(1) in file: lib/support/0.2.805//primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[308] params(1) in file: lib/support/0.2.805//primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[309] params(1) in file: lib/support/0.2.805//primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[310] params(1) in file: lib/support/0.2.805//primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[311] params(1) in file: lib/support/0.2.805//primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[312] params(1) in file: lib/support/0.2.805//primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator**[313] params(1) in file: lib/support/0.2.805//primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[314] params(1) in file: lib/support/0.2.805//primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[315] params(1) in file: lib/support/0.2.805//primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[316] params(1) in file: lib/support/0.2.805//primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[317] params(1) in file: lib/support/0.2.805//primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[318] params(1) in file: lib/support/0.2.805//primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[319] params(1) in file: lib/support/0.2.805//primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[320] params(1) in file: lib/support/0.2.805//primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[321] params(1) in file: lib/support/0.2.805//primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[322] params(1) in file: lib/support/0.2.805//primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[323] params(1) in file: lib/support/0.2.805//primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<<[324] params(1) in file: lib/support/0.2.805//primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[325] params(1) in file: lib/support/0.2.805//primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[326] params(1) in file: lib/support/0.2.805//primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[327] params(1) in file: lib/support/0.2.805//primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[328] params(1) in file: lib/support/0.2.805//primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[329] params(1) in file: lib/support/0.2.805//primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[330] params(1) in file: lib/support/0.2.805//primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[331] params(1) in file: lib/support/0.2.805//primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[332] params(1) in file: lib/support/0.2.805//primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[333] params(1) in file: lib/support/0.2.805//primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[334] params(1) in file: lib/support/0.2.805//primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator>>[335] params(1) in file: lib/support/0.2.805//primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[336] params(1) in file: lib/support/0.2.805//primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[337] params(1) in file: lib/support/0.2.805//primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[338] params(1) in file: lib/support/0.2.805//primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[339] params(1) in file: lib/support/0.2.805//primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[340] params(1) in file: lib/support/0.2.805//primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[341] params(1) in file: lib/support/0.2.805//primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[342] params(1) in file: lib/support/0.2.805//primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[343] params(1) in file: lib/support/0.2.805//primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[344] params(1) in file: lib/support/0.2.805//primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[345] params(1) in file: lib/support/0.2.805//primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator^[346] params(1) in file: lib/support/0.2.805//primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[347] params(1) in file: lib/support/0.2.805//primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[348] params(1) in file: lib/support/0.2.805//primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[349] params(1) in file: lib/support/0.2.805//primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[350] params(1) in file: lib/support/0.2.805//primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[351] params(1) in file: lib/support/0.2.805//primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[352] params(1) in file: lib/support/0.2.805//primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[353] params(1) in file: lib/support/0.2.805//primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[354] params(1) in file: lib/support/0.2.805//primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[355] params(1) in file: lib/support/0.2.805//primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[356] params(1) in file: lib/support/0.2.805//primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator&[357] params(1) in file: lib/support/0.2.805//primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[358] params(1) in file: lib/support/0.2.805//primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[359] params(1) in file: lib/support/0.2.805//primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[360] params(1) in file: lib/support/0.2.805//primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[361] params(1) in file: lib/support/0.2.805//primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[362] params(1) in file: lib/support/0.2.805//primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[363] params(1) in file: lib/support/0.2.805//primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[364] params(1) in file: lib/support/0.2.805//primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[365] params(1) in file: lib/support/0.2.805//primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[366] params(1) in file: lib/support/0.2.805//primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[367] params(1) in file: lib/support/0.2.805//primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator|[368] params(1) in file: lib/support/0.2.805//primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[369] params(1) in file: lib/support/0.2.805//primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[370] params(1) in file: lib/support/0.2.805//primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[371] params(1) in file: lib/support/0.2.805//primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[372] params(1) in file: lib/support/0.2.805//primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[373] params(1) in file: lib/support/0.2.805//primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[374] params(1) in file: lib/support/0.2.805//primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[375] params(1) in file: lib/support/0.2.805//primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[376] params(1) in file: lib/support/0.2.805//primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[377] params(1) in file: lib/support/0.2.805//primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[378] params(1) in file: lib/support/0.2.805//primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator!=[379] params(1) in file: lib/support/0.2.805//primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator==[380] params(1) in file: lib/support/0.2.805//primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator=[381] params(1) in file: lib/support/0.2.805//primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int64>.to_string[382] params(0) in file: lib/support/0.2.805//primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 210 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2853 // <std#string.operator+>   
12 [0xc]:           popobj2    
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std#integer<_int64>.parse[383] params(1) in file: lib/support/0.2.805//primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           mov64 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2854 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2843 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           jne 77   
32 [0x20]: line: 226 pushl 0   
33 [0x21]:           ipushl #1   
34 [0x22]:           call @2843 // <std#string.at>   
35 [0x23]:           call @2612 // <std#char.is_digit>   
36 [0x24]:           loadval ebx   
37 [0x25]:           not ebx, ebx   
38 [0x26]:           movr cmt, ebx   
39 [0x27]:           jne 52   
40 [0x28]: line: 227 new_class @5 // std#illegal_argument_exception   
41 [0x29]:           dup    
42 [0x2a]:           new_class @58 // std#string   
43 [0x2b]:           dup    
44 [0x2c]:           newstr @55 // illegal char in string:    
45 [0x2d]:           call @2823 // <std#string.string>   
46 [0x2e]:           pushl 0   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @2843 // <std#string.at>   
49 [0x31]:           call @2853 // <std#string.operator+>   
50 [0x32]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
51 [0x33]:           throw    
52 [0x34]:           nop   
53 [0x35]: line: 231 movi #10, ebx   
55 [0x37]:           loadl ecx, fp+2   
56 [0x38]:           mul ecx, ebx -> ebx   
57 [0x39]:           mov64 ebx, ebx   
58 [0x3a]:           smovr_2 ebx, fp+2   
59 [0x3b]: line: 232 pushl 0   
60 [0x3c]:           loadl ebx, fp+1   
61 [0x3d]:           movr egx, ebx   
62 [0x3e]:           inc ebx   
63 [0x3f]:           smovr_2 ebx, fp+1   
64 [0x40]:           rstore egx   
65 [0x41]:           call @2843 // <std#string.at>   
66 [0x42]:           loadval ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movi #48, ebx   
70 [0x46]:           loadval ecx   
71 [0x47]:           sub ecx, ebx -> ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           mov64 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]:           jmp @27   
77 [0x4d]: line: 234 loadl ebx, fp+3   
78 [0x4e]:           movr cmt, ebx   
79 [0x4f]:           jne 84   
80 [0x50]: line: 235 loadl ebx, fp+2   
81 [0x51]:           neg ebx, ebx   
82 [0x52]:           mov64 ebx, ebx   
83 [0x53]:           smovr_2 ebx, fp+2   
84 [0x54]:           nop   
85 [0x55]: line: 236 loadl ebx, fp+2   
86 [0x56]:           return_val ebx   
87 [0x57]:           ret   


function: std#integer<_int64>.to_ulong[384] params(0) in file: lib/support/0.2.805//primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @39 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_long[385] params(0) in file: lib/support/0.2.805//primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @40 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_uint[386] params(0) in file: lib/support/0.2.805//primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @41 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_int[387] params(0) in file: lib/support/0.2.805//primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @42 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_ushort[388] params(0) in file: lib/support/0.2.805//primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @43 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_short[389] params(0) in file: lib/support/0.2.805//primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @44 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_uchar[390] params(0) in file: lib/support/0.2.805//primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @45 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_char[391] params(0) in file: lib/support/0.2.805//primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @46 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_byte[392] params(0) in file: lib/support/0.2.805//primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @47 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_bool[393] params(0) in file: lib/support/0.2.805//primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @48 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.get_value[394] params(0) in file: lib/support/0.2.805//primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int64>.integer[395] params(0) in file: lib/support/0.2.805//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_uint32>.integer[396] params(1) in file: lib/support/0.2.805//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 9 ipushl #1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         movu32 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         ret   


function: std#integer<_uint32>.hash[397] params(0) in file: lib/support/0.2.805//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          call @1965 // <std#long.long>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


overload function: std#integer<_uint32>.operator!=[398] params(1) in file: lib/support/0.2.805//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[399] params(1) in file: lib/support/0.2.805//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[400] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[401] params(1) in file: lib/support/0.2.805//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[402] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[403] params(1) in file: lib/support/0.2.805//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[404] params(1) in file: lib/support/0.2.805//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[405] params(1) in file: lib/support/0.2.805//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[406] params(1) in file: lib/support/0.2.805//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[407] params(1) in file: lib/support/0.2.805//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[408] params(1) in file: lib/support/0.2.805//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[409] params(1) in file: lib/support/0.2.805//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[410] params(1) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[411] params(1) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[412] params(1) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[413] params(1) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[414] params(1) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[415] params(1) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[416] params(1) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[417] params(1) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[418] params(1) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[419] params(1) in file: lib/support/0.2.805//primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[420] params(1) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[421] params(1) in file: lib/support/0.2.805//primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[422] params(1) in file: lib/support/0.2.805//primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[423] params(1) in file: lib/support/0.2.805//primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[424] params(1) in file: lib/support/0.2.805//primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[425] params(1) in file: lib/support/0.2.805//primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[426] params(1) in file: lib/support/0.2.805//primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[427] params(1) in file: lib/support/0.2.805//primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[428] params(1) in file: lib/support/0.2.805//primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator-[429] params(1) in file: lib/support/0.2.805//primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[430] params(1) in file: lib/support/0.2.805//primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[431] params(1) in file: lib/support/0.2.805//primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[432] params(1) in file: lib/support/0.2.805//primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[433] params(1) in file: lib/support/0.2.805//primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[434] params(1) in file: lib/support/0.2.805//primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[435] params(1) in file: lib/support/0.2.805//primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[436] params(1) in file: lib/support/0.2.805//primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[437] params(1) in file: lib/support/0.2.805//primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[438] params(1) in file: lib/support/0.2.805//primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[439] params(1) in file: lib/support/0.2.805//primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator*[440] params(1) in file: lib/support/0.2.805//primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[441] params(1) in file: lib/support/0.2.805//primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[442] params(1) in file: lib/support/0.2.805//primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[443] params(1) in file: lib/support/0.2.805//primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[444] params(1) in file: lib/support/0.2.805//primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[445] params(1) in file: lib/support/0.2.805//primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[446] params(1) in file: lib/support/0.2.805//primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[447] params(1) in file: lib/support/0.2.805//primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[448] params(1) in file: lib/support/0.2.805//primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[449] params(1) in file: lib/support/0.2.805//primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[450] params(1) in file: lib/support/0.2.805//primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator/[451] params(1) in file: lib/support/0.2.805//primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[452] params(1) in file: lib/support/0.2.805//primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[453] params(1) in file: lib/support/0.2.805//primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[454] params(1) in file: lib/support/0.2.805//primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[455] params(1) in file: lib/support/0.2.805//primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[456] params(1) in file: lib/support/0.2.805//primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[457] params(1) in file: lib/support/0.2.805//primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[458] params(1) in file: lib/support/0.2.805//primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[459] params(1) in file: lib/support/0.2.805//primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[460] params(1) in file: lib/support/0.2.805//primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[461] params(1) in file: lib/support/0.2.805//primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator%[462] params(1) in file: lib/support/0.2.805//primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[463] params(1) in file: lib/support/0.2.805//primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[464] params(1) in file: lib/support/0.2.805//primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[465] params(1) in file: lib/support/0.2.805//primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[466] params(1) in file: lib/support/0.2.805//primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[467] params(1) in file: lib/support/0.2.805//primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[468] params(1) in file: lib/support/0.2.805//primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[469] params(1) in file: lib/support/0.2.805//primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[470] params(1) in file: lib/support/0.2.805//primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[471] params(1) in file: lib/support/0.2.805//primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[472] params(1) in file: lib/support/0.2.805//primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator<[473] params(1) in file: lib/support/0.2.805//primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator<[474] params(1) in file: lib/support/0.2.805//primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator<[475] params(1) in file: lib/support/0.2.805//primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator<[476] params(1) in file: lib/support/0.2.805//primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[477] params(1) in file: lib/support/0.2.805//primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[478] params(1) in file: lib/support/0.2.805//primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[479] params(1) in file: lib/support/0.2.805//primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[480] params(1) in file: lib/support/0.2.805//primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[481] params(1) in file: lib/support/0.2.805//primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[482] params(1) in file: lib/support/0.2.805//primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[483] params(1) in file: lib/support/0.2.805//primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator>[484] params(1) in file: lib/support/0.2.805//primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[485] params(1) in file: lib/support/0.2.805//primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[486] params(1) in file: lib/support/0.2.805//primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[487] params(1) in file: lib/support/0.2.805//primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[488] params(1) in file: lib/support/0.2.805//primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[489] params(1) in file: lib/support/0.2.805//primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[490] params(1) in file: lib/support/0.2.805//primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[491] params(1) in file: lib/support/0.2.805//primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[492] params(1) in file: lib/support/0.2.805//primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[493] params(1) in file: lib/support/0.2.805//primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[494] params(1) in file: lib/support/0.2.805//primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<=[495] params(1) in file: lib/support/0.2.805//primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[496] params(1) in file: lib/support/0.2.805//primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[497] params(1) in file: lib/support/0.2.805//primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[498] params(1) in file: lib/support/0.2.805//primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[499] params(1) in file: lib/support/0.2.805//primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[500] params(1) in file: lib/support/0.2.805//primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[501] params(1) in file: lib/support/0.2.805//primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[502] params(1) in file: lib/support/0.2.805//primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[503] params(1) in file: lib/support/0.2.805//primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[504] params(1) in file: lib/support/0.2.805//primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[505] params(1) in file: lib/support/0.2.805//primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator**[506] params(1) in file: lib/support/0.2.805//primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[507] params(1) in file: lib/support/0.2.805//primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[508] params(1) in file: lib/support/0.2.805//primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[509] params(1) in file: lib/support/0.2.805//primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[510] params(1) in file: lib/support/0.2.805//primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[511] params(1) in file: lib/support/0.2.805//primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[512] params(1) in file: lib/support/0.2.805//primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[513] params(1) in file: lib/support/0.2.805//primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[514] params(1) in file: lib/support/0.2.805//primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[515] params(1) in file: lib/support/0.2.805//primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[516] params(1) in file: lib/support/0.2.805//primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<<[517] params(1) in file: lib/support/0.2.805//primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[518] params(1) in file: lib/support/0.2.805//primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[519] params(1) in file: lib/support/0.2.805//primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[520] params(1) in file: lib/support/0.2.805//primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[521] params(1) in file: lib/support/0.2.805//primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[522] params(1) in file: lib/support/0.2.805//primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[523] params(1) in file: lib/support/0.2.805//primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[524] params(1) in file: lib/support/0.2.805//primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[525] params(1) in file: lib/support/0.2.805//primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[526] params(1) in file: lib/support/0.2.805//primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[527] params(1) in file: lib/support/0.2.805//primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator>>[528] params(1) in file: lib/support/0.2.805//primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[529] params(1) in file: lib/support/0.2.805//primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[530] params(1) in file: lib/support/0.2.805//primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[531] params(1) in file: lib/support/0.2.805//primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[532] params(1) in file: lib/support/0.2.805//primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[533] params(1) in file: lib/support/0.2.805//primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[534] params(1) in file: lib/support/0.2.805//primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[535] params(1) in file: lib/support/0.2.805//primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[536] params(1) in file: lib/support/0.2.805//primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[537] params(1) in file: lib/support/0.2.805//primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[538] params(1) in file: lib/support/0.2.805//primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator^[539] params(1) in file: lib/support/0.2.805//primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[540] params(1) in file: lib/support/0.2.805//primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[541] params(1) in file: lib/support/0.2.805//primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[542] params(1) in file: lib/support/0.2.805//primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[543] params(1) in file: lib/support/0.2.805//primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[544] params(1) in file: lib/support/0.2.805//primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[545] params(1) in file: lib/support/0.2.805//primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[546] params(1) in file: lib/support/0.2.805//primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[547] params(1) in file: lib/support/0.2.805//primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[548] params(1) in file: lib/support/0.2.805//primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[549] params(1) in file: lib/support/0.2.805//primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator&[550] params(1) in file: lib/support/0.2.805//primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[551] params(1) in file: lib/support/0.2.805//primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[552] params(1) in file: lib/support/0.2.805//primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[553] params(1) in file: lib/support/0.2.805//primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[554] params(1) in file: lib/support/0.2.805//primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[555] params(1) in file: lib/support/0.2.805//primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[556] params(1) in file: lib/support/0.2.805//primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[557] params(1) in file: lib/support/0.2.805//primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[558] params(1) in file: lib/support/0.2.805//primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[559] params(1) in file: lib/support/0.2.805//primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[560] params(1) in file: lib/support/0.2.805//primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator|[561] params(1) in file: lib/support/0.2.805//primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[562] params(1) in file: lib/support/0.2.805//primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[563] params(1) in file: lib/support/0.2.805//primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[564] params(1) in file: lib/support/0.2.805//primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[565] params(1) in file: lib/support/0.2.805//primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[566] params(1) in file: lib/support/0.2.805//primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[567] params(1) in file: lib/support/0.2.805//primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[568] params(1) in file: lib/support/0.2.805//primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[569] params(1) in file: lib/support/0.2.805//primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[570] params(1) in file: lib/support/0.2.805//primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[571] params(1) in file: lib/support/0.2.805//primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator!=[572] params(1) in file: lib/support/0.2.805//primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator==[573] params(1) in file: lib/support/0.2.805//primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator=[574] params(1) in file: lib/support/0.2.805//primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint32>.to_string[575] params(0) in file: lib/support/0.2.805//primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 210 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2853 // <std#string.operator+>   
12 [0xc]:           popobj2    
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std#integer<_uint32>.parse[576] params(1) in file: lib/support/0.2.805//primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           movu32 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2854 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2843 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           jne 77   
32 [0x20]: line: 226 pushl 0   
33 [0x21]:           ipushl #1   
34 [0x22]:           call @2843 // <std#string.at>   
35 [0x23]:           call @2612 // <std#char.is_digit>   
36 [0x24]:           loadval ebx   
37 [0x25]:           not ebx, ebx   
38 [0x26]:           movr cmt, ebx   
39 [0x27]:           jne 52   
40 [0x28]: line: 227 new_class @5 // std#illegal_argument_exception   
41 [0x29]:           dup    
42 [0x2a]:           new_class @58 // std#string   
43 [0x2b]:           dup    
44 [0x2c]:           newstr @55 // illegal char in string:    
45 [0x2d]:           call @2823 // <std#string.string>   
46 [0x2e]:           pushl 0   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @2843 // <std#string.at>   
49 [0x31]:           call @2853 // <std#string.operator+>   
50 [0x32]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
51 [0x33]:           throw    
52 [0x34]:           nop   
53 [0x35]: line: 231 movi #10, ebx   
55 [0x37]:           loadl ecx, fp+2   
56 [0x38]:           mul ecx, ebx -> ebx   
57 [0x39]:           movu32 ebx, ebx   
58 [0x3a]:           smovr_2 ebx, fp+2   
59 [0x3b]: line: 232 pushl 0   
60 [0x3c]:           loadl ebx, fp+1   
61 [0x3d]:           movr egx, ebx   
62 [0x3e]:           inc ebx   
63 [0x3f]:           smovr_2 ebx, fp+1   
64 [0x40]:           rstore egx   
65 [0x41]:           call @2843 // <std#string.at>   
66 [0x42]:           loadval ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movi #48, ebx   
70 [0x46]:           loadval ecx   
71 [0x47]:           sub ecx, ebx -> ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           movu32 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]:           jmp @27   
77 [0x4d]: line: 234 loadl ebx, fp+3   
78 [0x4e]:           movr cmt, ebx   
79 [0x4f]:           jne 84   
80 [0x50]: line: 235 loadl ebx, fp+2   
81 [0x51]:           neg ebx, ebx   
82 [0x52]:           movu32 ebx, ebx   
83 [0x53]:           smovr_2 ebx, fp+2   
84 [0x54]:           nop   
85 [0x55]: line: 236 loadl ebx, fp+2   
86 [0x56]:           return_val ebx   
87 [0x57]:           ret   


function: std#integer<_uint32>.to_ulong[577] params(0) in file: lib/support/0.2.805//primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @39 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_long[578] params(0) in file: lib/support/0.2.805//primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @40 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_uint[579] params(0) in file: lib/support/0.2.805//primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @41 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_int[580] params(0) in file: lib/support/0.2.805//primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @42 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_ushort[581] params(0) in file: lib/support/0.2.805//primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @43 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_short[582] params(0) in file: lib/support/0.2.805//primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @44 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_uchar[583] params(0) in file: lib/support/0.2.805//primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @45 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_char[584] params(0) in file: lib/support/0.2.805//primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @46 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_byte[585] params(0) in file: lib/support/0.2.805//primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @47 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_bool[586] params(0) in file: lib/support/0.2.805//primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @48 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.get_value[587] params(0) in file: lib/support/0.2.805//primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint32>.integer[588] params(0) in file: lib/support/0.2.805//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_int32>.integer[589] params(1) in file: lib/support/0.2.805//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 9 ipushl #1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         mov32 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         ret   


function: std#integer<_int32>.hash[590] params(0) in file: lib/support/0.2.805//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          call @1965 // <std#long.long>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


overload function: std#integer<_int32>.operator!=[591] params(1) in file: lib/support/0.2.805//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[592] params(1) in file: lib/support/0.2.805//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[593] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[594] params(1) in file: lib/support/0.2.805//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[595] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[596] params(1) in file: lib/support/0.2.805//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[597] params(1) in file: lib/support/0.2.805//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[598] params(1) in file: lib/support/0.2.805//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[599] params(1) in file: lib/support/0.2.805//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[600] params(1) in file: lib/support/0.2.805//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[601] params(1) in file: lib/support/0.2.805//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[602] params(1) in file: lib/support/0.2.805//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[603] params(1) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[604] params(1) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[605] params(1) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[606] params(1) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[607] params(1) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[608] params(1) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[609] params(1) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[610] params(1) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[611] params(1) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[612] params(1) in file: lib/support/0.2.805//primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[613] params(1) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[614] params(1) in file: lib/support/0.2.805//primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[615] params(1) in file: lib/support/0.2.805//primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[616] params(1) in file: lib/support/0.2.805//primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[617] params(1) in file: lib/support/0.2.805//primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[618] params(1) in file: lib/support/0.2.805//primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[619] params(1) in file: lib/support/0.2.805//primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[620] params(1) in file: lib/support/0.2.805//primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[621] params(1) in file: lib/support/0.2.805//primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator-[622] params(1) in file: lib/support/0.2.805//primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[623] params(1) in file: lib/support/0.2.805//primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[624] params(1) in file: lib/support/0.2.805//primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[625] params(1) in file: lib/support/0.2.805//primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[626] params(1) in file: lib/support/0.2.805//primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[627] params(1) in file: lib/support/0.2.805//primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[628] params(1) in file: lib/support/0.2.805//primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[629] params(1) in file: lib/support/0.2.805//primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[630] params(1) in file: lib/support/0.2.805//primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[631] params(1) in file: lib/support/0.2.805//primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[632] params(1) in file: lib/support/0.2.805//primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator*[633] params(1) in file: lib/support/0.2.805//primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[634] params(1) in file: lib/support/0.2.805//primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[635] params(1) in file: lib/support/0.2.805//primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[636] params(1) in file: lib/support/0.2.805//primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[637] params(1) in file: lib/support/0.2.805//primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[638] params(1) in file: lib/support/0.2.805//primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[639] params(1) in file: lib/support/0.2.805//primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[640] params(1) in file: lib/support/0.2.805//primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[641] params(1) in file: lib/support/0.2.805//primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[642] params(1) in file: lib/support/0.2.805//primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[643] params(1) in file: lib/support/0.2.805//primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator/[644] params(1) in file: lib/support/0.2.805//primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[645] params(1) in file: lib/support/0.2.805//primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[646] params(1) in file: lib/support/0.2.805//primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[647] params(1) in file: lib/support/0.2.805//primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[648] params(1) in file: lib/support/0.2.805//primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[649] params(1) in file: lib/support/0.2.805//primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[650] params(1) in file: lib/support/0.2.805//primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[651] params(1) in file: lib/support/0.2.805//primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[652] params(1) in file: lib/support/0.2.805//primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[653] params(1) in file: lib/support/0.2.805//primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[654] params(1) in file: lib/support/0.2.805//primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator%[655] params(1) in file: lib/support/0.2.805//primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[656] params(1) in file: lib/support/0.2.805//primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[657] params(1) in file: lib/support/0.2.805//primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[658] params(1) in file: lib/support/0.2.805//primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[659] params(1) in file: lib/support/0.2.805//primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[660] params(1) in file: lib/support/0.2.805//primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[661] params(1) in file: lib/support/0.2.805//primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[662] params(1) in file: lib/support/0.2.805//primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[663] params(1) in file: lib/support/0.2.805//primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[664] params(1) in file: lib/support/0.2.805//primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[665] params(1) in file: lib/support/0.2.805//primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator<[666] params(1) in file: lib/support/0.2.805//primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator<[667] params(1) in file: lib/support/0.2.805//primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator<[668] params(1) in file: lib/support/0.2.805//primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator<[669] params(1) in file: lib/support/0.2.805//primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[670] params(1) in file: lib/support/0.2.805//primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[671] params(1) in file: lib/support/0.2.805//primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[672] params(1) in file: lib/support/0.2.805//primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[673] params(1) in file: lib/support/0.2.805//primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[674] params(1) in file: lib/support/0.2.805//primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[675] params(1) in file: lib/support/0.2.805//primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[676] params(1) in file: lib/support/0.2.805//primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator>[677] params(1) in file: lib/support/0.2.805//primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[678] params(1) in file: lib/support/0.2.805//primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[679] params(1) in file: lib/support/0.2.805//primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[680] params(1) in file: lib/support/0.2.805//primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[681] params(1) in file: lib/support/0.2.805//primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[682] params(1) in file: lib/support/0.2.805//primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[683] params(1) in file: lib/support/0.2.805//primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[684] params(1) in file: lib/support/0.2.805//primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[685] params(1) in file: lib/support/0.2.805//primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[686] params(1) in file: lib/support/0.2.805//primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[687] params(1) in file: lib/support/0.2.805//primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<=[688] params(1) in file: lib/support/0.2.805//primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[689] params(1) in file: lib/support/0.2.805//primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[690] params(1) in file: lib/support/0.2.805//primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[691] params(1) in file: lib/support/0.2.805//primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[692] params(1) in file: lib/support/0.2.805//primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[693] params(1) in file: lib/support/0.2.805//primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[694] params(1) in file: lib/support/0.2.805//primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[695] params(1) in file: lib/support/0.2.805//primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[696] params(1) in file: lib/support/0.2.805//primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[697] params(1) in file: lib/support/0.2.805//primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[698] params(1) in file: lib/support/0.2.805//primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator**[699] params(1) in file: lib/support/0.2.805//primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[700] params(1) in file: lib/support/0.2.805//primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[701] params(1) in file: lib/support/0.2.805//primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[702] params(1) in file: lib/support/0.2.805//primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[703] params(1) in file: lib/support/0.2.805//primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[704] params(1) in file: lib/support/0.2.805//primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[705] params(1) in file: lib/support/0.2.805//primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[706] params(1) in file: lib/support/0.2.805//primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[707] params(1) in file: lib/support/0.2.805//primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[708] params(1) in file: lib/support/0.2.805//primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[709] params(1) in file: lib/support/0.2.805//primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<<[710] params(1) in file: lib/support/0.2.805//primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[711] params(1) in file: lib/support/0.2.805//primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[712] params(1) in file: lib/support/0.2.805//primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[713] params(1) in file: lib/support/0.2.805//primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[714] params(1) in file: lib/support/0.2.805//primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[715] params(1) in file: lib/support/0.2.805//primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[716] params(1) in file: lib/support/0.2.805//primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[717] params(1) in file: lib/support/0.2.805//primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[718] params(1) in file: lib/support/0.2.805//primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[719] params(1) in file: lib/support/0.2.805//primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[720] params(1) in file: lib/support/0.2.805//primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator>>[721] params(1) in file: lib/support/0.2.805//primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[722] params(1) in file: lib/support/0.2.805//primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[723] params(1) in file: lib/support/0.2.805//primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[724] params(1) in file: lib/support/0.2.805//primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[725] params(1) in file: lib/support/0.2.805//primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[726] params(1) in file: lib/support/0.2.805//primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[727] params(1) in file: lib/support/0.2.805//primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[728] params(1) in file: lib/support/0.2.805//primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[729] params(1) in file: lib/support/0.2.805//primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[730] params(1) in file: lib/support/0.2.805//primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[731] params(1) in file: lib/support/0.2.805//primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator^[732] params(1) in file: lib/support/0.2.805//primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[733] params(1) in file: lib/support/0.2.805//primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[734] params(1) in file: lib/support/0.2.805//primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[735] params(1) in file: lib/support/0.2.805//primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[736] params(1) in file: lib/support/0.2.805//primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[737] params(1) in file: lib/support/0.2.805//primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[738] params(1) in file: lib/support/0.2.805//primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[739] params(1) in file: lib/support/0.2.805//primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[740] params(1) in file: lib/support/0.2.805//primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[741] params(1) in file: lib/support/0.2.805//primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[742] params(1) in file: lib/support/0.2.805//primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator&[743] params(1) in file: lib/support/0.2.805//primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[744] params(1) in file: lib/support/0.2.805//primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[745] params(1) in file: lib/support/0.2.805//primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[746] params(1) in file: lib/support/0.2.805//primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[747] params(1) in file: lib/support/0.2.805//primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[748] params(1) in file: lib/support/0.2.805//primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[749] params(1) in file: lib/support/0.2.805//primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[750] params(1) in file: lib/support/0.2.805//primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[751] params(1) in file: lib/support/0.2.805//primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[752] params(1) in file: lib/support/0.2.805//primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[753] params(1) in file: lib/support/0.2.805//primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator|[754] params(1) in file: lib/support/0.2.805//primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[755] params(1) in file: lib/support/0.2.805//primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[756] params(1) in file: lib/support/0.2.805//primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[757] params(1) in file: lib/support/0.2.805//primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[758] params(1) in file: lib/support/0.2.805//primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[759] params(1) in file: lib/support/0.2.805//primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[760] params(1) in file: lib/support/0.2.805//primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[761] params(1) in file: lib/support/0.2.805//primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[762] params(1) in file: lib/support/0.2.805//primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[763] params(1) in file: lib/support/0.2.805//primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[764] params(1) in file: lib/support/0.2.805//primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator!=[765] params(1) in file: lib/support/0.2.805//primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator==[766] params(1) in file: lib/support/0.2.805//primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator=[767] params(1) in file: lib/support/0.2.805//primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int32>.to_string[768] params(0) in file: lib/support/0.2.805//primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 210 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2853 // <std#string.operator+>   
12 [0xc]:           popobj2    
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std#integer<_int32>.parse[769] params(1) in file: lib/support/0.2.805//primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           mov32 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2854 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2843 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           jne 77   
32 [0x20]: line: 226 pushl 0   
33 [0x21]:           ipushl #1   
34 [0x22]:           call @2843 // <std#string.at>   
35 [0x23]:           call @2612 // <std#char.is_digit>   
36 [0x24]:           loadval ebx   
37 [0x25]:           not ebx, ebx   
38 [0x26]:           movr cmt, ebx   
39 [0x27]:           jne 52   
40 [0x28]: line: 227 new_class @5 // std#illegal_argument_exception   
41 [0x29]:           dup    
42 [0x2a]:           new_class @58 // std#string   
43 [0x2b]:           dup    
44 [0x2c]:           newstr @55 // illegal char in string:    
45 [0x2d]:           call @2823 // <std#string.string>   
46 [0x2e]:           pushl 0   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @2843 // <std#string.at>   
49 [0x31]:           call @2853 // <std#string.operator+>   
50 [0x32]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
51 [0x33]:           throw    
52 [0x34]:           nop   
53 [0x35]: line: 231 movi #10, ebx   
55 [0x37]:           loadl ecx, fp+2   
56 [0x38]:           mul ecx, ebx -> ebx   
57 [0x39]:           mov32 ebx, ebx   
58 [0x3a]:           smovr_2 ebx, fp+2   
59 [0x3b]: line: 232 pushl 0   
60 [0x3c]:           loadl ebx, fp+1   
61 [0x3d]:           movr egx, ebx   
62 [0x3e]:           inc ebx   
63 [0x3f]:           smovr_2 ebx, fp+1   
64 [0x40]:           rstore egx   
65 [0x41]:           call @2843 // <std#string.at>   
66 [0x42]:           loadval ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movi #48, ebx   
70 [0x46]:           loadval ecx   
71 [0x47]:           sub ecx, ebx -> ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           mov32 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]:           jmp @27   
77 [0x4d]: line: 234 loadl ebx, fp+3   
78 [0x4e]:           movr cmt, ebx   
79 [0x4f]:           jne 84   
80 [0x50]: line: 235 loadl ebx, fp+2   
81 [0x51]:           neg ebx, ebx   
82 [0x52]:           mov32 ebx, ebx   
83 [0x53]:           smovr_2 ebx, fp+2   
84 [0x54]:           nop   
85 [0x55]: line: 236 loadl ebx, fp+2   
86 [0x56]:           return_val ebx   
87 [0x57]:           ret   


function: std#integer<_int32>.to_ulong[770] params(0) in file: lib/support/0.2.805//primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @39 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_long[771] params(0) in file: lib/support/0.2.805//primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @40 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_uint[772] params(0) in file: lib/support/0.2.805//primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @41 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_int[773] params(0) in file: lib/support/0.2.805//primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @42 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_ushort[774] params(0) in file: lib/support/0.2.805//primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @43 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_short[775] params(0) in file: lib/support/0.2.805//primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @44 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_uchar[776] params(0) in file: lib/support/0.2.805//primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @45 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_char[777] params(0) in file: lib/support/0.2.805//primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @46 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_byte[778] params(0) in file: lib/support/0.2.805//primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @47 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_bool[779] params(0) in file: lib/support/0.2.805//primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @48 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.get_value[780] params(0) in file: lib/support/0.2.805//primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int32>.integer[781] params(0) in file: lib/support/0.2.805//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_uint16>.integer[782] params(1) in file: lib/support/0.2.805//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 9 ipushl #1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         movu16 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         ret   


function: std#integer<_uint16>.hash[783] params(0) in file: lib/support/0.2.805//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          call @1965 // <std#long.long>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


overload function: std#integer<_uint16>.operator!=[784] params(1) in file: lib/support/0.2.805//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[785] params(1) in file: lib/support/0.2.805//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[786] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[787] params(1) in file: lib/support/0.2.805//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[788] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[789] params(1) in file: lib/support/0.2.805//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[790] params(1) in file: lib/support/0.2.805//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[791] params(1) in file: lib/support/0.2.805//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[792] params(1) in file: lib/support/0.2.805//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[793] params(1) in file: lib/support/0.2.805//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[794] params(1) in file: lib/support/0.2.805//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[795] params(1) in file: lib/support/0.2.805//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[796] params(1) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[797] params(1) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[798] params(1) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[799] params(1) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[800] params(1) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[801] params(1) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[802] params(1) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[803] params(1) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[804] params(1) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[805] params(1) in file: lib/support/0.2.805//primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[806] params(1) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[807] params(1) in file: lib/support/0.2.805//primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[808] params(1) in file: lib/support/0.2.805//primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[809] params(1) in file: lib/support/0.2.805//primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[810] params(1) in file: lib/support/0.2.805//primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[811] params(1) in file: lib/support/0.2.805//primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[812] params(1) in file: lib/support/0.2.805//primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[813] params(1) in file: lib/support/0.2.805//primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[814] params(1) in file: lib/support/0.2.805//primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator-[815] params(1) in file: lib/support/0.2.805//primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[816] params(1) in file: lib/support/0.2.805//primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[817] params(1) in file: lib/support/0.2.805//primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[818] params(1) in file: lib/support/0.2.805//primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[819] params(1) in file: lib/support/0.2.805//primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[820] params(1) in file: lib/support/0.2.805//primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[821] params(1) in file: lib/support/0.2.805//primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[822] params(1) in file: lib/support/0.2.805//primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[823] params(1) in file: lib/support/0.2.805//primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[824] params(1) in file: lib/support/0.2.805//primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[825] params(1) in file: lib/support/0.2.805//primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator*[826] params(1) in file: lib/support/0.2.805//primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[827] params(1) in file: lib/support/0.2.805//primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[828] params(1) in file: lib/support/0.2.805//primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[829] params(1) in file: lib/support/0.2.805//primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[830] params(1) in file: lib/support/0.2.805//primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[831] params(1) in file: lib/support/0.2.805//primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[832] params(1) in file: lib/support/0.2.805//primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[833] params(1) in file: lib/support/0.2.805//primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[834] params(1) in file: lib/support/0.2.805//primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[835] params(1) in file: lib/support/0.2.805//primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[836] params(1) in file: lib/support/0.2.805//primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator/[837] params(1) in file: lib/support/0.2.805//primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[838] params(1) in file: lib/support/0.2.805//primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[839] params(1) in file: lib/support/0.2.805//primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[840] params(1) in file: lib/support/0.2.805//primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[841] params(1) in file: lib/support/0.2.805//primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[842] params(1) in file: lib/support/0.2.805//primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[843] params(1) in file: lib/support/0.2.805//primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[844] params(1) in file: lib/support/0.2.805//primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[845] params(1) in file: lib/support/0.2.805//primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[846] params(1) in file: lib/support/0.2.805//primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[847] params(1) in file: lib/support/0.2.805//primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator%[848] params(1) in file: lib/support/0.2.805//primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[849] params(1) in file: lib/support/0.2.805//primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[850] params(1) in file: lib/support/0.2.805//primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[851] params(1) in file: lib/support/0.2.805//primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[852] params(1) in file: lib/support/0.2.805//primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[853] params(1) in file: lib/support/0.2.805//primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[854] params(1) in file: lib/support/0.2.805//primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[855] params(1) in file: lib/support/0.2.805//primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[856] params(1) in file: lib/support/0.2.805//primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[857] params(1) in file: lib/support/0.2.805//primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[858] params(1) in file: lib/support/0.2.805//primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator<[859] params(1) in file: lib/support/0.2.805//primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator<[860] params(1) in file: lib/support/0.2.805//primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator<[861] params(1) in file: lib/support/0.2.805//primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator<[862] params(1) in file: lib/support/0.2.805//primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[863] params(1) in file: lib/support/0.2.805//primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[864] params(1) in file: lib/support/0.2.805//primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[865] params(1) in file: lib/support/0.2.805//primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[866] params(1) in file: lib/support/0.2.805//primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[867] params(1) in file: lib/support/0.2.805//primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[868] params(1) in file: lib/support/0.2.805//primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[869] params(1) in file: lib/support/0.2.805//primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator>[870] params(1) in file: lib/support/0.2.805//primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[871] params(1) in file: lib/support/0.2.805//primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[872] params(1) in file: lib/support/0.2.805//primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[873] params(1) in file: lib/support/0.2.805//primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[874] params(1) in file: lib/support/0.2.805//primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[875] params(1) in file: lib/support/0.2.805//primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[876] params(1) in file: lib/support/0.2.805//primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[877] params(1) in file: lib/support/0.2.805//primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[878] params(1) in file: lib/support/0.2.805//primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[879] params(1) in file: lib/support/0.2.805//primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[880] params(1) in file: lib/support/0.2.805//primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<=[881] params(1) in file: lib/support/0.2.805//primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[882] params(1) in file: lib/support/0.2.805//primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[883] params(1) in file: lib/support/0.2.805//primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[884] params(1) in file: lib/support/0.2.805//primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[885] params(1) in file: lib/support/0.2.805//primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[886] params(1) in file: lib/support/0.2.805//primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[887] params(1) in file: lib/support/0.2.805//primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[888] params(1) in file: lib/support/0.2.805//primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[889] params(1) in file: lib/support/0.2.805//primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[890] params(1) in file: lib/support/0.2.805//primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[891] params(1) in file: lib/support/0.2.805//primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator**[892] params(1) in file: lib/support/0.2.805//primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[893] params(1) in file: lib/support/0.2.805//primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[894] params(1) in file: lib/support/0.2.805//primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[895] params(1) in file: lib/support/0.2.805//primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[896] params(1) in file: lib/support/0.2.805//primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[897] params(1) in file: lib/support/0.2.805//primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[898] params(1) in file: lib/support/0.2.805//primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[899] params(1) in file: lib/support/0.2.805//primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[900] params(1) in file: lib/support/0.2.805//primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[901] params(1) in file: lib/support/0.2.805//primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[902] params(1) in file: lib/support/0.2.805//primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<<[903] params(1) in file: lib/support/0.2.805//primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[904] params(1) in file: lib/support/0.2.805//primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[905] params(1) in file: lib/support/0.2.805//primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[906] params(1) in file: lib/support/0.2.805//primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[907] params(1) in file: lib/support/0.2.805//primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[908] params(1) in file: lib/support/0.2.805//primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[909] params(1) in file: lib/support/0.2.805//primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[910] params(1) in file: lib/support/0.2.805//primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[911] params(1) in file: lib/support/0.2.805//primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[912] params(1) in file: lib/support/0.2.805//primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[913] params(1) in file: lib/support/0.2.805//primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator>>[914] params(1) in file: lib/support/0.2.805//primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[915] params(1) in file: lib/support/0.2.805//primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[916] params(1) in file: lib/support/0.2.805//primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[917] params(1) in file: lib/support/0.2.805//primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[918] params(1) in file: lib/support/0.2.805//primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[919] params(1) in file: lib/support/0.2.805//primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[920] params(1) in file: lib/support/0.2.805//primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[921] params(1) in file: lib/support/0.2.805//primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[922] params(1) in file: lib/support/0.2.805//primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[923] params(1) in file: lib/support/0.2.805//primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[924] params(1) in file: lib/support/0.2.805//primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator^[925] params(1) in file: lib/support/0.2.805//primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[926] params(1) in file: lib/support/0.2.805//primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[927] params(1) in file: lib/support/0.2.805//primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[928] params(1) in file: lib/support/0.2.805//primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[929] params(1) in file: lib/support/0.2.805//primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[930] params(1) in file: lib/support/0.2.805//primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[931] params(1) in file: lib/support/0.2.805//primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[932] params(1) in file: lib/support/0.2.805//primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[933] params(1) in file: lib/support/0.2.805//primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[934] params(1) in file: lib/support/0.2.805//primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[935] params(1) in file: lib/support/0.2.805//primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator&[936] params(1) in file: lib/support/0.2.805//primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[937] params(1) in file: lib/support/0.2.805//primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[938] params(1) in file: lib/support/0.2.805//primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[939] params(1) in file: lib/support/0.2.805//primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[940] params(1) in file: lib/support/0.2.805//primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[941] params(1) in file: lib/support/0.2.805//primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[942] params(1) in file: lib/support/0.2.805//primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[943] params(1) in file: lib/support/0.2.805//primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[944] params(1) in file: lib/support/0.2.805//primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[945] params(1) in file: lib/support/0.2.805//primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[946] params(1) in file: lib/support/0.2.805//primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator|[947] params(1) in file: lib/support/0.2.805//primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[948] params(1) in file: lib/support/0.2.805//primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[949] params(1) in file: lib/support/0.2.805//primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[950] params(1) in file: lib/support/0.2.805//primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[951] params(1) in file: lib/support/0.2.805//primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[952] params(1) in file: lib/support/0.2.805//primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[953] params(1) in file: lib/support/0.2.805//primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[954] params(1) in file: lib/support/0.2.805//primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[955] params(1) in file: lib/support/0.2.805//primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[956] params(1) in file: lib/support/0.2.805//primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[957] params(1) in file: lib/support/0.2.805//primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator!=[958] params(1) in file: lib/support/0.2.805//primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator==[959] params(1) in file: lib/support/0.2.805//primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator=[960] params(1) in file: lib/support/0.2.805//primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint16>.to_string[961] params(0) in file: lib/support/0.2.805//primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 210 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2853 // <std#string.operator+>   
12 [0xc]:           popobj2    
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std#integer<_uint16>.parse[962] params(1) in file: lib/support/0.2.805//primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           movu16 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2854 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2843 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           jne 77   
32 [0x20]: line: 226 pushl 0   
33 [0x21]:           ipushl #1   
34 [0x22]:           call @2843 // <std#string.at>   
35 [0x23]:           call @2612 // <std#char.is_digit>   
36 [0x24]:           loadval ebx   
37 [0x25]:           not ebx, ebx   
38 [0x26]:           movr cmt, ebx   
39 [0x27]:           jne 52   
40 [0x28]: line: 227 new_class @5 // std#illegal_argument_exception   
41 [0x29]:           dup    
42 [0x2a]:           new_class @58 // std#string   
43 [0x2b]:           dup    
44 [0x2c]:           newstr @55 // illegal char in string:    
45 [0x2d]:           call @2823 // <std#string.string>   
46 [0x2e]:           pushl 0   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @2843 // <std#string.at>   
49 [0x31]:           call @2853 // <std#string.operator+>   
50 [0x32]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
51 [0x33]:           throw    
52 [0x34]:           nop   
53 [0x35]: line: 231 movi #10, ebx   
55 [0x37]:           loadl ecx, fp+2   
56 [0x38]:           mul ecx, ebx -> ebx   
57 [0x39]:           movu16 ebx, ebx   
58 [0x3a]:           smovr_2 ebx, fp+2   
59 [0x3b]: line: 232 pushl 0   
60 [0x3c]:           loadl ebx, fp+1   
61 [0x3d]:           movr egx, ebx   
62 [0x3e]:           inc ebx   
63 [0x3f]:           smovr_2 ebx, fp+1   
64 [0x40]:           rstore egx   
65 [0x41]:           call @2843 // <std#string.at>   
66 [0x42]:           loadval ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movi #48, ebx   
70 [0x46]:           loadval ecx   
71 [0x47]:           sub ecx, ebx -> ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           movu16 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]:           jmp @27   
77 [0x4d]: line: 234 loadl ebx, fp+3   
78 [0x4e]:           movr cmt, ebx   
79 [0x4f]:           jne 84   
80 [0x50]: line: 235 loadl ebx, fp+2   
81 [0x51]:           neg ebx, ebx   
82 [0x52]:           movu16 ebx, ebx   
83 [0x53]:           smovr_2 ebx, fp+2   
84 [0x54]:           nop   
85 [0x55]: line: 236 loadl ebx, fp+2   
86 [0x56]:           return_val ebx   
87 [0x57]:           ret   


function: std#integer<_uint16>.to_ulong[963] params(0) in file: lib/support/0.2.805//primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @39 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_long[964] params(0) in file: lib/support/0.2.805//primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @40 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_uint[965] params(0) in file: lib/support/0.2.805//primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @41 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_int[966] params(0) in file: lib/support/0.2.805//primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @42 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_ushort[967] params(0) in file: lib/support/0.2.805//primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @43 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_short[968] params(0) in file: lib/support/0.2.805//primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @44 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_uchar[969] params(0) in file: lib/support/0.2.805//primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @45 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_char[970] params(0) in file: lib/support/0.2.805//primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @46 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_byte[971] params(0) in file: lib/support/0.2.805//primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @47 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_bool[972] params(0) in file: lib/support/0.2.805//primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @48 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.get_value[973] params(0) in file: lib/support/0.2.805//primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint16>.integer[974] params(0) in file: lib/support/0.2.805//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_int16>.integer[975] params(1) in file: lib/support/0.2.805//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 9 ipushl #1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         mov16 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         ret   


function: std#integer<_int16>.hash[976] params(0) in file: lib/support/0.2.805//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          call @1965 // <std#long.long>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


overload function: std#integer<_int16>.operator!=[977] params(1) in file: lib/support/0.2.805//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[978] params(1) in file: lib/support/0.2.805//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[979] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[980] params(1) in file: lib/support/0.2.805//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[981] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[982] params(1) in file: lib/support/0.2.805//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[983] params(1) in file: lib/support/0.2.805//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[984] params(1) in file: lib/support/0.2.805//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[985] params(1) in file: lib/support/0.2.805//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[986] params(1) in file: lib/support/0.2.805//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[987] params(1) in file: lib/support/0.2.805//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[988] params(1) in file: lib/support/0.2.805//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[989] params(1) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[990] params(1) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[991] params(1) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[992] params(1) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[993] params(1) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[994] params(1) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[995] params(1) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[996] params(1) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[997] params(1) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[998] params(1) in file: lib/support/0.2.805//primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[999] params(1) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1000] params(1) in file: lib/support/0.2.805//primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1001] params(1) in file: lib/support/0.2.805//primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1002] params(1) in file: lib/support/0.2.805//primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1003] params(1) in file: lib/support/0.2.805//primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1004] params(1) in file: lib/support/0.2.805//primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1005] params(1) in file: lib/support/0.2.805//primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1006] params(1) in file: lib/support/0.2.805//primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1007] params(1) in file: lib/support/0.2.805//primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator-[1008] params(1) in file: lib/support/0.2.805//primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1009] params(1) in file: lib/support/0.2.805//primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1010] params(1) in file: lib/support/0.2.805//primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1011] params(1) in file: lib/support/0.2.805//primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1012] params(1) in file: lib/support/0.2.805//primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1013] params(1) in file: lib/support/0.2.805//primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1014] params(1) in file: lib/support/0.2.805//primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1015] params(1) in file: lib/support/0.2.805//primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1016] params(1) in file: lib/support/0.2.805//primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1017] params(1) in file: lib/support/0.2.805//primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1018] params(1) in file: lib/support/0.2.805//primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator*[1019] params(1) in file: lib/support/0.2.805//primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1020] params(1) in file: lib/support/0.2.805//primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1021] params(1) in file: lib/support/0.2.805//primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1022] params(1) in file: lib/support/0.2.805//primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1023] params(1) in file: lib/support/0.2.805//primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1024] params(1) in file: lib/support/0.2.805//primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1025] params(1) in file: lib/support/0.2.805//primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1026] params(1) in file: lib/support/0.2.805//primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1027] params(1) in file: lib/support/0.2.805//primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1028] params(1) in file: lib/support/0.2.805//primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1029] params(1) in file: lib/support/0.2.805//primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator/[1030] params(1) in file: lib/support/0.2.805//primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1031] params(1) in file: lib/support/0.2.805//primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1032] params(1) in file: lib/support/0.2.805//primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1033] params(1) in file: lib/support/0.2.805//primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1034] params(1) in file: lib/support/0.2.805//primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1035] params(1) in file: lib/support/0.2.805//primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1036] params(1) in file: lib/support/0.2.805//primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1037] params(1) in file: lib/support/0.2.805//primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1038] params(1) in file: lib/support/0.2.805//primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1039] params(1) in file: lib/support/0.2.805//primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1040] params(1) in file: lib/support/0.2.805//primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator%[1041] params(1) in file: lib/support/0.2.805//primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1042] params(1) in file: lib/support/0.2.805//primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1043] params(1) in file: lib/support/0.2.805//primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1044] params(1) in file: lib/support/0.2.805//primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1045] params(1) in file: lib/support/0.2.805//primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1046] params(1) in file: lib/support/0.2.805//primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1047] params(1) in file: lib/support/0.2.805//primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1048] params(1) in file: lib/support/0.2.805//primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1049] params(1) in file: lib/support/0.2.805//primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1050] params(1) in file: lib/support/0.2.805//primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1051] params(1) in file: lib/support/0.2.805//primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator<[1052] params(1) in file: lib/support/0.2.805//primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator<[1053] params(1) in file: lib/support/0.2.805//primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator<[1054] params(1) in file: lib/support/0.2.805//primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator<[1055] params(1) in file: lib/support/0.2.805//primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1056] params(1) in file: lib/support/0.2.805//primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1057] params(1) in file: lib/support/0.2.805//primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1058] params(1) in file: lib/support/0.2.805//primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1059] params(1) in file: lib/support/0.2.805//primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1060] params(1) in file: lib/support/0.2.805//primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1061] params(1) in file: lib/support/0.2.805//primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1062] params(1) in file: lib/support/0.2.805//primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator>[1063] params(1) in file: lib/support/0.2.805//primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1064] params(1) in file: lib/support/0.2.805//primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1065] params(1) in file: lib/support/0.2.805//primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1066] params(1) in file: lib/support/0.2.805//primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1067] params(1) in file: lib/support/0.2.805//primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1068] params(1) in file: lib/support/0.2.805//primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1069] params(1) in file: lib/support/0.2.805//primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1070] params(1) in file: lib/support/0.2.805//primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1071] params(1) in file: lib/support/0.2.805//primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1072] params(1) in file: lib/support/0.2.805//primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1073] params(1) in file: lib/support/0.2.805//primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<=[1074] params(1) in file: lib/support/0.2.805//primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1075] params(1) in file: lib/support/0.2.805//primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1076] params(1) in file: lib/support/0.2.805//primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1077] params(1) in file: lib/support/0.2.805//primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1078] params(1) in file: lib/support/0.2.805//primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1079] params(1) in file: lib/support/0.2.805//primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1080] params(1) in file: lib/support/0.2.805//primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1081] params(1) in file: lib/support/0.2.805//primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1082] params(1) in file: lib/support/0.2.805//primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1083] params(1) in file: lib/support/0.2.805//primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1084] params(1) in file: lib/support/0.2.805//primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator**[1085] params(1) in file: lib/support/0.2.805//primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1086] params(1) in file: lib/support/0.2.805//primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1087] params(1) in file: lib/support/0.2.805//primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1088] params(1) in file: lib/support/0.2.805//primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1089] params(1) in file: lib/support/0.2.805//primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1090] params(1) in file: lib/support/0.2.805//primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1091] params(1) in file: lib/support/0.2.805//primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1092] params(1) in file: lib/support/0.2.805//primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1093] params(1) in file: lib/support/0.2.805//primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1094] params(1) in file: lib/support/0.2.805//primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1095] params(1) in file: lib/support/0.2.805//primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<<[1096] params(1) in file: lib/support/0.2.805//primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1097] params(1) in file: lib/support/0.2.805//primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1098] params(1) in file: lib/support/0.2.805//primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1099] params(1) in file: lib/support/0.2.805//primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1100] params(1) in file: lib/support/0.2.805//primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1101] params(1) in file: lib/support/0.2.805//primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1102] params(1) in file: lib/support/0.2.805//primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1103] params(1) in file: lib/support/0.2.805//primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1104] params(1) in file: lib/support/0.2.805//primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1105] params(1) in file: lib/support/0.2.805//primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1106] params(1) in file: lib/support/0.2.805//primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator>>[1107] params(1) in file: lib/support/0.2.805//primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1108] params(1) in file: lib/support/0.2.805//primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1109] params(1) in file: lib/support/0.2.805//primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1110] params(1) in file: lib/support/0.2.805//primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1111] params(1) in file: lib/support/0.2.805//primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1112] params(1) in file: lib/support/0.2.805//primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1113] params(1) in file: lib/support/0.2.805//primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1114] params(1) in file: lib/support/0.2.805//primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1115] params(1) in file: lib/support/0.2.805//primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1116] params(1) in file: lib/support/0.2.805//primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1117] params(1) in file: lib/support/0.2.805//primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator^[1118] params(1) in file: lib/support/0.2.805//primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1119] params(1) in file: lib/support/0.2.805//primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1120] params(1) in file: lib/support/0.2.805//primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1121] params(1) in file: lib/support/0.2.805//primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1122] params(1) in file: lib/support/0.2.805//primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1123] params(1) in file: lib/support/0.2.805//primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1124] params(1) in file: lib/support/0.2.805//primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1125] params(1) in file: lib/support/0.2.805//primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1126] params(1) in file: lib/support/0.2.805//primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1127] params(1) in file: lib/support/0.2.805//primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1128] params(1) in file: lib/support/0.2.805//primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator&[1129] params(1) in file: lib/support/0.2.805//primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1130] params(1) in file: lib/support/0.2.805//primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1131] params(1) in file: lib/support/0.2.805//primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1132] params(1) in file: lib/support/0.2.805//primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1133] params(1) in file: lib/support/0.2.805//primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1134] params(1) in file: lib/support/0.2.805//primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1135] params(1) in file: lib/support/0.2.805//primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1136] params(1) in file: lib/support/0.2.805//primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1137] params(1) in file: lib/support/0.2.805//primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1138] params(1) in file: lib/support/0.2.805//primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1139] params(1) in file: lib/support/0.2.805//primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator|[1140] params(1) in file: lib/support/0.2.805//primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1141] params(1) in file: lib/support/0.2.805//primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1142] params(1) in file: lib/support/0.2.805//primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1143] params(1) in file: lib/support/0.2.805//primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1144] params(1) in file: lib/support/0.2.805//primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1145] params(1) in file: lib/support/0.2.805//primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1146] params(1) in file: lib/support/0.2.805//primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1147] params(1) in file: lib/support/0.2.805//primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1148] params(1) in file: lib/support/0.2.805//primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1149] params(1) in file: lib/support/0.2.805//primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1150] params(1) in file: lib/support/0.2.805//primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator!=[1151] params(1) in file: lib/support/0.2.805//primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator==[1152] params(1) in file: lib/support/0.2.805//primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator=[1153] params(1) in file: lib/support/0.2.805//primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int16>.to_string[1154] params(0) in file: lib/support/0.2.805//primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 210 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2853 // <std#string.operator+>   
12 [0xc]:           popobj2    
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std#integer<_int16>.parse[1155] params(1) in file: lib/support/0.2.805//primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           mov16 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2854 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2843 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           jne 77   
32 [0x20]: line: 226 pushl 0   
33 [0x21]:           ipushl #1   
34 [0x22]:           call @2843 // <std#string.at>   
35 [0x23]:           call @2612 // <std#char.is_digit>   
36 [0x24]:           loadval ebx   
37 [0x25]:           not ebx, ebx   
38 [0x26]:           movr cmt, ebx   
39 [0x27]:           jne 52   
40 [0x28]: line: 227 new_class @5 // std#illegal_argument_exception   
41 [0x29]:           dup    
42 [0x2a]:           new_class @58 // std#string   
43 [0x2b]:           dup    
44 [0x2c]:           newstr @55 // illegal char in string:    
45 [0x2d]:           call @2823 // <std#string.string>   
46 [0x2e]:           pushl 0   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @2843 // <std#string.at>   
49 [0x31]:           call @2853 // <std#string.operator+>   
50 [0x32]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
51 [0x33]:           throw    
52 [0x34]:           nop   
53 [0x35]: line: 231 movi #10, ebx   
55 [0x37]:           loadl ecx, fp+2   
56 [0x38]:           mul ecx, ebx -> ebx   
57 [0x39]:           mov16 ebx, ebx   
58 [0x3a]:           smovr_2 ebx, fp+2   
59 [0x3b]: line: 232 pushl 0   
60 [0x3c]:           loadl ebx, fp+1   
61 [0x3d]:           movr egx, ebx   
62 [0x3e]:           inc ebx   
63 [0x3f]:           smovr_2 ebx, fp+1   
64 [0x40]:           rstore egx   
65 [0x41]:           call @2843 // <std#string.at>   
66 [0x42]:           loadval ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movi #48, ebx   
70 [0x46]:           loadval ecx   
71 [0x47]:           sub ecx, ebx -> ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           mov16 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]:           jmp @27   
77 [0x4d]: line: 234 loadl ebx, fp+3   
78 [0x4e]:           movr cmt, ebx   
79 [0x4f]:           jne 84   
80 [0x50]: line: 235 loadl ebx, fp+2   
81 [0x51]:           neg ebx, ebx   
82 [0x52]:           mov16 ebx, ebx   
83 [0x53]:           smovr_2 ebx, fp+2   
84 [0x54]:           nop   
85 [0x55]: line: 236 loadl ebx, fp+2   
86 [0x56]:           return_val ebx   
87 [0x57]:           ret   


function: std#integer<_int16>.to_ulong[1156] params(0) in file: lib/support/0.2.805//primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @39 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_long[1157] params(0) in file: lib/support/0.2.805//primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @40 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_uint[1158] params(0) in file: lib/support/0.2.805//primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @41 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_int[1159] params(0) in file: lib/support/0.2.805//primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @42 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_ushort[1160] params(0) in file: lib/support/0.2.805//primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @43 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_short[1161] params(0) in file: lib/support/0.2.805//primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @44 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_uchar[1162] params(0) in file: lib/support/0.2.805//primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @45 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_char[1163] params(0) in file: lib/support/0.2.805//primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @46 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_byte[1164] params(0) in file: lib/support/0.2.805//primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @47 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_bool[1165] params(0) in file: lib/support/0.2.805//primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @48 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.get_value[1166] params(0) in file: lib/support/0.2.805//primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int16>.integer[1167] params(0) in file: lib/support/0.2.805//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_uint8>.integer[1168] params(1) in file: lib/support/0.2.805//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 9 ipushl #1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         movu8 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         ret   


function: std#integer<_uint8>.hash[1169] params(0) in file: lib/support/0.2.805//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          call @1965 // <std#long.long>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


overload function: std#integer<_uint8>.operator!=[1170] params(1) in file: lib/support/0.2.805//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1171] params(1) in file: lib/support/0.2.805//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1172] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1173] params(1) in file: lib/support/0.2.805//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1174] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1175] params(1) in file: lib/support/0.2.805//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1176] params(1) in file: lib/support/0.2.805//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1177] params(1) in file: lib/support/0.2.805//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1178] params(1) in file: lib/support/0.2.805//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1179] params(1) in file: lib/support/0.2.805//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1180] params(1) in file: lib/support/0.2.805//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1181] params(1) in file: lib/support/0.2.805//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1182] params(1) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1183] params(1) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1184] params(1) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1185] params(1) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1186] params(1) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1187] params(1) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1188] params(1) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1189] params(1) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1190] params(1) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1191] params(1) in file: lib/support/0.2.805//primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1192] params(1) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1193] params(1) in file: lib/support/0.2.805//primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1194] params(1) in file: lib/support/0.2.805//primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1195] params(1) in file: lib/support/0.2.805//primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1196] params(1) in file: lib/support/0.2.805//primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1197] params(1) in file: lib/support/0.2.805//primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1198] params(1) in file: lib/support/0.2.805//primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1199] params(1) in file: lib/support/0.2.805//primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1200] params(1) in file: lib/support/0.2.805//primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator-[1201] params(1) in file: lib/support/0.2.805//primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1202] params(1) in file: lib/support/0.2.805//primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1203] params(1) in file: lib/support/0.2.805//primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1204] params(1) in file: lib/support/0.2.805//primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1205] params(1) in file: lib/support/0.2.805//primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1206] params(1) in file: lib/support/0.2.805//primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1207] params(1) in file: lib/support/0.2.805//primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1208] params(1) in file: lib/support/0.2.805//primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1209] params(1) in file: lib/support/0.2.805//primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1210] params(1) in file: lib/support/0.2.805//primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1211] params(1) in file: lib/support/0.2.805//primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator*[1212] params(1) in file: lib/support/0.2.805//primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1213] params(1) in file: lib/support/0.2.805//primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1214] params(1) in file: lib/support/0.2.805//primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1215] params(1) in file: lib/support/0.2.805//primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1216] params(1) in file: lib/support/0.2.805//primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1217] params(1) in file: lib/support/0.2.805//primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1218] params(1) in file: lib/support/0.2.805//primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1219] params(1) in file: lib/support/0.2.805//primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1220] params(1) in file: lib/support/0.2.805//primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1221] params(1) in file: lib/support/0.2.805//primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1222] params(1) in file: lib/support/0.2.805//primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator/[1223] params(1) in file: lib/support/0.2.805//primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1224] params(1) in file: lib/support/0.2.805//primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1225] params(1) in file: lib/support/0.2.805//primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1226] params(1) in file: lib/support/0.2.805//primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1227] params(1) in file: lib/support/0.2.805//primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1228] params(1) in file: lib/support/0.2.805//primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1229] params(1) in file: lib/support/0.2.805//primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1230] params(1) in file: lib/support/0.2.805//primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1231] params(1) in file: lib/support/0.2.805//primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1232] params(1) in file: lib/support/0.2.805//primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1233] params(1) in file: lib/support/0.2.805//primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator%[1234] params(1) in file: lib/support/0.2.805//primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1235] params(1) in file: lib/support/0.2.805//primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1236] params(1) in file: lib/support/0.2.805//primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1237] params(1) in file: lib/support/0.2.805//primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1238] params(1) in file: lib/support/0.2.805//primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1239] params(1) in file: lib/support/0.2.805//primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1240] params(1) in file: lib/support/0.2.805//primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1241] params(1) in file: lib/support/0.2.805//primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1242] params(1) in file: lib/support/0.2.805//primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1243] params(1) in file: lib/support/0.2.805//primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1244] params(1) in file: lib/support/0.2.805//primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator<[1245] params(1) in file: lib/support/0.2.805//primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator<[1246] params(1) in file: lib/support/0.2.805//primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator<[1247] params(1) in file: lib/support/0.2.805//primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator<[1248] params(1) in file: lib/support/0.2.805//primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1249] params(1) in file: lib/support/0.2.805//primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1250] params(1) in file: lib/support/0.2.805//primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1251] params(1) in file: lib/support/0.2.805//primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1252] params(1) in file: lib/support/0.2.805//primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1253] params(1) in file: lib/support/0.2.805//primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1254] params(1) in file: lib/support/0.2.805//primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1255] params(1) in file: lib/support/0.2.805//primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator>[1256] params(1) in file: lib/support/0.2.805//primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1257] params(1) in file: lib/support/0.2.805//primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1258] params(1) in file: lib/support/0.2.805//primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1259] params(1) in file: lib/support/0.2.805//primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1260] params(1) in file: lib/support/0.2.805//primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1261] params(1) in file: lib/support/0.2.805//primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1262] params(1) in file: lib/support/0.2.805//primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1263] params(1) in file: lib/support/0.2.805//primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1264] params(1) in file: lib/support/0.2.805//primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1265] params(1) in file: lib/support/0.2.805//primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1266] params(1) in file: lib/support/0.2.805//primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<=[1267] params(1) in file: lib/support/0.2.805//primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1268] params(1) in file: lib/support/0.2.805//primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1269] params(1) in file: lib/support/0.2.805//primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1270] params(1) in file: lib/support/0.2.805//primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1271] params(1) in file: lib/support/0.2.805//primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1272] params(1) in file: lib/support/0.2.805//primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1273] params(1) in file: lib/support/0.2.805//primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1274] params(1) in file: lib/support/0.2.805//primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1275] params(1) in file: lib/support/0.2.805//primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1276] params(1) in file: lib/support/0.2.805//primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1277] params(1) in file: lib/support/0.2.805//primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator**[1278] params(1) in file: lib/support/0.2.805//primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1279] params(1) in file: lib/support/0.2.805//primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1280] params(1) in file: lib/support/0.2.805//primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1281] params(1) in file: lib/support/0.2.805//primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1282] params(1) in file: lib/support/0.2.805//primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1283] params(1) in file: lib/support/0.2.805//primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1284] params(1) in file: lib/support/0.2.805//primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1285] params(1) in file: lib/support/0.2.805//primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1286] params(1) in file: lib/support/0.2.805//primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1287] params(1) in file: lib/support/0.2.805//primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1288] params(1) in file: lib/support/0.2.805//primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<<[1289] params(1) in file: lib/support/0.2.805//primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1290] params(1) in file: lib/support/0.2.805//primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1291] params(1) in file: lib/support/0.2.805//primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1292] params(1) in file: lib/support/0.2.805//primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1293] params(1) in file: lib/support/0.2.805//primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1294] params(1) in file: lib/support/0.2.805//primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1295] params(1) in file: lib/support/0.2.805//primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1296] params(1) in file: lib/support/0.2.805//primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1297] params(1) in file: lib/support/0.2.805//primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1298] params(1) in file: lib/support/0.2.805//primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1299] params(1) in file: lib/support/0.2.805//primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator>>[1300] params(1) in file: lib/support/0.2.805//primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1301] params(1) in file: lib/support/0.2.805//primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1302] params(1) in file: lib/support/0.2.805//primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1303] params(1) in file: lib/support/0.2.805//primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1304] params(1) in file: lib/support/0.2.805//primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1305] params(1) in file: lib/support/0.2.805//primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1306] params(1) in file: lib/support/0.2.805//primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1307] params(1) in file: lib/support/0.2.805//primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1308] params(1) in file: lib/support/0.2.805//primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1309] params(1) in file: lib/support/0.2.805//primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1310] params(1) in file: lib/support/0.2.805//primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator^[1311] params(1) in file: lib/support/0.2.805//primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1312] params(1) in file: lib/support/0.2.805//primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1313] params(1) in file: lib/support/0.2.805//primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1314] params(1) in file: lib/support/0.2.805//primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1315] params(1) in file: lib/support/0.2.805//primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1316] params(1) in file: lib/support/0.2.805//primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1317] params(1) in file: lib/support/0.2.805//primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1318] params(1) in file: lib/support/0.2.805//primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1319] params(1) in file: lib/support/0.2.805//primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1320] params(1) in file: lib/support/0.2.805//primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1321] params(1) in file: lib/support/0.2.805//primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator&[1322] params(1) in file: lib/support/0.2.805//primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1323] params(1) in file: lib/support/0.2.805//primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1324] params(1) in file: lib/support/0.2.805//primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1325] params(1) in file: lib/support/0.2.805//primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1326] params(1) in file: lib/support/0.2.805//primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1327] params(1) in file: lib/support/0.2.805//primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1328] params(1) in file: lib/support/0.2.805//primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1329] params(1) in file: lib/support/0.2.805//primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1330] params(1) in file: lib/support/0.2.805//primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1331] params(1) in file: lib/support/0.2.805//primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1332] params(1) in file: lib/support/0.2.805//primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator|[1333] params(1) in file: lib/support/0.2.805//primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1334] params(1) in file: lib/support/0.2.805//primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1335] params(1) in file: lib/support/0.2.805//primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1336] params(1) in file: lib/support/0.2.805//primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1337] params(1) in file: lib/support/0.2.805//primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1338] params(1) in file: lib/support/0.2.805//primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1339] params(1) in file: lib/support/0.2.805//primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1340] params(1) in file: lib/support/0.2.805//primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1341] params(1) in file: lib/support/0.2.805//primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1342] params(1) in file: lib/support/0.2.805//primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1343] params(1) in file: lib/support/0.2.805//primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator!=[1344] params(1) in file: lib/support/0.2.805//primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator==[1345] params(1) in file: lib/support/0.2.805//primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator=[1346] params(1) in file: lib/support/0.2.805//primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint8>.to_string[1347] params(0) in file: lib/support/0.2.805//primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 210 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2853 // <std#string.operator+>   
12 [0xc]:           popobj2    
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std#integer<_uint8>.parse[1348] params(1) in file: lib/support/0.2.805//primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           movu8 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2854 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2843 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           jne 77   
32 [0x20]: line: 226 pushl 0   
33 [0x21]:           ipushl #1   
34 [0x22]:           call @2843 // <std#string.at>   
35 [0x23]:           call @2612 // <std#char.is_digit>   
36 [0x24]:           loadval ebx   
37 [0x25]:           not ebx, ebx   
38 [0x26]:           movr cmt, ebx   
39 [0x27]:           jne 52   
40 [0x28]: line: 227 new_class @5 // std#illegal_argument_exception   
41 [0x29]:           dup    
42 [0x2a]:           new_class @58 // std#string   
43 [0x2b]:           dup    
44 [0x2c]:           newstr @55 // illegal char in string:    
45 [0x2d]:           call @2823 // <std#string.string>   
46 [0x2e]:           pushl 0   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @2843 // <std#string.at>   
49 [0x31]:           call @2853 // <std#string.operator+>   
50 [0x32]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
51 [0x33]:           throw    
52 [0x34]:           nop   
53 [0x35]: line: 231 movi #10, ebx   
55 [0x37]:           loadl ecx, fp+2   
56 [0x38]:           mul ecx, ebx -> ebx   
57 [0x39]:           movu8 ebx, ebx   
58 [0x3a]:           smovr_2 ebx, fp+2   
59 [0x3b]: line: 232 pushl 0   
60 [0x3c]:           loadl ebx, fp+1   
61 [0x3d]:           movr egx, ebx   
62 [0x3e]:           inc ebx   
63 [0x3f]:           smovr_2 ebx, fp+1   
64 [0x40]:           rstore egx   
65 [0x41]:           call @2843 // <std#string.at>   
66 [0x42]:           loadval ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movi #48, ebx   
70 [0x46]:           loadval ecx   
71 [0x47]:           sub ecx, ebx -> ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           movu8 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]:           jmp @27   
77 [0x4d]: line: 234 loadl ebx, fp+3   
78 [0x4e]:           movr cmt, ebx   
79 [0x4f]:           jne 84   
80 [0x50]: line: 235 loadl ebx, fp+2   
81 [0x51]:           neg ebx, ebx   
82 [0x52]:           movu8 ebx, ebx   
83 [0x53]:           smovr_2 ebx, fp+2   
84 [0x54]:           nop   
85 [0x55]: line: 236 loadl ebx, fp+2   
86 [0x56]:           return_val ebx   
87 [0x57]:           ret   


function: std#integer<_uint8>.to_ulong[1349] params(0) in file: lib/support/0.2.805//primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @39 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_long[1350] params(0) in file: lib/support/0.2.805//primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @40 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_uint[1351] params(0) in file: lib/support/0.2.805//primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @41 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_int[1352] params(0) in file: lib/support/0.2.805//primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @42 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_ushort[1353] params(0) in file: lib/support/0.2.805//primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @43 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_short[1354] params(0) in file: lib/support/0.2.805//primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @44 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_uchar[1355] params(0) in file: lib/support/0.2.805//primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @45 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_char[1356] params(0) in file: lib/support/0.2.805//primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @46 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_byte[1357] params(0) in file: lib/support/0.2.805//primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @47 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_bool[1358] params(0) in file: lib/support/0.2.805//primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @48 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.get_value[1359] params(0) in file: lib/support/0.2.805//primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint8>.integer[1360] params(0) in file: lib/support/0.2.805//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_int8>.integer[1361] params(1) in file: lib/support/0.2.805//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 9 ipushl #1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         mov8 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         ret   


function: std#integer<_int8>.hash[1362] params(0) in file: lib/support/0.2.805//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          call @1965 // <std#long.long>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


overload function: std#integer<_int8>.operator!=[1363] params(1) in file: lib/support/0.2.805//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1364] params(1) in file: lib/support/0.2.805//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1365] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1366] params(1) in file: lib/support/0.2.805//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1367] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1368] params(1) in file: lib/support/0.2.805//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1369] params(1) in file: lib/support/0.2.805//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1370] params(1) in file: lib/support/0.2.805//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1371] params(1) in file: lib/support/0.2.805//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1372] params(1) in file: lib/support/0.2.805//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1373] params(1) in file: lib/support/0.2.805//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1374] params(1) in file: lib/support/0.2.805//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1375] params(1) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1376] params(1) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1377] params(1) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1378] params(1) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1379] params(1) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1380] params(1) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1381] params(1) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1382] params(1) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1383] params(1) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1384] params(1) in file: lib/support/0.2.805//primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1385] params(1) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1386] params(1) in file: lib/support/0.2.805//primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1387] params(1) in file: lib/support/0.2.805//primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1388] params(1) in file: lib/support/0.2.805//primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1389] params(1) in file: lib/support/0.2.805//primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1390] params(1) in file: lib/support/0.2.805//primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1391] params(1) in file: lib/support/0.2.805//primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1392] params(1) in file: lib/support/0.2.805//primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1393] params(1) in file: lib/support/0.2.805//primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator-[1394] params(1) in file: lib/support/0.2.805//primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1395] params(1) in file: lib/support/0.2.805//primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1396] params(1) in file: lib/support/0.2.805//primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1397] params(1) in file: lib/support/0.2.805//primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1398] params(1) in file: lib/support/0.2.805//primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1399] params(1) in file: lib/support/0.2.805//primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1400] params(1) in file: lib/support/0.2.805//primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1401] params(1) in file: lib/support/0.2.805//primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1402] params(1) in file: lib/support/0.2.805//primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1403] params(1) in file: lib/support/0.2.805//primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1404] params(1) in file: lib/support/0.2.805//primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator*[1405] params(1) in file: lib/support/0.2.805//primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1406] params(1) in file: lib/support/0.2.805//primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1407] params(1) in file: lib/support/0.2.805//primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1408] params(1) in file: lib/support/0.2.805//primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1409] params(1) in file: lib/support/0.2.805//primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1410] params(1) in file: lib/support/0.2.805//primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1411] params(1) in file: lib/support/0.2.805//primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1412] params(1) in file: lib/support/0.2.805//primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1413] params(1) in file: lib/support/0.2.805//primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1414] params(1) in file: lib/support/0.2.805//primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1415] params(1) in file: lib/support/0.2.805//primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator/[1416] params(1) in file: lib/support/0.2.805//primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1417] params(1) in file: lib/support/0.2.805//primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1418] params(1) in file: lib/support/0.2.805//primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1419] params(1) in file: lib/support/0.2.805//primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1420] params(1) in file: lib/support/0.2.805//primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1421] params(1) in file: lib/support/0.2.805//primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1422] params(1) in file: lib/support/0.2.805//primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1423] params(1) in file: lib/support/0.2.805//primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1424] params(1) in file: lib/support/0.2.805//primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1425] params(1) in file: lib/support/0.2.805//primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1426] params(1) in file: lib/support/0.2.805//primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator%[1427] params(1) in file: lib/support/0.2.805//primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1428] params(1) in file: lib/support/0.2.805//primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1429] params(1) in file: lib/support/0.2.805//primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1430] params(1) in file: lib/support/0.2.805//primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1431] params(1) in file: lib/support/0.2.805//primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1432] params(1) in file: lib/support/0.2.805//primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1433] params(1) in file: lib/support/0.2.805//primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1434] params(1) in file: lib/support/0.2.805//primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1435] params(1) in file: lib/support/0.2.805//primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1436] params(1) in file: lib/support/0.2.805//primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1437] params(1) in file: lib/support/0.2.805//primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator<[1438] params(1) in file: lib/support/0.2.805//primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator<[1439] params(1) in file: lib/support/0.2.805//primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator<[1440] params(1) in file: lib/support/0.2.805//primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator<[1441] params(1) in file: lib/support/0.2.805//primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1442] params(1) in file: lib/support/0.2.805//primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1443] params(1) in file: lib/support/0.2.805//primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1444] params(1) in file: lib/support/0.2.805//primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1445] params(1) in file: lib/support/0.2.805//primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1446] params(1) in file: lib/support/0.2.805//primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1447] params(1) in file: lib/support/0.2.805//primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1448] params(1) in file: lib/support/0.2.805//primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator>[1449] params(1) in file: lib/support/0.2.805//primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1450] params(1) in file: lib/support/0.2.805//primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1451] params(1) in file: lib/support/0.2.805//primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1452] params(1) in file: lib/support/0.2.805//primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1453] params(1) in file: lib/support/0.2.805//primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1454] params(1) in file: lib/support/0.2.805//primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1455] params(1) in file: lib/support/0.2.805//primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1456] params(1) in file: lib/support/0.2.805//primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1457] params(1) in file: lib/support/0.2.805//primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1458] params(1) in file: lib/support/0.2.805//primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1459] params(1) in file: lib/support/0.2.805//primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<=[1460] params(1) in file: lib/support/0.2.805//primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1461] params(1) in file: lib/support/0.2.805//primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1462] params(1) in file: lib/support/0.2.805//primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1463] params(1) in file: lib/support/0.2.805//primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1464] params(1) in file: lib/support/0.2.805//primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1465] params(1) in file: lib/support/0.2.805//primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1466] params(1) in file: lib/support/0.2.805//primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1467] params(1) in file: lib/support/0.2.805//primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1468] params(1) in file: lib/support/0.2.805//primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1469] params(1) in file: lib/support/0.2.805//primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1470] params(1) in file: lib/support/0.2.805//primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator**[1471] params(1) in file: lib/support/0.2.805//primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1472] params(1) in file: lib/support/0.2.805//primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1473] params(1) in file: lib/support/0.2.805//primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1474] params(1) in file: lib/support/0.2.805//primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1475] params(1) in file: lib/support/0.2.805//primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1476] params(1) in file: lib/support/0.2.805//primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1477] params(1) in file: lib/support/0.2.805//primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1478] params(1) in file: lib/support/0.2.805//primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1479] params(1) in file: lib/support/0.2.805//primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1480] params(1) in file: lib/support/0.2.805//primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1481] params(1) in file: lib/support/0.2.805//primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<<[1482] params(1) in file: lib/support/0.2.805//primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1483] params(1) in file: lib/support/0.2.805//primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1484] params(1) in file: lib/support/0.2.805//primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1485] params(1) in file: lib/support/0.2.805//primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1486] params(1) in file: lib/support/0.2.805//primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1487] params(1) in file: lib/support/0.2.805//primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1488] params(1) in file: lib/support/0.2.805//primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1489] params(1) in file: lib/support/0.2.805//primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1490] params(1) in file: lib/support/0.2.805//primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1491] params(1) in file: lib/support/0.2.805//primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1492] params(1) in file: lib/support/0.2.805//primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator>>[1493] params(1) in file: lib/support/0.2.805//primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1494] params(1) in file: lib/support/0.2.805//primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1495] params(1) in file: lib/support/0.2.805//primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1496] params(1) in file: lib/support/0.2.805//primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1497] params(1) in file: lib/support/0.2.805//primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1498] params(1) in file: lib/support/0.2.805//primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1499] params(1) in file: lib/support/0.2.805//primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1500] params(1) in file: lib/support/0.2.805//primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1501] params(1) in file: lib/support/0.2.805//primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1502] params(1) in file: lib/support/0.2.805//primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1503] params(1) in file: lib/support/0.2.805//primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator^[1504] params(1) in file: lib/support/0.2.805//primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1505] params(1) in file: lib/support/0.2.805//primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1506] params(1) in file: lib/support/0.2.805//primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1507] params(1) in file: lib/support/0.2.805//primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1508] params(1) in file: lib/support/0.2.805//primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1509] params(1) in file: lib/support/0.2.805//primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1510] params(1) in file: lib/support/0.2.805//primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1511] params(1) in file: lib/support/0.2.805//primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1512] params(1) in file: lib/support/0.2.805//primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1513] params(1) in file: lib/support/0.2.805//primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1514] params(1) in file: lib/support/0.2.805//primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator&[1515] params(1) in file: lib/support/0.2.805//primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1516] params(1) in file: lib/support/0.2.805//primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1517] params(1) in file: lib/support/0.2.805//primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1518] params(1) in file: lib/support/0.2.805//primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1519] params(1) in file: lib/support/0.2.805//primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1520] params(1) in file: lib/support/0.2.805//primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1521] params(1) in file: lib/support/0.2.805//primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1522] params(1) in file: lib/support/0.2.805//primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1523] params(1) in file: lib/support/0.2.805//primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1524] params(1) in file: lib/support/0.2.805//primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1525] params(1) in file: lib/support/0.2.805//primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator|[1526] params(1) in file: lib/support/0.2.805//primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1527] params(1) in file: lib/support/0.2.805//primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1528] params(1) in file: lib/support/0.2.805//primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1529] params(1) in file: lib/support/0.2.805//primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1530] params(1) in file: lib/support/0.2.805//primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1531] params(1) in file: lib/support/0.2.805//primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1532] params(1) in file: lib/support/0.2.805//primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1533] params(1) in file: lib/support/0.2.805//primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1534] params(1) in file: lib/support/0.2.805//primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1535] params(1) in file: lib/support/0.2.805//primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1536] params(1) in file: lib/support/0.2.805//primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator!=[1537] params(1) in file: lib/support/0.2.805//primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator==[1538] params(1) in file: lib/support/0.2.805//primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator=[1539] params(1) in file: lib/support/0.2.805//primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int8>.to_string[1540] params(0) in file: lib/support/0.2.805//primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 210 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2853 // <std#string.operator+>   
12 [0xc]:           popobj2    
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std#integer<_int8>.parse[1541] params(1) in file: lib/support/0.2.805//primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           mov8 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2854 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2843 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           jne 77   
32 [0x20]: line: 226 pushl 0   
33 [0x21]:           ipushl #1   
34 [0x22]:           call @2843 // <std#string.at>   
35 [0x23]:           call @2612 // <std#char.is_digit>   
36 [0x24]:           loadval ebx   
37 [0x25]:           not ebx, ebx   
38 [0x26]:           movr cmt, ebx   
39 [0x27]:           jne 52   
40 [0x28]: line: 227 new_class @5 // std#illegal_argument_exception   
41 [0x29]:           dup    
42 [0x2a]:           new_class @58 // std#string   
43 [0x2b]:           dup    
44 [0x2c]:           newstr @55 // illegal char in string:    
45 [0x2d]:           call @2823 // <std#string.string>   
46 [0x2e]:           pushl 0   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @2843 // <std#string.at>   
49 [0x31]:           call @2853 // <std#string.operator+>   
50 [0x32]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
51 [0x33]:           throw    
52 [0x34]:           nop   
53 [0x35]: line: 231 movi #10, ebx   
55 [0x37]:           loadl ecx, fp+2   
56 [0x38]:           mul ecx, ebx -> ebx   
57 [0x39]:           mov8 ebx, ebx   
58 [0x3a]:           smovr_2 ebx, fp+2   
59 [0x3b]: line: 232 pushl 0   
60 [0x3c]:           loadl ebx, fp+1   
61 [0x3d]:           movr egx, ebx   
62 [0x3e]:           inc ebx   
63 [0x3f]:           smovr_2 ebx, fp+1   
64 [0x40]:           rstore egx   
65 [0x41]:           call @2843 // <std#string.at>   
66 [0x42]:           loadval ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movi #48, ebx   
70 [0x46]:           loadval ecx   
71 [0x47]:           sub ecx, ebx -> ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           mov8 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]:           jmp @27   
77 [0x4d]: line: 234 loadl ebx, fp+3   
78 [0x4e]:           movr cmt, ebx   
79 [0x4f]:           jne 84   
80 [0x50]: line: 235 loadl ebx, fp+2   
81 [0x51]:           neg ebx, ebx   
82 [0x52]:           mov8 ebx, ebx   
83 [0x53]:           smovr_2 ebx, fp+2   
84 [0x54]:           nop   
85 [0x55]: line: 236 loadl ebx, fp+2   
86 [0x56]:           return_val ebx   
87 [0x57]:           ret   


function: std#integer<_int8>.to_ulong[1542] params(0) in file: lib/support/0.2.805//primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @39 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_long[1543] params(0) in file: lib/support/0.2.805//primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @40 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_uint[1544] params(0) in file: lib/support/0.2.805//primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @41 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_int[1545] params(0) in file: lib/support/0.2.805//primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @42 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_ushort[1546] params(0) in file: lib/support/0.2.805//primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @43 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_short[1547] params(0) in file: lib/support/0.2.805//primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @44 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_uchar[1548] params(0) in file: lib/support/0.2.805//primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @45 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_char[1549] params(0) in file: lib/support/0.2.805//primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @46 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_byte[1550] params(0) in file: lib/support/0.2.805//primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @47 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_bool[1551] params(0) in file: lib/support/0.2.805//primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @48 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.get_value[1552] params(0) in file: lib/support/0.2.805//primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int8>.integer[1553] params(0) in file: lib/support/0.2.805//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


std#loopable<_int8>.get_elements[1554] params(0) in file: lib/support/0.2.805//string.sharp:4:8: note:  
		
		       ^



constructor: std#loopable<_int8>.loopable[1555] params(0) in file: lib/support/0.2.805//string.sharp:3:10: note:  
		import std.io;
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


function: app#__srt_global.main[1556] params(1) in file: tests/syntax.sharp:12:18: note:  
		public static def main(args: string[]) : var {
		                 ^

0 [0x0]: line: 13 istore 3089   
2 [0x2]:          call @3087 // <std.io.task#deferred_task<var>.for_result>   
3 [0x3]:          movg @0 // @app#__srt_global   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 22 movg @0 // @app#__srt_global   
8 [0x8]:          movn #1   
10 [0xa]:          pushobj   
11 [0xb]:          istore 3090   
13 [0xd]:          call @2940 // <std.io.task#observable<var>.observe_forever>   
14 [0xe]: line: 28 movi #4, ebx   
16 [0x10]:          return_val ebx   
17 [0x11]:          ret   


function: std#__srt_global.snprintf[1557] params(3) in file: lib/support/0.2.805//console.sharp:3:4: note:  
		def snprintf(fmt: var, num: var, precision: var) : var[] {
		   ^

0 [0x0]: line: 4 loadl egx, fp+0   : protected asm start
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         loadl ecx, fp+2   
3 [0x3]:         int 0x1   
4 [0x4]:         popobj2    
5 [0x5]:         returnobj   
6 [0x6]:         ret   
7 [0x7]: line: 13 pushnull    : protected asm end
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#__srt_global.print[1558] params(1) in file: lib/support/0.2.805//console.sharp:16:4: note:  
		def print(data: _int8[]) {
		   ^

0 [0x0]: line: 17 pushl 0   
1 [0x1]:          call @1586 // <std#__srt_global.print_chars>   
2 [0x2]:          ret   


function: std#__srt_global.print[1559] params(1) in file: lib/support/0.2.805//console.sharp:20:4: note:  
		def print(str: string) {
		   ^

0 [0x0]: line: 21 pushl 0   
1 [0x1]:          call @2847 // <std#string.get_data>   
2 [0x2]:          call @1586 // <std#__srt_global.print_chars>   
3 [0x3]:          ret   


function: std#__srt_global.println[1560] params(1) in file: lib/support/0.2.805//console.sharp:24:4: note:  
		def println(data: var[]) {
		   ^

0 [0x0]: line: 25 pushl 0   
1 [0x1]:          call @1589 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 26 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1561] params(1) in file: lib/support/0.2.805//console.sharp:29:4: note:  
		def println(data: _int8[]) {
		   ^

0 [0x0]: line: 30 pushl 0   
1 [0x1]:          call @1586 // <std#__srt_global.print_chars>   
2 [0x2]: line: 31 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1562] params(1) in file: lib/support/0.2.805//console.sharp:34:4: note:  
		def println(data: _int16[]) {
		   ^

0 [0x0]: line: 35 pushl 0   
1 [0x1]:          call @1590 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 36 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1563] params(1) in file: lib/support/0.2.805//console.sharp:39:4: note:  
		def println(data: _int32[]) {
		   ^

0 [0x0]: line: 40 pushl 0   
1 [0x1]:          call @1591 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 41 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1564] params(1) in file: lib/support/0.2.805//console.sharp:44:4: note:  
		def println(data: _int64[]) {
		   ^

0 [0x0]: line: 45 pushl 0   
1 [0x1]:          call @1592 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 46 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1565] params(1) in file: lib/support/0.2.805//console.sharp:49:4: note:  
		def println(data: _uint8[]) {
		   ^

0 [0x0]: line: 50 pushl 0   
1 [0x1]:          call @1593 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 51 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1566] params(1) in file: lib/support/0.2.805//console.sharp:54:4: note:  
		def println(data: _uint16[]) {
		   ^

0 [0x0]: line: 55 pushl 0   
1 [0x1]:          call @1594 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 56 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1567] params(1) in file: lib/support/0.2.805//console.sharp:59:4: note:  
		def println(data: _uint32[]) {
		   ^

0 [0x0]: line: 60 pushl 0   
1 [0x1]:          call @1595 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 61 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1568] params(1) in file: lib/support/0.2.805//console.sharp:64:4: note:  
		def println(data: _uint64[]) {
		   ^

0 [0x0]: line: 65 pushl 0   
1 [0x1]:          call @1596 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 66 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1569] params(1) in file: lib/support/0.2.805//console.sharp:69:4: note:  
		def println(data: var) {
		   ^

0 [0x0]: line: 70 ipushl #0   
1 [0x1]:          call @1587 // <std#__srt_global.print_num>   
2 [0x2]: line: 71 istore 10   
4 [0x4]:          call @1588 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1570] params(0) in file: lib/support/0.2.805//console.sharp:74:4: note:  
		def println() {
		   ^

0 [0x0]: line: 75 istore 10   
2 [0x2]:          call @1588 // <std#__srt_global.print_char>   
3 [0x3]:          ret   


function: std#__srt_global.println[1571] params(1) in file: lib/support/0.2.805//console.sharp:78:4: note:  
		def println(e: _enum_) {
		   ^

0 [0x0]: line: 79 pushl 0   
1 [0x1]:          call @1605 // <std#_enum_.get_name>   
2 [0x2]:          call @1586 // <std#__srt_global.print_chars>   
3 [0x3]: line: 80 istore 10   
5 [0x5]:          call @1588 // <std#__srt_global.print_char>   
6 [0x6]:          ret   


function: std#__srt_global.read_line[1572] params(0) in file: lib/support/0.2.805//console.sharp:83:4: note:  
		def read_line() : string {
		   ^

0 [0x0]: line: 84 istorel 0, fp+0   
2 [0x2]: line: 85 new_class @58 // std#string   
3 [0x3]:          dup    
4 [0x4]:          newstr @3 //    
5 [0x5]:          call @2823 // <std#string.string>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 87 call @1574 // <std#__srt_global.read_char>   
9 [0x9]:          loadval ebx   
10 [0xa]:          mov8 ebx, ebx   
11 [0xb]:          smovr_2 ebx, fp+0   
12 [0xc]: line: 88 ipushl #0   
13 [0xd]:          movi #13, ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          skne ebx // pc = 23   
19 [0x13]:          ipushl #0   
20 [0x14]:          movi #10, ebx   
22 [0x16]:          loadval ecx   
23 [0x17]:          tne ecx, ebx   
24 [0x18]:          jne 34   
25 [0x19]: line: 89 pushl 1   
26 [0x1a]:          ipushl #0   
27 [0x1b]:          call @2830 // <std#string.append>   
28 [0x1c]:          pop   
29 [0x1d]: line: 90 call @1574 // <std#__srt_global.read_char>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          mov8 ebx, ebx   
32 [0x20]:          smovr_2 ebx, fp+0   
33 [0x21]:          jmp @12   
34 [0x22]: line: 93 movl 1   
35 [0x23]:          returnobj   
36 [0x24]:          ret   


function: std#__srt_global.read_passwd[1573] params(0) in file: lib/support/0.2.805//console.sharp:96:4: note:  
		def read_passwd() : string {
		   ^

0 [0x0]: line: 97 istorel 0, fp+0   
2 [0x2]: line: 98 new_class @58 // std#string   
3 [0x3]:          dup    
4 [0x4]:          newstr @3 //    
5 [0x5]:          call @2823 // <std#string.string>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 100 call @1575 // <std#__srt_global.read_raw_char>   
9 [0x9]:           loadval ebx   
10 [0xa]:           mov8 ebx, ebx   
11 [0xb]:           smovr_2 ebx, fp+0   
12 [0xc]: line: 101 ipushl #0   
13 [0xd]:           movi #13, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           tne ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           skne ebx // pc = 23   
19 [0x13]:           ipushl #0   
20 [0x14]:           movi #10, ebx   
22 [0x16]:           loadval ecx   
23 [0x17]:           tne ecx, ebx   
24 [0x18]:           jne 34   
25 [0x19]: line: 102 pushl 1   
26 [0x1a]:           ipushl #0   
27 [0x1b]:           call @2830 // <std#string.append>   
28 [0x1c]:           pop   
29 [0x1d]: line: 103 call @1575 // <std#__srt_global.read_raw_char>   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           mov8 ebx, ebx   
32 [0x20]:           smovr_2 ebx, fp+0   
33 [0x21]:           jmp @12   
34 [0x22]: line: 106 movl 1   
35 [0x23]:           returnobj   
36 [0x24]:           ret   


function: std#__srt_global.read_char[1574] params(0) in file: lib/support/0.2.805//console.sharp:109:4: note:  
		def read_char() : var {
		   ^

0 [0x0]: line: 110 istore 0   
2 [0x2]:           call @1598 // <std#__srt_global.read_ch>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#__srt_global.read_raw_char[1575] params(0) in file: lib/support/0.2.805//console.sharp:113:4: note:  
		def read_raw_char() : var {
		   ^

0 [0x0]: line: 114 istore 1   
2 [0x2]:           call @1598 // <std#__srt_global.read_ch>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#__srt_global.println[1576] params(1) in file: lib/support/0.2.805//console.sharp:117:4: note:  
		def println(str: string) {
		   ^

0 [0x0]: line: 118 pushl 0   
1 [0x1]:           call @2847 // <std#string.get_data>   
2 [0x2]:           call @1586 // <std#__srt_global.print_chars>   
3 [0x3]: line: 119 istore 10   
5 [0x5]:           call @1588 // <std#__srt_global.print_char>   
6 [0x6]:           ret   


function: std#__srt_global.println[1577] params(1) in file: lib/support/0.2.805//console.sharp:122:4: note:  
		def println(o: printable) {
		   ^

0 [0x0]: line: 123 pushl 0   
1 [0x1]:           invoke_delegate 2814 { static=0, args=0 }   
3 [0x3]:           call @2847 // <std#string.get_data>   
4 [0x4]:           call @1586 // <std#__srt_global.print_chars>   
5 [0x5]: line: 124 istore 10   
7 [0x7]:           call @1588 // <std#__srt_global.print_char>   
8 [0x8]:           ret   


function: std#__srt_global.print[1578] params(1) in file: lib/support/0.2.805//console.sharp:127:4: note:  
		def print(o: printable) {
		   ^

0 [0x0]: line: 128 pushl 0   
1 [0x1]:           invoke_delegate 2814 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1586 // <std#__srt_global.print_chars>   
8 [0x8]:           ret   


function: std#__srt_global.print[1579] params(1) in file: lib/support/0.2.805//console.sharp:131:4: note:  
		def print(data: var) {
		   ^

0 [0x0]: line: 132 ipushl #0   
1 [0x1]:           call @1587 // <std#__srt_global.print_num>   
2 [0x2]:           ret   


function: std#__srt_global.flush[1580] params(0) in file: lib/support/0.2.805//console.sharp:135:4: note:  
		def flush() {
		   ^

0 [0x0]: line: 136 int 0x34   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.utc_mills_time[1581] params(0) in file: lib/support/0.2.805//console.sharp:139:4: note:  
		def utc_mills_time() : var {
		   ^

0 [0x0]: line: 140 call @2912 // <std#time.mills_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.nano_time[1582] params(0) in file: lib/support/0.2.805//console.sharp:143:4: note:  
		def nano_time() : var {
		   ^

0 [0x0]: line: 144 call @2908 // <std#time.nano_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.exit[1583] params(0) in file: lib/support/0.2.805//console.sharp:147:4: note:  
		def exit() {
		   ^

0 [0x0]: line: 148 int 0x1d   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.sizeOf[1584] params(1) in file: lib/support/0.2.805//console.sharp:151:4: note:  
		def sizeOf(data: object) : var {
		   ^

0 [0x0]: line: 152 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 158 movi #0, ebx   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#__srt_global.sizeOf[1585] params(1) in file: lib/support/0.2.805//console.sharp:161:4: note:  
		def sizeOf(data: object[]) : var {
		   ^

0 [0x0]: line: 162 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 168 movi #0, ebx   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#__srt_global.print_chars[1586] params(1) in file: lib/support/0.2.805//console.sharp:171:10: note:  
		local def print_chars(str: _int8[]) {
		         ^

0 [0x0]: line: 172 istorel -1, fp+2   
2 [0x2]:           pushl 0   
3 [0x3]:           popl 3   
4 [0x4]:           iaddl 1, fp@2   
6 [0x6]:           movl 3   
7 [0x7]:           sizeof ecx   
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           lt ebx, ecx   
10 [0xa]:           jne 16   
11 [0xb]:           iaload ecx, ebx   
12 [0xc]:           smovr_2 ecx, fp+1   
13 [0xd]: line: 173 loadl ebx, fp+1   : protected asm start
14 [0xe]:           _putc ebx   
15 [0xf]:           jmp @4   : protected asm end
16 [0x10]:           ret   


function: std#__srt_global.print_num[1587] params(1) in file: lib/support/0.2.805//console.sharp:180:10: note:  
		local def print_num(val: var) {
		         ^

0 [0x0]: line: 181 loadl ebx, fp+0   : protected asm start
1 [0x1]:           put ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_char[1588] params(1) in file: lib/support/0.2.805//console.sharp:187:10: note:  
		local def print_char(val: _int8) {
		         ^

0 [0x0]: line: 188 loadl ebx, fp+0   : protected asm start
1 [0x1]:           _putc ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1589] params(1) in file: lib/support/0.2.805//console.sharp:194:10: note:  
		local def print_numbers(str: var[]) {
		         ^

0 [0x0]: line: 195 movi #91, ebx   : protected asm start
2 [0x2]:           movi #32, ecx   
4 [0x4]:           _putc ebx   
5 [0x5]:           _putc ecx   
6 [0x6]: line: 201 istorel 0, fp+1   : protected asm end
8 [0x8]:           ipushl #1   
9 [0x9]:           movl 0   
10 [0xa]:           sizeof ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           jne 44   
14 [0xe]: line: 202 pushl 0   
15 [0xf]:           loadl ebx, fp+1   
16 [0x10]:           popobj2    
17 [0x11]:           movr adx, ebx   
18 [0x12]:           chklen adx   
19 [0x13]:           iaload ebx, adx   
20 [0x14]:           smovr_2 ebx, fp+2   
21 [0x15]: line: 203 loadl ebx, fp+2   : protected asm start
22 [0x16]:           put ebx   
23 [0x17]: line: 208 ipushl #1   : protected asm end
24 [0x18]:           movi #1, ebx   
26 [0x1a]:           loadval ecx   
27 [0x1b]:           add ecx, ebx -> ebx   
28 [0x1c]:           rstore ebx   
29 [0x1d]:           movl 0   
30 [0x1e]:           sizeof ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           lt ecx, ebx   
33 [0x21]:           jne 40   
34 [0x22]: line: 209 movi #44, ebx   : protected asm start
36 [0x24]:           movi #32, ecx   
38 [0x26]:           _putc ebx   
39 [0x27]:           _putc ecx   
40 [0x28]:           nop   : protected asm end
41 [0x29]:           iaddl 1, fp@1   
43 [0x2b]:           jmp @8   
44 [0x2c]: line: 217 movi #32, ebx   : protected asm start
46 [0x2e]:           movi #93, ecx   
48 [0x30]:           _putc ebx   
49 [0x31]:           _putc ecx   
50 [0x32]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1590] params(1) in file: lib/support/0.2.805//console.sharp:225:10: note:  
		local def print_numbers(str: _int16[]) {
		         ^

0 [0x0]: line: 226 pushl 0   : protected asm start
1 [0x1]:           call @1589 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1591] params(1) in file: lib/support/0.2.805//console.sharp:232:10: note:  
		local def print_numbers(str: _int32[]) {
		         ^

0 [0x0]: line: 233 pushl 0   : protected asm start
1 [0x1]:           call @1589 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1592] params(1) in file: lib/support/0.2.805//console.sharp:239:10: note:  
		local def print_numbers(str: _int64[]) {
		         ^

0 [0x0]: line: 240 pushl 0   : protected asm start
1 [0x1]:           call @1589 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1593] params(1) in file: lib/support/0.2.805//console.sharp:246:10: note:  
		local def print_numbers(str: _uint8[]) {
		         ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           call @1589 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1594] params(1) in file: lib/support/0.2.805//console.sharp:253:10: note:  
		local def print_numbers(str: _uint16[]) {
		         ^

0 [0x0]: line: 254 pushl 0   : protected asm start
1 [0x1]:           call @1589 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1595] params(1) in file: lib/support/0.2.805//console.sharp:260:10: note:  
		local def print_numbers(str: _uint32[]) {
		         ^

0 [0x0]: line: 261 pushl 0   : protected asm start
1 [0x1]:           call @1589 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1596] params(1) in file: lib/support/0.2.805//console.sharp:267:10: note:  
		local def print_numbers(str: _uint64[]) {
		         ^

0 [0x0]: line: 268 pushl 0   : protected asm start
1 [0x1]:           call @1589 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_chars[1597] params(1) in file: lib/support/0.2.805//console.sharp:274:10: note:  
		local def print_chars(str: _int16[]) {
		         ^

0 [0x0]: line: 275 pushl 0   : protected asm start
1 [0x1]:           call @1586 // <std#__srt_global.print_chars>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.read_ch[1598] params(1) in file: lib/support/0.2.805//console.sharp:281:10: note:  
		local def read_ch(hide: var) : var {
		         ^

0 [0x0]: line: 282 loadl cmt, fp+0   : protected asm start
1 [0x1]:           get ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 288 movi #0, ebx   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#_enum_._enum_[1599] params(1) in file: lib/support/0.2.805//enum.sharp:18:11: note:  
		    _enum_(ord : var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 19 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          loadval ebx   
7 [0x7]:          mov64 ebx, ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]:          ret   


constructor: std#_enum_._enum_[1600] params(1) in file: lib/support/0.2.805//enum.sharp:22:11: note:  
		    _enum_(e : _enum_) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 23 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          mov64 ebx, ebx   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]: line: 24 movl 1   
16 [0x10]:          movn #0   
18 [0x12]:          pushobj   
19 [0x13]:          istore 0   
21 [0x15]:          movl 1   
22 [0x16]:          movn #0   
24 [0x18]:          sizeof ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          call @1676 // <std.io#__srt_global.copy>   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]:          ret   


overload function: std#_enum_.operator!=[1601] params(1) in file: lib/support/0.2.805//enum.sharp:27:8: note:  
		    def operator!=(e : _enum_) : var {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#_enum_.operator!=[1602] params(1) in file: lib/support/0.2.805//enum.sharp:31:8: note:  
		    def operator!=(num : var) : var {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          tne ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


overload function: std#_enum_.operator==[1603] params(1) in file: lib/support/0.2.805//enum.sharp:35:8: note:  
		    def operator==(e : _enum_) : var {
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#_enum_.operator==[1604] params(1) in file: lib/support/0.2.805//enum.sharp:39:8: note:  
		    def operator==(num : var) : var {
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          test ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


function: std#_enum_.get_name[1605] params(0) in file: lib/support/0.2.805//enum.sharp:43:8: note:  
		    def get_name() : _int8[] {
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std#_enum_.get_ordinal[1606] params(0) in file: lib/support/0.2.805//enum.sharp:47:8: note:  
		    def get_ordinal() : _int64 {
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#_enum_.to_string[1607] params(0) in file: lib/support/0.2.805//enum.sharp:51:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 52 new_class @58 // std#string   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          call @2823 // <std#string.string>   
7 [0x7]:          popobj2    
8 [0x8]:          returnobj   
9 [0x9]:          ret   


constructor: std#_enum_._enum_[1608] params(0) in file: lib/support/0.2.805//enum.sharp:14:17: note:  
		stable ext class _enum_ {
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#throwable.throwable[1609] params(1) in file: lib/support/0.2.805//exceptions.sharp:30:21: note:  
		    public throwable(message : _int8[]) {
		                    ^

0 [0x0]: line: 26 call @1845 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]:          call @1835 // <std#_object_._object_>   
7 [0x7]: line: 31 pushl 1   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          popobj   
12 [0xc]:          ret   


constructor: std#throwable.throwable[1610] params(1) in file: lib/support/0.2.805//exceptions.sharp:34:21: note:  
		    public throwable(message : string) {
		                    ^

0 [0x0]: line: 26 call @1845 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]:          call @1835 // <std#_object_._object_>   
7 [0x7]:          ret   


function: std#throwable.get_message[1611] params(0) in file: lib/support/0.2.805//exceptions.sharp:38:8: note:  
		    def get_message() : string {
		       ^

0 [0x0]: line: 39 new_class @58 // std#string   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          call @2823 // <std#string.string>   
7 [0x7]:          popobj2    
8 [0x8]:          returnobj   
9 [0x9]:          ret   


constructor: std#throwable.throwable[1612] params(0) in file: lib/support/0.2.805//exceptions.sharp:10:6: note:  
		class throwable {
		     ^

0 [0x0]: line: 26 call @1845 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          ret   


constructor: std#exception.exception[1613] params(1) in file: lib/support/0.2.805//exceptions.sharp:47:21: note:  
		    public exception(message : _int8[]) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1609 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[1614] params(1) in file: lib/support/0.2.805//exceptions.sharp:48:21: note:  
		    public exception(message : string) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1610 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[1615] params(0) in file: lib/support/0.2.805//exceptions.sharp:46:6: note:  
		class exception base throwable {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1612 // <std#throwable.throwable>   
2 [0x2]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1616] params(1) in file: lib/support/0.2.805//exceptions.sharp:52:38: note:  
		    public illegal_argument_exception(message : _int8[]) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1617] params(1) in file: lib/support/0.2.805//exceptions.sharp:53:38: note:  
		    public illegal_argument_exception(message : string) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1618] params(0) in file: lib/support/0.2.805//exceptions.sharp:51:6: note:  
		class illegal_argument_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1619] params(1) in file: lib/support/0.2.805//exceptions.sharp:56:35: note:  
		    public illegal_state_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1620] params(1) in file: lib/support/0.2.805//exceptions.sharp:57:35: note:  
		    public illegal_state_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1621] params(0) in file: lib/support/0.2.805//exceptions.sharp:55:6: note:  
		class illegal_state_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1622] params(1) in file: lib/support/0.2.805//exceptions.sharp:60:35: note:  
		    public out_of_bounds_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1623] params(1) in file: lib/support/0.2.805//exceptions.sharp:61:35: note:  
		    public out_of_bounds_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1624] params(0) in file: lib/support/0.2.805//exceptions.sharp:59:6: note:  
		class out_of_bounds_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1625] params(1) in file: lib/support/0.2.805//exceptions.sharp:64:39: note:  
		    public invalid_operation_exception(message : _int8[]) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1626] params(1) in file: lib/support/0.2.805//exceptions.sharp:65:39: note:  
		    public invalid_operation_exception(message : string) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1627] params(0) in file: lib/support/0.2.805//exceptions.sharp:63:6: note:  
		class invalid_operation_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1628] params(1) in file: lib/support/0.2.805//exceptions.sharp:68:29: note:  
		    public nullptr_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1629] params(1) in file: lib/support/0.2.805//exceptions.sharp:69:29: note:  
		    public nullptr_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1630] params(0) in file: lib/support/0.2.805//exceptions.sharp:67:6: note:  
		class nullptr_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#runtime_exception.runtime_exception[1631] params(1) in file: lib/support/0.2.805//exceptions.sharp:72:29: note:  
		    public runtime_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[1632] params(1) in file: lib/support/0.2.805//exceptions.sharp:73:29: note:  
		    public runtime_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[1633] params(0) in file: lib/support/0.2.805//exceptions.sharp:71:6: note:  
		class runtime_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1634] params(1) in file: lib/support/0.2.805//exceptions.sharp:76:36: note:  
		    public stack_overflow_exception(message : _int8[]) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1635] params(1) in file: lib/support/0.2.805//exceptions.sharp:77:36: note:  
		    public stack_overflow_exception(message : string) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1636] params(0) in file: lib/support/0.2.805//exceptions.sharp:75:6: note:  
		class stack_overflow_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1637] params(1) in file: lib/support/0.2.805//exceptions.sharp:80:34: note:  
		    public thread_stack_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1638] params(1) in file: lib/support/0.2.805//exceptions.sharp:81:34: note:  
		    public thread_stack_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1639] params(0) in file: lib/support/0.2.805//exceptions.sharp:79:6: note:  
		class thread_stack_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1640] params(1) in file: lib/support/0.2.805//exceptions.sharp:84:32: note:  
		    public class_cast_exception(message : _int8[]) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1641] params(1) in file: lib/support/0.2.805//exceptions.sharp:85:32: note:  
		    public class_cast_exception(message : string) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1642] params(0) in file: lib/support/0.2.805//exceptions.sharp:83:6: note:  
		class class_cast_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1643] params(1) in file: lib/support/0.2.805//exceptions.sharp:88:35: note:  
		    public out_of_memory_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1644] params(1) in file: lib/support/0.2.805//exceptions.sharp:89:35: note:  
		    public out_of_memory_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1645] params(0) in file: lib/support/0.2.805//exceptions.sharp:87:6: note:  
		class out_of_memory_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1646] params(1) in file: lib/support/0.2.805//exceptions.sharp:92:33: note:  
		    public not_implemented_error(message : _int8[]) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1613 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1647] params(1) in file: lib/support/0.2.805//exceptions.sharp:93:33: note:  
		    public not_implemented_error(message : string) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1614 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1648] params(0) in file: lib/support/0.2.805//exceptions.sharp:91:6: note:  
		class not_implemented_error base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#exception.exception>   
2 [0x2]:         ret   


function: std#__srt_global.runtime_error[1649] params(1) in file: lib/support/0.2.805//exceptions.sharp:110:4: note:  
		def runtime_error(message: string) : runtime_except {
		   ^

0 [0x0]: line: 111 new_class @10 // std#runtime_exception   
1 [0x1]:           dup    
2 [0x2]:           pushl 0   
3 [0x3]:           call @1632 // <std#runtime_exception.runtime_exception>   
4 [0x4]:           movsl #0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#__srt_global.runtime_error[1650] params(0) in file: lib/support/0.2.805//exceptions.sharp:114:4: note:  
		def runtime_error() : runtime_except {
		   ^

0 [0x0]: line: 115 new_class @10 // std#runtime_exception   
1 [0x1]:           dup    
2 [0x2]:           call @1633 // <std#runtime_exception.runtime_exception>   
3 [0x3]:           movsl #0   
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#__srt_global.todo[1651] params(1) in file: lib/support/0.2.805//exceptions.sharp:118:4: note:  
		def todo(message: string) {
		   ^

0 [0x0]: line: 119 new_class @15 // std#not_implemented_error   
1 [0x1]:           dup    
2 [0x2]:           pushl 0   
3 [0x3]:           call @1647 // <std#not_implemented_error.not_implemented_error>   
4 [0x4]:           throw    
5 [0x5]:           ret   


function: std.io#__srt_global.critical_section[1652] params(1) in file: lib/support/0.2.805//io//critical_section.sharp:4:4: note:  
		def critical_section(block : ()()) {
		   ^

0 [0x0]: line: 5 movg @16 // @std.io#__srt_global   : protected asm start: try start: try block start
1 [0x1]: line: 6 movn #0   
3 [0x3]:         _lck    
4 [0x4]: line: 11 ipushl #0   : protected asm end
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]:          jmp @8   : try block end
8 [0x8]:          movl 1   : try end
9 [0x9]:          del   
10 [0xa]: line: 13 movg @16 // @std.io#__srt_global   : protected asm start: finally start
11 [0xb]:          movn #0   
13 [0xd]:          _ulck   
14 [0xe]:          movl 1   : protected asm end
15 [0xf]:          checknull   
16 [0x10]:          je 19   
17 [0x11]:          pushobj   
18 [0x12]:          ret ERR   
19 [0x13]:          nop   : finally end
20 [0x14]:          ret   


function: std.io#__srt_global.critical_section[1653] params(2) in file: lib/support/0.2.805//io//critical_section.sharp:21:4: note:  
		def critical_section(block : ()(), lock_obj : object) {
		   ^

0 [0x0]: line: 22 movl 1   : protected asm start: try start: try block start
1 [0x1]: line: 23 _lck    
2 [0x2]: line: 27 ipushl #0   : protected asm end
3 [0x3]:          loadval ebx   
4 [0x4]:          calld ebx   
5 [0x5]:          jmp @6   : try block end
6 [0x6]:          movl 2   : try end
7 [0x7]:          del   
8 [0x8]: line: 29 movl 1   : protected asm start: finally start
9 [0x9]:          _ulck   
10 [0xa]:          movl 2   : protected asm end
11 [0xb]:          checknull   
12 [0xc]:          je 15   
13 [0xd]:          pushobj   
14 [0xe]:          ret ERR   
15 [0xf]:          nop   : finally end
16 [0x10]:          ret   


function: std.io#__srt_global.realloc[1654] params(2) in file: lib/support/0.2.805//io//memory.sharp:4:4: note:  
		def realloc(data: object[], size: var) {
		   ^

0 [0x0]: line: 5 pushl 0   : protected asm start
1 [0x1]:         ipushl #1   
2 [0x2]:         int 0x23   
3 [0x3]:         ret   : protected asm end


function: std.io#__srt_global.realloc[1655] params(2) in file: lib/support/0.2.805//io//memory.sharp:12:4: note:  
		def realloc(data: var[], size: var) {
		   ^

0 [0x0]: line: 13 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1656] params(2) in file: lib/support/0.2.805//io//memory.sharp:20:4: note:  
		def realloc(data: _int8[], size: var) {
		   ^

0 [0x0]: line: 21 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1657] params(2) in file: lib/support/0.2.805//io//memory.sharp:28:4: note:  
		def realloc(data: _int16[], size: var) {
		   ^

0 [0x0]: line: 29 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1658] params(2) in file: lib/support/0.2.805//io//memory.sharp:36:4: note:  
		def realloc(data: _int32[], size: var) {
		   ^

0 [0x0]: line: 37 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1659] params(2) in file: lib/support/0.2.805//io//memory.sharp:44:4: note:  
		def realloc(data: _int64[], size: var) {
		   ^

0 [0x0]: line: 45 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1660] params(2) in file: lib/support/0.2.805//io//memory.sharp:52:4: note:  
		def realloc(data: _uint8[], size: var) {
		   ^

0 [0x0]: line: 53 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1661] params(2) in file: lib/support/0.2.805//io//memory.sharp:60:4: note:  
		def realloc(data: _uint16[], size: var) {
		   ^

0 [0x0]: line: 61 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1662] params(2) in file: lib/support/0.2.805//io//memory.sharp:68:4: note:  
		def realloc(data: _uint32[], size: var) {
		   ^

0 [0x0]: line: 69 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1663] params(2) in file: lib/support/0.2.805//io//memory.sharp:76:4: note:  
		def realloc(data: _uint64[], size: var) {
		   ^

0 [0x0]: line: 77 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[1664] params(5) in file: lib/support/0.2.805//io//memory.sharp:84:4: note:  
		def memcopy(src: object[], dest: object[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 85 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[1665] params(5) in file: lib/support/0.2.805//io//memory.sharp:95:4: note:  
		def memcopy(src: var[], dest: var[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 96 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[1666] params(5) in file: lib/support/0.2.805//io//memory.sharp:106:4: note:  
		def memcopy(src: _int8[], dest: _int8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 107 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1667] params(5) in file: lib/support/0.2.805//io//memory.sharp:117:4: note:  
		def memcopy(src: _int16[], dest: _int16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 118 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1668] params(5) in file: lib/support/0.2.805//io//memory.sharp:128:4: note:  
		def memcopy(src: _int32[], dest: _int32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 129 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1669] params(5) in file: lib/support/0.2.805//io//memory.sharp:139:4: note:  
		def memcopy(src: _int64[], dest: _int64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 140 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1670] params(5) in file: lib/support/0.2.805//io//memory.sharp:150:4: note:  
		def memcopy(src: _uint8[], dest: _uint8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 151 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1671] params(5) in file: lib/support/0.2.805//io//memory.sharp:161:4: note:  
		def memcopy(src: _uint16[], dest: _uint16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 162 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1672] params(5) in file: lib/support/0.2.805//io//memory.sharp:172:4: note:  
		def memcopy(src: _uint32[], dest: _uint32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 173 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1673] params(5) in file: lib/support/0.2.805//io//memory.sharp:183:4: note:  
		def memcopy(src: _uint64[], dest: _uint64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 184 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.copy[1674] params(3) in file: lib/support/0.2.805//io//memory.sharp:194:4: note:  
		def copy(src: object[], srcStart: var, srcEnd: var) : object[] {
		   ^

0 [0x0]: line: 195 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 204 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1675] params(3) in file: lib/support/0.2.805//io//memory.sharp:207:4: note:  
		def copy(src: var[], srcStart: var, srcEnd: var) : var[] {
		   ^

0 [0x0]: line: 208 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 217 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1676] params(3) in file: lib/support/0.2.805//io//memory.sharp:220:4: note:  
		def copy(src: _int8[], srcStart: var, srcEnd: var) : _int8[] {
		   ^

0 [0x0]: line: 221 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 230 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1677] params(3) in file: lib/support/0.2.805//io//memory.sharp:233:4: note:  
		def copy(src: _int16[], srcStart: var, srcEnd: var) : _int16[] {
		   ^

0 [0x0]: line: 234 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 243 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1678] params(3) in file: lib/support/0.2.805//io//memory.sharp:246:4: note:  
		def copy(src: _int32[], srcStart: var, srcEnd: var) : _int32[] {
		   ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 256 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1679] params(3) in file: lib/support/0.2.805//io//memory.sharp:259:4: note:  
		def copy(src: _uint8[], srcStart: var, srcEnd: var) : _uint8[] {
		   ^

0 [0x0]: line: 260 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 269 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1680] params(3) in file: lib/support/0.2.805//io//memory.sharp:272:4: note:  
		def copy(src: _uint16[], srcStart: var, srcEnd: var) : _uint16[] {
		   ^

0 [0x0]: line: 273 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 282 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1681] params(3) in file: lib/support/0.2.805//io//memory.sharp:285:4: note:  
		def copy(src: _uint32[], srcStart: var, srcEnd: var) : _uint32[] {
		   ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 295 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1682] params(3) in file: lib/support/0.2.805//io//memory.sharp:298:4: note:  
		def copy(src: _uint64[], srcStart: var, srcEnd: var) : _uint64[] {
		   ^

0 [0x0]: line: 299 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 308 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1683] params(3) in file: lib/support/0.2.805//io//memory.sharp:311:4: note:  
		def copy(src: _int64[], srcStart: var, srcEnd: var) : _int64[] {
		   ^

0 [0x0]: line: 312 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 321 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1684] params(3) in file: lib/support/0.2.805//io//memory.sharp:325:4: note:  
		def invert(src: object[], start: var, len: var) : object[] {
		   ^

0 [0x0]: line: 326 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 335 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1685] params(3) in file: lib/support/0.2.805//io//memory.sharp:338:4: note:  
		def invert(src: var[], start: var, len: var) : var[] {
		   ^

0 [0x0]: line: 339 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 348 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1686] params(3) in file: lib/support/0.2.805//io//memory.sharp:351:4: note:  
		def invert(src: _int8[], start: var, len: var) : _int8[] {
		   ^

0 [0x0]: line: 352 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 361 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1687] params(3) in file: lib/support/0.2.805//io//memory.sharp:364:4: note:  
		def invert(src: _int16[], start: var, len: var) : _int16[] {
		   ^

0 [0x0]: line: 365 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 374 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1688] params(3) in file: lib/support/0.2.805//io//memory.sharp:377:4: note:  
		def invert(src: _int32[], start: var, len: var) : _int32[] {
		   ^

0 [0x0]: line: 378 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 387 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1689] params(3) in file: lib/support/0.2.805//io//memory.sharp:390:4: note:  
		def invert(src: _int64[], start: var, len: var) : _int64[] {
		   ^

0 [0x0]: line: 391 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 400 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1690] params(3) in file: lib/support/0.2.805//io//memory.sharp:403:4: note:  
		def invert(src: _uint8[], start: var, len: var) : _uint8[] {
		   ^

0 [0x0]: line: 404 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 413 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1691] params(3) in file: lib/support/0.2.805//io//memory.sharp:416:4: note:  
		def invert(src: _uint16[], start: var, len: var) : _uint16[] {
		   ^

0 [0x0]: line: 417 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 426 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1692] params(3) in file: lib/support/0.2.805//io//memory.sharp:429:4: note:  
		def invert(src: _uint32[], start: var, len: var) : _uint32[] {
		   ^

0 [0x0]: line: 430 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 439 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1693] params(3) in file: lib/support/0.2.805//io//memory.sharp:442:4: note:  
		def invert(src: _uint64[], start: var, len: var) : _uint64[] {
		   ^

0 [0x0]: line: 443 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 452 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[1694] params(1) in file: lib/support/0.2.805//io//task//cancellation_exception.sharp:4:34: note:  
		    public cancellation_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1631 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[1695] params(1) in file: lib/support/0.2.805//io//task//cancellation_exception.sharp:5:34: note:  
		    public cancellation_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1632 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[1696] params(0) in file: lib/support/0.2.805//io//task//cancellation_exception.sharp:3:6: note:  
		class cancellation_exception base runtime_except {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1633 // <std#runtime_exception.runtime_exception>   
2 [0x2]:         ret   


constructor: std.io.task#job.job[1697] params(0) in file: lib/support/0.2.805//io//task//job.sharp:7:13: note:  
			private job() {}
		            ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #13   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #14   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movg @23 // @std.io.task#job_state   
57 [0x39]:         movn #0   
59 [0x3b]:         pushobj   
60 [0x3c]:         movl 0   
61 [0x3d]:         movn #15   
63 [0x3f]:         popobj   
64 [0x40]:         new_class @77 // std#list<std.io#thread>   
65 [0x41]:         dup    
66 [0x42]:         call @2950 // <std#list<std.io#thread>.list>   
67 [0x43]:         movl 0   
68 [0x44]:         movn #17   
70 [0x46]:         popobj   
71 [0x47]:         pushl 0   
72 [0x48]:         call @1835 // <std#_object_._object_>   
73 [0x49]:         ret   


constructor: std.io.task#job.job[1698] params(1) in file: lib/support/0.2.805//io//task//job.sharp:9:5: note:  
			job(name : string) {
		    ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #13   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #14   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movg @23 // @std.io.task#job_state   
57 [0x39]:         movn #0   
59 [0x3b]:         pushobj   
60 [0x3c]:         movl 0   
61 [0x3d]:         movn #15   
63 [0x3f]:         popobj   
64 [0x40]:         new_class @77 // std#list<std.io#thread>   
65 [0x41]:         dup    
66 [0x42]:         call @2950 // <std#list<std.io#thread>.list>   
67 [0x43]:         movl 0   
68 [0x44]:         movn #17   
70 [0x46]:         popobj   
71 [0x47]:         pushl 0   
72 [0x48]:         call @1835 // <std#_object_._object_>   
73 [0x49]: line: 10 pushl 1   
74 [0x4a]:          movl 0   
75 [0x4b]:          movn #5   
77 [0x4d]:          popobj   
78 [0x4e]: line: 11 movg @19 // @std.io.task#job   
79 [0x4f]:          movn #0   
81 [0x51]:          movi #0, adx   
83 [0x53]:          iaload ebx, adx   
84 [0x54]:          movr egx, ebx   
85 [0x55]:          inc ebx   
86 [0x56]:          movi #0, adx   
88 [0x58]:          rmov adx, ebx   
89 [0x59]:          rstore egx   
90 [0x5a]:          movl 0   
91 [0x5b]:          movn #11   
93 [0x5d]:          loadval ebx   
94 [0x5e]:          movi #0, adx   
96 [0x60]:          rmov adx, ebx   
97 [0x61]:          ret   


function: std.io.task#job.execute_async[1699] params(0) in file: lib/support/0.2.805//io//task//job.sharp:14:15: note:  
			protected def execute_async() : var {
		              ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          pushobj   
4 [0x4]:          movg @23 // @std.io.task#job_state   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @1603 // <std#_enum_.operator==>   
9 [0x9]:          loadval ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 53   
12 [0xc]: line: 16 pushl 0   
13 [0xd]:          movl 0   
14 [0xe]:          movn #16   
16 [0x10]:          movn #0   
18 [0x12]:          popobj   
19 [0x13]: line: 17 movl 0   
20 [0x14]:          movn #4   
22 [0x16]:          pushobj   
23 [0x17]:          call @1785 // <std.io#thread.is_active>   
24 [0x18]:          loadval ebx   
25 [0x19]:          movr cmt, ebx   
26 [0x1a]:          jne 34   
27 [0x1b]: line: 18 movl 0   
28 [0x1c]:          movn #4   
30 [0x1e]:          pushobj   
31 [0x1f]:          call @1761 // <std.io#thread.notify>   
32 [0x20]:          pop   
33 [0x21]:          jmp @51   
34 [0x22]: line: 20 movl 0   
35 [0x23]:          movn #4   
37 [0x25]:          pushobj   
38 [0x26]:          movi #1, ebx   
40 [0x28]:          newobj_arry ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #16   
44 [0x2c]:          pushobj   
45 [0x2d]:          movsl #-1   
46 [0x2e]:          movn #0   
48 [0x30]:          popobj   
49 [0x31]:          call @1758 // <std.io#thread.start>   
50 [0x32]:          pop   
51 [0x33]:          nop   
52 [0x34]:          jmp @69   
53 [0x35]:          movl 0   
54 [0x36]:          movn #15   
56 [0x38]:          pushobj   
57 [0x39]:          movg @23 // @std.io.task#job_state   
58 [0x3a]:          movn #1   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @1603 // <std#_enum_.operator==>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 69   
65 [0x41]: line: 23 movi #1, ebx   
67 [0x43]:          return_val ebx   
68 [0x44]:          ret   
69 [0x45]:          nop   
70 [0x46]: line: 26 movi #2, ebx   
72 [0x48]:          return_val ebx   
73 [0x49]:          ret   


function: std.io.task#job.cancel[1700] params(0) in file: lib/support/0.2.805//io//task//job.sharp:29:12: note:  
			public def cancel() {
		           ^

0 [0x0]: line: 30 movg @23 // @std.io.task#job_state   
1 [0x1]:          movn #3   
3 [0x3]:          pushobj   
4 [0x4]:          movl 0   
5 [0x5]:          movn #15   
7 [0x7]:          popobj   
8 [0x8]: line: 31 movl 0   
9 [0x9]:          movn #4   
11 [0xb]:          pushobj   
12 [0xc]:          call @1764 // <std.io#thread.interrupt>   
13 [0xd]:          pop   
14 [0xe]: line: 32 movg @17 // @std.io.task#__srt_global   
15 [0xf]:          movn #2   
17 [0x11]:          pushobj   
18 [0x12]:          pushl 0   
19 [0x13]:          call @1733 // <std.io.task#job_master.cleanup_job>   
20 [0x14]:          ret   


function: std.io.task#job.join[1701] params(0) in file: lib/support/0.2.805//io//task//job.sharp:35:12: note:  
			public def join() {
		           ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #13   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          skpe ebx // pc = 28   
7 [0x7]:          movl 0   
8 [0x8]:          movn #15   
10 [0xa]:          pushobj   
11 [0xb]:          movg @23 // @std.io.task#job_state   
12 [0xc]:          movn #3   
14 [0xe]:          pushobj   
15 [0xf]:          call @1603 // <std#_enum_.operator==>   
16 [0x10]:          loadval ebx   
17 [0x11]:          skpe ebx // pc = 28   
18 [0x12]:          movl 0   
19 [0x13]:          movn #15   
21 [0x15]:          pushobj   
22 [0x16]:          movg @23 // @std.io.task#job_state   
23 [0x17]:          movn #2   
25 [0x19]:          pushobj   
26 [0x1a]:          call @1603 // <std#_enum_.operator==>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 31   
30 [0x1e]: line: 39 ret   
31 [0x1f]:          nop   
32 [0x20]: line: 41 istorel 0, fp+1   
34 [0x22]: line: 42 movl 0   
35 [0x23]:          _lck    
36 [0x24]: line: 43 pushl 0   
37 [0x25]:          call @1711 // <std.io.task#job.is_finished>   
38 [0x26]:          loadval ebx   
39 [0x27]:          not ebx, ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 50   
42 [0x2a]: line: 44 istorel 1, fp+1   
44 [0x2c]: line: 45 movl 0   
45 [0x2d]:          movn #17   
47 [0x2f]:          pushobj   
48 [0x30]:          call @1765 // <std.io#thread.current>   
49 [0x31]:          call @2962 // <std#list<std.io#thread>.add>   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]: line: 49 loadl ebx, fp+1   
54 [0x36]:          movr cmt, ebx   
55 [0x37]:          jne 57   
56 [0x38]:          call @1767 // <std.io#thread.wait>   
57 [0x39]:          nop   
58 [0x3a]:          ret   


function: std.io.task#job.get_state[1702] params(0) in file: lib/support/0.2.805//io//task//job.sharp:52:12: note:  
			public def get_state() := state;
		           ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_name[1703] params(0) in file: lib/support/0.2.805//io//task//job.sharp:53:12: note:  
			public def get_name() := name;
		           ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #5   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_id[1704] params(0) in file: lib/support/0.2.805//io//task//job.sharp:54:12: note:  
			public def get_id() := id;
		           ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #11   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


overload function: std.io.task#job.operator=[1705] params(1) in file: lib/support/0.2.805//io//task//job.sharp:56:15: note:  
			protected def operator=(block: ()()) {
		              ^

0 [0x0]: line: 57 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: std.io.task#job.operator=[1706] params(1) in file: lib/support/0.2.805//io//task//job.sharp:60:15: note:  
			protected def operator=(block: (args : object[])()) {
		              ^

0 [0x0]: line: 61 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: std.io.task#job.operator=[1707] params(1) in file: lib/support/0.2.805//io//task//job.sharp:64:15: note:  
			protected def operator=(block: (deferred : object, args : object[])()) {
		              ^

0 [0x0]: line: 65 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: std.io.task#job.operator=[1708] params(1) in file: lib/support/0.2.805//io//task//job.sharp:68:15: note:  
			protected def operator=(block: (deferred : object)()) {
		              ^

0 [0x0]: line: 69 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #3   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std.io.task#job.job_main[1709] params(1) in file: lib/support/0.2.805//io//task//job.sharp:72:22: note:  
			protected static def job_main(args : object[]) : var {
		                     ^

0 [0x0]: line: 73 pushl 0   
1 [0x1]:          movi #0, ebx   
3 [0x3]:          popobj2    
4 [0x4]:          movr adx, ebx   
5 [0x5]:          chklen adx   
6 [0x6]:          movnd adx   
7 [0x7]:          movi #21, cmt   
9 [0x9]:          cast cmt   
10 [0xa]:          smovr_3 fp+1   
11 [0xb]: line: 75 movl 1   : try start: try block start
12 [0xc]: line: 76 movn #0   
14 [0xe]: line: 77 pushobj   
15 [0xf]:          call @1710 // <std.io.task#job.execute>   
16 [0x10]:          jmp @63   : try block end
17 [0x11]: line: 79 movg @23 // @std.io.task#job_state   : catch(std.io.task#cancellation_exception)
18 [0x12]:          movn #3   
20 [0x14]:          pushobj   
21 [0x15]:          movl 1   
22 [0x16]:          movn #0   
24 [0x18]:          movn #15   
26 [0x1a]:          popobj   
27 [0x1b]: line: 80 movg @17 // @std.io.task#__srt_global   
28 [0x1c]:          movn #2   
30 [0x1e]:          pushobj   
31 [0x1f]:          movl 1   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          call @1733 // <std.io.task#job_master.cleanup_job>   
36 [0x24]:          jmp @63   
37 [0x25]: line: 82 movg @23 // @std.io.task#job_state   : catch(std#exception)
38 [0x26]:          movn #3   
40 [0x28]:          pushobj   
41 [0x29]:          movl 1   
42 [0x2a]:          movn #0   
44 [0x2c]:          movn #15   
46 [0x2e]:          popobj   
47 [0x2f]: line: 83 movg @17 // @std.io.task#__srt_global   
48 [0x30]:          movn #2   
50 [0x32]:          pushobj   
51 [0x33]:          movl 1   
52 [0x34]:          movn #0   
54 [0x36]:          pushobj   
55 [0x37]:          call @1733 // <std.io.task#job_master.cleanup_job>   
56 [0x38]: line: 84 movl 1   
57 [0x39]:          movn #0   
59 [0x3b]:          del   
60 [0x3c]: line: 85 pushl 2   
61 [0x3d]:          throw    
62 [0x3e]:          jmp @63   
63 [0x3f]:          nop   : try end
64 [0x40]: line: 88 movl 1   
65 [0x41]:          movn #0   
67 [0x43]:          del   
68 [0x44]: line: 89 call @1767 // <std.io#thread.wait>   
69 [0x45]:          jmp @11   
70 [0x46]: line: 92 movi #0, ebx   
72 [0x48]:          return_val ebx   
73 [0x49]:          ret   


function: std.io.task#job.execute[1710] params(0) in file: lib/support/0.2.805//io//task//job.sharp:95:15: note:  
			protected def execute() {
		              ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #8   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 25   
8 [0x8]:          call @2912 // <std#time.mills_time>   
9 [0x9]:          loadval ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #9   
14 [0xe]:          movi #0, adx   
16 [0x10]:          iaload ebx, adx   
17 [0x11]:          loadval ecx   
18 [0x12]:          add ecx, ebx -> ebx   
19 [0x13]:          movl 0   
20 [0x14]:          movn #9   
22 [0x16]:          movi #0, adx   
24 [0x18]:          rmov adx, ebx   
25 [0x19]:          nop   
26 [0x1a]: line: 97 movg @23 // @std.io.task#job_state   
27 [0x1b]:          movn #1   
29 [0x1d]:          pushobj   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #15   
33 [0x21]:          popobj   
34 [0x22]: line: 98 movl 0   
35 [0x23]:          movn #12   
37 [0x25]:          movi #0, adx   
39 [0x27]:          iaload ebx, adx   
40 [0x28]:          rstore ebx   
41 [0x29]:          movi #0, ebx   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          gt ecx, ebx   
45 [0x2d]:          jne 57   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #12   
49 [0x31]:          movi #0, adx   
51 [0x33]:          iaload ebx, adx   
52 [0x34]:          movr egx, ebx   
53 [0x35]:          dec ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]:          nop   
58 [0x3a]: line: 100 movl 0   
59 [0x3b]: line: 101 movn #0   
61 [0x3d]:           movi #0, adx   
63 [0x3f]:           iaload ebx, adx   
64 [0x40]:           movr cmt, ebx   
65 [0x41]:           jne 76   
66 [0x42]: line: 102 movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           loadval ebx   
74 [0x4a]:           calld ebx   
75 [0x4b]:           jmp @145   
76 [0x4c]:           movl 0   
77 [0x4d]:           movn #1   
79 [0x4f]:           movi #0, adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           movr cmt, ebx   
83 [0x53]:           jne 98   
84 [0x54]: line: 103 movl 0   
85 [0x55]:           movn #1   
87 [0x57]:           movi #0, adx   
89 [0x59]:           iaload ebx, adx   
90 [0x5a]:           rstore ebx   
91 [0x5b]:           movl 0   
92 [0x5c]:           movn #6   
94 [0x5e]:           pushobj   
95 [0x5f]:           smov ebx, sp+[-1]   
96 [0x60]:           calld ebx   
97 [0x61]:           jmp @145   
98 [0x62]:           movl 0   
99 [0x63]:           movn #2   
101 [0x65]:           movi #0, adx   
103 [0x67]:           iaload ebx, adx   
104 [0x68]:           movr cmt, ebx   
105 [0x69]:           jne 124   
106 [0x6a]: line: 104 movl 0   
107 [0x6b]:           movn #2   
109 [0x6d]:           movi #0, adx   
111 [0x6f]:           iaload ebx, adx   
112 [0x70]:           rstore ebx   
113 [0x71]:           movl 0   
114 [0x72]:           movn #7   
116 [0x74]:           pushobj   
117 [0x75]:           movl 0   
118 [0x76]:           movn #6   
120 [0x78]:           pushobj   
121 [0x79]:           smov ebx, sp+[-2]   
122 [0x7a]:           calld ebx   
123 [0x7b]:           jmp @145   
124 [0x7c]:           movl 0   
125 [0x7d]:           movn #3   
127 [0x7f]:           movi #0, adx   
129 [0x81]:           iaload ebx, adx   
130 [0x82]:           movr cmt, ebx   
131 [0x83]:           jne 145   
132 [0x84]: line: 105 movl 0   
133 [0x85]:           movn #3   
135 [0x87]:           movi #0, adx   
137 [0x89]:           iaload ebx, adx   
138 [0x8a]:           rstore ebx   
139 [0x8b]:           movl 0   
140 [0x8c]:           movn #7   
142 [0x8e]:           pushobj   
143 [0x8f]:           smov ebx, sp+[-1]   
144 [0x90]:           calld ebx   
145 [0x91]:           nop   
146 [0x92]: line: 108 movl 0   
147 [0x93]:           movn #12   
149 [0x95]:           movi #0, adx   
151 [0x97]:           iaload ebx, adx   
152 [0x98]:           rstore ebx   
153 [0x99]:           movi #0, ebx   
155 [0x9b]:           loadval ecx   
156 [0x9c]:           gt ecx, ebx   
157 [0x9d]:           jne 170   
158 [0x9e]: line: 109 movl 0   
159 [0x9f]:           movn #12   
161 [0xa1]:           movi #0, adx   
163 [0xa3]:           iaload ebx, adx   
164 [0xa4]:           movr egx, ebx   
165 [0xa5]:           dec ebx   
166 [0xa6]:           movi #0, adx   
168 [0xa8]:           rmov adx, ebx   
169 [0xa9]: line: 110 jmp @58   
170 [0xaa]:           nop   
171 [0xab]: line: 113 movg @23 // @std.io.task#job_state   
172 [0xac]:           movn #2   
174 [0xae]:           pushobj   
175 [0xaf]:           movl 0   
176 [0xb0]:           movn #15   
178 [0xb2]:           popobj   
179 [0xb3]: line: 114 movg @17 // @std.io.task#__srt_global   
180 [0xb4]:           movn #2   
182 [0xb6]:           pushobj   
183 [0xb7]:           pushl 0   
184 [0xb8]:           call @1733 // <std.io.task#job_master.cleanup_job>   
185 [0xb9]:           ret   


function: std.io.task#job.is_finished[1711] params(0) in file: lib/support/0.2.805//io//task//job.sharp:117:8: note:  
		    def is_finished() := state == completed || state == cancelled;
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #15   
3 [0x3]:           pushobj   
4 [0x4]:           movg @23 // @std.io.task#job_state   
5 [0x5]:           movn #2   
7 [0x7]:           pushobj   
8 [0x8]:           call @1603 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           skpe ebx // pc = 21   
11 [0xb]:           movl 0   
12 [0xc]:           movn #15   
14 [0xe]:           pushobj   
15 [0xf]:           movg @23 // @std.io.task#job_state   
16 [0x10]:           movn #3   
18 [0x12]:           pushobj   
19 [0x13]:           call @1603 // <std#_enum_.operator==>   
20 [0x14]:           loadval ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


constructor: std.io.task#job_builder.job_builder[1712] params(0) in file: lib/support/0.2.805//io//task//job_builder.sharp:6:21: note:  
			private job_builder() {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.io.task#job_builder.job_builder[1713] params(2) in file: lib/support/0.2.805//io//task//job_builder.sharp:8:23: note:  
			protected job_builder(scheduled_job : job, master : job_master) {
		                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 9 pushl 1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #1   
6 [0x6]:         popobj   
7 [0x7]: line: 10 pushl 2   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          popobj   
12 [0xc]:          ret   


function: std.io.task#job_builder.with_timeout[1714] params(1) in file: lib/support/0.2.805//io//task//job_builder.sharp:13:5: note:  
			def with_timeout(mills_time : var) : job_builder {
		    ^

0 [0x0]: line: 14 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #13   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 15   
10 [0xa]: line: 15 new_class @6 // std#illegal_state_exception   
11 [0xb]:          dup    
12 [0xc]:          newstr @4 // cannot set a timeout on a job that's blocking the calling thread   
13 [0xd]:          call @1619 // <std#illegal_state_exception.illegal_state_exception>   
14 [0xe]:          throw    
15 [0xf]:          nop   
16 [0x10]: line: 18 ipushl #1   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          movn #9   
22 [0x16]:          loadval ebx   
23 [0x17]:          movi #0, adx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 19 istore 1   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          movn #8   
33 [0x21]:          loadval ebx   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]: line: 20 movl 0   
38 [0x26]:          returnobj   
39 [0x27]:          ret   


function: std.io.task#job_builder.schedule[1715] params(1) in file: lib/support/0.2.805//io//task//job_builder.sharp:23:5: note:  
			def schedule(future : var) : job_builder {
		    ^

0 [0x0]: line: 24 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #10   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 25 movl 0   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io.task#job_builder.repeat[1716] params(1) in file: lib/support/0.2.805//io//task//job_builder.sharp:28:5: note:  
			def repeat(count : var) : job_builder {
		    ^

0 [0x0]: line: 29 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #12   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 30 movl 0   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io.task#job_builder.with_name[1717] params(1) in file: lib/support/0.2.805//io//task//job_builder.sharp:33:5: note:  
			def with_name(job_name : string) : job_builder {
		    ^

0 [0x0]: line: 34 pushl 1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #5   
6 [0x6]:          popobj   
7 [0x7]: line: 35 movl 0   
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: std.io.task#job_builder.with_args[1718] params(1) in file: lib/support/0.2.805//io//task//job_builder.sharp:38:5: note:  
			def with_args(args : object[]) : job_builder {
		    ^

0 [0x0]: line: 39 pushl 1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #6   
6 [0x6]:          popobj   
7 [0x7]: line: 40 movl 0   
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: std.io.task#job_builder.block[1719] params(0) in file: lib/support/0.2.805//io//task//job_builder.sharp:43:5: note:  
			def block() : job_builder {
		    ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #8   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 15   
10 [0xa]: line: 45 new_class @6 // std#illegal_state_exception   
11 [0xb]:          dup    
12 [0xc]:          newstr @5 // cannot block calling thread on job that has a timeout   
13 [0xd]:          call @1619 // <std#illegal_state_exception.illegal_state_exception>   
14 [0xe]:          throw    
15 [0xf]:          nop   
16 [0x10]: line: 48 istore 1   
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          movn #13   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]: line: 49 movl 0   
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   


function: std.io.task#job_builder.long_term[1720] params(0) in file: lib/support/0.2.805//io//task//job_builder.sharp:52:5: note:  
			def long_term() : job_builder {
		    ^

0 [0x0]: line: 53 istore 1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          movn #14   
7 [0x7]:          loadval ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]: line: 54 movl 0   
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std.io.task#job_builder.operator=[1721] params(1) in file: lib/support/0.2.805//io//task//job_builder.sharp:57:12: note:  
			public def operator=(main: ()()) : job {
		           ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @1705 // <std.io.task#job.operator=>   
6 [0x6]: line: 59 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @1731 // <std.io.task#job_master.start_job>   
15 [0xf]: line: 60 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: std.io.task#job_builder.operator=[1722] params(1) in file: lib/support/0.2.805//io//task//job_builder.sharp:63:12: note:  
			public def operator=(main: (args : object[])()) : job {
		           ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @1706 // <std.io.task#job.operator=>   
6 [0x6]: line: 65 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @1731 // <std.io.task#job_master.start_job>   
15 [0xf]: line: 66 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: std.io.task#job_builder.operator=[1723] params(1) in file: lib/support/0.2.805//io//task//job_builder.sharp:69:18: note:  
		    protected def operator=(main: (deferred : object, args : object[])()) : job {
		                 ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @1707 // <std.io.task#job.operator=>   
6 [0x6]: line: 71 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @1731 // <std.io.task#job_master.start_job>   
15 [0xf]: line: 72 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: std.io.task#job_builder.operator=[1724] params(1) in file: lib/support/0.2.805//io//task//job_builder.sharp:75:18: note:  
		    protected def operator=(main: (deferred : object)()) : job {
		                 ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @1708 // <std.io.task#job.operator=>   
6 [0x6]: line: 77 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @1731 // <std.io.task#job_master.start_job>   
15 [0xf]: line: 78 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


function: std.io.task#job_builder.get_job[1725] params(0) in file: lib/support/0.2.805//io//task//job_builder.sharp:81:12: note:  
			public def get_job() := scheduled_job;
		           ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


constructor: std.io.task#job_controller.job_controller[1726] params(0) in file: lib/support/0.2.805//io//task//job_controller.sharp:5:6: note:  
		class job_controller {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.io.task#job_master.job_master[1727] params(0) in file: lib/support/0.2.805//io//task//job_master.sharp:7:12: note:  
			job_master() {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 8 new_class @26 // std.io#thread_group   
3 [0x3]:         dup    
4 [0x4]:         new_class @58 // std#string   
5 [0x5]:         dup    
6 [0x6]:         newstr @6 // Long term jobs   
7 [0x7]:         call @2823 // <std#string.string>   
8 [0x8]:         movg @27 // @std.io#thread_priority   
9 [0x9]:         movn #0   
11 [0xb]:         pushobj   
12 [0xc]:         call @1790 // <std.io#thread_group.thread_group>   
13 [0xd]:         movl 0   
14 [0xe]:         movn #2   
16 [0x10]:         popobj   
17 [0x11]: line: 9 new_class @26 // std.io#thread_group   
18 [0x12]:         dup    
19 [0x13]:         new_class @58 // std#string   
20 [0x14]:         dup    
21 [0x15]:         newstr @7 // Short term jobs   
22 [0x16]:         call @2823 // <std#string.string>   
23 [0x17]:         movg @27 // @std.io#thread_priority   
24 [0x18]:         movn #2   
26 [0x1a]:         pushobj   
27 [0x1b]:         call @1790 // <std.io#thread_group.thread_group>   
28 [0x1c]:         movl 0   
29 [0x1d]:         movn #3   
31 [0x1f]:         popobj   
32 [0x20]: line: 10 new_class @78 // std#synced_list<std.io.task#job>   
33 [0x21]:          dup    
34 [0x22]:          call @2974 // <std#synced_list<std.io.task#job>.synced_list>   
35 [0x23]:          movl 0   
36 [0x24]:          movn #0   
38 [0x26]:          popobj   
39 [0x27]: line: 11 new_class @73 // std#hashmap<std.io#thread,std.io.task#job_controller>   
40 [0x28]:          dup    
41 [0x29]:          call @2923 // <std#hashmap<std.io#thread,std.io.task#job_controller>.hashmap>   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          ret   


overload function: std.io.task#job_master.operator=[1728] params(1) in file: lib/support/0.2.805//io//task//job_master.sharp:14:5: note:  
			def operator=(main: ()()) : job {
		    ^

0 [0x0]: line: 15 pushl 0   
1 [0x1]:          call @1729 // <std.io.task#job_master.create_job>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 16 pushl 2   
5 [0x5]:          ipushl #1   
6 [0x6]:          call @1705 // <std.io.task#job.operator=>   
7 [0x7]: line: 17 pushl 0   
8 [0x8]:          pushl 2   
9 [0x9]:          call @1731 // <std.io.task#job_master.start_job>   
10 [0xa]: line: 18 movl 2   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io.task#job_master.create_job[1729] params(0) in file: lib/support/0.2.805//io//task//job_master.sharp:21:15: note:  
			protected def create_job() := new job("job#${job.guid}");
		              ^

0 [0x0]: line: 21 new_class @19 // std.io.task#job   
1 [0x1]:          dup    
2 [0x2]:          new_class @58 // std#string   
3 [0x3]:          dup    
4 [0x4]:          newstr @0 // job#   
5 [0x5]:          call @2823 // <std#string.string>   
6 [0x6]:          movg @19 // @std.io.task#job   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2853 // <std#string.operator+>   
14 [0xe]:          call @1698 // <std.io.task#job.job>   
15 [0xf]:          movsl #0   
16 [0x10]:          returnobj   
17 [0x11]:          ret   


function: std.io.task#job_master.create_job[1730] params(1) in file: lib/support/0.2.805//io//task//job_master.sharp:23:15: note:  
			protected def create_job(name : string) := new job(name);
		              ^

0 [0x0]: line: 23 new_class @19 // std.io.task#job   
1 [0x1]:          dup    
2 [0x2]:          pushl 1   
3 [0x3]:          call @1698 // <std.io.task#job.job>   
4 [0x4]:          movsl #0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std.io.task#job_master.start_job[1731] params(1) in file: lib/support/0.2.805//io//task//job_master.sharp:25:15: note:  
			protected def start_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 27 movl 0   
3 [0x3]:          movn #4   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          not ebx, ebx   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 20   
11 [0xb]: line: 28 call @1734 // <std.io.task#__srt_global.start_scheduler>   
12 [0xc]: line: 29 movi #1, ebx   
14 [0xe]:          movl 0   
15 [0xf]:          movn #4   
17 [0x11]:          movi #0, adx   
19 [0x13]:          rmov adx, ebx   
20 [0x14]:          nop   
21 [0x15]:          movl 0   
22 [0x16]:          _ulck   
23 [0x17]: line: 33 movl 1   
24 [0x18]:          movn #10   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 48   
31 [0x1f]: line: 34 movl 1   
32 [0x20]:          movn #10   
34 [0x22]:          movi #0, adx   
36 [0x24]:          iaload ebx, adx   
37 [0x25]:          rstore ebx   
38 [0x26]:          call @2912 // <std#time.mills_time>   
39 [0x27]:          loadval ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          movl 1   
43 [0x2b]:          movn #10   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]:          nop   
49 [0x31]: line: 36 movl 1   
50 [0x32]:          movn #13   
52 [0x34]:          movi #0, adx   
54 [0x36]:          iaload ebx, adx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 60   
57 [0x39]: line: 37 pushl 1   
58 [0x3a]:          call @1738 // <std.io.task#__srt_global.execute_synchronous>   
59 [0x3b]:          jmp @66   
60 [0x3c]: line: 40 movl 0   
61 [0x3d]:          movn #0   
63 [0x3f]:          pushobj   
64 [0x40]:          pushl 1   
65 [0x41]:          call @3007 // <std#synced_list<std.io.task#job>.add>   
66 [0x42]:          nop   
67 [0x43]:          ret   


function: std.io.task#job_master.get_host_controller[1732] params(1) in file: lib/support/0.2.805//io//task//job_master.sharp:44:15: note:  
			protected def get_host_controller(host: thread) := controllers.at(host);
		              ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 1   
5 [0x5]:          call @2927 // <std#hashmap<std.io#thread,std.io.task#job_controller>.at>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std.io.task#job_master.cleanup_job[1733] params(1) in file: lib/support/0.2.805//io//task//job_master.sharp:46:15: note:  
			protected def cleanup_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 47 movl 1   
1 [0x1]:          movn #7   
3 [0x3]:          del   
4 [0x4]: line: 48 movl 1   
5 [0x5]:          movn #4   
7 [0x7]:          del   
8 [0x8]: line: 50 movl 1   
9 [0x9]: line: 51 _lck    
10 [0xa]: line: 52 movl 1   
11 [0xb]:          movn #17   
13 [0xd]:          pushobj   
14 [0xe]:          call @2952 // <std#list<std.io#thread>.empty>   
15 [0xf]:          loadval ebx   
16 [0x10]:          not ebx, ebx   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 42   
19 [0x13]: line: 53 istorel -1, fp+3   
21 [0x15]:          movl 1   
22 [0x16]:          movn #17   
24 [0x18]:          pushobj   
25 [0x19]:          invoke_delegate 8 { static=0, args=0 }   
27 [0x1b]:          popl 4   
28 [0x1c]:          iaddl 1, fp@3   
30 [0x1e]:          movl 4   
31 [0x1f]:          sizeof ecx   
32 [0x20]:          loadl ebx, fp+3   
33 [0x21]:          lt ebx, ecx   
34 [0x22]:          jne 42   
35 [0x23]:          movnd ebx   
36 [0x24]:          pushobj   
37 [0x25]:          popl 2   
38 [0x26]: line: 54 pushl 2   
39 [0x27]:          call @1762 // <std.io#thread.wait_and_notify>   
40 [0x28]:          pop   
41 [0x29]:          jmp @28   
42 [0x2a]:          nop   
43 [0x2b]: line: 58 movl 1   
44 [0x2c]:          movn #17   
46 [0x2e]:          pushobj   
47 [0x2f]:          call @2960 // <std#list<std.io#thread>.clear>   
48 [0x30]:          movl 1   
49 [0x31]:          _ulck   
50 [0x32]: line: 61 movl 1   
51 [0x33]:          _lck    
52 [0x34]: line: 62 movl 1   
53 [0x35]:          movn #17   
55 [0x37]:          pushobj   
56 [0x38]:          call @2952 // <std#list<std.io#thread>.empty>   
57 [0x39]:          loadval ebx   
58 [0x3a]:          not ebx, ebx   
59 [0x3b]:          movr cmt, ebx   
60 [0x3c]:          jne 64   
61 [0x3d]: line: 63 movl 1   
62 [0x3e]:          _ulck   
63 [0x3f]:          jmp @8   
64 [0x40]:          nop   
65 [0x41]:          movl 1   
66 [0x42]:          _ulck   
67 [0x43]: line: 67 movl 0   
68 [0x44]:          movn #0   
70 [0x46]:          pushobj   
71 [0x47]:          pushl 1   
72 [0x48]:          istore 3091   
74 [0x4a]:          call @3014 // <std#synced_list<std.io.task#job>.remove>   
75 [0x4b]:          ret   


function: std.io.task#__srt_global.start_scheduler[1734] params(0) in file: lib/support/0.2.805//io//task//job_scheduler.sharp:10:4: note:  
		def start_scheduler() {
		   ^

0 [0x0]: line: 11 call @1735 // <std.io.task#__srt_global.calculate_max_threads>   
1 [0x1]: line: 12 new_class @25 // std.io#thread   
2 [0x2]:          dup    
3 [0x3]:          new_class @58 // std#string   
4 [0x4]:          dup    
5 [0x5]:          newstr @8 // task_scheduler   
6 [0x6]:          call @2823 // <std#string.string>   
7 [0x7]:          istore 1736   
9 [0x9]:          movg @17 // @std.io.task#__srt_global   
10 [0xa]:          movn #2   
12 [0xc]:          movn #2   
14 [0xe]:          pushobj   
15 [0xf]:          call @1756 // <std.io#thread.thread>   
16 [0x10]:          movsl #0   
17 [0x11]:          smovr_3 fp+0   
18 [0x12]: line: 13 pushl 0   
19 [0x13]:          pushnull    
20 [0x14]:          call @1758 // <std.io#thread.start>   
21 [0x15]:          pop   
22 [0x16]:          ret   


function: std.io.task#__srt_global.calculate_max_threads[1735] params(0) in file: lib/support/0.2.805//io//task//job_scheduler.sharp:16:4: note:  
		def calculate_max_threads() {
		   ^

0 [0x0]: line: 17 call @1859 // <platform.kernel#vm.cores>   
1 [0x1]:          ipopl 0   
2 [0x2]: line: 18 movi #2, ebx   
4 [0x4]:          mull ebx, fp@0   
5 [0x5]: line: 19 movi #4, ebx   
7 [0x7]:          subl ebx, fp@0   
8 [0x8]: line: 21 ipushl #0   
9 [0x9]:          movi #2, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gt ecx, ebx   
13 [0xd]:          jne 40   
14 [0xe]: line: 22 ipushl #0   
15 [0xf]:          ldc ebx // 0.75   
16 [0x10]:          loadval ecx   
17 [0x11]:          mul ecx, ebx -> ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          call @1827 // <std.math#__srt_global.round>   
20 [0x14]:          movg @17 // @std.io.task#__srt_global   
21 [0x15]:          movn #0   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]: line: 23 ipushl #0   
28 [0x1c]:          ldc ebx // 0.25   
29 [0x1d]:          loadval ecx   
30 [0x1e]:          mul ecx, ebx -> ebx   
31 [0x1f]:          rstore ebx   
32 [0x20]:          call @1827 // <std.math#__srt_global.round>   
33 [0x21]:          movg @17 // @std.io.task#__srt_global   
34 [0x22]:          movn #1   
36 [0x24]:          loadval ebx   
37 [0x25]:          movi #0, adx   
39 [0x27]:          rmov adx, ebx   
40 [0x28]:          nop   
41 [0x29]: line: 26 movg @17 // @std.io.task#__srt_global   
42 [0x2a]:          movn #0   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          iaload ebx, adx   
47 [0x2f]:          rstore ebx   
48 [0x30]:          movi #0, ebx   
50 [0x32]:          loadval ecx   
51 [0x33]:          test ecx, ebx   
52 [0x34]:          jne 62   
53 [0x35]: line: 27 istore 1   
55 [0x37]:          movg @17 // @std.io.task#__srt_global   
56 [0x38]:          movn #0   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          rmov adx, ebx   
62 [0x3e]:          nop   
63 [0x3f]: line: 29 movg @17 // @std.io.task#__srt_global   
64 [0x40]:          movn #1   
66 [0x42]:          movi #0, adx   
68 [0x44]:          iaload ebx, adx   
69 [0x45]:          rstore ebx   
70 [0x46]:          movi #0, ebx   
72 [0x48]:          loadval ecx   
73 [0x49]:          test ecx, ebx   
74 [0x4a]:          jne 84   
75 [0x4b]: line: 30 istore 1   
77 [0x4d]:          movg @17 // @std.io.task#__srt_global   
78 [0x4e]:          movn #1   
80 [0x50]:          loadval ebx   
81 [0x51]:          movi #0, adx   
83 [0x53]:          rmov adx, ebx   
84 [0x54]:          nop   
85 [0x55]:          ret   


function: std.io.task#__srt_global.scheduler_main[1736] params(1) in file: lib/support/0.2.805//io//task//job_scheduler.sharp:33:4: note:  
		def scheduler_main(args : object[]) : var
		   ^

0 [0x0]: line: 35 movg @17 // @std.io.task#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          movn #0   
5 [0x5]:          smovr_3 fp+1   
6 [0x6]: line: 36 movi #1, ebx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 174   
10 [0xa]: line: 38 pushl 1   
11 [0xb]:          call @3011 // <std#synced_list<std.io.task#job>.empty>   
12 [0xc]:          loadval ebx   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 17   
15 [0xf]: line: 39 call @1771 // <std.io#thread.yield>   
16 [0x10]:          jmp @169   
17 [0x11]: line: 41 pushl 1   
18 [0x12]: line: 42 call @3010 // <std#synced_list<std.io.task#job>.size>   
19 [0x13]:          ipopl 2   
20 [0x14]: line: 43 istorel 0, fp+3   
22 [0x16]:          ipushl #3   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          loadval ecx   
25 [0x19]:          lt ecx, ebx   
26 [0x1a]:          jne 169   
27 [0x1b]: line: 44 pushl 1   
28 [0x1c]:          ipushl #3   
29 [0x1d]:          call @2979 // <std#synced_list<std.io.task#job>.at>   
30 [0x1e]:          popobj2    
31 [0x1f]:          smovr_3 fp+4   
32 [0x20]: line: 46 movl 4   
33 [0x21]:          movn #10   
35 [0x23]:          movi #0, adx   
37 [0x25]:          iaload ebx, adx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movi #0, ebx   
41 [0x29]:          loadval ecx   
42 [0x2a]:          tne ecx, ebx   
43 [0x2b]:          jne 90   
44 [0x2c]: line: 47 call @2912 // <std#time.mills_time>   
45 [0x2d]:          loadval ebx   
46 [0x2e]:          rstore ebx   
47 [0x2f]:          movl 4   
48 [0x30]:          movn #10   
50 [0x32]:          movi #0, adx   
52 [0x34]:          iaload ebx, adx   
53 [0x35]:          loadval ecx   
54 [0x36]:          gte ecx, ebx   
55 [0x37]:          jne 88   
56 [0x38]: line: 48 movi #0, ebx   
58 [0x3a]:          movl 4   
59 [0x3b]:          movn #10   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]: line: 49 pushl 4   
65 [0x41]:          call @1739 // <std.io.task#__srt_global.execute_job>   
66 [0x42]:          pop   
67 [0x43]: line: 51 movl 4   
68 [0x44]:          movn #8   
70 [0x46]:          movi #0, adx   
72 [0x48]:          iaload ebx, adx   
73 [0x49]:          not ebx, ebx   
74 [0x4a]:          movr cmt, ebx   
75 [0x4b]:          jne 87   
76 [0x4c]: line: 52 pushl 1   
77 [0x4d]:          ipushl #3   
78 [0x4e]:          call @3015 // <std#synced_list<std.io.task#job>.remove_at>   
79 [0x4f]: line: 53 loadl ebx, fp+3   
80 [0x50]:          movr egx, ebx   
81 [0x51]:          dec ebx   
82 [0x52]:          smovr_2 ebx, fp+3   
83 [0x53]:          loadl ebx, fp+2   
84 [0x54]:          movr egx, ebx   
85 [0x55]:          dec ebx   
86 [0x56]:          smovr_2 ebx, fp+2   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          jmp @165   
90 [0x5a]:          movl 4   
91 [0x5b]:          movn #8   
93 [0x5d]:          movi #0, adx   
95 [0x5f]:          iaload ebx, adx   
96 [0x60]:          movr cmt, ebx   
97 [0x61]:          jne 148   
98 [0x62]: line: 57 movl 4   
99 [0x63]:          movn #4   
101 [0x65]:          pushobj   
102 [0x66]:          pushnull    
103 [0x67]:          itest ebx   
104 [0x68]:          movr cmt, ebx   
105 [0x69]:          jne 109   
106 [0x6a]: line: 58 pushl 4   
107 [0x6b]:          call @1739 // <std.io.task#__srt_global.execute_job>   
108 [0x6c]:          pop   
109 [0x6d]:          nop   
110 [0x6e]: line: 61 movl 4   
111 [0x6f]:          movn #15   
113 [0x71]:          pushobj   
114 [0x72]:          movg @23 // @std.io.task#job_state   
115 [0x73]:          movn #1   
117 [0x75]:          pushobj   
118 [0x76]:          call @1603 // <std#_enum_.operator==>   
119 [0x77]:          loadval ebx   
120 [0x78]:          skne ebx // pc = 131   
121 [0x79]:          call @2912 // <std#time.mills_time>   
122 [0x7a]:          loadval ebx   
123 [0x7b]:          rstore ebx   
124 [0x7c]:          movl 4   
125 [0x7d]:          movn #9   
127 [0x7f]:          movi #0, adx   
129 [0x81]:          iaload ebx, adx   
130 [0x82]:          loadval ecx   
131 [0x83]:          gte ecx, ebx   
132 [0x84]:          jne 146   
133 [0x85]: line: 62 pushl 4   
134 [0x86]:          call @1700 // <std.io.task#job.cancel>   
135 [0x87]: line: 63 pushl 1   
136 [0x88]:          ipushl #3   
137 [0x89]:          call @3015 // <std#synced_list<std.io.task#job>.remove_at>   
138 [0x8a]:          loadl ebx, fp+3   
139 [0x8b]:          movr egx, ebx   
140 [0x8c]:          dec ebx   
141 [0x8d]:          smovr_2 ebx, fp+3   
142 [0x8e]:          loadl ebx, fp+2   
143 [0x8f]:          movr egx, ebx   
144 [0x90]:          dec ebx   
145 [0x91]:          smovr_2 ebx, fp+2   
146 [0x92]:          nop   
147 [0x93]:          jmp @165   
148 [0x94]: line: 66 pushl 4   
149 [0x95]:          call @1739 // <std.io.task#__srt_global.execute_job>   
150 [0x96]:          loadval ebx   
151 [0x97]:          movr cmt, ebx   
152 [0x98]:          jne 164   
153 [0x99]: line: 67 pushl 1   
154 [0x9a]:          ipushl #3   
155 [0x9b]:          call @3015 // <std#synced_list<std.io.task#job>.remove_at>   
156 [0x9c]:          loadl ebx, fp+3   
157 [0x9d]:          movr egx, ebx   
158 [0x9e]:          dec ebx   
159 [0x9f]:          smovr_2 ebx, fp+3   
160 [0xa0]:          loadl ebx, fp+2   
161 [0xa1]:          movr egx, ebx   
162 [0xa2]:          dec ebx   
163 [0xa3]:          smovr_2 ebx, fp+2   
164 [0xa4]:          nop   
165 [0xa5]:          nop   
166 [0xa6]:          iaddl 1, fp@3   
168 [0xa8]:          jmp @22   
169 [0xa9]:          nop   
170 [0xaa]: line: 73 istore 5   
172 [0xac]:          call @1766 // <std.io#thread.sleep>   
173 [0xad]:          jmp @6   
174 [0xae]: line: 75 movi #0, ebx   
176 [0xb0]:          return_val ebx   
177 [0xb1]:          ret   


function: std.io.task#__srt_global.get_host[1737] params(1) in file: lib/support/0.2.805//io//task//job_scheduler.sharp:78:4: note:  
		def get_host(long_running : var) : thread {
		   ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          del   
2 [0x2]: line: 80 loadl ebx, fp+0   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 12   
5 [0x5]: line: 81 movg @17 // @std.io.task#__srt_global   
6 [0x6]:          movn #2   
8 [0x8]:          movn #2   
10 [0xa]:          smovr_3 fp+1   
11 [0xb]:          jmp @18   
12 [0xc]: line: 83 movg @17 // @std.io.task#__srt_global   
13 [0xd]:          movn #2   
15 [0xf]:          movn #3   
17 [0x11]:          smovr_3 fp+1   
18 [0x12]:          nop   
19 [0x13]: line: 86 pushl 1   
20 [0x14]:          istore 3092   
22 [0x16]:          call @1798 // <std.io#thread_group.find>   
23 [0x17]:          popobj2    
24 [0x18]:          smovr_3 fp+2   
25 [0x19]: line: 92 movl 2   
26 [0x1a]:          checknull   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 156   
29 [0x1d]: line: 93 loadl ebx, fp+0   
30 [0x1e]:          movr cmt, ebx   
31 [0x1f]:          jne 94   
32 [0x20]: line: 94 movg @17 // @std.io.task#__srt_global   
33 [0x21]:          movn #1   
35 [0x23]:          movi #0, adx   
37 [0x25]:          iaload ebx, adx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movi #0, ebx   
41 [0x29]:          loadval ecx   
42 [0x2a]:          gt ecx, ebx   
43 [0x2b]:          jne 92   
44 [0x2c]: line: 95 movg @17 // @std.io.task#__srt_global   
45 [0x2d]:          movn #1   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          iaload ebx, adx   
50 [0x32]:          movr egx, ebx   
51 [0x33]:          dec ebx   
52 [0x34]:          movi #0, adx   
54 [0x36]:          rmov adx, ebx   
55 [0x37]: line: 96 new_class @21 // std.io.task#job_controller   
56 [0x38]:          dup    
57 [0x39]:          call @1726 // <std.io.task#job_controller.job_controller>   
58 [0x3a]:          movsl #0   
59 [0x3b]:          smovr_3 fp+3   
60 [0x3c]: line: 97 new_class @25 // std.io#thread   
61 [0x3d]:          dup    
62 [0x3e]:          new_class @58 // std#string   
63 [0x3f]:          dup    
64 [0x40]:          newstr @9 // worker_thread#   
65 [0x41]:          call @2823 // <std#string.string>   
66 [0x42]:          pushl 1   
67 [0x43]:          call @1793 // <std.io#thread_group.size>   
68 [0x44]:          loadval ebx   
69 [0x45]:          rstore ebx   
70 [0x46]:          movi #1, ebx   
72 [0x48]:          loadval ecx   
73 [0x49]:          add ecx, ebx -> ebx   
74 [0x4a]:          rstore ebx   
75 [0x4b]:          call @2853 // <std#string.operator+>   
76 [0x4c]:          istore 1709   
78 [0x4e]:          pushl 1   
79 [0x4f]:          call @1756 // <std.io#thread.thread>   
80 [0x50]:          movsl #0   
81 [0x51]:          smovr_3 fp+2   
82 [0x52]: line: 98 movg @17 // @std.io.task#__srt_global   
83 [0x53]:          movn #2   
85 [0x55]:          movn #1   
87 [0x57]:          pushobj   
88 [0x58]:          pushl 2   
89 [0x59]:          pushl 3   
90 [0x5a]:          call @2928 // <std#hashmap<std.io#thread,std.io.task#job_controller>.put>   
91 [0x5b]:          pop   
92 [0x5c]:          nop   
93 [0x5d]:          jmp @155   
94 [0x5e]: line: 101 movg @17 // @std.io.task#__srt_global   
95 [0x5f]:           movn #0   
97 [0x61]:           movi #0, adx   
99 [0x63]:           iaload ebx, adx   
100 [0x64]:           rstore ebx   
101 [0x65]:           movi #0, ebx   
103 [0x67]:           loadval ecx   
104 [0x68]:           gt ecx, ebx   
105 [0x69]:           jne 154   
106 [0x6a]: line: 102 movg @17 // @std.io.task#__srt_global   
107 [0x6b]:           movn #0   
109 [0x6d]:           movi #0, adx   
111 [0x6f]:           iaload ebx, adx   
112 [0x70]:           movr egx, ebx   
113 [0x71]:           dec ebx   
114 [0x72]:           movi #0, adx   
116 [0x74]:           rmov adx, ebx   
117 [0x75]: line: 103 new_class @21 // std.io.task#job_controller   
118 [0x76]:           dup    
119 [0x77]:           call @1726 // <std.io.task#job_controller.job_controller>   
120 [0x78]:           movsl #0   
121 [0x79]:           smovr_3 fp+4   
122 [0x7a]: line: 104 new_class @25 // std.io#thread   
123 [0x7b]:           dup    
124 [0x7c]:           new_class @58 // std#string   
125 [0x7d]:           dup    
126 [0x7e]:           newstr @9 // worker_thread#   
127 [0x7f]:           call @2823 // <std#string.string>   
128 [0x80]:           pushl 1   
129 [0x81]:           call @1793 // <std.io#thread_group.size>   
130 [0x82]:           loadval ebx   
131 [0x83]:           rstore ebx   
132 [0x84]:           movi #1, ebx   
134 [0x86]:           loadval ecx   
135 [0x87]:           add ecx, ebx -> ebx   
136 [0x88]:           rstore ebx   
137 [0x89]:           call @2853 // <std#string.operator+>   
138 [0x8a]:           istore 1709   
140 [0x8c]:           pushl 1   
141 [0x8d]:           call @1756 // <std.io#thread.thread>   
142 [0x8e]:           movsl #0   
143 [0x8f]:           smovr_3 fp+2   
144 [0x90]: line: 105 movg @17 // @std.io.task#__srt_global   
145 [0x91]:           movn #2   
147 [0x93]:           movn #1   
149 [0x95]:           pushobj   
150 [0x96]:           pushl 2   
151 [0x97]:           pushl 4   
152 [0x98]:           call @2928 // <std#hashmap<std.io#thread,std.io.task#job_controller>.put>   
153 [0x99]:           pop   
154 [0x9a]:           nop   
155 [0x9b]:           nop   
156 [0x9c]:           nop   
157 [0x9d]: line: 110 movl 2   
158 [0x9e]:           returnobj   
159 [0x9f]:           ret   


function: std.io.task#__srt_global.execute_synchronous[1738] params(1) in file: lib/support/0.2.805//io//task//job_scheduler.sharp:113:4: note:  
		def execute_synchronous(scheduled_job : job) {
		   ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 33   
12 [0xc]: line: 115 movl 0   
13 [0xd]:           movn #10   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2912 // <std#time.mills_time>   
20 [0x14]:           loadval ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           sub ecx, ebx -> ebx   
23 [0x17]:           smovr_2 ebx, fp+1   
24 [0x18]: line: 116 ipushl #1   
25 [0x19]:           movi #0, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           gt ecx, ebx   
29 [0x1d]:           jne 32   
30 [0x1e]:           ipushl #1   
31 [0x1f]:           call @1766 // <std.io#thread.sleep>   
32 [0x20]:           nop   
33 [0x21]:           nop   
34 [0x22]: line: 118 pushl 0   
35 [0x23]:           call @1710 // <std.io.task#job.execute>   
36 [0x24]:           ret   


function: std.io.task#__srt_global.execute_job[1739] params(1) in file: lib/support/0.2.805//io//task//job_scheduler.sharp:121:4: note:  
		def execute_job(scheduled_job : job) : var {
		   ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #14   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @1737 // <std.io.task#__srt_global.get_host>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+1   
10 [0xa]: line: 124 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 38   
15 [0xf]: line: 125 pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #4   
19 [0x13]:           popobj   
20 [0x14]: line: 126 movg @17 // @std.io.task#__srt_global   
21 [0x15]:           movn #2   
23 [0x17]:           pushobj   
24 [0x18]:           pushl 1   
25 [0x19]:           call @1732 // <std.io.task#job_master.get_host_controller>   
26 [0x1a]:           movl 0   
27 [0x1b]:           movn #16   
29 [0x1d]:           popobj   
30 [0x1e]: line: 127 pushl 0   
31 [0x1f]:           call @1699 // <std.io.task#job.execute_async>   
32 [0x20]:           pop   
33 [0x21]: line: 128 movi #1, ebx   
35 [0x23]:           return_val ebx   
36 [0x24]:           ret   
37 [0x25]:           jmp @42   
38 [0x26]: line: 129 movi #0, ebx   
40 [0x28]:           return_val ebx   
41 [0x29]:           ret   
42 [0x2a]:           nop   


function: std.io.task#__srt_global.finish[1740] params(0) in file: lib/support/0.2.805//io//task//task.sharp:5:4: note:  
		def finish() {
		   ^

0 [0x0]: line: 6 new_class @18 // std.io.task#cancellation_exception   
1 [0x1]:         dup    
2 [0x2]:         call @1696 // <std.io.task#cancellation_exception.cancellation_exception>   
3 [0x3]:         throw    
4 [0x4]:         ret   


function: std.io.task#task.with_timeout[1741] params(1) in file: lib/support/0.2.805//io//task//task.sharp:10:15: note:  
		    static def with_timeout(mills_time : var) : job_builder {
		              ^

0 [0x0]: line: 11 movg @17 // @std.io.task#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          call @1729 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 12 new_class @20 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          movg @17 // @std.io.task#__srt_global   
11 [0xb]:          movn #2   
13 [0xd]:          pushobj   
14 [0xe]:          call @1713 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          movsl #0   
16 [0x10]:          smovr_3 fp+2   
17 [0x11]: line: 13 pushl 2   
18 [0x12]:          ipushl #0   
19 [0x13]:          call @1714 // <std.io.task#job_builder.with_timeout>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.schedule[1742] params(1) in file: lib/support/0.2.805//io//task//task.sharp:16:15: note:  
		    static def schedule(future : var) : job_builder {
		              ^

0 [0x0]: line: 17 movg @17 // @std.io.task#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          call @1729 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 18 new_class @20 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          movg @17 // @std.io.task#__srt_global   
11 [0xb]:          movn #2   
13 [0xd]:          pushobj   
14 [0xe]:          call @1713 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          movsl #0   
16 [0x10]:          smovr_3 fp+2   
17 [0x11]: line: 19 pushl 2   
18 [0x12]:          ipushl #0   
19 [0x13]:          call @1715 // <std.io.task#job_builder.schedule>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.with_name[1743] params(1) in file: lib/support/0.2.805//io//task//task.sharp:22:15: note:  
		    static def with_name(job_name : string) : job_builder {
		              ^

0 [0x0]: line: 23 movg @17 // @std.io.task#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @1730 // <std.io.task#job_master.create_job>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 24 new_class @20 // std.io.task#job_builder   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @17 // @std.io.task#__srt_global   
12 [0xc]:          movn #2   
14 [0xe]:          pushobj   
15 [0xf]:          call @1713 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          movsl #0   
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 25 pushl 2   
19 [0x13]:          pushl 0   
20 [0x14]:          call @1717 // <std.io.task#job_builder.with_name>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.repeat[1744] params(1) in file: lib/support/0.2.805//io//task//task.sharp:28:15: note:  
		    static def repeat(count: var) : job_builder {
		              ^

0 [0x0]: line: 29 movg @17 // @std.io.task#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          call @1729 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 30 new_class @20 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          movg @17 // @std.io.task#__srt_global   
11 [0xb]:          movn #2   
13 [0xd]:          pushobj   
14 [0xe]:          call @1713 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          movsl #0   
16 [0x10]:          smovr_3 fp+2   
17 [0x11]: line: 31 pushl 2   
18 [0x12]:          ipushl #0   
19 [0x13]:          call @1716 // <std.io.task#job_builder.repeat>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.with_args[1745] params(1) in file: lib/support/0.2.805//io//task//task.sharp:34:15: note:  
		    static def with_args(args : object[]) : job_builder {
		              ^

0 [0x0]: line: 35 movg @17 // @std.io.task#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          call @1729 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 36 new_class @20 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          movg @17 // @std.io.task#__srt_global   
11 [0xb]:          movn #2   
13 [0xd]:          pushobj   
14 [0xe]:          call @1713 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          movsl #0   
16 [0x10]:          smovr_3 fp+2   
17 [0x11]: line: 37 pushl 2   
18 [0x12]:          pushl 0   
19 [0x13]:          call @1718 // <std.io.task#job_builder.with_args>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.block[1746] params(0) in file: lib/support/0.2.805//io//task//task.sharp:40:12: note:  
			static def block() : job_builder {
		           ^

0 [0x0]: line: 41 movg @17 // @std.io.task#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          call @1729 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 42 new_class @20 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 0   
10 [0xa]:          movg @17 // @std.io.task#__srt_global   
11 [0xb]:          movn #2   
13 [0xd]:          pushobj   
14 [0xe]:          call @1713 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          movsl #0   
16 [0x10]:          smovr_3 fp+1   
17 [0x11]: line: 43 pushl 1   
18 [0x12]:          call @1719 // <std.io.task#job_builder.block>   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   


function: std.io.task#task.long_term[1747] params(0) in file: lib/support/0.2.805//io//task//task.sharp:46:12: note:  
			static def long_term() : job_builder {
		           ^

0 [0x0]: line: 47 movg @17 // @std.io.task#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          call @1729 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 48 new_class @20 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 0   
10 [0xa]:          movg @17 // @std.io.task#__srt_global   
11 [0xb]:          movn #2   
13 [0xd]:          pushobj   
14 [0xe]:          call @1713 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          movsl #0   
16 [0x10]:          smovr_3 fp+1   
17 [0x11]: line: 49 pushl 1   
18 [0x12]:          call @1720 // <std.io.task#job_builder.long_term>   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   


function: std.io.task#task.builder[1748] params(0) in file: lib/support/0.2.805//io//task//task.sharp:52:15: note:  
		    static def builder() : job_builder {
		              ^

0 [0x0]: line: 53 movg @17 // @std.io.task#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          call @1729 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 54 new_class @20 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 0   
10 [0xa]:          movg @17 // @std.io.task#__srt_global   
11 [0xb]:          movn #2   
13 [0xd]:          pushobj   
14 [0xe]:          call @1713 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          movsl #0   
16 [0x10]:          smovr_3 fp+1   
17 [0x11]: line: 55 movl 1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


constructor: std.io.task#task.task[1749] params(0) in file: lib/support/0.2.805//io//task//task.sharp:9:6: note:  
		class task {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.io#thread.thread[1750] params(0) in file: lib/support/0.2.805//io//thread.sharp:7:19: note:  
		    private thread() {} // the user must use standardized constructor
		                  ^

0 [0x0]:         new_class @58 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @2823 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @1835 // <std#_object_._object_>   
10 [0xa]:         ret   


constructor: std.io#thread.thread[1751] params(2) in file: lib/support/0.2.805//io//thread.sharp:9:15: note:  
			public thread(name : string, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @58 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @2823 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @1835 // <std#_object_._object_>   
10 [0xa]: line: 10 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #12   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 11 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #7   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movg @26 // @std.io#thread_group   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #8   
30 [0x1e]:          popobj   
31 [0x1f]: line: 13 movl 0   
32 [0x20]:          movn #8   
34 [0x22]:          pushobj   
35 [0x23]:          call @1795 // <std.io#thread_group.get_priority>   
36 [0x24]:          movl 0   
37 [0x25]:          movn #3   
39 [0x27]:          popobj   
40 [0x28]: line: 14 movi #-1, ebx   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 15 movg @25 // @std.io#thread   
49 [0x31]:          movn #0   
51 [0x33]:          movi #0, adx   
53 [0x35]:          iaload ebx, adx   
54 [0x36]:          movr egx, ebx   
55 [0x37]:          inc ebx   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          rmov adx, ebx   
59 [0x3b]:          rstore egx   
60 [0x3c]:          movl 0   
61 [0x3d]:          movn #2   
63 [0x3f]:          loadval ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]: line: 17 movl 0   
68 [0x44]:          movn #8   
70 [0x46]:          pushobj   
71 [0x47]:          pushl 0   
72 [0x48]:          call @1792 // <std.io#thread_group.add>   
73 [0x49]:          ret   


constructor: std.io#thread.thread[1752] params(3) in file: lib/support/0.2.805//io//thread.sharp:20:15: note:  
			public thread(name : string, daemon: var, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @58 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @2823 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @1835 // <std#_object_._object_>   
10 [0xa]: line: 21 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #12   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 22 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #7   
22 [0x16]:          popobj   
23 [0x17]: line: 23 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 24 movg @26 // @std.io#thread_group   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #8   
38 [0x26]:          popobj   
39 [0x27]: line: 25 movl 0   
40 [0x28]:          movn #8   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @1795 // <std.io#thread_group.get_priority>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 26 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 27 movg @25 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 29 movl 0   
76 [0x4c]:          movn #8   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @1792 // <std.io#thread_group.add>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[1753] params(3) in file: lib/support/0.2.805//io//thread.sharp:32:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @58 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @2823 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @1835 // <std#_object_._object_>   
10 [0xa]: line: 33 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #12   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 34 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #7   
22 [0x16]:          popobj   
23 [0x17]: line: 35 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #11   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 36 movg @26 // @std.io#thread_group   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #8   
38 [0x26]:          popobj   
39 [0x27]: line: 37 movl 0   
40 [0x28]:          movn #8   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @1795 // <std.io#thread_group.get_priority>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 38 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 39 movg @25 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 41 movl 0   
76 [0x4c]:          movn #8   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @1792 // <std.io#thread_group.add>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[1754] params(4) in file: lib/support/0.2.805//io//thread.sharp:44:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @58 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @2823 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @1835 // <std#_object_._object_>   
10 [0xa]: line: 45 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #12   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 46 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #7   
22 [0x16]:          popobj   
23 [0x17]: line: 47 ipushl #4   
24 [0x18]:          movl 0   
25 [0x19]:          movn #11   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 48 ipushl #2   
32 [0x20]:          movl 0   
33 [0x21]:          movn #4   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 49 movg @26 // @std.io#thread_group   
40 [0x28]:          movn #0   
42 [0x2a]:          pushobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #8   
46 [0x2e]:          popobj   
47 [0x2f]: line: 50 movl 0   
48 [0x30]:          movn #8   
50 [0x32]:          pushobj   
51 [0x33]:          call @1795 // <std.io#thread_group.get_priority>   
52 [0x34]:          movl 0   
53 [0x35]:          movn #3   
55 [0x37]:          popobj   
56 [0x38]: line: 51 movi #-1, ebx   
58 [0x3a]:          movl 0   
59 [0x3b]:          movn #1   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]: line: 52 movg @25 // @std.io#thread   
65 [0x41]:          movn #0   
67 [0x43]:          movi #0, adx   
69 [0x45]:          iaload ebx, adx   
70 [0x46]:          movr egx, ebx   
71 [0x47]:          inc ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]:          rstore egx   
76 [0x4c]:          movl 0   
77 [0x4d]:          movn #2   
79 [0x4f]:          loadval ebx   
80 [0x50]:          movi #0, adx   
82 [0x52]:          rmov adx, ebx   
83 [0x53]: line: 54 movl 0   
84 [0x54]:          movn #8   
86 [0x56]:          pushobj   
87 [0x57]:          pushl 0   
88 [0x58]:          call @1792 // <std.io#thread_group.add>   
89 [0x59]:          ret   


constructor: std.io#thread.thread[1755] params(4) in file: lib/support/0.2.805//io//thread.sharp:57:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @58 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @2823 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @1835 // <std#_object_._object_>   
10 [0xa]: line: 58 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #12   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 59 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #7   
22 [0x16]:          popobj   
23 [0x17]: line: 60 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #11   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 61 pushl 4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #8   
35 [0x23]:          popobj   
36 [0x24]: line: 62 pushl 4   
37 [0x25]:          call @1795 // <std.io#thread_group.get_priority>   
38 [0x26]:          movl 0   
39 [0x27]:          movn #3   
41 [0x29]:          popobj   
42 [0x2a]: line: 63 movi #-1, ebx   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          rmov adx, ebx   
50 [0x32]: line: 64 movg @25 // @std.io#thread   
51 [0x33]:          movn #0   
53 [0x35]:          movi #0, adx   
55 [0x37]:          iaload ebx, adx   
56 [0x38]:          movr egx, ebx   
57 [0x39]:          inc ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]:          rstore egx   
62 [0x3e]:          movl 0   
63 [0x3f]:          movn #2   
65 [0x41]:          loadval ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]: line: 66 movl 0   
70 [0x46]:          movn #8   
72 [0x48]:          pushobj   
73 [0x49]:          pushl 0   
74 [0x4a]:          call @1792 // <std.io#thread_group.add>   
75 [0x4b]:          ret   


constructor: std.io#thread.thread[1756] params(3) in file: lib/support/0.2.805//io//thread.sharp:69:18: note:  
		    public thread(name : string, main: (object[])(var), group : thread_group) {
		                 ^

0 [0x0]:         new_class @58 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @2823 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @1835 // <std#_object_._object_>   
10 [0xa]: line: 70 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #12   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 71 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #7   
22 [0x16]:          popobj   
23 [0x17]: line: 72 pushl 3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #8   
27 [0x1b]:          popobj   
28 [0x1c]: line: 73 pushl 3   
29 [0x1d]:          call @1795 // <std.io#thread_group.get_priority>   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #3   
33 [0x21]:          popobj   
34 [0x22]: line: 74 movi #-1, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 75 movg @25 // @std.io#thread   
43 [0x2b]:          movn #0   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]:          rstore egx   
54 [0x36]:          movl 0   
55 [0x37]:          movn #2   
57 [0x39]:          loadval ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 77 movl 0   
62 [0x3e]:          movn #8   
64 [0x40]:          pushobj   
65 [0x41]:          pushl 0   
66 [0x42]:          call @1792 // <std.io#thread_group.add>   
67 [0x43]:          ret   


constructor: std.io#thread.thread[1757] params(5) in file: lib/support/0.2.805//io//thread.sharp:80:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @58 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @2823 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @1835 // <std#_object_._object_>   
10 [0xa]: line: 81 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #12   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 82 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #7   
22 [0x16]:          popobj   
23 [0x17]: line: 83 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 84 ipushl #4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #11   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 85 pushl 5   
40 [0x28]:          movl 0   
41 [0x29]:          movn #8   
43 [0x2b]:          popobj   
44 [0x2c]: line: 86 pushl 5   
45 [0x2d]:          call @1795 // <std.io#thread_group.get_priority>   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #3   
49 [0x31]:          popobj   
50 [0x32]: line: 87 movi #-1, ebx   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          rmov adx, ebx   
58 [0x3a]: line: 88 movg @25 // @std.io#thread   
59 [0x3b]:          movn #0   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          iaload ebx, adx   
64 [0x40]:          movr egx, ebx   
65 [0x41]:          inc ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          rstore egx   
70 [0x46]:          movl 0   
71 [0x47]:          movn #2   
73 [0x49]:          loadval ebx   
74 [0x4a]:          movi #0, adx   
76 [0x4c]:          rmov adx, ebx   
77 [0x4d]: line: 90 movl 0   
78 [0x4e]:          movn #8   
80 [0x50]:          pushobj   
81 [0x51]:          pushl 0   
82 [0x52]:          call @1792 // <std.io#thread_group.add>   
83 [0x53]:          ret   


function: std.io#thread.start[1758] params(1) in file: lib/support/0.2.805//io//thread.sharp:93:15: note:  
		    public def start(args : object[]) : thread_result {
		              ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #-1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 27   
12 [0xc]: line: 95 movl 0   
13 [0xd]:          movn #4   
15 [0xf]:          movi #0, adx   
17 [0x11]:          iaload ebx, adx   
18 [0x12]:          rstore ebx   
19 [0x13]:          call @1847 // <platform.kernel#vm.thread_create>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]:          nop   
28 [0x1c]: line: 96 pushl 0   
29 [0x1d]:          pushl 1   
30 [0x1e]:          call @1855 // <platform.kernel#vm.thread_start>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   


function: std.io#thread.start[1759] params(0) in file: lib/support/0.2.805//io//thread.sharp:99:15: note:  
		    public def start() : thread_result {
		              ^

0 [0x0]: line: 100 pushl 0   
1 [0x1]:           pushnull    
2 [0x2]:           call @1758 // <std.io#thread.start>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std.io#thread.suspend[1760] params(0) in file: lib/support/0.2.805//io//thread.sharp:103:12: note:  
			public def suspend() : thread_result {
		           ^

0 [0x0]: line: 104 pushl 0   
1 [0x1]:           call @1848 // <platform.kernel#vm.suspend>   
2 [0x2]:           popobj2    
3 [0x3]:           smovr_3 fp+1   
4 [0x4]: line: 105 pushl 1   
5 [0x5]:           movg @28 // @std.io#thread_result   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @1603 // <std#_enum_.operator==>   
10 [0xa]:           loadval ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]: line: 106 movi #1, ebx   
15 [0xf]:           movl 0   
16 [0x10]:           movn #10   
18 [0x12]:           movi #0, adx   
20 [0x14]:           rmov adx, ebx   
21 [0x15]:           nop   
22 [0x16]: line: 107 movl 1   
23 [0x17]:           returnobj   
24 [0x18]:           ret   


function: std.io#thread.notify[1761] params(0) in file: lib/support/0.2.805//io//thread.sharp:110:12: note:  
			public def notify() : thread_result {
		           ^

0 [0x0]: line: 111 pushl 0   
1 [0x1]:           istore 0   
3 [0x3]:           call @1849 // <platform.kernel#vm.unsuspend>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 112 pushl 1   
7 [0x7]:           movg @28 // @std.io#thread_result   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @1603 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 113 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #10   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 114 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.wait_and_notify[1762] params(0) in file: lib/support/0.2.805//io//thread.sharp:117:12: note:  
			public def wait_and_notify() : thread_result {
		           ^

0 [0x0]: line: 118 pushl 0   
1 [0x1]:           istore 1   
3 [0x3]:           call @1849 // <platform.kernel#vm.unsuspend>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 119 pushl 1   
7 [0x7]:           movg @28 // @std.io#thread_result   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @1603 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 120 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #10   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 121 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.join[1763] params(0) in file: lib/support/0.2.805//io//thread.sharp:124:15: note:  
		    public def join() := vm.thread_join(self);
		              ^

0 [0x0]: line: 124 pushl 0   
1 [0x1]:           call @1850 // <platform.kernel#vm.thread_join>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.interrupt[1764] params(0) in file: lib/support/0.2.805//io//thread.sharp:126:15: note:  
		    public def interrupt() := vm.kill(self);
		              ^

0 [0x0]: line: 126 pushl 0   
1 [0x1]:           call @1851 // <platform.kernel#vm.kill>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.current[1765] params(0) in file: lib/support/0.2.805//io//thread.sharp:128:22: note:  
		    public static def current() := vm.current_thread();
		                     ^

0 [0x0]: line: 128 call @1852 // <platform.kernel#vm.current_thread>   
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#thread.sleep[1766] params(1) in file: lib/support/0.2.805//io//thread.sharp:130:22: note:  
		    public static def sleep(mills_time : var) := time.sleep(milliseconds, mills_time);
		                     ^

0 [0x0]: line: 130 movg @61 // @std#time_unit   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #0   
5 [0x5]:           call @2914 // <std#time.sleep>   
6 [0x6]:           ret   


function: std.io#thread.wait[1767] params(0) in file: lib/support/0.2.805//io//thread.sharp:132:22: note:  
		    public static def wait() {
		                     ^

0 [0x0]: line: 133 movg @60 // @std#time   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @1768 // <std.io#thread.wait>   
8 [0x8]:           ret   


function: std.io#thread.wait[1768] params(1) in file: lib/support/0.2.805//io//thread.sharp:136:22: note:  
		    public static def wait(mills_time : var) {
		                     ^

0 [0x0]: line: 137 istore 1   
2 [0x2]:           call @1852 // <platform.kernel#vm.current_thread>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #10   
6 [0x6]:           loadval ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]: line: 138 movg @61 // @std#time_unit   
11 [0xb]:           movn #1   
13 [0xd]:           pushobj   
14 [0xe]:           ipushl #0   
15 [0xf]:           call @2915 // <std#time.wait>   
16 [0x10]: line: 139 istore 0   
18 [0x12]:           call @1852 // <platform.kernel#vm.current_thread>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #10   
22 [0x16]:           loadval ebx   
23 [0x17]:           movi #0, adx   
25 [0x19]:           rmov adx, ebx   
26 [0x1a]:           ret   


function: std.io#thread.exit[1769] params(1) in file: lib/support/0.2.805//io//thread.sharp:142:22: note:  
		    public static def exit(code : var) {
		                     ^

0 [0x0]: line: 143 call @1765 // <std.io#thread.current>   
1 [0x1]:           ipushl #0   
2 [0x2]:           call @1853 // <platform.kernel#vm.exit_thread>   
3 [0x3]: line: 144 hlt   : protected asm start
4 [0x4]:           ret   : protected asm end


function: std.io#thread.hash[1770] params(0) in file: lib/support/0.2.805//io//thread.sharp:147:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 148 new_class @40 // std#long   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #2   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           rstore ebx   
9 [0x9]:           call @1965 // <std#long.long>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


function: std.io#thread.yield[1771] params(0) in file: lib/support/0.2.805//io//thread.sharp:151:22: note:  
		    public static def yield() := vm.thread_yield();
		                     ^

0 [0x0]: line: 151 call @1854 // <platform.kernel#vm.thread_yield>   
1 [0x1]:           ret   


function: std.io#thread.set_exception_handler[1772] params(1) in file: lib/support/0.2.805//io//thread.sharp:153:15: note:  
		    public def set_exception_handler(error_handler: uncaught_exception_handler) {
		              ^

0 [0x0]: line: 154 pushl 1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #13   
4 [0x4]:           popobj   
5 [0x5]:           ret   


function: std.io#thread.set_priority[1773] params(1) in file: lib/support/0.2.805//io//thread.sharp:157:15: note:  
		    public def set_priority(priority : thread_priority) : thread_result {
		              ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 159 pushl 1   
3 [0x3]:           movg @27 // @std.io#thread_priority   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1603 // <std#_enum_.operator==>   
8 [0x8]:           loadval ebx   
9 [0x9]:           movr cmt, ebx   
10 [0xa]:           je 29   
11 [0xb]:           pushl 1   
12 [0xc]:           movg @27 // @std.io#thread_priority   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @1603 // <std#_enum_.operator==>   
17 [0x11]:           loadval ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           je 29   
20 [0x14]:           pushl 1   
21 [0x15]:           movg @27 // @std.io#thread_priority   
22 [0x16]:           movn #2   
24 [0x18]:           pushobj   
25 [0x19]:           call @1603 // <std#_enum_.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 44   
29 [0x1d]: line: 163 movl 0   
30 [0x1e]:           _ulck   
31 [0x1f]:           pushl 0   
32 [0x20]:           movl 1   
33 [0x21]:           movn #1   
35 [0x23]:           movi #0, adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           call @1856 // <platform.kernel#vm.set_thread_priority>   
40 [0x28]:           popobj2    
41 [0x29]:           returnobj   
42 [0x2a]:           ret   
43 [0x2b]:           jmp @54   
44 [0x2c]: line: 166 new_class @5 // std#illegal_argument_exception   
45 [0x2d]:           dup    
46 [0x2e]:           new_class @58 // std#string   
47 [0x2f]:           dup    
48 [0x30]:           newstr @10 // invalid thread priority    
49 [0x31]:           call @2823 // <std#string.string>   
50 [0x32]:           pushl 1   
51 [0x33]:           call @2835 // <std#string.operator+>   
52 [0x34]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
53 [0x35]:           throw    
54 [0x36]:           nop   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   


function: std.io#thread.remove_thread[1774] params(1) in file: lib/support/0.2.805//io//thread.sharp:172:16: note:  
		    private def remove_thread(t : thread) {
		               ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           pushobj   
4 [0x4]:           movl 1   
5 [0x5]:           movn #1   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @1796 // <std.io#thread_group.remove>   
12 [0xc]:           pop   
13 [0xd]:           ret   


function: std.io#thread.get_id[1775] params(0) in file: lib/support/0.2.805//io//thread.sharp:176:15: note:  
		    public def get_id() := id;
		              ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_native_handle[1776] params(0) in file: lib/support/0.2.805//io//thread.sharp:177:15: note:  
		    public def get_native_handle() := native_handle;
		              ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_stack_size[1777] params(0) in file: lib/support/0.2.805//io//thread.sharp:178:15: note:  
		    public def get_stack_size() := stack_size;
		              ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #11   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_name[1778] params(0) in file: lib/support/0.2.805//io//thread.sharp:179:15: note:  
		    public def get_name() := name;
		              ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #7   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.is_exited[1779] params(0) in file: lib/support/0.2.805//io//thread.sharp:180:15: note:  
		    public def is_exited() := exited;
		              ^

0 [0x0]: line: 180 movl 0   
1 [0x1]:           movn #6   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_daemon[1780] params(0) in file: lib/support/0.2.805//io//thread.sharp:181:15: note:  
		    public def is_daemon() := daemon;
		              ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_started[1781] params(0) in file: lib/support/0.2.805//io//thread.sharp:182:15: note:  
		    public def is_started() := started;
		              ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #9   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_suspended[1782] params(0) in file: lib/support/0.2.805//io//thread.sharp:183:15: note:  
		    public def is_suspended() := suspended;
		              ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_terminated[1783] params(0) in file: lib/support/0.2.805//io//thread.sharp:184:15: note:  
		    public def is_terminated() := terminated;
		              ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #5   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.set_main[1784] params(1) in file: lib/support/0.2.805//io//thread.sharp:185:12: note:  
			public def set_main(main: (object[])(var)) := self->main = main;
		           ^

0 [0x0]: line: 185 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #12   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std.io#thread.is_active[1785] params(0) in file: lib/support/0.2.805//io//thread.sharp:186:12: note:  
			public def is_active() := started && !exited && !terminated;
		           ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #9   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           skne ebx // pc = 22   
7 [0x7]:           movl 0   
8 [0x8]:           movn #6   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           skne ebx // pc = 22   
15 [0xf]:           movl 0   
16 [0x10]:           movn #5   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           not ebx, ebx   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   


function: std.io#thread.get_exit_code[1786] params(0) in file: lib/support/0.2.805//io//thread.sharp:187:12: note:  
			public def get_exit_code() := exit_code;
		           ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_exception_handler[1787] params(0) in file: lib/support/0.2.805//io//thread.sharp:188:12: note:  
			public def get_exception_handler() := error_handler;
		           ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #13   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std.io#thread.operator==[1788] params(1) in file: lib/support/0.2.805//io//thread.sharp:190:15: note:  
		    public def operator==(t : thread) : var = native_handle==t.native_handle;
		              ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #1   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


constructor: std.io#thread_group.thread_group[1789] params(1) in file: lib/support/0.2.805//io//thread_group.sharp:5:21: note:  
			public thread_group(name : string) {
		                    ^

0 [0x0]:         new_class @74 // std#hashmap<std#int,std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @2931 // <std#hashmap<std#int,std.io#thread>.hashmap>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         new_class @81 // std#list<var>   
8 [0x8]:         dup    
9 [0x9]:         call @3020 // <std#list<var>.list>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]:         movi #0, ebx   
16 [0x10]:         movl 0   
17 [0x11]:         movn #4   
19 [0x13]:         movi #0, adx   
21 [0x15]:         rmov adx, ebx   
22 [0x16]:         pushl 0   
23 [0x17]:         call @1835 // <std#_object_._object_>   
24 [0x18]: line: 6 pushl 1   
25 [0x19]:         movl 0   
26 [0x1a]:         movn #2   
28 [0x1c]:         popobj   
29 [0x1d]: line: 7 movg @27 // @std.io#thread_priority   
30 [0x1e]:         movn #1   
32 [0x20]:         pushobj   
33 [0x21]:         movl 0   
34 [0x22]:         movn #3   
36 [0x24]:         popobj   
37 [0x25]:         ret   


constructor: std.io#thread_group.thread_group[1790] params(2) in file: lib/support/0.2.805//io//thread_group.sharp:10:21: note:  
			public thread_group(name : string, priority : thread_priority) {
		                    ^

0 [0x0]:         new_class @74 // std#hashmap<std#int,std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @2931 // <std#hashmap<std#int,std.io#thread>.hashmap>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         new_class @81 // std#list<var>   
8 [0x8]:         dup    
9 [0x9]:         call @3020 // <std#list<var>.list>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]:         movi #0, ebx   
16 [0x10]:         movl 0   
17 [0x11]:         movn #4   
19 [0x13]:         movi #0, adx   
21 [0x15]:         rmov adx, ebx   
22 [0x16]:         pushl 0   
23 [0x17]:         call @1835 // <std#_object_._object_>   
24 [0x18]: line: 11 pushl 1   
25 [0x19]:          movl 0   
26 [0x1a]:          movn #2   
28 [0x1c]:          popobj   
29 [0x1d]: line: 12 pushl 2   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #3   
33 [0x21]:          popobj   
34 [0x22]:          ret   


function: std.io#thread_group.at[1791] params(1) in file: lib/support/0.2.805//io//thread_group.sharp:15:5: note:  
			def at(id : var) := handles.at(id);
		    ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          new_class @42 // std#int   
5 [0x5]:          dup    
6 [0x6]:          ipushl #1   
7 [0x7]:          call @2153 // <std#int.int>   
8 [0x8]:          call @2935 // <std#hashmap<std#int,std.io#thread>.at>   
9 [0x9]:          popobj2    
10 [0xa]:          returnobj   
11 [0xb]:          ret   


function: std.io#thread_group.add[1792] params(1) in file: lib/support/0.2.805//io//thread_group.sharp:17:5: note:  
			def add(t : thread) {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 19 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @42 // std#int   
7 [0x7]:          dup    
8 [0x8]:          pushl 1   
9 [0x9]:          call @1775 // <std.io#thread.get_id>   
10 [0xa]:          call @2153 // <std#int.int>   
11 [0xb]:          pushl 1   
12 [0xc]:          call @2936 // <std#hashmap<std#int,std.io#thread>.put>   
13 [0xd]:          loadval ebx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 20 movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          pushobj   
20 [0x14]:          pushl 1   
21 [0x15]:          call @1775 // <std.io#thread.get_id>   
22 [0x16]:          call @3032 // <std#list<var>.add>   
23 [0x17]:          nop   
24 [0x18]: line: 22 movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          dec ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movl 0   
36 [0x24]:          _ulck   
37 [0x25]:          ret   


function: std.io#thread_group.size[1793] params(0) in file: lib/support/0.2.805//io//thread_group.sharp:26:5: note:  
			def size() := n_threads;
		    ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #4   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#thread_group.get_name[1794] params(0) in file: lib/support/0.2.805//io//thread_group.sharp:27:5: note:  
			def get_name() := name;
		    ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.get_priority[1795] params(0) in file: lib/support/0.2.805//io//thread_group.sharp:28:5: note:  
			def get_priority() := default_priority;
		    ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.remove[1796] params(1) in file: lib/support/0.2.805//io//thread_group.sharp:29:5: note:  
			def remove(id : var) : var {
		    ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 31 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @42 // std#int   
7 [0x7]:          dup    
8 [0x8]:          ipushl #1   
9 [0x9]:          call @2153 // <std#int.int>   
10 [0xa]:          call @2937 // <std#hashmap<std#int,std.io#thread>.remove>   
11 [0xb]:          loadval ebx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 37   
14 [0xe]: line: 32 movl 0   
15 [0xf]:          movn #4   
17 [0x11]:          movi #0, adx   
19 [0x13]:          iaload ebx, adx   
20 [0x14]:          movr egx, ebx   
21 [0x15]:          dec ebx   
22 [0x16]:          movi #0, adx   
24 [0x18]:          rmov adx, ebx   
25 [0x19]: line: 33 movl 0   
26 [0x1a]:          movn #1   
28 [0x1c]:          pushobj   
29 [0x1d]:          ipushl #1   
30 [0x1e]:          call @3037 // <std#list<var>.remove>   
31 [0x1f]: line: 34 movl 0   
32 [0x20]:          _ulck   
33 [0x21]:          movi #1, ebx   
35 [0x23]:          return_val ebx   
36 [0x24]:          ret   
37 [0x25]:          nop   
38 [0x26]: line: 37 movl 0   
39 [0x27]:          _ulck   
40 [0x28]:          movi #0, ebx   
42 [0x2a]:          return_val ebx   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: std.io#thread_group.get_elements[1797] params(0) in file: lib/support/0.2.805//io//thread_group.sharp:41:8: note:  
		    def get_elements() : thread[] {
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          call @3035 // <std#list<var>.size>   
5 [0x5]:          loadval ebx   
6 [0x6]:          new_classarray ebx  // std.io#thread[]   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+1   
9 [0x9]: line: 43 istorel 0, fp+2   
11 [0xb]: line: 45 istorel -1, fp+4   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          pushobj   
17 [0x11]:          invoke_delegate 3018 { static=0, args=0 }   
19 [0x13]:          popl 5   
20 [0x14]:          iaddl 1, fp@4   
22 [0x16]:          movl 5   
23 [0x17]:          sizeof ecx   
24 [0x18]:          loadl ebx, fp+4   
25 [0x19]:          lt ebx, ecx   
26 [0x1a]:          jne 50   
27 [0x1b]:          iaload ecx, ebx   
28 [0x1c]:          smovr_2 ecx, fp+3   
29 [0x1d]: line: 46 movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          pushobj   
33 [0x21]:          new_class @42 // std#int   
34 [0x22]:          dup    
35 [0x23]:          ipushl #3   
36 [0x24]:          call @2153 // <std#int.int>   
37 [0x25]:          call @2935 // <std#hashmap<std#int,std.io#thread>.at>   
38 [0x26]:          pushl 1   
39 [0x27]:          loadl ebx, fp+2   
40 [0x28]:          movr egx, ebx   
41 [0x29]:          inc ebx   
42 [0x2a]:          smovr_2 ebx, fp+2   
43 [0x2b]:          movr ebx, egx   
44 [0x2c]:          popobj2    
45 [0x2d]:          movr adx, ebx   
46 [0x2e]:          chklen adx   
47 [0x2f]:          movnd adx   
48 [0x30]:          popobj   
49 [0x31]:          jmp @20   
50 [0x32]: line: 49 movl 1   
51 [0x33]:          returnobj   
52 [0x34]:          ret   


function: std.io#thread_group.find[1798] params(1) in file: lib/support/0.2.805//io//thread_group.sharp:52:8: note:  
		    def find(find_func: (thread)(var)) : thread {
		       ^

0 [0x0]: line: 53 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          pushobj   
7 [0x7]:          call @3035 // <std#list<var>.size>   
8 [0x8]:          loadval ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          jne 42   
12 [0xc]: line: 54 movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          pushobj   
16 [0x10]:          new_class @42 // std#int   
17 [0x11]:          dup    
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          pushobj   
22 [0x16]:          ipushl #2   
23 [0x17]:          call @3026 // <std#list<var>.at>   
24 [0x18]:          call @2153 // <std#int.int>   
25 [0x19]:          call @2935 // <std#hashmap<std#int,std.io#thread>.at>   
26 [0x1a]:          popobj2    
27 [0x1b]:          smovr_3 fp+3   
28 [0x1c]: line: 55 ipushl #1   
29 [0x1d]:          pushl 3   
30 [0x1e]:          smov ebx, sp+[-1]   
31 [0x1f]:          calld ebx   
32 [0x20]:          loadval ebx   
33 [0x21]:          movr cmt, ebx   
34 [0x22]:          jne 38   
35 [0x23]: line: 56 movl 3   
36 [0x24]:          returnobj   
37 [0x25]:          ret   
38 [0x26]:          nop   
39 [0x27]:          iaddl 1, fp@2   
41 [0x29]:          jmp @2   
42 [0x2a]: line: 60 pushnull    
43 [0x2b]:          popobj2    
44 [0x2c]:          returnobj   
45 [0x2d]:          ret   


function: std.io#thread_group.kill_all[1799] params(0) in file: lib/support/0.2.805//io//thread_group.sharp:63:5: note:  
			def kill_all() {
		    ^

0 [0x0]: line: 64 istorel -1, fp+2   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          invoke_delegate 3018 { static=0, args=0 }   
8 [0x8]:          popl 3   
9 [0x9]:          iaddl 1, fp@2   
11 [0xb]:          movl 3   
12 [0xc]:          sizeof ecx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          lt ebx, ecx   
15 [0xf]:          jne 30   
16 [0x10]:          iaload ecx, ebx   
17 [0x11]:          smovr_2 ecx, fp+1   
18 [0x12]: line: 65 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          new_class @42 // std#int   
23 [0x17]:          dup    
24 [0x18]:          ipushl #1   
25 [0x19]:          call @2153 // <std#int.int>   
26 [0x1a]:          call @2935 // <std#hashmap<std#int,std.io#thread>.at>   
27 [0x1b]:          call @1764 // <std.io#thread.interrupt>   
28 [0x1c]:          pop   
29 [0x1d]:          jmp @9   
30 [0x1e]:          ret   


constructor: std.io#thread_group.thread_group[1800] params(0) in file: lib/support/0.2.805//io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @74 // std#hashmap<std#int,std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @2931 // <std#hashmap<std#int,std.io#thread>.hashmap>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         new_class @81 // std#list<var>   
8 [0x8]:         dup    
9 [0x9]:         call @3020 // <std#list<var>.list>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]:         movi #0, ebx   
16 [0x10]:         movl 0   
17 [0x11]:         movn #4   
19 [0x13]:         movi #0, adx   
21 [0x15]:         rmov adx, ebx   
22 [0x16]:         ret   


function: std.io#__srt_global._srt_thread_start[1801] params(0) in file: lib/support/0.2.805//io//thread_kernel.sharp:5:4: note:  
		def _srt_thread_start() {
		   ^

0 [0x0]: line: 6 call @1852 // <platform.kernel#vm.current_thread>   
1 [0x1]:         popobj2    
2 [0x2]:         smovr_3 fp+0   
3 [0x3]: line: 8 movi #1, ebx   : protected asm start
5 [0x5]:         movi #0, egx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #6   
12 [0xc]:         rmov adx, egx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #9   
16 [0x10]:         rmov adx, ebx   
17 [0x11]: line: 21 call @1839 // <platform.kernel#platform.tls_init>   : protected asm end
18 [0x12]: line: 22 istorel 1, fp+1   
20 [0x14]: line: 24 movl 0   : try start: try block start
21 [0x15]: line: 25 movn #12   
23 [0x17]:          movi #0, adx   
25 [0x19]:          iaload ebx, adx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          call @1858 // <platform.kernel#vm.thread_args>   
28 [0x1c]:          smov ebx, sp+[-1]   
29 [0x1d]:          calld ebx   
30 [0x1e]:          ipopl 1   
31 [0x1f]:          jmp @52   : try block end
32 [0x20]: line: 27 pushl 0   : catch(std#exception)
33 [0x21]:          call @1787 // <std.io#thread.get_exception_handler>   
34 [0x22]:          pushnull    
35 [0x23]:          itest ebx   
36 [0x24]:          not ebx, ebx   
37 [0x25]:          movr cmt, ebx   
38 [0x26]:          jne 45   
39 [0x27]: line: 28 pushl 0   
40 [0x28]:          call @1787 // <std.io#thread.get_exception_handler>   
41 [0x29]:          pushl 2   
42 [0x2a]:          invoke_delegate 1804 { static=0, args=1 }   
44 [0x2c]:          jmp @50   
45 [0x2d]: line: 30 pushl 0   
46 [0x2e]:          ipushl #1   
47 [0x2f]:          call @1853 // <platform.kernel#vm.exit_thread>   
48 [0x30]: line: 31 pushl 2   
49 [0x31]:          throw    
50 [0x32]:          nop   
51 [0x33]:          jmp @52   
52 [0x34]:          nop   : try end
53 [0x35]: line: 35 pushl 0   
54 [0x36]:          ipushl #1   
55 [0x37]:          call @1853 // <platform.kernel#vm.exit_thread>   
56 [0x38]:          ret   


function: std.io#thread_result.at[1802] params(1) in file: lib/support/0.2.805//io//thread_kernel.sharp:63:15: note:  
		    static def at(index: var) : thread_result {
		              ^

0 [0x0]: line: 64 movg @28 // @std.io#thread_result   
1 [0x1]:          movn #17   
3 [0x3]:          pushobj   
4 [0x4]:          loadl ebx, fp+0   
5 [0x5]:          popobj2    
6 [0x6]:          movr adx, ebx   
7 [0x7]:          chklen adx   
8 [0x8]:          movnd adx   
9 [0x9]:          returnobj   
10 [0xa]:          ret   


constructor: std.io#thread_result.thread_result[1803] params(0) in file: lib/support/0.2.805//io//thread_kernel.sharp:38:7: note:  
		mutate thread_result {
		      ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1608 // <std#_enum_._enum_>   
2 [0x2]:         ret   


std.io#uncaught_exception_handler.uncaught_exception[1804] params(1) in file: lib/support/0.2.805//io//uncaught_exception_handler.sharp:4:8: note:  
		    def uncaught_exception(err: throwable);
		       ^



constructor: std.io#uncaught_exception_handler.uncaught_exception_handler[1805] params(0) in file: lib/support/0.2.805//io//uncaught_exception_handler.sharp:3:10: note:  
		interface uncaught_exception_handler {
		         ^

0 [0x0]:         ret   


function: std.math#__srt_global.sin[1806] params(1) in file: lib/support/0.2.805//math//math.sharp:14:4: note:  
		def sin(num: var) : var {
		   ^

0 [0x0]: line: 15 ipushl #0   
1 [0x1]:          istore 0   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.cos[1807] params(1) in file: lib/support/0.2.805//math//math.sharp:18:4: note:  
		def cos(num: var) : var {
		   ^

0 [0x0]: line: 19 ipushl #0   
1 [0x1]:          istore 1   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.tan[1808] params(1) in file: lib/support/0.2.805//math//math.sharp:22:4: note:  
		def tan(num: var) : var {
		   ^

0 [0x0]: line: 23 ipushl #0   
1 [0x1]:          istore 2   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.sinh[1809] params(1) in file: lib/support/0.2.805//math//math.sharp:26:4: note:  
		def sinh(num: var) : var {
		   ^

0 [0x0]: line: 27 ipushl #0   
1 [0x1]:          istore 3   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.cosh[1810] params(1) in file: lib/support/0.2.805//math//math.sharp:30:4: note:  
		def cosh(num: var) : var {
		   ^

0 [0x0]: line: 31 ipushl #0   
1 [0x1]:          istore 4   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.tanh[1811] params(1) in file: lib/support/0.2.805//math//math.sharp:34:4: note:  
		def tanh(num: var) : var {
		   ^

0 [0x0]: line: 35 ipushl #0   
1 [0x1]:          istore 5   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.asin[1812] params(1) in file: lib/support/0.2.805//math//math.sharp:38:4: note:  
		def asin(num: var) : var {
		   ^

0 [0x0]: line: 39 ipushl #0   
1 [0x1]:          istore 6   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.acos[1813] params(1) in file: lib/support/0.2.805//math//math.sharp:42:4: note:  
		def acos(num: var) : var {
		   ^

0 [0x0]: line: 43 ipushl #0   
1 [0x1]:          istore 7   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.atan[1814] params(1) in file: lib/support/0.2.805//math//math.sharp:46:4: note:  
		def atan(num: var) : var {
		   ^

0 [0x0]: line: 47 ipushl #0   
1 [0x1]:          istore 8   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.atan[1815] params(2) in file: lib/support/0.2.805//math//math.sharp:50:4: note:  
		def atan(num1: var, num2: var) : var {
		   ^

0 [0x0]: line: 51 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          istore 9   
4 [0x4]:          call @1829 // <std.math#__srt_global.math_proc>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.math#__srt_global.exp[1816] params(1) in file: lib/support/0.2.805//math//math.sharp:54:4: note:  
		def exp(num: var) : var {
		   ^

0 [0x0]: line: 55 ipushl #0   
1 [0x1]:          istore 10   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.log[1817] params(1) in file: lib/support/0.2.805//math//math.sharp:58:4: note:  
		def log(num: var) : var {
		   ^

0 [0x0]: line: 59 ipushl #0   
1 [0x1]:          istore 11   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.log10[1818] params(1) in file: lib/support/0.2.805//math//math.sharp:62:4: note:  
		def log10(num: var) : var {
		   ^

0 [0x0]: line: 63 ipushl #0   
1 [0x1]:          istore 12   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.pow[1819] params(2) in file: lib/support/0.2.805//math//math.sharp:66:4: note:  
		def pow(num: var, exp: var) : var {
		   ^

0 [0x0]: line: 67 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          istore 13   
4 [0x4]:          call @1829 // <std.math#__srt_global.math_proc>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.math#__srt_global.sqrt[1820] params(1) in file: lib/support/0.2.805//math//math.sharp:70:4: note:  
		def sqrt(num: var) : var {
		   ^

0 [0x0]: line: 71 ipushl #0   
1 [0x1]:          istore 14   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.ceil[1821] params(1) in file: lib/support/0.2.805//math//math.sharp:74:4: note:  
		def ceil(num: var) : var {
		   ^

0 [0x0]: line: 75 ipushl #0   
1 [0x1]:          istore 15   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.floor[1822] params(1) in file: lib/support/0.2.805//math//math.sharp:78:4: note:  
		def floor(num: var) : var {
		   ^

0 [0x0]: line: 79 ipushl #0   
1 [0x1]:          istore 16   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.abs[1823] params(1) in file: lib/support/0.2.805//math//math.sharp:82:4: note:  
		def abs(num: var) : var {
		   ^

0 [0x0]: line: 83 ipushl #0   
1 [0x1]:          call @1824 // <std.math#__srt_global.fabs>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std.math#__srt_global.fabs[1824] params(1) in file: lib/support/0.2.805//math//math.sharp:86:4: note:  
		def fabs(num: var) : var {
		   ^

0 [0x0]: line: 87 ipushl #0   
1 [0x1]:          istore 17   
3 [0x3]:          call @1828 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.ldexp[1825] params(2) in file: lib/support/0.2.805//math//math.sharp:90:4: note:  
		def ldexp(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 91 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          istore 18   
4 [0x4]:          call @1829 // <std.math#__srt_global.math_proc>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.math#__srt_global.fmod[1826] params(2) in file: lib/support/0.2.805//math//math.sharp:94:4: note:  
		def fmod(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 95 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          istore 19   
4 [0x4]:          call @1829 // <std.math#__srt_global.math_proc>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.math#__srt_global.round[1827] params(1) in file: lib/support/0.2.805//math//math.sharp:98:4: note:  
		def round(num: var) : var {
		   ^

0 [0x0]: line: 99 loadl ebx, fp+0   
1 [0x1]:          mov64 ebx, ebx   
2 [0x2]:          mov64 ebx, ebx   
3 [0x3]:          smovr_2 ebx, fp+1   
4 [0x4]: line: 100 ipushl #1   
5 [0x5]:           loadl ebx, fp+0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ecx, adx   
9 [0x9]:           loadval ebx   
10 [0xa]:           sub ecx, ebx -> ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]: line: 102 ipushl #0   
13 [0xd]:           ldc ebx // 0.5   
14 [0xe]:           loadval ecx   
15 [0xf]:           gte ecx, ebx   
16 [0x10]:           jne 25   
17 [0x11]:           ipushl #1   
18 [0x12]:           movi #1, ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           add ecx, ebx -> ebx   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   
24 [0x18]:           jmp @28   
25 [0x19]: line: 103 loadl ebx, fp+1   
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   
28 [0x1c]:           nop   


function: std.math#__srt_global.math_proc[1828] params(2) in file: lib/support/0.2.805//math//math.sharp:106:10: note:  
		local def math_proc(num: var, proc: var) : var {
		         ^

0 [0x0]: line: 107 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl ecx, fp+1   
2 [0x2]:           int 0x18   
3 [0x3]:           return_val cmt   
4 [0x4]:           ret   
5 [0x5]: line: 115 movi #0, ebx   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.math#__srt_global.math_proc[1829] params(3) in file: lib/support/0.2.805//math//math.sharp:118:10: note:  
		local def math_proc(num:var, num2: var, proc: var) : var {
		         ^

0 [0x0]: line: 119 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl egx, fp+1   
2 [0x2]:           loadl ecx, fp+2   
3 [0x3]:           int 0x18   
4 [0x4]:           return_val cmt   
5 [0x5]:           ret   
6 [0x6]: line: 128 movi #0, ebx   : protected asm end
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std#_nil_.to_string[1830] params(0) in file: lib/support/0.2.805//nil.sharp:14:15: note:  
		    public def to_string() := new string("nil");
		              ^

0 [0x0]: line: 14 new_class @58 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @1 // nil   
3 [0x3]:          call @2823 // <std#string.string>   
4 [0x4]:          movsl #0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   


constructor: std#_nil_._nil_[1831] params(0) in file: lib/support/0.2.805//nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


function: std#_object_.to_string[1832] params(0) in file: lib/support/0.2.805//object.sharp:13:15: note:  
		    public def to_string() := new string();
		              ^

0 [0x0]: line: 13 new_class @58 // std#string   
1 [0x1]:          dup    
2 [0x2]:          call @2863 // <std#string.string>   
3 [0x3]:          movsl #0   
4 [0x4]:          returnobj   
5 [0x5]:          ret   


function: std#_object_.hash[1833] params(0) in file: lib/support/0.2.805//object.sharp:15:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 17 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          istore 0   
4 [0x4]:          call @1965 // <std#long.long>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: std#_object_.guid[1834] params(0) in file: lib/support/0.2.805//object.sharp:20:8: note:  
		    def guid() : long {
		       ^

0 [0x0]: line: 22 new_class @40 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movg @1 // @std#__srt_global   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr egx, ebx   
9 [0x9]:          inc ebx   
10 [0xa]:          movi #0, adx   
12 [0xc]:          rmov adx, ebx   
13 [0xd]:          rstore egx   
14 [0xe]:          call @1965 // <std#long.long>   
15 [0xf]:          popobj2    
16 [0x10]:          returnobj   
17 [0x11]:          ret   


constructor: std#_object_._object_[1835] params(0) in file: lib/support/0.2.805//object.sharp:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         ret   


function: platform#build.is_windows[1836] params(0) in file: lib/support/0.2.805//platform//build.sharp:9:15: note:  
		    static def is_windows() : var {
		              ^

0 [0x0]: line: 10 movg @34 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @11 // win   
5 [0x5]:          call @2838 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: platform#build.is_linux[1837] params(0) in file: lib/support/0.2.805//platform//build.sharp:13:15: note:  
		    static def is_linux() : var {
		              ^

0 [0x0]: line: 14 movg @34 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @12 // posix   
5 [0x5]:          call @2838 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: platform#build.build[1838] params(0) in file: lib/support/0.2.805//platform//build.sharp:3:6: note:  
		class build {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


function: platform.kernel#platform.tls_init[1839] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:13:15: note:  
		    static def tls_init() {}
		              ^

0 [0x0]: line: 13 ret   


function: platform.kernel#platform.static_init[1840] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:14:23: note:  
		    private static def static_init() {}
		                      ^

0 [0x0]: line: 14 new_class @23 // std.io.task#job_state   
1 [0x1]:          movg @23 // @std.io.task#job_state   
2 [0x2]:          movn #0   
4 [0x4]:          popobj   
5 [0x5]:          newstr @23 // created   
6 [0x6]:          movg @23 // @std.io.task#job_state   
7 [0x7]:          movn #0   
9 [0x9]:          movn #0   
11 [0xb]:          popobj   
12 [0xc]:          movi #-1, ebx   
14 [0xe]:          movg @23 // @std.io.task#job_state   
15 [0xf]:          movn #0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          rmov adx, ebx   
22 [0x16]:          new_class @23 // std.io.task#job_state   
23 [0x17]:          movg @23 // @std.io.task#job_state   
24 [0x18]:          movn #1   
26 [0x1a]:          popobj   
27 [0x1b]:          newstr @24 // active   
28 [0x1c]:          movg @23 // @std.io.task#job_state   
29 [0x1d]:          movn #1   
31 [0x1f]:          movn #0   
33 [0x21]:          popobj   
34 [0x22]:          movi #0, ebx   
36 [0x24]:          movg @23 // @std.io.task#job_state   
37 [0x25]:          movn #1   
39 [0x27]:          movn #1   
41 [0x29]:          movi #0, adx   
43 [0x2b]:          rmov adx, ebx   
44 [0x2c]:          new_class @23 // std.io.task#job_state   
45 [0x2d]:          movg @23 // @std.io.task#job_state   
46 [0x2e]:          movn #2   
48 [0x30]:          popobj   
49 [0x31]:          newstr @25 // completed   
50 [0x32]:          movg @23 // @std.io.task#job_state   
51 [0x33]:          movn #2   
53 [0x35]:          movn #0   
55 [0x37]:          popobj   
56 [0x38]:          movi #1, ebx   
58 [0x3a]:          movg @23 // @std.io.task#job_state   
59 [0x3b]:          movn #2   
61 [0x3d]:          movn #1   
63 [0x3f]:          movi #0, adx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          new_class @23 // std.io.task#job_state   
67 [0x43]:          movg @23 // @std.io.task#job_state   
68 [0x44]:          movn #3   
70 [0x46]:          popobj   
71 [0x47]:          newstr @26 // cancelled   
72 [0x48]:          movg @23 // @std.io.task#job_state   
73 [0x49]:          movn #3   
75 [0x4b]:          movn #0   
77 [0x4d]:          popobj   
78 [0x4e]:          movi #2, ebx   
80 [0x50]:          movg @23 // @std.io.task#job_state   
81 [0x51]:          movn #3   
83 [0x53]:          movn #1   
85 [0x55]:          movi #0, adx   
87 [0x57]:          rmov adx, ebx   
88 [0x58]:          new_class @27 // std.io#thread_priority   
89 [0x59]:          movg @27 // @std.io#thread_priority   
90 [0x5a]:          movn #0   
92 [0x5c]:          popobj   
93 [0x5d]:          newstr @27 // min_priority   
94 [0x5e]:          movg @27 // @std.io#thread_priority   
95 [0x5f]:          movn #0   
97 [0x61]:          movn #0   
99 [0x63]:          popobj   
100 [0x64]:          movi #1, ebx   
102 [0x66]:          movg @27 // @std.io#thread_priority   
103 [0x67]:          movn #0   
105 [0x69]:          movn #1   
107 [0x6b]:          movi #0, adx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          new_class @27 // std.io#thread_priority   
111 [0x6f]:          movg @27 // @std.io#thread_priority   
112 [0x70]:          movn #1   
114 [0x72]:          popobj   
115 [0x73]:          newstr @28 // norm_priority   
116 [0x74]:          movg @27 // @std.io#thread_priority   
117 [0x75]:          movn #1   
119 [0x77]:          movn #0   
121 [0x79]:          popobj   
122 [0x7a]:          movi #4, ebx   
124 [0x7c]:          movg @27 // @std.io#thread_priority   
125 [0x7d]:          movn #1   
127 [0x7f]:          movn #1   
129 [0x81]:          movi #0, adx   
131 [0x83]:          rmov adx, ebx   
132 [0x84]:          new_class @27 // std.io#thread_priority   
133 [0x85]:          movg @27 // @std.io#thread_priority   
134 [0x86]:          movn #2   
136 [0x88]:          popobj   
137 [0x89]:          newstr @29 // max_priority   
138 [0x8a]:          movg @27 // @std.io#thread_priority   
139 [0x8b]:          movn #2   
141 [0x8d]:          movn #0   
143 [0x8f]:          popobj   
144 [0x90]:          movi #6, ebx   
146 [0x92]:          movg @27 // @std.io#thread_priority   
147 [0x93]:          movn #2   
149 [0x95]:          movn #1   
151 [0x97]:          movi #0, adx   
153 [0x99]:          rmov adx, ebx   
154 [0x9a]:          new_class @28 // std.io#thread_result   
155 [0x9b]:          movg @28 // @std.io#thread_result   
156 [0x9c]:          movn #0   
158 [0x9e]:          popobj   
159 [0x9f]:          newstr @30 // result_ok   
160 [0xa0]:          movg @28 // @std.io#thread_result   
161 [0xa1]:          movn #0   
163 [0xa3]:          movn #0   
165 [0xa5]:          popobj   
166 [0xa6]:          movi #0, ebx   
168 [0xa8]:          movg @28 // @std.io#thread_result   
169 [0xa9]:          movn #0   
171 [0xab]:          movn #1   
173 [0xad]:          movi #0, adx   
175 [0xaf]:          rmov adx, ebx   
176 [0xb0]:          new_class @28 // std.io#thread_result   
177 [0xb1]:          movg @28 // @std.io#thread_result   
178 [0xb2]:          movn #1   
180 [0xb4]:          popobj   
181 [0xb5]:          newstr @31 // result_ill_thread_start   
182 [0xb6]:          movg @28 // @std.io#thread_result   
183 [0xb7]:          movn #1   
185 [0xb9]:          movn #0   
187 [0xbb]:          popobj   
188 [0xbc]:          movi #1, ebx   
190 [0xbe]:          movg @28 // @std.io#thread_result   
191 [0xbf]:          movn #1   
193 [0xc1]:          movn #1   
195 [0xc3]:          movi #0, adx   
197 [0xc5]:          rmov adx, ebx   
198 [0xc6]:          new_class @28 // std.io#thread_result   
199 [0xc7]:          movg @28 // @std.io#thread_result   
200 [0xc8]:          movn #2   
202 [0xca]:          popobj   
203 [0xcb]:          newstr @32 // result_thread_running   
204 [0xcc]:          movg @28 // @std.io#thread_result   
205 [0xcd]:          movn #2   
207 [0xcf]:          movn #0   
209 [0xd1]:          popobj   
210 [0xd2]:          movi #2, ebx   
212 [0xd4]:          movg @28 // @std.io#thread_result   
213 [0xd5]:          movn #2   
215 [0xd7]:          movn #1   
217 [0xd9]:          movi #0, adx   
219 [0xdb]:          rmov adx, ebx   
220 [0xdc]:          new_class @28 // std.io#thread_result   
221 [0xdd]:          movg @28 // @std.io#thread_result   
222 [0xde]:          movn #3   
224 [0xe0]:          popobj   
225 [0xe1]:          newstr @33 // result_thread_terminated   
226 [0xe2]:          movg @28 // @std.io#thread_result   
227 [0xe3]:          movn #3   
229 [0xe5]:          movn #0   
231 [0xe7]:          popobj   
232 [0xe8]:          movi #3, ebx   
234 [0xea]:          movg @28 // @std.io#thread_result   
235 [0xeb]:          movn #3   
237 [0xed]:          movn #1   
239 [0xef]:          movi #0, adx   
241 [0xf1]:          rmov adx, ebx   
242 [0xf2]:          new_class @28 // std.io#thread_result   
243 [0xf3]:          movg @28 // @std.io#thread_result   
244 [0xf4]:          movn #4   
246 [0xf6]:          popobj   
247 [0xf7]:          newstr @34 // result_invalid_stack_size   
248 [0xf8]:          movg @28 // @std.io#thread_result   
249 [0xf9]:          movn #4   
251 [0xfb]:          movn #0   
253 [0xfd]:          popobj   
254 [0xfe]:          movi #4, ebx   
256 [0x100]:          movg @28 // @std.io#thread_result   
257 [0x101]:          movn #4   
259 [0x103]:          movn #1   
261 [0x105]:          movi #0, adx   
263 [0x107]:          rmov adx, ebx   
264 [0x108]:          new_class @28 // std.io#thread_result   
265 [0x109]:          movg @28 // @std.io#thread_result   
266 [0x10a]:          movn #5   
268 [0x10c]:          popobj   
269 [0x10d]:          newstr @35 // result_thread_not_started   
270 [0x10e]:          movg @28 // @std.io#thread_result   
271 [0x10f]:          movn #5   
273 [0x111]:          movn #0   
275 [0x113]:          popobj   
276 [0x114]:          movi #5, ebx   
278 [0x116]:          movg @28 // @std.io#thread_result   
279 [0x117]:          movn #5   
281 [0x119]:          movn #1   
283 [0x11b]:          movi #0, adx   
285 [0x11d]:          rmov adx, ebx   
286 [0x11e]:          new_class @28 // std.io#thread_result   
287 [0x11f]:          movg @28 // @std.io#thread_result   
288 [0x120]:          movn #6   
290 [0x122]:          popobj   
291 [0x123]:          newstr @36 // result_ill_thread_join   
292 [0x124]:          movg @28 // @std.io#thread_result   
293 [0x125]:          movn #6   
295 [0x127]:          movn #0   
297 [0x129]:          popobj   
298 [0x12a]:          movi #6, ebx   
300 [0x12c]:          movg @28 // @std.io#thread_result   
301 [0x12d]:          movn #6   
303 [0x12f]:          movn #1   
305 [0x131]:          movi #0, adx   
307 [0x133]:          rmov adx, ebx   
308 [0x134]:          new_class @28 // std.io#thread_result   
309 [0x135]:          movg @28 // @std.io#thread_result   
310 [0x136]:          movn #7   
312 [0x138]:          popobj   
313 [0x139]:          newstr @37 // result_thread_join_failed   
314 [0x13a]:          movg @28 // @std.io#thread_result   
315 [0x13b]:          movn #7   
317 [0x13d]:          movn #0   
319 [0x13f]:          popobj   
320 [0x140]:          movi #7, ebx   
322 [0x142]:          movg @28 // @std.io#thread_result   
323 [0x143]:          movn #7   
325 [0x145]:          movn #1   
327 [0x147]:          movi #0, adx   
329 [0x149]:          rmov adx, ebx   
330 [0x14a]:          new_class @28 // std.io#thread_result   
331 [0x14b]:          movg @28 // @std.io#thread_result   
332 [0x14c]:          movn #8   
334 [0x14e]:          popobj   
335 [0x14f]:          newstr @38 // result_ill_thread_interrupt   
336 [0x150]:          movg @28 // @std.io#thread_result   
337 [0x151]:          movn #8   
339 [0x153]:          movn #0   
341 [0x155]:          popobj   
342 [0x156]:          movi #8, ebx   
344 [0x158]:          movg @28 // @std.io#thread_result   
345 [0x159]:          movn #8   
347 [0x15b]:          movn #1   
349 [0x15d]:          movi #0, adx   
351 [0x15f]:          rmov adx, ebx   
352 [0x160]:          new_class @28 // std.io#thread_result   
353 [0x161]:          movg @28 // @std.io#thread_result   
354 [0x162]:          movn #9   
356 [0x164]:          popobj   
357 [0x165]:          newstr @39 // result_thread_interrupt_failed   
358 [0x166]:          movg @28 // @std.io#thread_result   
359 [0x167]:          movn #9   
361 [0x169]:          movn #0   
363 [0x16b]:          popobj   
364 [0x16c]:          movi #9, ebx   
366 [0x16e]:          movg @28 // @std.io#thread_result   
367 [0x16f]:          movn #9   
369 [0x171]:          movn #1   
371 [0x173]:          movi #0, adx   
373 [0x175]:          rmov adx, ebx   
374 [0x176]:          new_class @28 // std.io#thread_result   
375 [0x177]:          movg @28 // @std.io#thread_result   
376 [0x178]:          movn #10   
378 [0x17a]:          popobj   
379 [0x17b]:          newstr @40 // result_ill_thread_destroy   
380 [0x17c]:          movg @28 // @std.io#thread_result   
381 [0x17d]:          movn #10   
383 [0x17f]:          movn #0   
385 [0x181]:          popobj   
386 [0x182]:          movi #10, ebx   
388 [0x184]:          movg @28 // @std.io#thread_result   
389 [0x185]:          movn #10   
391 [0x187]:          movn #1   
393 [0x189]:          movi #0, adx   
395 [0x18b]:          rmov adx, ebx   
396 [0x18c]:          new_class @28 // std.io#thread_result   
397 [0x18d]:          movg @28 // @std.io#thread_result   
398 [0x18e]:          movn #11   
400 [0x190]:          popobj   
401 [0x191]:          newstr @41 // result_thread_create_failed   
402 [0x192]:          movg @28 // @std.io#thread_result   
403 [0x193]:          movn #11   
405 [0x195]:          movn #0   
407 [0x197]:          popobj   
408 [0x198]:          movi #11, ebx   
410 [0x19a]:          movg @28 // @std.io#thread_result   
411 [0x19b]:          movn #11   
413 [0x19d]:          movn #1   
415 [0x19f]:          movi #0, adx   
417 [0x1a1]:          rmov adx, ebx   
418 [0x1a2]:          new_class @28 // std.io#thread_result   
419 [0x1a3]:          movg @28 // @std.io#thread_result   
420 [0x1a4]:          movn #12   
422 [0x1a6]:          popobj   
423 [0x1a7]:          newstr @42 // result_no_thread_id   
424 [0x1a8]:          movg @28 // @std.io#thread_result   
425 [0x1a9]:          movn #12   
427 [0x1ab]:          movn #0   
429 [0x1ad]:          popobj   
430 [0x1ae]:          movi #12, ebx   
432 [0x1b0]:          movg @28 // @std.io#thread_result   
433 [0x1b1]:          movn #12   
435 [0x1b3]:          movn #1   
437 [0x1b5]:          movi #0, adx   
439 [0x1b7]:          rmov adx, ebx   
440 [0x1b8]:          new_class @28 // std.io#thread_result   
441 [0x1b9]:          movg @28 // @std.io#thread_result   
442 [0x1ba]:          movn #13   
444 [0x1bc]:          popobj   
445 [0x1bd]:          newstr @43 // result_thread_destroy_failed   
446 [0x1be]:          movg @28 // @std.io#thread_result   
447 [0x1bf]:          movn #13   
449 [0x1c1]:          movn #0   
451 [0x1c3]:          popobj   
452 [0x1c4]:          movi #13, ebx   
454 [0x1c6]:          movg @28 // @std.io#thread_result   
455 [0x1c7]:          movn #13   
457 [0x1c9]:          movn #1   
459 [0x1cb]:          movi #0, adx   
461 [0x1cd]:          rmov adx, ebx   
462 [0x1ce]:          new_class @28 // std.io#thread_result   
463 [0x1cf]:          movg @28 // @std.io#thread_result   
464 [0x1d0]:          movn #14   
466 [0x1d2]:          popobj   
467 [0x1d3]:          newstr @44 // result_ill_priority_set   
468 [0x1d4]:          movg @28 // @std.io#thread_result   
469 [0x1d5]:          movn #14   
471 [0x1d7]:          movn #0   
473 [0x1d9]:          popobj   
474 [0x1da]:          movi #14, ebx   
476 [0x1dc]:          movg @28 // @std.io#thread_result   
477 [0x1dd]:          movn #14   
479 [0x1df]:          movn #1   
481 [0x1e1]:          movi #0, adx   
483 [0x1e3]:          rmov adx, ebx   
484 [0x1e4]:          new_class @28 // std.io#thread_result   
485 [0x1e5]:          movg @28 // @std.io#thread_result   
486 [0x1e6]:          movn #15   
488 [0x1e8]:          popobj   
489 [0x1e9]:          newstr @45 // result_ill_thread_suspend   
490 [0x1ea]:          movg @28 // @std.io#thread_result   
491 [0x1eb]:          movn #15   
493 [0x1ed]:          movn #0   
495 [0x1ef]:          popobj   
496 [0x1f0]:          movi #15, ebx   
498 [0x1f2]:          movg @28 // @std.io#thread_result   
499 [0x1f3]:          movn #15   
501 [0x1f5]:          movn #1   
503 [0x1f7]:          movi #0, adx   
505 [0x1f9]:          rmov adx, ebx   
506 [0x1fa]:          new_class @28 // std.io#thread_result   
507 [0x1fb]:          movg @28 // @std.io#thread_result   
508 [0x1fc]:          movn #16   
510 [0x1fe]:          popobj   
511 [0x1ff]:          newstr @46 // result_max_spin   
512 [0x200]:          movg @28 // @std.io#thread_result   
513 [0x201]:          movn #16   
515 [0x203]:          movn #0   
517 [0x205]:          popobj   
518 [0x206]:          movi #255, ebx   
520 [0x208]:          movg @28 // @std.io#thread_result   
521 [0x209]:          movn #16   
523 [0x20b]:          movn #1   
525 [0x20d]:          movi #0, adx   
527 [0x20f]:          rmov adx, ebx   
528 [0x210]:          new_class @28 // std.io#thread_result   
529 [0x211]:          movg @28 // @std.io#thread_result   
530 [0x212]:          movn #17   
532 [0x214]:          popobj   
533 [0x215]:          newstr @47 // enums   
534 [0x216]:          movg @28 // @std.io#thread_result   
535 [0x217]:          movn #17   
537 [0x219]:          movn #0   
539 [0x21b]:          popobj   
540 [0x21c]:          movi #256, ebx   
542 [0x21e]:          movg @28 // @std.io#thread_result   
543 [0x21f]:          movn #17   
545 [0x221]:          movn #1   
547 [0x223]:          movi #0, adx   
549 [0x225]:          rmov adx, ebx   
550 [0x226]:          new_class @53 // std.reflect#property_type   
551 [0x227]:          movg @53 // @std.reflect#property_type   
552 [0x228]:          movn #0   
554 [0x22a]:          popobj   
555 [0x22b]:          newstr @48 // class_property   
556 [0x22c]:          movg @53 // @std.reflect#property_type   
557 [0x22d]:          movn #0   
559 [0x22f]:          movn #0   
561 [0x231]:          popobj   
562 [0x232]:          movi #59184, ebx   
564 [0x234]:          movg @53 // @std.reflect#property_type   
565 [0x235]:          movn #0   
567 [0x237]:          movn #1   
569 [0x239]:          movi #0, adx   
571 [0x23b]:          rmov adx, ebx   
572 [0x23c]:          new_class @53 // std.reflect#property_type   
573 [0x23d]:          movg @53 // @std.reflect#property_type   
574 [0x23e]:          movn #1   
576 [0x240]:          popobj   
577 [0x241]:          newstr @49 // field_property   
578 [0x242]:          movg @53 // @std.reflect#property_type   
579 [0x243]:          movn #1   
581 [0x245]:          movn #0   
583 [0x247]:          popobj   
584 [0x248]:          movi #59185, ebx   
586 [0x24a]:          movg @53 // @std.reflect#property_type   
587 [0x24b]:          movn #1   
589 [0x24d]:          movn #1   
591 [0x24f]:          movi #0, adx   
593 [0x251]:          rmov adx, ebx   
594 [0x252]:          new_class @53 // std.reflect#property_type   
595 [0x253]:          movg @53 // @std.reflect#property_type   
596 [0x254]:          movn #2   
598 [0x256]:          popobj   
599 [0x257]:          newstr @50 // function_property   
600 [0x258]:          movg @53 // @std.reflect#property_type   
601 [0x259]:          movn #2   
603 [0x25b]:          movn #0   
605 [0x25d]:          popobj   
606 [0x25e]:          movi #59186, ebx   
608 [0x260]:          movg @53 // @std.reflect#property_type   
609 [0x261]:          movn #2   
611 [0x263]:          movn #1   
613 [0x265]:          movi #0, adx   
615 [0x267]:          rmov adx, ebx   
616 [0x268]:          new_class @61 // std#time_unit   
617 [0x269]:          movg @61 // @std#time_unit   
618 [0x26a]:          movn #0   
620 [0x26c]:          popobj   
621 [0x26d]:          newstr @51 // seconds   
622 [0x26e]:          movg @61 // @std#time_unit   
623 [0x26f]:          movn #0   
625 [0x271]:          movn #0   
627 [0x273]:          popobj   
628 [0x274]:          movi #0, ebx   
630 [0x276]:          movg @61 // @std#time_unit   
631 [0x277]:          movn #0   
633 [0x279]:          movn #1   
635 [0x27b]:          movi #0, adx   
637 [0x27d]:          rmov adx, ebx   
638 [0x27e]:          new_class @61 // std#time_unit   
639 [0x27f]:          movg @61 // @std#time_unit   
640 [0x280]:          movn #1   
642 [0x282]:          popobj   
643 [0x283]:          newstr @52 // milliseconds   
644 [0x284]:          movg @61 // @std#time_unit   
645 [0x285]:          movn #1   
647 [0x287]:          movn #0   
649 [0x289]:          popobj   
650 [0x28a]:          movi #1, ebx   
652 [0x28c]:          movg @61 // @std#time_unit   
653 [0x28d]:          movn #1   
655 [0x28f]:          movn #1   
657 [0x291]:          movi #0, adx   
659 [0x293]:          rmov adx, ebx   
660 [0x294]:          new_class @61 // std#time_unit   
661 [0x295]:          movg @61 // @std#time_unit   
662 [0x296]:          movn #2   
664 [0x298]:          popobj   
665 [0x299]:          newstr @53 // microseconds   
666 [0x29a]:          movg @61 // @std#time_unit   
667 [0x29b]:          movn #2   
669 [0x29d]:          movn #0   
671 [0x29f]:          popobj   
672 [0x2a0]:          movi #2, ebx   
674 [0x2a2]:          movg @61 // @std#time_unit   
675 [0x2a3]:          movn #2   
677 [0x2a5]:          movn #1   
679 [0x2a7]:          movi #0, adx   
681 [0x2a9]:          rmov adx, ebx   
682 [0x2aa]:          new_class @61 // std#time_unit   
683 [0x2ab]:          movg @61 // @std#time_unit   
684 [0x2ac]:          movn #3   
686 [0x2ae]:          popobj   
687 [0x2af]:          newstr @54 // nanoseconds   
688 [0x2b0]:          movg @61 // @std#time_unit   
689 [0x2b1]:          movn #3   
691 [0x2b3]:          movn #0   
693 [0x2b5]:          popobj   
694 [0x2b6]:          movi #3, ebx   
696 [0x2b8]:          movg @61 // @std#time_unit   
697 [0x2b9]:          movn #3   
699 [0x2bb]:          movn #1   
701 [0x2bd]:          movi #0, adx   
703 [0x2bf]:          rmov adx, ebx   
704 [0x2c0]:          movg @36 // @platform.kernel#platform   
705 [0x2c1]:          movn #0   
707 [0x2c3]:          movi #0, adx   
709 [0x2c5]:          movi #1556, ebx   
711 [0x2c7]:          rmov adx, ebx   
712 [0x2c8]:          call @3073 // <app#__srt_global.$03internal_static_init>   
713 [0x2c9]:          call @3074 // <std.io#__srt_global.$03internal_static_init>   
714 [0x2ca]:          call @3075 // <std.io.task#job.$03internal_static_init>   
715 [0x2cb]:          call @3076 // <std.io.task#__srt_global.$03internal_static_init>   
716 [0x2cc]:          call @3077 // <std.io#thread_group.$03internal_static_init>   
717 [0x2cd]:          call @3078 // <std#_nil_.$03internal_static_init>   
718 [0x2ce]:          call @3079 // <std#__srt_global.$03internal_static_init>   
719 [0x2cf]:          call @3080 // <std#string.$03internal_static_init>   
720 [0x2d0]:          call @3081 // <std#string_builder.$03internal_static_init>   
721 [0x2d1]:          call @3082 // <std#time.$03internal_static_init>   
722 [0x2d2]:          call @3083 // <std.io#thread_result.$03internal_static_init>   
723 [0x2d3]:          ret   


function: platform.kernel#platform.exit[1841] params(1) in file: lib/support/0.2.805//platform//kernel//platform.sharp:16:15: note:  
		    static def exit(value: var) {
		              ^

0 [0x0]: line: 17 ipushl #0   : protected asm start
1 [0x1]:          int 0x1d   
2 [0x2]:          ret   : protected asm end


function: platform.kernel#platform.srt_init[1842] params(1) in file: lib/support/0.2.805//platform//kernel//platform.sharp:23:23: note:  
		    private static def srt_init(args: object[]) : var {
		                      ^

0 [0x0]: line: 24 new_class @58 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @3 //    
3 [0x3]:          call @2823 // <std#string.string>   
4 [0x4]:          pushl 0   
5 [0x5]:          movi #0, ebx   
7 [0x7]:          popobj2    
8 [0x8]:          movr adx, ebx   
9 [0x9]:          chklen adx   
10 [0xa]:          movnd adx   
11 [0xb]:          vcast 0 -> []   
12 [0xc]:          pushobj   
13 [0xd]:          call @2834 // <std#string.operator+>   
14 [0xe]:          movg @34 // @platform#build   
15 [0xf]:          movn #1   
17 [0x11]:          popobj   
18 [0x12]: line: 25 new_class @58 // std#string   
19 [0x13]:          dup    
20 [0x14]:          newstr @3 //    
21 [0x15]:          call @2823 // <std#string.string>   
22 [0x16]:          pushl 0   
23 [0x17]:          movi #1, ebx   
25 [0x19]:          popobj2    
26 [0x1a]:          movr adx, ebx   
27 [0x1b]:          chklen adx   
28 [0x1c]:          movnd adx   
29 [0x1d]:          vcast 0 -> []   
30 [0x1e]:          pushobj   
31 [0x1f]:          call @2834 // <std#string.operator+>   
32 [0x20]:          movg @34 // @platform#build   
33 [0x21]:          movn #3   
35 [0x23]:          popobj   
36 [0x24]: line: 26 new_class @58 // std#string   
37 [0x25]:          dup    
38 [0x26]:          newstr @3 //    
39 [0x27]:          call @2823 // <std#string.string>   
40 [0x28]:          pushl 0   
41 [0x29]:          movi #2, ebx   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          vcast 0 -> []   
48 [0x30]:          pushobj   
49 [0x31]:          call @2834 // <std#string.operator+>   
50 [0x32]:          movg @34 // @platform#build   
51 [0x33]:          movn #2   
53 [0x35]:          popobj   
54 [0x36]: line: 27 new_class @58 // std#string   
55 [0x37]:          dup    
56 [0x38]:          newstr @3 //    
57 [0x39]:          call @2823 // <std#string.string>   
58 [0x3a]:          pushl 0   
59 [0x3b]:          movi #3, ebx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          movnd adx   
65 [0x41]:          vcast 0 -> []   
66 [0x42]:          pushobj   
67 [0x43]:          call @2834 // <std#string.operator+>   
68 [0x44]:          movg @34 // @platform#build   
69 [0x45]:          movn #0   
71 [0x47]:          popobj   
72 [0x48]: line: 29 call @1840 // <platform.kernel#platform.static_init>   
73 [0x49]: line: 30 call @1839 // <platform.kernel#platform.tls_init>   
74 [0x4a]: line: 32 pushl 0   
75 [0x4b]:          movi #4, ebx   
77 [0x4d]:          popobj2    
78 [0x4e]:          movr adx, ebx   
79 [0x4f]:          chklen adx   
80 [0x50]:          movnd adx   
81 [0x51]:          movi #25, cmt   
83 [0x53]:          cast cmt   
84 [0x54]:          smovr_3 fp+1   
85 [0x55]: line: 33 pushl 1   
86 [0x56]:          call @1857 // <platform.kernel#vm.set_thread>   
87 [0x57]: line: 35 movg @27 // @std.io#thread_priority   
88 [0x58]:          movn #2   
90 [0x5a]:          smovr_3 fp+2   
91 [0x5b]: line: 36 movg @26 // @std.io#thread_group   
92 [0x5c]:          movn #0   
94 [0x5e]:          pushobj   
95 [0x5f]:          pushl 1   
96 [0x60]:          call @1792 // <std.io#thread_group.add>   
97 [0x61]: line: 38 movg @26 // @std.io#thread_group   : protected asm start
98 [0x62]:          movn #0   
100 [0x64]:          pushobj   
101 [0x65]:          movl 1   
102 [0x66]:          movn #8   
104 [0x68]:          popobj   
105 [0x69]:          movl 2   
106 [0x6a]:          pushobj   
107 [0x6b]:          movl 1   
108 [0x6c]:          movn #3   
110 [0x6e]:          popobj   
111 [0x6f]: line: 55 movl 0   : protected asm end
112 [0x70]: line: 56 sizeof ebx   
113 [0x71]:          rstore ebx   
114 [0x72]:          movi #5, ebx   
116 [0x74]:          loadval ecx   
117 [0x75]:          sub ecx, ebx -> ebx   
118 [0x76]:          new_classarray ebx  // std#string[]   
119 [0x77]:          popobj2    
120 [0x78]:          smovr_3 fp+3   
121 [0x79]: line: 57 istorel 0, fp+4   
123 [0x7b]: line: 59 istorel 5, fp+5   
125 [0x7d]:          ipushl #5   
126 [0x7e]:          movl 0   
127 [0x7f]:          sizeof ebx   
128 [0x80]:          loadval ecx   
129 [0x81]:          lt ecx, ebx   
130 [0x82]:          jne 156   
131 [0x83]: line: 60 new_class @58 // std#string   
132 [0x84]:          dup    
133 [0x85]:          pushl 0   
134 [0x86]:          loadl ebx, fp+5   
135 [0x87]:          popobj2    
136 [0x88]:          movr adx, ebx   
137 [0x89]:          chklen adx   
138 [0x8a]:          movnd adx   
139 [0x8b]:          vcast 0 -> []   
140 [0x8c]:          pushobj   
141 [0x8d]:          call @2823 // <std#string.string>   
142 [0x8e]:          pushl 3   
143 [0x8f]:          loadl ebx, fp+4   
144 [0x90]:          movr egx, ebx   
145 [0x91]:          inc ebx   
146 [0x92]:          smovr_2 ebx, fp+4   
147 [0x93]:          movr ebx, egx   
148 [0x94]:          popobj2    
149 [0x95]:          movr adx, ebx   
150 [0x96]:          chklen adx   
151 [0x97]:          movnd adx   
152 [0x98]:          popobj   
153 [0x99]:          iaddl 1, fp@5   
155 [0x9b]:          jmp @125   
156 [0x9c]: line: 63 istorel 0, fp+6   
158 [0x9e]: line: 64 movg @36 // @platform.kernel#platform   
159 [0x9f]:          movn #0   
161 [0xa1]:          movi #0, adx   
163 [0xa3]:          iaload ebx, adx   
164 [0xa4]:          rstore ebx   
165 [0xa5]:          movi #0, ebx   
167 [0xa7]:          loadval ecx   
168 [0xa8]:          tne ecx, ebx   
169 [0xa9]:          jne 182   
170 [0xaa]: line: 65 movg @36 // @platform.kernel#platform   
171 [0xab]:          movn #0   
173 [0xad]:          movi #0, adx   
175 [0xaf]:          iaload ebx, adx   
176 [0xb0]:          rstore ebx   
177 [0xb1]:          pushl 3   
178 [0xb2]:          smov ebx, sp+[-1]   
179 [0xb3]:          calld ebx   
180 [0xb4]:          ipopl 6   
181 [0xb5]:          jmp @249   
182 [0xb6]:          movg @36 // @platform.kernel#platform   
183 [0xb7]:          movn #1   
185 [0xb9]:          movi #0, adx   
187 [0xbb]:          iaload ebx, adx   
188 [0xbc]:          rstore ebx   
189 [0xbd]:          movi #0, ebx   
191 [0xbf]:          loadval ecx   
192 [0xc0]:          tne ecx, ebx   
193 [0xc1]:          jne 205   
194 [0xc2]: line: 66 movg @36 // @platform.kernel#platform   
195 [0xc3]:          movn #1   
197 [0xc5]:          movi #0, adx   
199 [0xc7]:          iaload ebx, adx   
200 [0xc8]:          rstore ebx   
201 [0xc9]:          pushl 3   
202 [0xca]:          smov ebx, sp+[-1]   
203 [0xcb]:          calld ebx   
204 [0xcc]:          jmp @249   
205 [0xcd]:          movg @36 // @platform.kernel#platform   
206 [0xce]:          movn #2   
208 [0xd0]:          movi #0, adx   
210 [0xd2]:          iaload ebx, adx   
211 [0xd3]:          rstore ebx   
212 [0xd4]:          movi #0, ebx   
214 [0xd6]:          loadval ecx   
215 [0xd7]:          tne ecx, ebx   
216 [0xd8]:          jne 227   
217 [0xd9]: line: 67 movg @36 // @platform.kernel#platform   
218 [0xda]:          movn #2   
220 [0xdc]:          movi #0, adx   
222 [0xde]:          iaload ebx, adx   
223 [0xdf]:          rstore ebx   
224 [0xe0]:          loadval ebx   
225 [0xe1]:          calld ebx   
226 [0xe2]:          jmp @249   
227 [0xe3]:          movg @36 // @platform.kernel#platform   
228 [0xe4]:          movn #3   
230 [0xe6]:          movi #0, adx   
232 [0xe8]:          iaload ebx, adx   
233 [0xe9]:          rstore ebx   
234 [0xea]:          movi #0, ebx   
236 [0xec]:          loadval ecx   
237 [0xed]:          tne ecx, ebx   
238 [0xee]:          jne 249   
239 [0xef]: line: 68 movg @36 // @platform.kernel#platform   
240 [0xf0]:          movn #3   
242 [0xf2]:          movi #0, adx   
244 [0xf4]:          iaload ebx, adx   
245 [0xf5]:          rstore ebx   
246 [0xf6]:          loadval ebx   
247 [0xf7]:          calld ebx   
248 [0xf8]:          ipopl 6   
249 [0xf9]:          nop   
250 [0xfa]: line: 71 loadl ebx, fp+6   
251 [0xfb]:          return_val ebx   
252 [0xfc]:          ret   


constructor: platform.kernel#platform.platform[1843] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:6:6: note:  
		class platform
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: platform.kernel#stack_state.stack_state[1844] params(0) in file: lib/support/0.2.805//platform//kernel//stack_state.sharp:3:6: note:  
		class stack_state {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


function: platform.kernel#vm.get_frame_info[1845] params(0) in file: lib/support/0.2.805//platform//kernel//vm.sharp:6:15: note:  
		    static def get_frame_info() : stack_state {
		              ^

0 [0x0]: line: 7 int 0x35   : protected asm start
1 [0x1]:         popobj2    
2 [0x2]:         returnobj   
3 [0x3]:         ret   
4 [0x4]: line: 13 pushnull    : protected asm end
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: platform.kernel#vm.get_stack_trace[1846] params(1) in file: lib/support/0.2.805//platform//kernel//vm.sharp:16:15: note:  
		    static def get_stack_trace(info : stack_state) : string {
		              ^

0 [0x0]: line: 17 pushl 0   : protected asm start
1 [0x1]:          int 0x36   
2 [0x2]:          popobj2    
3 [0x3]:          returnobj   
4 [0x4]:          ret   
5 [0x5]: line: 24 pushnull    : protected asm end
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: platform.kernel#vm.thread_create[1847] params(1) in file: lib/support/0.2.805//platform//kernel//vm.sharp:27:15: note:  
		    static def thread_create(daemon: var) : var {
		              ^

0 [0x0]: line: 28 istorel 0, fp+1   
2 [0x2]: line: 29 movi #1801, adx   : protected asm start
4 [0x4]:          loadl ebx, fp+0   
5 [0x5]:          int 0x10   
6 [0x6]:          smovr_2 ebx, fp+1   
7 [0x7]: line: 36 loadl ebx, fp+1   : protected asm end
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: platform.kernel#vm.suspend[1848] params(1) in file: lib/support/0.2.805//platform//kernel//vm.sharp:39:15: note:  
		    static def suspend(t: thread) : thread_result {
		              ^

0 [0x0]: line: 40 pushl 0   
1 [0x1]:          call @1776 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 41 istorel 0, fp+2   
5 [0x5]: line: 43 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0x12   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 49 ipushl #2   : protected asm end
9 [0x9]:          call @1802 // <std.io#thread_result.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#vm.unsuspend[1849] params(2) in file: lib/support/0.2.805//platform//kernel//vm.sharp:52:15: note:  
		    static def unsuspend(t: thread, wait: var) : thread_result {
		              ^

0 [0x0]: line: 53 pushl 0   
1 [0x1]:          call @1776 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 54 istorel 0, fp+3   
5 [0x5]: line: 56 loadl adx, fp+2   : protected asm start
6 [0x6]:          loadl ebx, fp+1   
7 [0x7]:          int 0x13   
8 [0x8]:          smovr_2 cmt, fp+3   
9 [0x9]: line: 63 ipushl #3   : protected asm end
10 [0xa]:          call @1802 // <std.io#thread_result.at>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


function: platform.kernel#vm.thread_join[1850] params(1) in file: lib/support/0.2.805//platform//kernel//vm.sharp:66:15: note:  
		    static def thread_join(t: thread) : thread_result {
		              ^

0 [0x0]: line: 67 pushl 0   
1 [0x1]:          call @1776 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 68 istorel 0, fp+2   
5 [0x5]: line: 70 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xd   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 76 ipushl #2   : protected asm end
9 [0x9]:          call @1802 // <std.io#thread_result.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#vm.kill[1851] params(1) in file: lib/support/0.2.805//platform//kernel//vm.sharp:79:15: note:  
		    static def kill(t: thread) : thread_result {
		              ^

0 [0x0]: line: 80 pushl 0   
1 [0x1]:          call @1776 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 81 istorel 0, fp+2   
5 [0x5]: line: 83 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xe   
7 [0x7]:          smovr_2 cmt, fp+2   : protected asm end
8 [0x8]: line: 89 pushl 0   
9 [0x9]:          istore 1   
11 [0xb]:          call @1853 // <platform.kernel#vm.exit_thread>   
12 [0xc]: line: 90 ipushl #2   
13 [0xd]:          call @1802 // <std.io#thread_result.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: platform.kernel#vm.current_thread[1852] params(0) in file: lib/support/0.2.805//platform//kernel//vm.sharp:93:15: note:  
		    static def current_thread() : thread {
		              ^

0 [0x0]: line: 94 int 0x15   : protected asm start
1 [0x1]:          popobj2    
2 [0x2]:          returnobj   
3 [0x3]:          ret   
4 [0x4]: line: 101 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.exit_thread[1853] params(2) in file: lib/support/0.2.805//platform//kernel//vm.sharp:104:15: note:  
		    static def exit_thread(t: thread, code: var) {
		              ^

0 [0x0]: line: 105 movi #1, ebx   : protected asm start
2 [0x2]:           movi #0, egx   
4 [0x4]:           movi #-1, ecx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #6   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movl 0   
13 [0xd]:           movn #9   
15 [0xf]:           rmov adx, egx   
16 [0x10]:           loadl egx, fp+1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           rmov adx, egx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           rmov adx, ecx   
25 [0x19]:           ret   : protected asm end


function: platform.kernel#vm.thread_yield[1854] params(0) in file: lib/support/0.2.805//platform//kernel//vm.sharp:129:15: note:  
		    static def thread_yield() {
		              ^

0 [0x0]: line: 130 int 0x1c   : protected asm start
1 [0x1]:           ret   : protected asm end


function: platform.kernel#vm.thread_start[1855] params(2) in file: lib/support/0.2.805//platform//kernel//vm.sharp:135:15: note:  
		    static def thread_start(t: thread, args: object[]) : thread_result {
		              ^

0 [0x0]: line: 136 pushl 0   
1 [0x1]:           call @1776 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 137 pushl 0   
4 [0x4]:           call @1777 // <std.io#thread.get_stack_size>   
5 [0x5]:           ipopl 3   
6 [0x6]: line: 138 istorel 0, fp+4   
8 [0x8]: line: 140 loadl ebx, fp+3   : protected asm start
9 [0x9]:           loadl adx, fp+2   
10 [0xa]:           pushl 1   
11 [0xb]:           pushl 0   
12 [0xc]:           int 0xc   
13 [0xd]:           smovr_2 cmt, fp+4   
14 [0xe]: line: 149 ipushl #4   : protected asm end
15 [0xf]:           call @1802 // <std.io#thread_result.at>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: platform.kernel#vm.set_thread_priority[1856] params(2) in file: lib/support/0.2.805//platform//kernel//vm.sharp:152:15: note:  
		    static def set_thread_priority(t: thread, priority: var) : thread_result {
		              ^

0 [0x0]: line: 153 pushl 0   
1 [0x1]:           call @1776 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 154 istorel 0, fp+3   
5 [0x5]: line: 156 loadl adx, fp+2   : protected asm start
6 [0x6]:           loadl egx, fp+1   
7 [0x7]:           int 0x11   
8 [0x8]:           smovr_2 cmt, fp+3   
9 [0x9]: line: 163 ipushl #3   : protected asm end
10 [0xa]:           call @1802 // <std.io#thread_result.at>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: platform.kernel#vm.set_thread[1857] params(1) in file: lib/support/0.2.805//platform//kernel//vm.sharp:166:15: note:  
		    static def set_thread(t: thread) {
		              ^

0 [0x0]: line: 167 pushl 0   : protected asm start
1 [0x1]:           int 0x17   
2 [0x2]:           ret   : protected asm end


function: platform.kernel#vm.thread_args[1858] params(0) in file: lib/support/0.2.805//platform//kernel//vm.sharp:173:15: note:  
		    static def thread_args() : object[] {
		              ^

0 [0x0]: line: 174 int 0x16   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 181 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.cores[1859] params(0) in file: lib/support/0.2.805//platform//kernel//vm.sharp:184:15: note:  
		    static def cores() : var {
		              ^

0 [0x0]: line: 185 istorel 0, fp+0   
2 [0x2]: line: 187 int 0x38   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 192 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


constructor: platform.kernel#vm.vm[1860] params(0) in file: lib/support/0.2.805//platform//kernel//vm.sharp:5:6: note:  
		class vm {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#ulong.ulong[1861] params(1) in file: lib/support/0.2.805//primitives.sharp:254:10: note:  
		    ulong(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1862] params(1) in file: lib/support/0.2.805//primitives.sharp:255:10: note:  
		    ulong(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1863] params(1) in file: lib/support/0.2.805//primitives.sharp:256:10: note:  
		    ulong(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1864] params(1) in file: lib/support/0.2.805//primitives.sharp:257:10: note:  
		    ulong(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1865] params(1) in file: lib/support/0.2.805//primitives.sharp:258:10: note:  
		    ulong(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1866] params(1) in file: lib/support/0.2.805//primitives.sharp:259:10: note:  
		    ulong(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1867] params(1) in file: lib/support/0.2.805//primitives.sharp:260:10: note:  
		    ulong(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1868] params(1) in file: lib/support/0.2.805//primitives.sharp:261:10: note:  
		    ulong(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1869] params(1) in file: lib/support/0.2.805//primitives.sharp:262:10: note:  
		    ulong(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1870] params(1) in file: lib/support/0.2.805//primitives.sharp:263:10: note:  
		    ulong(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[1871] params(1) in file: lib/support/0.2.805//primitives.sharp:264:10: note:  
		    ulong(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @10 // <std#integer<_uint64>.integer>   
3 [0x3]:         ret   


overload function: std#ulong.operator![1872] params(0) in file: lib/support/0.2.805//primitives.sharp:266:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 266 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#ulong.operator++[1873] params(0) in file: lib/support/0.2.805//primitives.sharp:267:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 267 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ulong.operator++[1874] params(1) in file: lib/support/0.2.805//primitives.sharp:268:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 268 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ulong.operator--[1875] params(0) in file: lib/support/0.2.805//primitives.sharp:269:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 269 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ulong.operator--[1876] params(1) in file: lib/support/0.2.805//primitives.sharp:270:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ulong.operator+=[1877] params(1) in file: lib/support/0.2.805//primitives.sharp:272:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 272 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1878] params(1) in file: lib/support/0.2.805//primitives.sharp:273:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 273 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1879] params(1) in file: lib/support/0.2.805//primitives.sharp:274:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 274 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1880] params(1) in file: lib/support/0.2.805//primitives.sharp:275:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 275 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1881] params(1) in file: lib/support/0.2.805//primitives.sharp:276:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 276 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1882] params(1) in file: lib/support/0.2.805//primitives.sharp:277:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 277 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1883] params(1) in file: lib/support/0.2.805//primitives.sharp:278:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 278 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1884] params(1) in file: lib/support/0.2.805//primitives.sharp:279:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 279 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1885] params(1) in file: lib/support/0.2.805//primitives.sharp:280:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 280 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1886] params(1) in file: lib/support/0.2.805//primitives.sharp:281:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 281 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1887] params(1) in file: lib/support/0.2.805//primitives.sharp:282:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 282 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator-=[1888] params(1) in file: lib/support/0.2.805//primitives.sharp:284:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 284 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1889] params(1) in file: lib/support/0.2.805//primitives.sharp:285:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 285 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1890] params(1) in file: lib/support/0.2.805//primitives.sharp:286:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 286 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1891] params(1) in file: lib/support/0.2.805//primitives.sharp:287:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 287 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1892] params(1) in file: lib/support/0.2.805//primitives.sharp:288:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 288 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1893] params(1) in file: lib/support/0.2.805//primitives.sharp:289:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 289 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1894] params(1) in file: lib/support/0.2.805//primitives.sharp:290:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 290 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1895] params(1) in file: lib/support/0.2.805//primitives.sharp:291:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 291 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1896] params(1) in file: lib/support/0.2.805//primitives.sharp:292:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 292 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1897] params(1) in file: lib/support/0.2.805//primitives.sharp:293:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 293 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1898] params(1) in file: lib/support/0.2.805//primitives.sharp:294:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 294 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator*=[1899] params(1) in file: lib/support/0.2.805//primitives.sharp:296:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 296 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1900] params(1) in file: lib/support/0.2.805//primitives.sharp:297:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 297 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1901] params(1) in file: lib/support/0.2.805//primitives.sharp:298:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 298 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1902] params(1) in file: lib/support/0.2.805//primitives.sharp:299:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 299 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1903] params(1) in file: lib/support/0.2.805//primitives.sharp:300:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 300 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1904] params(1) in file: lib/support/0.2.805//primitives.sharp:301:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 301 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1905] params(1) in file: lib/support/0.2.805//primitives.sharp:302:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 302 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1906] params(1) in file: lib/support/0.2.805//primitives.sharp:303:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 303 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1907] params(1) in file: lib/support/0.2.805//primitives.sharp:304:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 304 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1908] params(1) in file: lib/support/0.2.805//primitives.sharp:305:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 305 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[1909] params(1) in file: lib/support/0.2.805//primitives.sharp:306:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 306 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator/=[1910] params(1) in file: lib/support/0.2.805//primitives.sharp:308:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 308 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1911] params(1) in file: lib/support/0.2.805//primitives.sharp:309:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 309 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1912] params(1) in file: lib/support/0.2.805//primitives.sharp:310:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 310 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1913] params(1) in file: lib/support/0.2.805//primitives.sharp:311:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 311 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1914] params(1) in file: lib/support/0.2.805//primitives.sharp:312:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 312 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1915] params(1) in file: lib/support/0.2.805//primitives.sharp:313:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 313 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1916] params(1) in file: lib/support/0.2.805//primitives.sharp:314:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 314 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1917] params(1) in file: lib/support/0.2.805//primitives.sharp:315:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 315 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1918] params(1) in file: lib/support/0.2.805//primitives.sharp:316:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 316 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1919] params(1) in file: lib/support/0.2.805//primitives.sharp:317:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 317 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[1920] params(1) in file: lib/support/0.2.805//primitives.sharp:318:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 318 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator%=[1921] params(1) in file: lib/support/0.2.805//primitives.sharp:320:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 320 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1922] params(1) in file: lib/support/0.2.805//primitives.sharp:321:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 321 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1923] params(1) in file: lib/support/0.2.805//primitives.sharp:322:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 322 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1924] params(1) in file: lib/support/0.2.805//primitives.sharp:323:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 323 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1925] params(1) in file: lib/support/0.2.805//primitives.sharp:324:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 324 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1926] params(1) in file: lib/support/0.2.805//primitives.sharp:325:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 325 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1927] params(1) in file: lib/support/0.2.805//primitives.sharp:326:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 326 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1928] params(1) in file: lib/support/0.2.805//primitives.sharp:327:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 327 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1929] params(1) in file: lib/support/0.2.805//primitives.sharp:328:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 328 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1930] params(1) in file: lib/support/0.2.805//primitives.sharp:329:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 329 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[1931] params(1) in file: lib/support/0.2.805//primitives.sharp:330:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 330 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator&=[1932] params(1) in file: lib/support/0.2.805//primitives.sharp:332:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 332 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1933] params(1) in file: lib/support/0.2.805//primitives.sharp:333:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 333 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1934] params(1) in file: lib/support/0.2.805//primitives.sharp:334:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 334 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1935] params(1) in file: lib/support/0.2.805//primitives.sharp:335:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 335 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1936] params(1) in file: lib/support/0.2.805//primitives.sharp:336:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 336 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1937] params(1) in file: lib/support/0.2.805//primitives.sharp:337:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 337 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1938] params(1) in file: lib/support/0.2.805//primitives.sharp:338:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 338 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1939] params(1) in file: lib/support/0.2.805//primitives.sharp:339:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 339 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1940] params(1) in file: lib/support/0.2.805//primitives.sharp:340:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 340 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1941] params(1) in file: lib/support/0.2.805//primitives.sharp:341:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 341 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[1942] params(1) in file: lib/support/0.2.805//primitives.sharp:342:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 342 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#ulong.operator|=[1943] params(1) in file: lib/support/0.2.805//primitives.sharp:344:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 344 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1944] params(1) in file: lib/support/0.2.805//primitives.sharp:345:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 345 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1945] params(1) in file: lib/support/0.2.805//primitives.sharp:346:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 346 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1946] params(1) in file: lib/support/0.2.805//primitives.sharp:347:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 347 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1947] params(1) in file: lib/support/0.2.805//primitives.sharp:348:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 348 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1948] params(1) in file: lib/support/0.2.805//primitives.sharp:349:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 349 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1949] params(1) in file: lib/support/0.2.805//primitives.sharp:350:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 350 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1950] params(1) in file: lib/support/0.2.805//primitives.sharp:351:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 351 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1951] params(1) in file: lib/support/0.2.805//primitives.sharp:352:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 352 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1952] params(1) in file: lib/support/0.2.805//primitives.sharp:353:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 353 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[1953] params(1) in file: lib/support/0.2.805//primitives.sharp:354:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 354 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#ulong.ulong[1954] params(0) in file: lib/support/0.2.805//primitives.sharp:253:6: note:  
		class ulong base integer<_uint64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @202 // <std#integer<_uint64>.integer>   
2 [0x2]:         ret   


constructor: std#long.long[1955] params(1) in file: lib/support/0.2.805//primitives.sharp:357:9: note:  
		    long(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1956] params(1) in file: lib/support/0.2.805//primitives.sharp:358:9: note:  
		    long(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1957] params(1) in file: lib/support/0.2.805//primitives.sharp:359:9: note:  
		    long(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1958] params(1) in file: lib/support/0.2.805//primitives.sharp:360:9: note:  
		    long(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1959] params(1) in file: lib/support/0.2.805//primitives.sharp:361:9: note:  
		    long(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1960] params(1) in file: lib/support/0.2.805//primitives.sharp:362:9: note:  
		    long(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1961] params(1) in file: lib/support/0.2.805//primitives.sharp:363:9: note:  
		    long(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1962] params(1) in file: lib/support/0.2.805//primitives.sharp:364:9: note:  
		    long(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1963] params(1) in file: lib/support/0.2.805//primitives.sharp:365:9: note:  
		    long(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1964] params(1) in file: lib/support/0.2.805//primitives.sharp:366:9: note:  
		    long(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @203 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[1965] params(1) in file: lib/support/0.2.805//primitives.sharp:367:9: note:  
		    long(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @203 // <std#integer<_int64>.integer>   
3 [0x3]:         ret   


overload function: std#long.operator![1966] params(0) in file: lib/support/0.2.805//primitives.sharp:369:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 369 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#long.operator++[1967] params(0) in file: lib/support/0.2.805//primitives.sharp:370:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 370 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#long.operator++[1968] params(1) in file: lib/support/0.2.805//primitives.sharp:371:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 371 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#long.operator--[1969] params(0) in file: lib/support/0.2.805//primitives.sharp:372:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 372 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#long.operator--[1970] params(1) in file: lib/support/0.2.805//primitives.sharp:373:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 373 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#long.operator+=[1971] params(1) in file: lib/support/0.2.805//primitives.sharp:375:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 375 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1972] params(1) in file: lib/support/0.2.805//primitives.sharp:376:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 376 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1973] params(1) in file: lib/support/0.2.805//primitives.sharp:377:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 377 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1974] params(1) in file: lib/support/0.2.805//primitives.sharp:378:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 378 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1975] params(1) in file: lib/support/0.2.805//primitives.sharp:379:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 379 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1976] params(1) in file: lib/support/0.2.805//primitives.sharp:380:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 380 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1977] params(1) in file: lib/support/0.2.805//primitives.sharp:381:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 381 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1978] params(1) in file: lib/support/0.2.805//primitives.sharp:382:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 382 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1979] params(1) in file: lib/support/0.2.805//primitives.sharp:383:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 383 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1980] params(1) in file: lib/support/0.2.805//primitives.sharp:384:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 384 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[1981] params(1) in file: lib/support/0.2.805//primitives.sharp:385:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 385 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator-=[1982] params(1) in file: lib/support/0.2.805//primitives.sharp:387:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 387 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1983] params(1) in file: lib/support/0.2.805//primitives.sharp:388:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 388 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1984] params(1) in file: lib/support/0.2.805//primitives.sharp:389:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 389 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1985] params(1) in file: lib/support/0.2.805//primitives.sharp:390:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 390 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1986] params(1) in file: lib/support/0.2.805//primitives.sharp:391:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 391 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1987] params(1) in file: lib/support/0.2.805//primitives.sharp:392:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 392 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1988] params(1) in file: lib/support/0.2.805//primitives.sharp:393:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 393 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1989] params(1) in file: lib/support/0.2.805//primitives.sharp:394:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 394 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1990] params(1) in file: lib/support/0.2.805//primitives.sharp:395:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 395 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1991] params(1) in file: lib/support/0.2.805//primitives.sharp:396:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 396 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[1992] params(1) in file: lib/support/0.2.805//primitives.sharp:397:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 397 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator*=[1993] params(1) in file: lib/support/0.2.805//primitives.sharp:399:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 399 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[1994] params(1) in file: lib/support/0.2.805//primitives.sharp:400:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 400 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[1995] params(1) in file: lib/support/0.2.805//primitives.sharp:401:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 401 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[1996] params(1) in file: lib/support/0.2.805//primitives.sharp:402:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 402 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[1997] params(1) in file: lib/support/0.2.805//primitives.sharp:403:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 403 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[1998] params(1) in file: lib/support/0.2.805//primitives.sharp:404:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 404 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[1999] params(1) in file: lib/support/0.2.805//primitives.sharp:405:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 405 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2000] params(1) in file: lib/support/0.2.805//primitives.sharp:406:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 406 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2001] params(1) in file: lib/support/0.2.805//primitives.sharp:407:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 407 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2002] params(1) in file: lib/support/0.2.805//primitives.sharp:408:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 408 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2003] params(1) in file: lib/support/0.2.805//primitives.sharp:409:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 409 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator/=[2004] params(1) in file: lib/support/0.2.805//primitives.sharp:411:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 411 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2005] params(1) in file: lib/support/0.2.805//primitives.sharp:412:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 412 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2006] params(1) in file: lib/support/0.2.805//primitives.sharp:413:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 413 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2007] params(1) in file: lib/support/0.2.805//primitives.sharp:414:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 414 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2008] params(1) in file: lib/support/0.2.805//primitives.sharp:415:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 415 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2009] params(1) in file: lib/support/0.2.805//primitives.sharp:416:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 416 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2010] params(1) in file: lib/support/0.2.805//primitives.sharp:417:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 417 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2011] params(1) in file: lib/support/0.2.805//primitives.sharp:418:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 418 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2012] params(1) in file: lib/support/0.2.805//primitives.sharp:419:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 419 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2013] params(1) in file: lib/support/0.2.805//primitives.sharp:420:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 420 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2014] params(1) in file: lib/support/0.2.805//primitives.sharp:421:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 421 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator%=[2015] params(1) in file: lib/support/0.2.805//primitives.sharp:423:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 423 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2016] params(1) in file: lib/support/0.2.805//primitives.sharp:424:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 424 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2017] params(1) in file: lib/support/0.2.805//primitives.sharp:425:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 425 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2018] params(1) in file: lib/support/0.2.805//primitives.sharp:426:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 426 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2019] params(1) in file: lib/support/0.2.805//primitives.sharp:427:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 427 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2020] params(1) in file: lib/support/0.2.805//primitives.sharp:428:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 428 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2021] params(1) in file: lib/support/0.2.805//primitives.sharp:429:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 429 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2022] params(1) in file: lib/support/0.2.805//primitives.sharp:430:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 430 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2023] params(1) in file: lib/support/0.2.805//primitives.sharp:431:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 431 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2024] params(1) in file: lib/support/0.2.805//primitives.sharp:432:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 432 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2025] params(1) in file: lib/support/0.2.805//primitives.sharp:433:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 433 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator&=[2026] params(1) in file: lib/support/0.2.805//primitives.sharp:435:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 435 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2027] params(1) in file: lib/support/0.2.805//primitives.sharp:436:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 436 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2028] params(1) in file: lib/support/0.2.805//primitives.sharp:437:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 437 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2029] params(1) in file: lib/support/0.2.805//primitives.sharp:438:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 438 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2030] params(1) in file: lib/support/0.2.805//primitives.sharp:439:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 439 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2031] params(1) in file: lib/support/0.2.805//primitives.sharp:440:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 440 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2032] params(1) in file: lib/support/0.2.805//primitives.sharp:441:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 441 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2033] params(1) in file: lib/support/0.2.805//primitives.sharp:442:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 442 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2034] params(1) in file: lib/support/0.2.805//primitives.sharp:443:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 443 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2035] params(1) in file: lib/support/0.2.805//primitives.sharp:444:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 444 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2036] params(1) in file: lib/support/0.2.805//primitives.sharp:445:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 445 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#long.operator|=[2037] params(1) in file: lib/support/0.2.805//primitives.sharp:447:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 447 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2038] params(1) in file: lib/support/0.2.805//primitives.sharp:448:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 448 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2039] params(1) in file: lib/support/0.2.805//primitives.sharp:449:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 449 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2040] params(1) in file: lib/support/0.2.805//primitives.sharp:450:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 450 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2041] params(1) in file: lib/support/0.2.805//primitives.sharp:451:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 451 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2042] params(1) in file: lib/support/0.2.805//primitives.sharp:452:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 452 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2043] params(1) in file: lib/support/0.2.805//primitives.sharp:453:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 453 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2044] params(1) in file: lib/support/0.2.805//primitives.sharp:454:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 454 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2045] params(1) in file: lib/support/0.2.805//primitives.sharp:455:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 455 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2046] params(1) in file: lib/support/0.2.805//primitives.sharp:456:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 456 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2047] params(1) in file: lib/support/0.2.805//primitives.sharp:457:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 457 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#long.long[2048] params(0) in file: lib/support/0.2.805//primitives.sharp:356:6: note:  
		class long base integer<_int64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @395 // <std#integer<_int64>.integer>   
2 [0x2]:         ret   


constructor: std#uint.uint[2049] params(1) in file: lib/support/0.2.805//primitives.sharp:460:9: note:  
		    uint(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2050] params(1) in file: lib/support/0.2.805//primitives.sharp:461:9: note:  
		    uint(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2051] params(1) in file: lib/support/0.2.805//primitives.sharp:462:9: note:  
		    uint(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2052] params(1) in file: lib/support/0.2.805//primitives.sharp:463:9: note:  
		    uint(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2053] params(1) in file: lib/support/0.2.805//primitives.sharp:464:9: note:  
		    uint(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2054] params(1) in file: lib/support/0.2.805//primitives.sharp:465:9: note:  
		    uint(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2055] params(1) in file: lib/support/0.2.805//primitives.sharp:466:9: note:  
		    uint(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2056] params(1) in file: lib/support/0.2.805//primitives.sharp:467:9: note:  
		    uint(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2057] params(1) in file: lib/support/0.2.805//primitives.sharp:468:9: note:  
		    uint(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2058] params(1) in file: lib/support/0.2.805//primitives.sharp:469:9: note:  
		    uint(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @396 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2059] params(1) in file: lib/support/0.2.805//primitives.sharp:470:9: note:  
		    uint(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @396 // <std#integer<_uint32>.integer>   
3 [0x3]:         ret   


overload function: std#uint.operator![2060] params(0) in file: lib/support/0.2.805//primitives.sharp:472:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 472 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#uint.operator++[2061] params(0) in file: lib/support/0.2.805//primitives.sharp:473:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 473 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uint.operator++[2062] params(1) in file: lib/support/0.2.805//primitives.sharp:474:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 474 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uint.operator--[2063] params(0) in file: lib/support/0.2.805//primitives.sharp:475:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 475 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uint.operator--[2064] params(1) in file: lib/support/0.2.805//primitives.sharp:476:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 476 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uint.operator+=[2065] params(1) in file: lib/support/0.2.805//primitives.sharp:478:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 478 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2066] params(1) in file: lib/support/0.2.805//primitives.sharp:479:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 479 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2067] params(1) in file: lib/support/0.2.805//primitives.sharp:480:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 480 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2068] params(1) in file: lib/support/0.2.805//primitives.sharp:481:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 481 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2069] params(1) in file: lib/support/0.2.805//primitives.sharp:482:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 482 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2070] params(1) in file: lib/support/0.2.805//primitives.sharp:483:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 483 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2071] params(1) in file: lib/support/0.2.805//primitives.sharp:484:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 484 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2072] params(1) in file: lib/support/0.2.805//primitives.sharp:485:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 485 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2073] params(1) in file: lib/support/0.2.805//primitives.sharp:486:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 486 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2074] params(1) in file: lib/support/0.2.805//primitives.sharp:487:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 487 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2075] params(1) in file: lib/support/0.2.805//primitives.sharp:488:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 488 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator-=[2076] params(1) in file: lib/support/0.2.805//primitives.sharp:490:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 490 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2077] params(1) in file: lib/support/0.2.805//primitives.sharp:491:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 491 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2078] params(1) in file: lib/support/0.2.805//primitives.sharp:492:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 492 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2079] params(1) in file: lib/support/0.2.805//primitives.sharp:493:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 493 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2080] params(1) in file: lib/support/0.2.805//primitives.sharp:494:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 494 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2081] params(1) in file: lib/support/0.2.805//primitives.sharp:495:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 495 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2082] params(1) in file: lib/support/0.2.805//primitives.sharp:496:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 496 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2083] params(1) in file: lib/support/0.2.805//primitives.sharp:497:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 497 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2084] params(1) in file: lib/support/0.2.805//primitives.sharp:498:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 498 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2085] params(1) in file: lib/support/0.2.805//primitives.sharp:499:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 499 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2086] params(1) in file: lib/support/0.2.805//primitives.sharp:500:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 500 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator*=[2087] params(1) in file: lib/support/0.2.805//primitives.sharp:502:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 502 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2088] params(1) in file: lib/support/0.2.805//primitives.sharp:503:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 503 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2089] params(1) in file: lib/support/0.2.805//primitives.sharp:504:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 504 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2090] params(1) in file: lib/support/0.2.805//primitives.sharp:505:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 505 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2091] params(1) in file: lib/support/0.2.805//primitives.sharp:506:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 506 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2092] params(1) in file: lib/support/0.2.805//primitives.sharp:507:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 507 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2093] params(1) in file: lib/support/0.2.805//primitives.sharp:508:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 508 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2094] params(1) in file: lib/support/0.2.805//primitives.sharp:509:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 509 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2095] params(1) in file: lib/support/0.2.805//primitives.sharp:510:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 510 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2096] params(1) in file: lib/support/0.2.805//primitives.sharp:511:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 511 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2097] params(1) in file: lib/support/0.2.805//primitives.sharp:512:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 512 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator/=[2098] params(1) in file: lib/support/0.2.805//primitives.sharp:514:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 514 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2099] params(1) in file: lib/support/0.2.805//primitives.sharp:515:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 515 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2100] params(1) in file: lib/support/0.2.805//primitives.sharp:516:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 516 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2101] params(1) in file: lib/support/0.2.805//primitives.sharp:517:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 517 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2102] params(1) in file: lib/support/0.2.805//primitives.sharp:518:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 518 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2103] params(1) in file: lib/support/0.2.805//primitives.sharp:519:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 519 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2104] params(1) in file: lib/support/0.2.805//primitives.sharp:520:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 520 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2105] params(1) in file: lib/support/0.2.805//primitives.sharp:521:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 521 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2106] params(1) in file: lib/support/0.2.805//primitives.sharp:522:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 522 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2107] params(1) in file: lib/support/0.2.805//primitives.sharp:523:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 523 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2108] params(1) in file: lib/support/0.2.805//primitives.sharp:524:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 524 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator%=[2109] params(1) in file: lib/support/0.2.805//primitives.sharp:526:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 526 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2110] params(1) in file: lib/support/0.2.805//primitives.sharp:527:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 527 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2111] params(1) in file: lib/support/0.2.805//primitives.sharp:528:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 528 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2112] params(1) in file: lib/support/0.2.805//primitives.sharp:529:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 529 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2113] params(1) in file: lib/support/0.2.805//primitives.sharp:530:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 530 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2114] params(1) in file: lib/support/0.2.805//primitives.sharp:531:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 531 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2115] params(1) in file: lib/support/0.2.805//primitives.sharp:532:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 532 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2116] params(1) in file: lib/support/0.2.805//primitives.sharp:533:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 533 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2117] params(1) in file: lib/support/0.2.805//primitives.sharp:534:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 534 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2118] params(1) in file: lib/support/0.2.805//primitives.sharp:535:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 535 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2119] params(1) in file: lib/support/0.2.805//primitives.sharp:536:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 536 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator&=[2120] params(1) in file: lib/support/0.2.805//primitives.sharp:538:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 538 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2121] params(1) in file: lib/support/0.2.805//primitives.sharp:539:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 539 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2122] params(1) in file: lib/support/0.2.805//primitives.sharp:540:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 540 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2123] params(1) in file: lib/support/0.2.805//primitives.sharp:541:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 541 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2124] params(1) in file: lib/support/0.2.805//primitives.sharp:542:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 542 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2125] params(1) in file: lib/support/0.2.805//primitives.sharp:543:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 543 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2126] params(1) in file: lib/support/0.2.805//primitives.sharp:544:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 544 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2127] params(1) in file: lib/support/0.2.805//primitives.sharp:545:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 545 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2128] params(1) in file: lib/support/0.2.805//primitives.sharp:546:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 546 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2129] params(1) in file: lib/support/0.2.805//primitives.sharp:547:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 547 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2130] params(1) in file: lib/support/0.2.805//primitives.sharp:548:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 548 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#uint.operator|=[2131] params(1) in file: lib/support/0.2.805//primitives.sharp:550:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 550 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2132] params(1) in file: lib/support/0.2.805//primitives.sharp:551:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 551 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2133] params(1) in file: lib/support/0.2.805//primitives.sharp:552:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 552 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2134] params(1) in file: lib/support/0.2.805//primitives.sharp:553:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 553 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2135] params(1) in file: lib/support/0.2.805//primitives.sharp:554:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 554 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2136] params(1) in file: lib/support/0.2.805//primitives.sharp:555:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 555 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2137] params(1) in file: lib/support/0.2.805//primitives.sharp:556:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 556 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2138] params(1) in file: lib/support/0.2.805//primitives.sharp:557:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 557 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2139] params(1) in file: lib/support/0.2.805//primitives.sharp:558:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 558 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2140] params(1) in file: lib/support/0.2.805//primitives.sharp:559:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 559 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2141] params(1) in file: lib/support/0.2.805//primitives.sharp:560:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 560 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#uint.uint[2142] params(0) in file: lib/support/0.2.805//primitives.sharp:459:6: note:  
		class uint base integer<_uint32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @588 // <std#integer<_uint32>.integer>   
2 [0x2]:         ret   


constructor: std#int.int[2143] params(1) in file: lib/support/0.2.805//primitives.sharp:563:8: note:  
		    int(i : long) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2144] params(1) in file: lib/support/0.2.805//primitives.sharp:564:8: note:  
		    int(i : int) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2145] params(1) in file: lib/support/0.2.805//primitives.sharp:565:8: note:  
		    int(i : short) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2146] params(1) in file: lib/support/0.2.805//primitives.sharp:566:8: note:  
		    int(i : char) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2147] params(1) in file: lib/support/0.2.805//primitives.sharp:567:8: note:  
		    int(i : byte) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2148] params(1) in file: lib/support/0.2.805//primitives.sharp:568:8: note:  
		    int(i : bool) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2149] params(1) in file: lib/support/0.2.805//primitives.sharp:569:8: note:  
		    int(i : ulong) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2150] params(1) in file: lib/support/0.2.805//primitives.sharp:570:8: note:  
		    int(i : uint) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2151] params(1) in file: lib/support/0.2.805//primitives.sharp:571:8: note:  
		    int(i : ushort) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2152] params(1) in file: lib/support/0.2.805//primitives.sharp:572:8: note:  
		    int(i : uchar) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @589 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2153] params(1) in file: lib/support/0.2.805//primitives.sharp:573:8: note:  
		    int(i : var) -> base(i) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @589 // <std#integer<_int32>.integer>   
3 [0x3]:         ret   


overload function: std#int.operator![2154] params(0) in file: lib/support/0.2.805//primitives.sharp:575:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 575 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#int.operator++[2155] params(0) in file: lib/support/0.2.805//primitives.sharp:576:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 576 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#int.operator++[2156] params(1) in file: lib/support/0.2.805//primitives.sharp:577:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 577 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#int.operator--[2157] params(0) in file: lib/support/0.2.805//primitives.sharp:578:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 578 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#int.operator--[2158] params(1) in file: lib/support/0.2.805//primitives.sharp:579:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 579 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#int.operator+=[2159] params(1) in file: lib/support/0.2.805//primitives.sharp:581:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 581 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2160] params(1) in file: lib/support/0.2.805//primitives.sharp:582:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 582 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2161] params(1) in file: lib/support/0.2.805//primitives.sharp:583:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 583 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2162] params(1) in file: lib/support/0.2.805//primitives.sharp:584:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 584 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2163] params(1) in file: lib/support/0.2.805//primitives.sharp:585:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 585 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2164] params(1) in file: lib/support/0.2.805//primitives.sharp:586:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 586 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2165] params(1) in file: lib/support/0.2.805//primitives.sharp:587:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 587 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2166] params(1) in file: lib/support/0.2.805//primitives.sharp:588:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 588 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2167] params(1) in file: lib/support/0.2.805//primitives.sharp:589:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 589 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2168] params(1) in file: lib/support/0.2.805//primitives.sharp:590:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 590 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2169] params(1) in file: lib/support/0.2.805//primitives.sharp:591:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 591 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator-=[2170] params(1) in file: lib/support/0.2.805//primitives.sharp:593:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 593 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2171] params(1) in file: lib/support/0.2.805//primitives.sharp:594:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 594 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2172] params(1) in file: lib/support/0.2.805//primitives.sharp:595:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 595 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2173] params(1) in file: lib/support/0.2.805//primitives.sharp:596:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 596 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2174] params(1) in file: lib/support/0.2.805//primitives.sharp:597:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 597 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2175] params(1) in file: lib/support/0.2.805//primitives.sharp:598:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 598 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2176] params(1) in file: lib/support/0.2.805//primitives.sharp:599:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 599 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2177] params(1) in file: lib/support/0.2.805//primitives.sharp:600:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 600 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2178] params(1) in file: lib/support/0.2.805//primitives.sharp:601:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 601 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2179] params(1) in file: lib/support/0.2.805//primitives.sharp:602:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 602 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2180] params(1) in file: lib/support/0.2.805//primitives.sharp:603:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 603 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator*=[2181] params(1) in file: lib/support/0.2.805//primitives.sharp:605:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 605 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2182] params(1) in file: lib/support/0.2.805//primitives.sharp:606:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 606 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2183] params(1) in file: lib/support/0.2.805//primitives.sharp:607:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 607 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2184] params(1) in file: lib/support/0.2.805//primitives.sharp:608:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 608 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2185] params(1) in file: lib/support/0.2.805//primitives.sharp:609:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 609 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2186] params(1) in file: lib/support/0.2.805//primitives.sharp:610:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 610 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2187] params(1) in file: lib/support/0.2.805//primitives.sharp:611:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 611 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2188] params(1) in file: lib/support/0.2.805//primitives.sharp:612:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 612 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2189] params(1) in file: lib/support/0.2.805//primitives.sharp:613:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 613 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2190] params(1) in file: lib/support/0.2.805//primitives.sharp:614:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 614 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2191] params(1) in file: lib/support/0.2.805//primitives.sharp:615:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 615 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator/=[2192] params(1) in file: lib/support/0.2.805//primitives.sharp:617:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 617 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2193] params(1) in file: lib/support/0.2.805//primitives.sharp:618:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 618 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2194] params(1) in file: lib/support/0.2.805//primitives.sharp:619:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 619 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2195] params(1) in file: lib/support/0.2.805//primitives.sharp:620:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 620 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2196] params(1) in file: lib/support/0.2.805//primitives.sharp:621:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 621 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2197] params(1) in file: lib/support/0.2.805//primitives.sharp:622:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 622 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2198] params(1) in file: lib/support/0.2.805//primitives.sharp:623:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 623 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2199] params(1) in file: lib/support/0.2.805//primitives.sharp:624:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 624 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2200] params(1) in file: lib/support/0.2.805//primitives.sharp:625:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 625 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2201] params(1) in file: lib/support/0.2.805//primitives.sharp:626:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 626 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2202] params(1) in file: lib/support/0.2.805//primitives.sharp:627:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 627 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator%=[2203] params(1) in file: lib/support/0.2.805//primitives.sharp:629:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 629 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2204] params(1) in file: lib/support/0.2.805//primitives.sharp:630:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 630 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2205] params(1) in file: lib/support/0.2.805//primitives.sharp:631:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 631 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2206] params(1) in file: lib/support/0.2.805//primitives.sharp:632:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 632 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2207] params(1) in file: lib/support/0.2.805//primitives.sharp:633:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 633 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2208] params(1) in file: lib/support/0.2.805//primitives.sharp:634:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 634 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2209] params(1) in file: lib/support/0.2.805//primitives.sharp:635:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 635 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2210] params(1) in file: lib/support/0.2.805//primitives.sharp:636:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 636 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2211] params(1) in file: lib/support/0.2.805//primitives.sharp:637:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 637 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2212] params(1) in file: lib/support/0.2.805//primitives.sharp:638:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 638 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2213] params(1) in file: lib/support/0.2.805//primitives.sharp:639:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 639 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator&=[2214] params(1) in file: lib/support/0.2.805//primitives.sharp:641:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 641 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2215] params(1) in file: lib/support/0.2.805//primitives.sharp:642:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 642 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2216] params(1) in file: lib/support/0.2.805//primitives.sharp:643:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 643 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2217] params(1) in file: lib/support/0.2.805//primitives.sharp:644:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 644 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2218] params(1) in file: lib/support/0.2.805//primitives.sharp:645:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 645 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2219] params(1) in file: lib/support/0.2.805//primitives.sharp:646:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 646 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2220] params(1) in file: lib/support/0.2.805//primitives.sharp:647:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 647 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2221] params(1) in file: lib/support/0.2.805//primitives.sharp:648:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 648 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2222] params(1) in file: lib/support/0.2.805//primitives.sharp:649:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 649 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2223] params(1) in file: lib/support/0.2.805//primitives.sharp:650:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 650 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2224] params(1) in file: lib/support/0.2.805//primitives.sharp:651:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 651 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#int.operator|=[2225] params(1) in file: lib/support/0.2.805//primitives.sharp:653:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 653 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2226] params(1) in file: lib/support/0.2.805//primitives.sharp:654:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 654 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2227] params(1) in file: lib/support/0.2.805//primitives.sharp:655:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 655 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2228] params(1) in file: lib/support/0.2.805//primitives.sharp:656:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 656 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2229] params(1) in file: lib/support/0.2.805//primitives.sharp:657:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 657 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2230] params(1) in file: lib/support/0.2.805//primitives.sharp:658:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 658 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2231] params(1) in file: lib/support/0.2.805//primitives.sharp:659:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 659 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2232] params(1) in file: lib/support/0.2.805//primitives.sharp:660:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 660 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2233] params(1) in file: lib/support/0.2.805//primitives.sharp:661:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 661 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2234] params(1) in file: lib/support/0.2.805//primitives.sharp:662:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 662 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2235] params(1) in file: lib/support/0.2.805//primitives.sharp:663:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 663 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#int.int[2236] params(0) in file: lib/support/0.2.805//primitives.sharp:562:6: note:  
		class int base integer<_int32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @781 // <std#integer<_int32>.integer>   
2 [0x2]:         ret   


constructor: std#ushort.ushort[2237] params(1) in file: lib/support/0.2.805//primitives.sharp:666:11: note:  
		    ushort(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2238] params(1) in file: lib/support/0.2.805//primitives.sharp:667:11: note:  
		    ushort(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2239] params(1) in file: lib/support/0.2.805//primitives.sharp:668:11: note:  
		    ushort(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2240] params(1) in file: lib/support/0.2.805//primitives.sharp:669:11: note:  
		    ushort(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2241] params(1) in file: lib/support/0.2.805//primitives.sharp:670:11: note:  
		    ushort(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2242] params(1) in file: lib/support/0.2.805//primitives.sharp:671:11: note:  
		    ushort(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2243] params(1) in file: lib/support/0.2.805//primitives.sharp:672:11: note:  
		    ushort(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2244] params(1) in file: lib/support/0.2.805//primitives.sharp:673:11: note:  
		    ushort(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2245] params(1) in file: lib/support/0.2.805//primitives.sharp:674:11: note:  
		    ushort(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2246] params(1) in file: lib/support/0.2.805//primitives.sharp:675:11: note:  
		    ushort(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @782 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2247] params(1) in file: lib/support/0.2.805//primitives.sharp:676:11: note:  
		    ushort(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @782 // <std#integer<_uint16>.integer>   
3 [0x3]:         ret   


overload function: std#ushort.operator![2248] params(0) in file: lib/support/0.2.805//primitives.sharp:678:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 678 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#ushort.operator++[2249] params(0) in file: lib/support/0.2.805//primitives.sharp:679:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 679 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ushort.operator++[2250] params(1) in file: lib/support/0.2.805//primitives.sharp:680:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 680 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ushort.operator--[2251] params(0) in file: lib/support/0.2.805//primitives.sharp:681:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 681 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ushort.operator--[2252] params(1) in file: lib/support/0.2.805//primitives.sharp:682:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 682 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ushort.operator+=[2253] params(1) in file: lib/support/0.2.805//primitives.sharp:684:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 684 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2254] params(1) in file: lib/support/0.2.805//primitives.sharp:685:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 685 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2255] params(1) in file: lib/support/0.2.805//primitives.sharp:686:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 686 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2256] params(1) in file: lib/support/0.2.805//primitives.sharp:687:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 687 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2257] params(1) in file: lib/support/0.2.805//primitives.sharp:688:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 688 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2258] params(1) in file: lib/support/0.2.805//primitives.sharp:689:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 689 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2259] params(1) in file: lib/support/0.2.805//primitives.sharp:690:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 690 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2260] params(1) in file: lib/support/0.2.805//primitives.sharp:691:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 691 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2261] params(1) in file: lib/support/0.2.805//primitives.sharp:692:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 692 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2262] params(1) in file: lib/support/0.2.805//primitives.sharp:693:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 693 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2263] params(1) in file: lib/support/0.2.805//primitives.sharp:694:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 694 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator-=[2264] params(1) in file: lib/support/0.2.805//primitives.sharp:696:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 696 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2265] params(1) in file: lib/support/0.2.805//primitives.sharp:697:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 697 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2266] params(1) in file: lib/support/0.2.805//primitives.sharp:698:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 698 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2267] params(1) in file: lib/support/0.2.805//primitives.sharp:699:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 699 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2268] params(1) in file: lib/support/0.2.805//primitives.sharp:700:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 700 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2269] params(1) in file: lib/support/0.2.805//primitives.sharp:701:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 701 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2270] params(1) in file: lib/support/0.2.805//primitives.sharp:702:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 702 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2271] params(1) in file: lib/support/0.2.805//primitives.sharp:703:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 703 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2272] params(1) in file: lib/support/0.2.805//primitives.sharp:704:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 704 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2273] params(1) in file: lib/support/0.2.805//primitives.sharp:705:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 705 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2274] params(1) in file: lib/support/0.2.805//primitives.sharp:706:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 706 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator*=[2275] params(1) in file: lib/support/0.2.805//primitives.sharp:708:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 708 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2276] params(1) in file: lib/support/0.2.805//primitives.sharp:709:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 709 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2277] params(1) in file: lib/support/0.2.805//primitives.sharp:710:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 710 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2278] params(1) in file: lib/support/0.2.805//primitives.sharp:711:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 711 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2279] params(1) in file: lib/support/0.2.805//primitives.sharp:712:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 712 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2280] params(1) in file: lib/support/0.2.805//primitives.sharp:713:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 713 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2281] params(1) in file: lib/support/0.2.805//primitives.sharp:714:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 714 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2282] params(1) in file: lib/support/0.2.805//primitives.sharp:715:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 715 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2283] params(1) in file: lib/support/0.2.805//primitives.sharp:716:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 716 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2284] params(1) in file: lib/support/0.2.805//primitives.sharp:717:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 717 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2285] params(1) in file: lib/support/0.2.805//primitives.sharp:718:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 718 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator/=[2286] params(1) in file: lib/support/0.2.805//primitives.sharp:720:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 720 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2287] params(1) in file: lib/support/0.2.805//primitives.sharp:721:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 721 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2288] params(1) in file: lib/support/0.2.805//primitives.sharp:722:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 722 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2289] params(1) in file: lib/support/0.2.805//primitives.sharp:723:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 723 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2290] params(1) in file: lib/support/0.2.805//primitives.sharp:724:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 724 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2291] params(1) in file: lib/support/0.2.805//primitives.sharp:725:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 725 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2292] params(1) in file: lib/support/0.2.805//primitives.sharp:726:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 726 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2293] params(1) in file: lib/support/0.2.805//primitives.sharp:727:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 727 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2294] params(1) in file: lib/support/0.2.805//primitives.sharp:728:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 728 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2295] params(1) in file: lib/support/0.2.805//primitives.sharp:729:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 729 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2296] params(1) in file: lib/support/0.2.805//primitives.sharp:730:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 730 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator%=[2297] params(1) in file: lib/support/0.2.805//primitives.sharp:732:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 732 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2298] params(1) in file: lib/support/0.2.805//primitives.sharp:733:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 733 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2299] params(1) in file: lib/support/0.2.805//primitives.sharp:734:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 734 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2300] params(1) in file: lib/support/0.2.805//primitives.sharp:735:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 735 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2301] params(1) in file: lib/support/0.2.805//primitives.sharp:736:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 736 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2302] params(1) in file: lib/support/0.2.805//primitives.sharp:737:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 737 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2303] params(1) in file: lib/support/0.2.805//primitives.sharp:738:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 738 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2304] params(1) in file: lib/support/0.2.805//primitives.sharp:739:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 739 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2305] params(1) in file: lib/support/0.2.805//primitives.sharp:740:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 740 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2306] params(1) in file: lib/support/0.2.805//primitives.sharp:741:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 741 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2307] params(1) in file: lib/support/0.2.805//primitives.sharp:742:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 742 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator&=[2308] params(1) in file: lib/support/0.2.805//primitives.sharp:744:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 744 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2309] params(1) in file: lib/support/0.2.805//primitives.sharp:745:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 745 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2310] params(1) in file: lib/support/0.2.805//primitives.sharp:746:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 746 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2311] params(1) in file: lib/support/0.2.805//primitives.sharp:747:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 747 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2312] params(1) in file: lib/support/0.2.805//primitives.sharp:748:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 748 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2313] params(1) in file: lib/support/0.2.805//primitives.sharp:749:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 749 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2314] params(1) in file: lib/support/0.2.805//primitives.sharp:750:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 750 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2315] params(1) in file: lib/support/0.2.805//primitives.sharp:751:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 751 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2316] params(1) in file: lib/support/0.2.805//primitives.sharp:752:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 752 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2317] params(1) in file: lib/support/0.2.805//primitives.sharp:753:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 753 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2318] params(1) in file: lib/support/0.2.805//primitives.sharp:754:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 754 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#ushort.operator|=[2319] params(1) in file: lib/support/0.2.805//primitives.sharp:756:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 756 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2320] params(1) in file: lib/support/0.2.805//primitives.sharp:757:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 757 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2321] params(1) in file: lib/support/0.2.805//primitives.sharp:758:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 758 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2322] params(1) in file: lib/support/0.2.805//primitives.sharp:759:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 759 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2323] params(1) in file: lib/support/0.2.805//primitives.sharp:760:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 760 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2324] params(1) in file: lib/support/0.2.805//primitives.sharp:761:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 761 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2325] params(1) in file: lib/support/0.2.805//primitives.sharp:762:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 762 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2326] params(1) in file: lib/support/0.2.805//primitives.sharp:763:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 763 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2327] params(1) in file: lib/support/0.2.805//primitives.sharp:764:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 764 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2328] params(1) in file: lib/support/0.2.805//primitives.sharp:765:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 765 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2329] params(1) in file: lib/support/0.2.805//primitives.sharp:766:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 766 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#ushort.ushort[2330] params(0) in file: lib/support/0.2.805//primitives.sharp:665:6: note:  
		class ushort base integer<_uint16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @974 // <std#integer<_uint16>.integer>   
2 [0x2]:         ret   


constructor: std#short.short[2331] params(1) in file: lib/support/0.2.805//primitives.sharp:769:10: note:  
		    short(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2332] params(1) in file: lib/support/0.2.805//primitives.sharp:770:10: note:  
		    short(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2333] params(1) in file: lib/support/0.2.805//primitives.sharp:771:10: note:  
		    short(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2334] params(1) in file: lib/support/0.2.805//primitives.sharp:772:10: note:  
		    short(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2335] params(1) in file: lib/support/0.2.805//primitives.sharp:773:10: note:  
		    short(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2336] params(1) in file: lib/support/0.2.805//primitives.sharp:774:10: note:  
		    short(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2337] params(1) in file: lib/support/0.2.805//primitives.sharp:775:10: note:  
		    short(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2338] params(1) in file: lib/support/0.2.805//primitives.sharp:776:10: note:  
		    short(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2339] params(1) in file: lib/support/0.2.805//primitives.sharp:777:10: note:  
		    short(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2340] params(1) in file: lib/support/0.2.805//primitives.sharp:778:10: note:  
		    short(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @975 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2341] params(1) in file: lib/support/0.2.805//primitives.sharp:779:10: note:  
		    short(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @975 // <std#integer<_int16>.integer>   
3 [0x3]:         ret   


overload function: std#short.operator![2342] params(0) in file: lib/support/0.2.805//primitives.sharp:781:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 781 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#short.operator++[2343] params(0) in file: lib/support/0.2.805//primitives.sharp:782:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 782 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#short.operator++[2344] params(1) in file: lib/support/0.2.805//primitives.sharp:783:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 783 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#short.operator--[2345] params(0) in file: lib/support/0.2.805//primitives.sharp:784:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 784 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#short.operator--[2346] params(1) in file: lib/support/0.2.805//primitives.sharp:785:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 785 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#short.operator+=[2347] params(1) in file: lib/support/0.2.805//primitives.sharp:787:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 787 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2348] params(1) in file: lib/support/0.2.805//primitives.sharp:788:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 788 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2349] params(1) in file: lib/support/0.2.805//primitives.sharp:789:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 789 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2350] params(1) in file: lib/support/0.2.805//primitives.sharp:790:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 790 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2351] params(1) in file: lib/support/0.2.805//primitives.sharp:791:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 791 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2352] params(1) in file: lib/support/0.2.805//primitives.sharp:792:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 792 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2353] params(1) in file: lib/support/0.2.805//primitives.sharp:793:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 793 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2354] params(1) in file: lib/support/0.2.805//primitives.sharp:794:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 794 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2355] params(1) in file: lib/support/0.2.805//primitives.sharp:795:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 795 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2356] params(1) in file: lib/support/0.2.805//primitives.sharp:796:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 796 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2357] params(1) in file: lib/support/0.2.805//primitives.sharp:797:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 797 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator-=[2358] params(1) in file: lib/support/0.2.805//primitives.sharp:799:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 799 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2359] params(1) in file: lib/support/0.2.805//primitives.sharp:800:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 800 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2360] params(1) in file: lib/support/0.2.805//primitives.sharp:801:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 801 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2361] params(1) in file: lib/support/0.2.805//primitives.sharp:802:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 802 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2362] params(1) in file: lib/support/0.2.805//primitives.sharp:803:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 803 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2363] params(1) in file: lib/support/0.2.805//primitives.sharp:804:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 804 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2364] params(1) in file: lib/support/0.2.805//primitives.sharp:805:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 805 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2365] params(1) in file: lib/support/0.2.805//primitives.sharp:806:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 806 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2366] params(1) in file: lib/support/0.2.805//primitives.sharp:807:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 807 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2367] params(1) in file: lib/support/0.2.805//primitives.sharp:808:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 808 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2368] params(1) in file: lib/support/0.2.805//primitives.sharp:809:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 809 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator*=[2369] params(1) in file: lib/support/0.2.805//primitives.sharp:811:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 811 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2370] params(1) in file: lib/support/0.2.805//primitives.sharp:812:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 812 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2371] params(1) in file: lib/support/0.2.805//primitives.sharp:813:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 813 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2372] params(1) in file: lib/support/0.2.805//primitives.sharp:814:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 814 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2373] params(1) in file: lib/support/0.2.805//primitives.sharp:815:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 815 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2374] params(1) in file: lib/support/0.2.805//primitives.sharp:816:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 816 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2375] params(1) in file: lib/support/0.2.805//primitives.sharp:817:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 817 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2376] params(1) in file: lib/support/0.2.805//primitives.sharp:818:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 818 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2377] params(1) in file: lib/support/0.2.805//primitives.sharp:819:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 819 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2378] params(1) in file: lib/support/0.2.805//primitives.sharp:820:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 820 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2379] params(1) in file: lib/support/0.2.805//primitives.sharp:821:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 821 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator/=[2380] params(1) in file: lib/support/0.2.805//primitives.sharp:823:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 823 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2381] params(1) in file: lib/support/0.2.805//primitives.sharp:824:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 824 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2382] params(1) in file: lib/support/0.2.805//primitives.sharp:825:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 825 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2383] params(1) in file: lib/support/0.2.805//primitives.sharp:826:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 826 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2384] params(1) in file: lib/support/0.2.805//primitives.sharp:827:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 827 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2385] params(1) in file: lib/support/0.2.805//primitives.sharp:828:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 828 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2386] params(1) in file: lib/support/0.2.805//primitives.sharp:829:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 829 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2387] params(1) in file: lib/support/0.2.805//primitives.sharp:830:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 830 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2388] params(1) in file: lib/support/0.2.805//primitives.sharp:831:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 831 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2389] params(1) in file: lib/support/0.2.805//primitives.sharp:832:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 832 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2390] params(1) in file: lib/support/0.2.805//primitives.sharp:833:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 833 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator%=[2391] params(1) in file: lib/support/0.2.805//primitives.sharp:835:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 835 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2392] params(1) in file: lib/support/0.2.805//primitives.sharp:836:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 836 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2393] params(1) in file: lib/support/0.2.805//primitives.sharp:837:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 837 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2394] params(1) in file: lib/support/0.2.805//primitives.sharp:838:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 838 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2395] params(1) in file: lib/support/0.2.805//primitives.sharp:839:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 839 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2396] params(1) in file: lib/support/0.2.805//primitives.sharp:840:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 840 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2397] params(1) in file: lib/support/0.2.805//primitives.sharp:841:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 841 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2398] params(1) in file: lib/support/0.2.805//primitives.sharp:842:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 842 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2399] params(1) in file: lib/support/0.2.805//primitives.sharp:843:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 843 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2400] params(1) in file: lib/support/0.2.805//primitives.sharp:844:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 844 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2401] params(1) in file: lib/support/0.2.805//primitives.sharp:845:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 845 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator&=[2402] params(1) in file: lib/support/0.2.805//primitives.sharp:847:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 847 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2403] params(1) in file: lib/support/0.2.805//primitives.sharp:848:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 848 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2404] params(1) in file: lib/support/0.2.805//primitives.sharp:849:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 849 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2405] params(1) in file: lib/support/0.2.805//primitives.sharp:850:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 850 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2406] params(1) in file: lib/support/0.2.805//primitives.sharp:851:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 851 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2407] params(1) in file: lib/support/0.2.805//primitives.sharp:852:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 852 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2408] params(1) in file: lib/support/0.2.805//primitives.sharp:853:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 853 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2409] params(1) in file: lib/support/0.2.805//primitives.sharp:854:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 854 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2410] params(1) in file: lib/support/0.2.805//primitives.sharp:855:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 855 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2411] params(1) in file: lib/support/0.2.805//primitives.sharp:856:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 856 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2412] params(1) in file: lib/support/0.2.805//primitives.sharp:857:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 857 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#short.operator|=[2413] params(1) in file: lib/support/0.2.805//primitives.sharp:859:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 859 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2414] params(1) in file: lib/support/0.2.805//primitives.sharp:860:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 860 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2415] params(1) in file: lib/support/0.2.805//primitives.sharp:861:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 861 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2416] params(1) in file: lib/support/0.2.805//primitives.sharp:862:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 862 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2417] params(1) in file: lib/support/0.2.805//primitives.sharp:863:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 863 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2418] params(1) in file: lib/support/0.2.805//primitives.sharp:864:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 864 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2419] params(1) in file: lib/support/0.2.805//primitives.sharp:865:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 865 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2420] params(1) in file: lib/support/0.2.805//primitives.sharp:866:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 866 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2421] params(1) in file: lib/support/0.2.805//primitives.sharp:867:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 867 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2422] params(1) in file: lib/support/0.2.805//primitives.sharp:868:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 868 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2423] params(1) in file: lib/support/0.2.805//primitives.sharp:869:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 869 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#short.short[2424] params(0) in file: lib/support/0.2.805//primitives.sharp:768:6: note:  
		class short base integer<_int16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1167 // <std#integer<_int16>.integer>   
2 [0x2]:         ret   


constructor: std#uchar.uchar[2425] params(1) in file: lib/support/0.2.805//primitives.sharp:872:10: note:  
		    uchar(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2426] params(1) in file: lib/support/0.2.805//primitives.sharp:873:10: note:  
		    uchar(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2427] params(1) in file: lib/support/0.2.805//primitives.sharp:874:10: note:  
		    uchar(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2428] params(1) in file: lib/support/0.2.805//primitives.sharp:875:10: note:  
		    uchar(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2429] params(1) in file: lib/support/0.2.805//primitives.sharp:876:10: note:  
		    uchar(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2430] params(1) in file: lib/support/0.2.805//primitives.sharp:877:10: note:  
		    uchar(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2431] params(1) in file: lib/support/0.2.805//primitives.sharp:878:10: note:  
		    uchar(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2432] params(1) in file: lib/support/0.2.805//primitives.sharp:879:10: note:  
		    uchar(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2433] params(1) in file: lib/support/0.2.805//primitives.sharp:880:10: note:  
		    uchar(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2434] params(1) in file: lib/support/0.2.805//primitives.sharp:881:10: note:  
		    uchar(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1168 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2435] params(1) in file: lib/support/0.2.805//primitives.sharp:882:10: note:  
		    uchar(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1168 // <std#integer<_uint8>.integer>   
3 [0x3]:         ret   


overload function: std#uchar.operator![2436] params(0) in file: lib/support/0.2.805//primitives.sharp:884:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 884 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#uchar.operator++[2437] params(0) in file: lib/support/0.2.805//primitives.sharp:885:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 885 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uchar.operator++[2438] params(1) in file: lib/support/0.2.805//primitives.sharp:886:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 886 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uchar.operator--[2439] params(0) in file: lib/support/0.2.805//primitives.sharp:887:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 887 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uchar.operator--[2440] params(1) in file: lib/support/0.2.805//primitives.sharp:888:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 888 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uchar.operator+=[2441] params(1) in file: lib/support/0.2.805//primitives.sharp:890:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 890 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2442] params(1) in file: lib/support/0.2.805//primitives.sharp:891:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 891 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2443] params(1) in file: lib/support/0.2.805//primitives.sharp:892:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 892 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2444] params(1) in file: lib/support/0.2.805//primitives.sharp:893:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 893 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2445] params(1) in file: lib/support/0.2.805//primitives.sharp:894:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 894 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2446] params(1) in file: lib/support/0.2.805//primitives.sharp:895:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 895 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2447] params(1) in file: lib/support/0.2.805//primitives.sharp:896:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 896 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2448] params(1) in file: lib/support/0.2.805//primitives.sharp:897:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 897 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2449] params(1) in file: lib/support/0.2.805//primitives.sharp:898:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 898 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2450] params(1) in file: lib/support/0.2.805//primitives.sharp:899:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 899 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2451] params(1) in file: lib/support/0.2.805//primitives.sharp:900:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 900 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator-=[2452] params(1) in file: lib/support/0.2.805//primitives.sharp:902:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 902 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2453] params(1) in file: lib/support/0.2.805//primitives.sharp:903:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 903 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2454] params(1) in file: lib/support/0.2.805//primitives.sharp:904:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 904 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2455] params(1) in file: lib/support/0.2.805//primitives.sharp:905:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 905 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2456] params(1) in file: lib/support/0.2.805//primitives.sharp:906:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 906 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2457] params(1) in file: lib/support/0.2.805//primitives.sharp:907:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 907 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2458] params(1) in file: lib/support/0.2.805//primitives.sharp:908:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 908 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2459] params(1) in file: lib/support/0.2.805//primitives.sharp:909:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 909 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2460] params(1) in file: lib/support/0.2.805//primitives.sharp:910:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 910 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2461] params(1) in file: lib/support/0.2.805//primitives.sharp:911:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 911 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2462] params(1) in file: lib/support/0.2.805//primitives.sharp:912:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 912 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator*=[2463] params(1) in file: lib/support/0.2.805//primitives.sharp:914:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 914 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2464] params(1) in file: lib/support/0.2.805//primitives.sharp:915:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 915 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2465] params(1) in file: lib/support/0.2.805//primitives.sharp:916:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 916 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2466] params(1) in file: lib/support/0.2.805//primitives.sharp:917:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 917 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2467] params(1) in file: lib/support/0.2.805//primitives.sharp:918:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 918 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2468] params(1) in file: lib/support/0.2.805//primitives.sharp:919:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 919 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2469] params(1) in file: lib/support/0.2.805//primitives.sharp:920:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 920 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2470] params(1) in file: lib/support/0.2.805//primitives.sharp:921:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 921 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2471] params(1) in file: lib/support/0.2.805//primitives.sharp:922:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 922 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2472] params(1) in file: lib/support/0.2.805//primitives.sharp:923:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 923 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2473] params(1) in file: lib/support/0.2.805//primitives.sharp:924:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 924 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator/=[2474] params(1) in file: lib/support/0.2.805//primitives.sharp:926:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 926 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2475] params(1) in file: lib/support/0.2.805//primitives.sharp:927:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 927 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2476] params(1) in file: lib/support/0.2.805//primitives.sharp:928:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 928 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2477] params(1) in file: lib/support/0.2.805//primitives.sharp:929:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 929 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2478] params(1) in file: lib/support/0.2.805//primitives.sharp:930:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 930 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2479] params(1) in file: lib/support/0.2.805//primitives.sharp:931:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 931 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2480] params(1) in file: lib/support/0.2.805//primitives.sharp:932:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 932 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2481] params(1) in file: lib/support/0.2.805//primitives.sharp:933:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 933 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2482] params(1) in file: lib/support/0.2.805//primitives.sharp:934:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 934 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2483] params(1) in file: lib/support/0.2.805//primitives.sharp:935:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 935 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2484] params(1) in file: lib/support/0.2.805//primitives.sharp:936:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 936 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator%=[2485] params(1) in file: lib/support/0.2.805//primitives.sharp:938:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 938 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2486] params(1) in file: lib/support/0.2.805//primitives.sharp:939:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 939 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2487] params(1) in file: lib/support/0.2.805//primitives.sharp:940:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 940 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2488] params(1) in file: lib/support/0.2.805//primitives.sharp:941:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 941 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2489] params(1) in file: lib/support/0.2.805//primitives.sharp:942:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 942 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2490] params(1) in file: lib/support/0.2.805//primitives.sharp:943:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 943 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2491] params(1) in file: lib/support/0.2.805//primitives.sharp:944:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 944 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2492] params(1) in file: lib/support/0.2.805//primitives.sharp:945:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 945 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2493] params(1) in file: lib/support/0.2.805//primitives.sharp:946:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 946 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2494] params(1) in file: lib/support/0.2.805//primitives.sharp:947:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 947 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2495] params(1) in file: lib/support/0.2.805//primitives.sharp:948:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 948 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator&=[2496] params(1) in file: lib/support/0.2.805//primitives.sharp:950:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 950 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2497] params(1) in file: lib/support/0.2.805//primitives.sharp:951:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 951 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2498] params(1) in file: lib/support/0.2.805//primitives.sharp:952:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 952 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2499] params(1) in file: lib/support/0.2.805//primitives.sharp:953:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 953 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2500] params(1) in file: lib/support/0.2.805//primitives.sharp:954:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 954 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2501] params(1) in file: lib/support/0.2.805//primitives.sharp:955:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 955 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2502] params(1) in file: lib/support/0.2.805//primitives.sharp:956:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 956 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2503] params(1) in file: lib/support/0.2.805//primitives.sharp:957:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 957 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2504] params(1) in file: lib/support/0.2.805//primitives.sharp:958:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 958 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2505] params(1) in file: lib/support/0.2.805//primitives.sharp:959:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 959 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2506] params(1) in file: lib/support/0.2.805//primitives.sharp:960:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 960 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#uchar.operator|=[2507] params(1) in file: lib/support/0.2.805//primitives.sharp:962:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 962 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2508] params(1) in file: lib/support/0.2.805//primitives.sharp:963:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 963 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2509] params(1) in file: lib/support/0.2.805//primitives.sharp:964:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 964 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2510] params(1) in file: lib/support/0.2.805//primitives.sharp:965:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 965 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2511] params(1) in file: lib/support/0.2.805//primitives.sharp:966:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 966 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2512] params(1) in file: lib/support/0.2.805//primitives.sharp:967:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 967 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2513] params(1) in file: lib/support/0.2.805//primitives.sharp:968:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 968 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2514] params(1) in file: lib/support/0.2.805//primitives.sharp:969:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 969 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2515] params(1) in file: lib/support/0.2.805//primitives.sharp:970:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 970 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2516] params(1) in file: lib/support/0.2.805//primitives.sharp:971:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 971 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2517] params(1) in file: lib/support/0.2.805//primitives.sharp:972:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 972 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu8 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#uchar.uchar[2518] params(0) in file: lib/support/0.2.805//primitives.sharp:871:6: note:  
		class uchar base integer<_uint8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1360 // <std#integer<_uint8>.integer>   
2 [0x2]:         ret   


constructor: std#char.char[2519] params(1) in file: lib/support/0.2.805//primitives.sharp:975:9: note:  
		    char(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2520] params(1) in file: lib/support/0.2.805//primitives.sharp:976:9: note:  
		    char(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2521] params(1) in file: lib/support/0.2.805//primitives.sharp:977:9: note:  
		    char(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2522] params(1) in file: lib/support/0.2.805//primitives.sharp:978:9: note:  
		    char(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2523] params(1) in file: lib/support/0.2.805//primitives.sharp:979:9: note:  
		    char(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2524] params(1) in file: lib/support/0.2.805//primitives.sharp:980:9: note:  
		    char(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2525] params(1) in file: lib/support/0.2.805//primitives.sharp:981:9: note:  
		    char(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2526] params(1) in file: lib/support/0.2.805//primitives.sharp:982:9: note:  
		    char(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2527] params(1) in file: lib/support/0.2.805//primitives.sharp:983:9: note:  
		    char(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2528] params(1) in file: lib/support/0.2.805//primitives.sharp:984:9: note:  
		    char(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[2529] params(1) in file: lib/support/0.2.805//primitives.sharp:985:9: note:  
		    char(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1361 // <std#integer<_int8>.integer>   
3 [0x3]:         ret   


overload function: std#char.operator![2530] params(0) in file: lib/support/0.2.805//primitives.sharp:987:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 987 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#char.operator++[2531] params(0) in file: lib/support/0.2.805//primitives.sharp:988:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 988 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#char.operator++[2532] params(1) in file: lib/support/0.2.805//primitives.sharp:989:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 989 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#char.operator--[2533] params(0) in file: lib/support/0.2.805//primitives.sharp:990:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 990 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#char.operator--[2534] params(1) in file: lib/support/0.2.805//primitives.sharp:991:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 991 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#char.operator+=[2535] params(1) in file: lib/support/0.2.805//primitives.sharp:993:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 993 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2536] params(1) in file: lib/support/0.2.805//primitives.sharp:994:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 994 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2537] params(1) in file: lib/support/0.2.805//primitives.sharp:995:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 995 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2538] params(1) in file: lib/support/0.2.805//primitives.sharp:996:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 996 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2539] params(1) in file: lib/support/0.2.805//primitives.sharp:997:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 997 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2540] params(1) in file: lib/support/0.2.805//primitives.sharp:998:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 998 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2541] params(1) in file: lib/support/0.2.805//primitives.sharp:999:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 999 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2542] params(1) in file: lib/support/0.2.805//primitives.sharp:1000:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1000 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[2543] params(1) in file: lib/support/0.2.805//primitives.sharp:1001:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1001 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[2544] params(1) in file: lib/support/0.2.805//primitives.sharp:1002:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1002 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[2545] params(1) in file: lib/support/0.2.805//primitives.sharp:1003:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1003 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator-=[2546] params(1) in file: lib/support/0.2.805//primitives.sharp:1005:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1005 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2547] params(1) in file: lib/support/0.2.805//primitives.sharp:1006:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1006 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2548] params(1) in file: lib/support/0.2.805//primitives.sharp:1007:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1007 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2549] params(1) in file: lib/support/0.2.805//primitives.sharp:1008:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1008 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2550] params(1) in file: lib/support/0.2.805//primitives.sharp:1009:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1009 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2551] params(1) in file: lib/support/0.2.805//primitives.sharp:1010:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1010 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2552] params(1) in file: lib/support/0.2.805//primitives.sharp:1011:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1011 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2553] params(1) in file: lib/support/0.2.805//primitives.sharp:1012:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1012 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2554] params(1) in file: lib/support/0.2.805//primitives.sharp:1013:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1013 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2555] params(1) in file: lib/support/0.2.805//primitives.sharp:1014:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1014 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2556] params(1) in file: lib/support/0.2.805//primitives.sharp:1015:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1015 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator*=[2557] params(1) in file: lib/support/0.2.805//primitives.sharp:1017:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1017 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2558] params(1) in file: lib/support/0.2.805//primitives.sharp:1018:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1018 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2559] params(1) in file: lib/support/0.2.805//primitives.sharp:1019:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1019 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2560] params(1) in file: lib/support/0.2.805//primitives.sharp:1020:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1020 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2561] params(1) in file: lib/support/0.2.805//primitives.sharp:1021:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1021 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2562] params(1) in file: lib/support/0.2.805//primitives.sharp:1022:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1022 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2563] params(1) in file: lib/support/0.2.805//primitives.sharp:1023:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1023 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2564] params(1) in file: lib/support/0.2.805//primitives.sharp:1024:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1024 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2565] params(1) in file: lib/support/0.2.805//primitives.sharp:1025:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1025 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2566] params(1) in file: lib/support/0.2.805//primitives.sharp:1026:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1026 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2567] params(1) in file: lib/support/0.2.805//primitives.sharp:1027:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1027 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator/=[2568] params(1) in file: lib/support/0.2.805//primitives.sharp:1029:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1029 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2569] params(1) in file: lib/support/0.2.805//primitives.sharp:1030:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1030 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2570] params(1) in file: lib/support/0.2.805//primitives.sharp:1031:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1031 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2571] params(1) in file: lib/support/0.2.805//primitives.sharp:1032:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1032 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2572] params(1) in file: lib/support/0.2.805//primitives.sharp:1033:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1033 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2573] params(1) in file: lib/support/0.2.805//primitives.sharp:1034:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1034 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2574] params(1) in file: lib/support/0.2.805//primitives.sharp:1035:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1035 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2575] params(1) in file: lib/support/0.2.805//primitives.sharp:1036:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1036 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2576] params(1) in file: lib/support/0.2.805//primitives.sharp:1037:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1037 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2577] params(1) in file: lib/support/0.2.805//primitives.sharp:1038:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1038 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2578] params(1) in file: lib/support/0.2.805//primitives.sharp:1039:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1039 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator%=[2579] params(1) in file: lib/support/0.2.805//primitives.sharp:1041:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1041 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2580] params(1) in file: lib/support/0.2.805//primitives.sharp:1042:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1042 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2581] params(1) in file: lib/support/0.2.805//primitives.sharp:1043:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1043 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2582] params(1) in file: lib/support/0.2.805//primitives.sharp:1044:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1044 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2583] params(1) in file: lib/support/0.2.805//primitives.sharp:1045:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1045 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2584] params(1) in file: lib/support/0.2.805//primitives.sharp:1046:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1046 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2585] params(1) in file: lib/support/0.2.805//primitives.sharp:1047:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1047 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2586] params(1) in file: lib/support/0.2.805//primitives.sharp:1048:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1048 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2587] params(1) in file: lib/support/0.2.805//primitives.sharp:1049:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1049 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2588] params(1) in file: lib/support/0.2.805//primitives.sharp:1050:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1050 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2589] params(1) in file: lib/support/0.2.805//primitives.sharp:1051:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1051 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator&=[2590] params(1) in file: lib/support/0.2.805//primitives.sharp:1053:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1053 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2591] params(1) in file: lib/support/0.2.805//primitives.sharp:1054:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1054 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2592] params(1) in file: lib/support/0.2.805//primitives.sharp:1055:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1055 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2593] params(1) in file: lib/support/0.2.805//primitives.sharp:1056:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1056 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2594] params(1) in file: lib/support/0.2.805//primitives.sharp:1057:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1057 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2595] params(1) in file: lib/support/0.2.805//primitives.sharp:1058:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1058 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2596] params(1) in file: lib/support/0.2.805//primitives.sharp:1059:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1059 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2597] params(1) in file: lib/support/0.2.805//primitives.sharp:1060:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1060 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2598] params(1) in file: lib/support/0.2.805//primitives.sharp:1061:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1061 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2599] params(1) in file: lib/support/0.2.805//primitives.sharp:1062:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1062 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2600] params(1) in file: lib/support/0.2.805//primitives.sharp:1063:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1063 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#char.operator|=[2601] params(1) in file: lib/support/0.2.805//primitives.sharp:1065:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1065 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2602] params(1) in file: lib/support/0.2.805//primitives.sharp:1066:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1066 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2603] params(1) in file: lib/support/0.2.805//primitives.sharp:1067:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1067 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2604] params(1) in file: lib/support/0.2.805//primitives.sharp:1068:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1068 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2605] params(1) in file: lib/support/0.2.805//primitives.sharp:1069:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1069 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2606] params(1) in file: lib/support/0.2.805//primitives.sharp:1070:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1070 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2607] params(1) in file: lib/support/0.2.805//primitives.sharp:1071:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1071 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2608] params(1) in file: lib/support/0.2.805//primitives.sharp:1072:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1072 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2609] params(1) in file: lib/support/0.2.805//primitives.sharp:1073:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1073 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2610] params(1) in file: lib/support/0.2.805//primitives.sharp:1074:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1074 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2611] params(1) in file: lib/support/0.2.805//primitives.sharp:1075:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1075 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            mov8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#char.is_digit[2612] params(1) in file: lib/support/0.2.805//primitives.sharp:1077:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1078 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#char.is_newline[2613] params(1) in file: lib/support/0.2.805//primitives.sharp:1081:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1082 call @1836 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1083 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#char.is_alpha[2614] params(1) in file: lib/support/0.2.805//primitives.sharp:1086:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1087 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#char.is_alpha_num[2615] params(1) in file: lib/support/0.2.805//primitives.sharp:1091:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1092 ipushl #0   
1 [0x1]:            call @2614 // <std#char.is_alpha>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @2612 // <std#char.is_digit>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#char.to_lower[2616] params(1) in file: lib/support/0.2.805//primitives.sharp:1095:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1096 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 11   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            jne 25   
13 [0xd]: line: 1097 istore 97   
15 [0xf]:            ipushl #0   
16 [0x10]:            movi #65, ebx   
18 [0x12]:            loadval ecx   
19 [0x13]:            sub ecx, ebx -> ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            add ecx, ebx -> ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   
24 [0x18]:            jmp @28   
25 [0x19]: line: 1099 loadl ebx, fp+0   
26 [0x1a]:            return_val ebx   
27 [0x1b]:            ret   
28 [0x1c]:            nop   


function: std#char.to_upper[2617] params(1) in file: lib/support/0.2.805//primitives.sharp:1102:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1103 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 11   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            jne 25   
13 [0xd]: line: 1104 istore 65   
15 [0xf]:            ipushl #0   
16 [0x10]:            movi #97, ebx   
18 [0x12]:            loadval ecx   
19 [0x13]:            sub ecx, ebx -> ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            add ecx, ebx -> ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   
24 [0x18]:            jmp @28   
25 [0x19]: line: 1106 loadl ebx, fp+0   
26 [0x1a]:            return_val ebx   
27 [0x1b]:            ret   
28 [0x1c]:            nop   


constructor: std#char.char[2618] params(0) in file: lib/support/0.2.805//primitives.sharp:974:6: note:  
		class char base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1553 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


constructor: std#byte.byte[2619] params(1) in file: lib/support/0.2.805//primitives.sharp:1110:9: note:  
		    byte(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2620] params(1) in file: lib/support/0.2.805//primitives.sharp:1111:9: note:  
		    byte(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2621] params(1) in file: lib/support/0.2.805//primitives.sharp:1112:9: note:  
		    byte(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2622] params(1) in file: lib/support/0.2.805//primitives.sharp:1113:9: note:  
		    byte(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2623] params(1) in file: lib/support/0.2.805//primitives.sharp:1114:9: note:  
		    byte(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2624] params(1) in file: lib/support/0.2.805//primitives.sharp:1115:9: note:  
		    byte(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2625] params(1) in file: lib/support/0.2.805//primitives.sharp:1116:9: note:  
		    byte(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2626] params(1) in file: lib/support/0.2.805//primitives.sharp:1117:9: note:  
		    byte(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2627] params(1) in file: lib/support/0.2.805//primitives.sharp:1118:9: note:  
		    byte(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2628] params(1) in file: lib/support/0.2.805//primitives.sharp:1119:9: note:  
		    byte(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2435 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[2629] params(1) in file: lib/support/0.2.805//primitives.sharp:1120:9: note:  
		    byte(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @2435 // <std#uchar.uchar>   
3 [0x3]:         ret   


overload function: std#byte.operator![2630] params(0) in file: lib/support/0.2.805//primitives.sharp:1122:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1122 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#byte.operator++[2631] params(0) in file: lib/support/0.2.805//primitives.sharp:1123:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1123 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#byte.operator++[2632] params(1) in file: lib/support/0.2.805//primitives.sharp:1124:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1124 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#byte.operator--[2633] params(0) in file: lib/support/0.2.805//primitives.sharp:1125:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1125 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#byte.operator--[2634] params(1) in file: lib/support/0.2.805//primitives.sharp:1126:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1126 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#byte.operator+=[2635] params(1) in file: lib/support/0.2.805//primitives.sharp:1128:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1128 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2636] params(1) in file: lib/support/0.2.805//primitives.sharp:1129:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1129 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2637] params(1) in file: lib/support/0.2.805//primitives.sharp:1130:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1130 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2638] params(1) in file: lib/support/0.2.805//primitives.sharp:1131:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1131 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2639] params(1) in file: lib/support/0.2.805//primitives.sharp:1132:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1132 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2640] params(1) in file: lib/support/0.2.805//primitives.sharp:1133:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1133 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2641] params(1) in file: lib/support/0.2.805//primitives.sharp:1134:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1134 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2642] params(1) in file: lib/support/0.2.805//primitives.sharp:1135:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1135 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2643] params(1) in file: lib/support/0.2.805//primitives.sharp:1136:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1136 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2644] params(1) in file: lib/support/0.2.805//primitives.sharp:1137:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1137 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2645] params(1) in file: lib/support/0.2.805//primitives.sharp:1138:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1138 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator-=[2646] params(1) in file: lib/support/0.2.805//primitives.sharp:1140:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1140 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2647] params(1) in file: lib/support/0.2.805//primitives.sharp:1141:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1141 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2648] params(1) in file: lib/support/0.2.805//primitives.sharp:1142:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1142 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2649] params(1) in file: lib/support/0.2.805//primitives.sharp:1143:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1143 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2650] params(1) in file: lib/support/0.2.805//primitives.sharp:1144:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1144 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2651] params(1) in file: lib/support/0.2.805//primitives.sharp:1145:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1145 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2652] params(1) in file: lib/support/0.2.805//primitives.sharp:1146:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1146 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2653] params(1) in file: lib/support/0.2.805//primitives.sharp:1147:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1147 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2654] params(1) in file: lib/support/0.2.805//primitives.sharp:1148:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1148 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2655] params(1) in file: lib/support/0.2.805//primitives.sharp:1149:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1149 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2656] params(1) in file: lib/support/0.2.805//primitives.sharp:1150:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1150 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator*=[2657] params(1) in file: lib/support/0.2.805//primitives.sharp:1152:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1152 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2658] params(1) in file: lib/support/0.2.805//primitives.sharp:1153:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1153 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2659] params(1) in file: lib/support/0.2.805//primitives.sharp:1154:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1154 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2660] params(1) in file: lib/support/0.2.805//primitives.sharp:1155:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1155 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2661] params(1) in file: lib/support/0.2.805//primitives.sharp:1156:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1156 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2662] params(1) in file: lib/support/0.2.805//primitives.sharp:1157:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1157 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2663] params(1) in file: lib/support/0.2.805//primitives.sharp:1158:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1158 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2664] params(1) in file: lib/support/0.2.805//primitives.sharp:1159:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1159 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2665] params(1) in file: lib/support/0.2.805//primitives.sharp:1160:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1160 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2666] params(1) in file: lib/support/0.2.805//primitives.sharp:1161:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1161 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2667] params(1) in file: lib/support/0.2.805//primitives.sharp:1162:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1162 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator/=[2668] params(1) in file: lib/support/0.2.805//primitives.sharp:1164:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1164 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2669] params(1) in file: lib/support/0.2.805//primitives.sharp:1165:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1165 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2670] params(1) in file: lib/support/0.2.805//primitives.sharp:1166:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1166 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2671] params(1) in file: lib/support/0.2.805//primitives.sharp:1167:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1167 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2672] params(1) in file: lib/support/0.2.805//primitives.sharp:1168:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1168 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2673] params(1) in file: lib/support/0.2.805//primitives.sharp:1169:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1169 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2674] params(1) in file: lib/support/0.2.805//primitives.sharp:1170:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1170 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2675] params(1) in file: lib/support/0.2.805//primitives.sharp:1171:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1171 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2676] params(1) in file: lib/support/0.2.805//primitives.sharp:1172:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1172 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2677] params(1) in file: lib/support/0.2.805//primitives.sharp:1173:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1173 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2678] params(1) in file: lib/support/0.2.805//primitives.sharp:1174:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1174 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator%=[2679] params(1) in file: lib/support/0.2.805//primitives.sharp:1176:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1176 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2680] params(1) in file: lib/support/0.2.805//primitives.sharp:1177:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1177 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2681] params(1) in file: lib/support/0.2.805//primitives.sharp:1178:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1178 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2682] params(1) in file: lib/support/0.2.805//primitives.sharp:1179:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1179 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2683] params(1) in file: lib/support/0.2.805//primitives.sharp:1180:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1180 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2684] params(1) in file: lib/support/0.2.805//primitives.sharp:1181:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1181 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2685] params(1) in file: lib/support/0.2.805//primitives.sharp:1182:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1182 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2686] params(1) in file: lib/support/0.2.805//primitives.sharp:1183:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1183 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2687] params(1) in file: lib/support/0.2.805//primitives.sharp:1184:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1184 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2688] params(1) in file: lib/support/0.2.805//primitives.sharp:1185:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1185 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2689] params(1) in file: lib/support/0.2.805//primitives.sharp:1186:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1186 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator&=[2690] params(1) in file: lib/support/0.2.805//primitives.sharp:1188:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1188 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2691] params(1) in file: lib/support/0.2.805//primitives.sharp:1189:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1189 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2692] params(1) in file: lib/support/0.2.805//primitives.sharp:1190:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1190 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2693] params(1) in file: lib/support/0.2.805//primitives.sharp:1191:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1191 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2694] params(1) in file: lib/support/0.2.805//primitives.sharp:1192:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1192 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2695] params(1) in file: lib/support/0.2.805//primitives.sharp:1193:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1193 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2696] params(1) in file: lib/support/0.2.805//primitives.sharp:1194:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1194 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2697] params(1) in file: lib/support/0.2.805//primitives.sharp:1195:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1195 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2698] params(1) in file: lib/support/0.2.805//primitives.sharp:1196:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1196 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2699] params(1) in file: lib/support/0.2.805//primitives.sharp:1197:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1197 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2700] params(1) in file: lib/support/0.2.805//primitives.sharp:1198:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1198 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#byte.operator|=[2701] params(1) in file: lib/support/0.2.805//primitives.sharp:1200:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1200 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2702] params(1) in file: lib/support/0.2.805//primitives.sharp:1201:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1201 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2703] params(1) in file: lib/support/0.2.805//primitives.sharp:1202:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1202 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2704] params(1) in file: lib/support/0.2.805//primitives.sharp:1203:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1203 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2705] params(1) in file: lib/support/0.2.805//primitives.sharp:1204:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1204 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2706] params(1) in file: lib/support/0.2.805//primitives.sharp:1205:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1205 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2707] params(1) in file: lib/support/0.2.805//primitives.sharp:1206:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1206 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2708] params(1) in file: lib/support/0.2.805//primitives.sharp:1207:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1207 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2709] params(1) in file: lib/support/0.2.805//primitives.sharp:1208:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1208 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2710] params(1) in file: lib/support/0.2.805//primitives.sharp:1209:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1209 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2711] params(1) in file: lib/support/0.2.805//primitives.sharp:1210:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1210 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#byte.is_digit[2712] params(1) in file: lib/support/0.2.805//primitives.sharp:1212:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1213 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#byte.is_newline[2713] params(1) in file: lib/support/0.2.805//primitives.sharp:1216:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1217 call @1836 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1218 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#byte.is_alpha[2714] params(1) in file: lib/support/0.2.805//primitives.sharp:1221:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1222 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#byte.is_alpha_num[2715] params(1) in file: lib/support/0.2.805//primitives.sharp:1226:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1227 ipushl #0   
1 [0x1]:            call @2714 // <std#byte.is_alpha>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @2712 // <std#byte.is_digit>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#byte.to_lower[2716] params(1) in file: lib/support/0.2.805//primitives.sharp:1230:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1231 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 11   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            jne 25   
13 [0xd]: line: 1232 istore 97   
15 [0xf]:            ipushl #0   
16 [0x10]:            movi #65, ebx   
18 [0x12]:            loadval ecx   
19 [0x13]:            sub ecx, ebx -> ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            add ecx, ebx -> ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   
24 [0x18]:            jmp @28   
25 [0x19]: line: 1234 loadl ebx, fp+0   
26 [0x1a]:            return_val ebx   
27 [0x1b]:            ret   
28 [0x1c]:            nop   


function: std#byte.to_upper[2717] params(1) in file: lib/support/0.2.805//primitives.sharp:1237:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1238 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 11   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            jne 25   
13 [0xd]: line: 1239 istore 65   
15 [0xf]:            ipushl #0   
16 [0x10]:            movi #97, ebx   
18 [0x12]:            loadval ecx   
19 [0x13]:            sub ecx, ebx -> ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            add ecx, ebx -> ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   
24 [0x18]:            jmp @28   
25 [0x19]: line: 1241 loadl ebx, fp+0   
26 [0x1a]:            return_val ebx   
27 [0x1b]:            ret   
28 [0x1c]:            nop   


constructor: std#byte.byte[2718] params(0) in file: lib/support/0.2.805//primitives.sharp:1109:6: note:  
		class byte base uchar {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2518 // <std#uchar.uchar>   
2 [0x2]:         ret   


constructor: std#bool.bool[2719] params(1) in file: lib/support/0.2.805//primitives.sharp:1245:9: note:  
		    bool(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2720] params(1) in file: lib/support/0.2.805//primitives.sharp:1246:9: note:  
		    bool(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2721] params(1) in file: lib/support/0.2.805//primitives.sharp:1247:9: note:  
		    bool(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2722] params(1) in file: lib/support/0.2.805//primitives.sharp:1248:9: note:  
		    bool(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2723] params(1) in file: lib/support/0.2.805//primitives.sharp:1249:9: note:  
		    bool(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2724] params(1) in file: lib/support/0.2.805//primitives.sharp:1250:9: note:  
		    bool(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2725] params(1) in file: lib/support/0.2.805//primitives.sharp:1251:9: note:  
		    bool(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2726] params(1) in file: lib/support/0.2.805//primitives.sharp:1252:9: note:  
		    bool(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2727] params(1) in file: lib/support/0.2.805//primitives.sharp:1253:9: note:  
		    bool(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2728] params(1) in file: lib/support/0.2.805//primitives.sharp:1254:9: note:  
		    bool(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1361 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[2729] params(1) in file: lib/support/0.2.805//primitives.sharp:1255:9: note:  
		    bool(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1361 // <std#integer<_int8>.integer>   
3 [0x3]:         ret   


overload function: std#bool.operator![2730] params(0) in file: lib/support/0.2.805//primitives.sharp:1257:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1257 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#bool.operator++[2731] params(0) in file: lib/support/0.2.805//primitives.sharp:1258:8: note:  
		    def operator++() := (value = !value);
		       ^

0 [0x0]: line: 1258 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator++[2732] params(1) in file: lib/support/0.2.805//primitives.sharp:1259:8: note:  
		    def operator++(num : var) := (!value);
		       ^

0 [0x0]: line: 1259 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#bool.operator--[2733] params(0) in file: lib/support/0.2.805//primitives.sharp:1260:8: note:  
		    def operator--() := (value = !value);
		       ^

0 [0x0]: line: 1260 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator--[2734] params(1) in file: lib/support/0.2.805//primitives.sharp:1261:8: note:  
		    def operator--(num : var) := (value = !value);
		       ^

0 [0x0]: line: 1261 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator+=[2735] params(1) in file: lib/support/0.2.805//primitives.sharp:1263:8: note:  
		    def operator+=(num : ulong)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1263 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2736] params(1) in file: lib/support/0.2.805//primitives.sharp:1264:8: note:  
		    def operator+=(num : long)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1264 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2737] params(1) in file: lib/support/0.2.805//primitives.sharp:1265:8: note:  
		    def operator+=(num : uint)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1265 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2738] params(1) in file: lib/support/0.2.805//primitives.sharp:1266:8: note:  
		    def operator+=(num : int)    := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1266 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2739] params(1) in file: lib/support/0.2.805//primitives.sharp:1267:8: note:  
		    def operator+=(num : ushort) := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1267 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2740] params(1) in file: lib/support/0.2.805//primitives.sharp:1268:8: note:  
		    def operator+=(num : short)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1268 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2741] params(1) in file: lib/support/0.2.805//primitives.sharp:1269:8: note:  
		    def operator+=(num : uchar)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1269 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2742] params(1) in file: lib/support/0.2.805//primitives.sharp:1270:8: note:  
		    def operator+=(num : char)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1270 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2743] params(1) in file: lib/support/0.2.805//primitives.sharp:1271:8: note:  
		    def operator+=(num : byte)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1271 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2744] params(1) in file: lib/support/0.2.805//primitives.sharp:1272:8: note:  
		    def operator+=(num : bool)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1272 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2745] params(1) in file: lib/support/0.2.805//primitives.sharp:1273:8: note:  
		    def operator+=(num : var)    := check_value(value+=num);
		       ^

0 [0x0]: line: 1273 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            add ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2812 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator-=[2746] params(1) in file: lib/support/0.2.805//primitives.sharp:1275:8: note:  
		    def operator-=(num : ulong)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1275 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2747] params(1) in file: lib/support/0.2.805//primitives.sharp:1276:8: note:  
		    def operator-=(num : long)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1276 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2748] params(1) in file: lib/support/0.2.805//primitives.sharp:1277:8: note:  
		    def operator-=(num : uint)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1277 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2749] params(1) in file: lib/support/0.2.805//primitives.sharp:1278:8: note:  
		    def operator-=(num : int)    := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1278 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2750] params(1) in file: lib/support/0.2.805//primitives.sharp:1279:8: note:  
		    def operator-=(num : ushort) := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1279 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2751] params(1) in file: lib/support/0.2.805//primitives.sharp:1280:8: note:  
		    def operator-=(num : short)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1280 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2752] params(1) in file: lib/support/0.2.805//primitives.sharp:1281:8: note:  
		    def operator-=(num : uchar)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1281 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2753] params(1) in file: lib/support/0.2.805//primitives.sharp:1282:8: note:  
		    def operator-=(num : char)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1282 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2754] params(1) in file: lib/support/0.2.805//primitives.sharp:1283:8: note:  
		    def operator-=(num : byte)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1283 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2755] params(1) in file: lib/support/0.2.805//primitives.sharp:1284:8: note:  
		    def operator-=(num : bool)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1284 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2756] params(1) in file: lib/support/0.2.805//primitives.sharp:1285:8: note:  
		    def operator-=(num : var)    := check_value(value-=num);
		       ^

0 [0x0]: line: 1285 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            sub ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2812 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator*=[2757] params(1) in file: lib/support/0.2.805//primitives.sharp:1287:8: note:  
		    def operator*=(num : ulong)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1287 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2758] params(1) in file: lib/support/0.2.805//primitives.sharp:1288:8: note:  
		    def operator*=(num : long)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1288 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2759] params(1) in file: lib/support/0.2.805//primitives.sharp:1289:8: note:  
		    def operator*=(num : uint)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1289 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2760] params(1) in file: lib/support/0.2.805//primitives.sharp:1290:8: note:  
		    def operator*=(num : int)    := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1290 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2761] params(1) in file: lib/support/0.2.805//primitives.sharp:1291:8: note:  
		    def operator*=(num : ushort) := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1291 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2762] params(1) in file: lib/support/0.2.805//primitives.sharp:1292:8: note:  
		    def operator*=(num : short)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1292 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2763] params(1) in file: lib/support/0.2.805//primitives.sharp:1293:8: note:  
		    def operator*=(num : uchar)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1293 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2764] params(1) in file: lib/support/0.2.805//primitives.sharp:1294:8: note:  
		    def operator*=(num : char)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1294 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2765] params(1) in file: lib/support/0.2.805//primitives.sharp:1295:8: note:  
		    def operator*=(num : byte)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1295 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2766] params(1) in file: lib/support/0.2.805//primitives.sharp:1296:8: note:  
		    def operator*=(num : bool)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1296 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2767] params(1) in file: lib/support/0.2.805//primitives.sharp:1297:8: note:  
		    def operator*=(num : var)    := check_value(value*=num);
		       ^

0 [0x0]: line: 1297 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mul ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2812 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator/=[2768] params(1) in file: lib/support/0.2.805//primitives.sharp:1299:8: note:  
		    def operator/=(num : ulong)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1299 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2769] params(1) in file: lib/support/0.2.805//primitives.sharp:1300:8: note:  
		    def operator/=(num : long)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1300 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2770] params(1) in file: lib/support/0.2.805//primitives.sharp:1301:8: note:  
		    def operator/=(num : uint)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1301 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2771] params(1) in file: lib/support/0.2.805//primitives.sharp:1302:8: note:  
		    def operator/=(num : int)    := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1302 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2772] params(1) in file: lib/support/0.2.805//primitives.sharp:1303:8: note:  
		    def operator/=(num : ushort) := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1303 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2773] params(1) in file: lib/support/0.2.805//primitives.sharp:1304:8: note:  
		    def operator/=(num : short)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1304 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2774] params(1) in file: lib/support/0.2.805//primitives.sharp:1305:8: note:  
		    def operator/=(num : uchar)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1305 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2775] params(1) in file: lib/support/0.2.805//primitives.sharp:1306:8: note:  
		    def operator/=(num : char)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1306 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2776] params(1) in file: lib/support/0.2.805//primitives.sharp:1307:8: note:  
		    def operator/=(num : byte)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1307 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2777] params(1) in file: lib/support/0.2.805//primitives.sharp:1308:8: note:  
		    def operator/=(num : bool)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1308 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2778] params(1) in file: lib/support/0.2.805//primitives.sharp:1309:8: note:  
		    def operator/=(num : var)    := check_value(value/=num);
		       ^

0 [0x0]: line: 1309 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            div ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2812 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator%=[2779] params(1) in file: lib/support/0.2.805//primitives.sharp:1311:8: note:  
		    def operator%=(num : ulong)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1311 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2780] params(1) in file: lib/support/0.2.805//primitives.sharp:1312:8: note:  
		    def operator%=(num : long)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1312 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2781] params(1) in file: lib/support/0.2.805//primitives.sharp:1313:8: note:  
		    def operator%=(num : uint)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1313 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2782] params(1) in file: lib/support/0.2.805//primitives.sharp:1314:8: note:  
		    def operator%=(num : int)    := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1314 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2783] params(1) in file: lib/support/0.2.805//primitives.sharp:1315:8: note:  
		    def operator%=(num : ushort) := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1315 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2784] params(1) in file: lib/support/0.2.805//primitives.sharp:1316:8: note:  
		    def operator%=(num : short)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1316 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2785] params(1) in file: lib/support/0.2.805//primitives.sharp:1317:8: note:  
		    def operator%=(num : uchar)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1317 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2786] params(1) in file: lib/support/0.2.805//primitives.sharp:1318:8: note:  
		    def operator%=(num : char)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1318 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2787] params(1) in file: lib/support/0.2.805//primitives.sharp:1319:8: note:  
		    def operator%=(num : byte)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1319 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2788] params(1) in file: lib/support/0.2.805//primitives.sharp:1320:8: note:  
		    def operator%=(num : bool)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1320 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2789] params(1) in file: lib/support/0.2.805//primitives.sharp:1321:8: note:  
		    def operator%=(num : var)    := check_value(value%=num);
		       ^

0 [0x0]: line: 1321 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mod ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2812 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator&=[2790] params(1) in file: lib/support/0.2.805//primitives.sharp:1323:8: note:  
		    def operator&=(num : ulong)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1323 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2791] params(1) in file: lib/support/0.2.805//primitives.sharp:1324:8: note:  
		    def operator&=(num : long)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1324 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2792] params(1) in file: lib/support/0.2.805//primitives.sharp:1325:8: note:  
		    def operator&=(num : uint)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1325 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2793] params(1) in file: lib/support/0.2.805//primitives.sharp:1326:8: note:  
		    def operator&=(num : int)    := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1326 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2794] params(1) in file: lib/support/0.2.805//primitives.sharp:1327:8: note:  
		    def operator&=(num : ushort) := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1327 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2795] params(1) in file: lib/support/0.2.805//primitives.sharp:1328:8: note:  
		    def operator&=(num : short)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1328 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2796] params(1) in file: lib/support/0.2.805//primitives.sharp:1329:8: note:  
		    def operator&=(num : uchar)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1329 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2797] params(1) in file: lib/support/0.2.805//primitives.sharp:1330:8: note:  
		    def operator&=(num : char)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1330 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2798] params(1) in file: lib/support/0.2.805//primitives.sharp:1331:8: note:  
		    def operator&=(num : byte)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1331 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2799] params(1) in file: lib/support/0.2.805//primitives.sharp:1332:8: note:  
		    def operator&=(num : bool)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1332 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2812 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2800] params(1) in file: lib/support/0.2.805//primitives.sharp:1333:8: note:  
		    def operator&=(num : var)    := check_value(value&=num);
		       ^

0 [0x0]: line: 1333 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            and ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            rstore cmt   
12 [0xc]:            call @2812 // <std#bool.check_value>   
13 [0xd]:            loadval ebx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#bool.operator|=[2801] params(1) in file: lib/support/0.2.805//primitives.sharp:1335:8: note:  
		    def operator|=(num : ulong)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1335 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2802] params(1) in file: lib/support/0.2.805//primitives.sharp:1336:8: note:  
		    def operator|=(num : long)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1336 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2803] params(1) in file: lib/support/0.2.805//primitives.sharp:1337:8: note:  
		    def operator|=(num : uint)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1337 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2804] params(1) in file: lib/support/0.2.805//primitives.sharp:1338:8: note:  
		    def operator|=(num : int)    := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1338 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2805] params(1) in file: lib/support/0.2.805//primitives.sharp:1339:8: note:  
		    def operator|=(num : ushort) := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1339 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2806] params(1) in file: lib/support/0.2.805//primitives.sharp:1340:8: note:  
		    def operator|=(num : short)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1340 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2807] params(1) in file: lib/support/0.2.805//primitives.sharp:1341:8: note:  
		    def operator|=(num : uchar)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1341 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2808] params(1) in file: lib/support/0.2.805//primitives.sharp:1342:8: note:  
		    def operator|=(num : char)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1342 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2809] params(1) in file: lib/support/0.2.805//primitives.sharp:1343:8: note:  
		    def operator|=(num : byte)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1343 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2810] params(1) in file: lib/support/0.2.805//primitives.sharp:1344:8: note:  
		    def operator|=(num : bool)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1344 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2812 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2811] params(1) in file: lib/support/0.2.805//primitives.sharp:1345:8: note:  
		    def operator|=(num : var)    := check_value(value|=num);
		       ^

0 [0x0]: line: 1345 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            or ecx, ebx   
10 [0xa]:            mov8 cmt, cmt   
11 [0xb]:            rmov adx, cmt   
12 [0xc]:            rstore cmt   
13 [0xd]:            call @2812 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


function: std#bool.check_value[2812] params(1) in file: lib/support/0.2.805//primitives.sharp:1347:8: note:  
		    def check_value(new_val: var) : var {
		       ^

0 [0x0]: line: 1348 ret   


constructor: std#bool.bool[2813] params(0) in file: lib/support/0.2.805//primitives.sharp:1244:6: note:  
		class bool base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1553 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


std#printable.to_string[2814] params(0) in file: lib/support/0.2.805//printable.sharp:11:8: note:  
		    def to_string() : string;
		       ^



constructor: std#printable.printable[2815] params(0) in file: lib/support/0.2.805//printable.sharp:10:10: note:  
		interface printable {
		         ^

0 [0x0]:         ret   


constructor: std.reflect#_class_._class_[2816] params(0) in file: lib/support/0.2.805//reflect//class.sharp:4:6: note:  
		class _class_ base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2817 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#data_entity.data_entity[2817] params(0) in file: lib/support/0.2.805//reflect//data_entity.sharp:4:6: note:  
		class data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.reflect#data_property.data_property[2818] params(0) in file: lib/support/0.2.805//reflect//data_property.sharp:11:6: note:  
		class data_property base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2817 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#field.field[2819] params(0) in file: lib/support/0.2.805//reflect//field.sharp:4:6: note:  
		class field {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.reflect#function.function[2820] params(0) in file: lib/support/0.2.805//reflect//function.sharp:4:6: note:  
		class function base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2817 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#reflect.reflect[2821] params(1) in file: lib/support/0.2.805//reflect//reflection.sharp:15:12: note:  
		    reflect(ref_obj : object) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 16 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3043 // <std.reflect#reflect.set_reflect_obj>   
5 [0x5]:          ret   


constructor: std.reflect#reflect.reflect[2822] params(0) in file: lib/support/0.2.805//reflect//reflection.sharp:3:6: note:  
		class reflect {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#string.string[2823] params(1) in file: lib/support/0.2.805//string.sharp:10:11: note:  
		    string(str : _int8[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 11 movl 1   
3 [0x3]:          checknull   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 11   
7 [0x7]: line: 12 pushl 0   
8 [0x8]:          pushl 1   
9 [0x9]:          call @2832 // <std#string.append>   
10 [0xa]:          pop   
11 [0xb]:          nop   
12 [0xc]:          ret   


constructor: std#string.string[2824] params(1) in file: lib/support/0.2.805//string.sharp:16:11: note:  
		    string(ch: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 17 pushl 0   
3 [0x3]:          ipushl #1   
4 [0x4]:          call @2830 // <std#string.append>   
5 [0x5]:          pop   
6 [0x6]:          ret   


constructor: std#string.string[2825] params(1) in file: lib/support/0.2.805//string.sharp:20:11: note:  
		    string(str : char[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 21 movl 1   
3 [0x3]:          checknull   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 47   
7 [0x7]: line: 22 movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          newarry ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          popobj   
14 [0xe]: line: 23 istorel 0, fp+2   
16 [0x10]: line: 24 istorel -1, fp+4   
18 [0x12]:          pushl 1   
19 [0x13]:          popl 5   
20 [0x14]:          iaddl 1, fp@4   
22 [0x16]:          movl 5   
23 [0x17]:          sizeof ecx   
24 [0x18]:          loadl ebx, fp+4   
25 [0x19]:          lt ebx, ecx   
26 [0x1a]:          jne 47   
27 [0x1b]:          movnd ebx   
28 [0x1c]:          pushobj   
29 [0x1d]:          popl 3   
30 [0x1e]: line: 25 pushl 3   
31 [0x1f]:          call @1552 // <std#integer<_int8>.get_value>   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+2   
37 [0x25]:          movr egx, ebx   
38 [0x26]:          inc ebx   
39 [0x27]:          smovr_2 ebx, fp+2   
40 [0x28]:          movr ebx, egx   
41 [0x29]:          popobj2    
42 [0x2a]:          movr adx, ebx   
43 [0x2b]:          chklen adx   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]:          jmp @20   
47 [0x2f]:          nop   
48 [0x30]:          ret   


constructor: std#string.string[2826] params(1) in file: lib/support/0.2.805//string.sharp:30:11: note:  
		    string(str: string) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 31 movl 1   
3 [0x3]:          checknull   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 14   
7 [0x7]: line: 32 pushl 0   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          call @2832 // <std#string.append>   
13 [0xd]:          pop   
14 [0xe]:          nop   
15 [0xf]:          ret   


constructor: std#string.string[2827] params(2) in file: lib/support/0.2.805//string.sharp:36:11: note:  
		    string(str : _int8[], offset: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 37 movl 1   
3 [0x3]:          checknull   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 17   
7 [0x7]: line: 38 pushl 1   
8 [0x8]:          ipushl #2   
9 [0x9]:          movl 1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          call @1676 // <std.io#__srt_global.copy>   
13 [0xd]:          movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          popobj   
17 [0x11]:          nop   
18 [0x12]:          ret   


constructor: std#string.string[2828] params(3) in file: lib/support/0.2.805//string.sharp:42:11: note:  
		    string(str : _int8[], start: var, end: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 43 movl 1   
3 [0x3]:          checknull   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 26   
7 [0x7]: line: 44 ipushl #3   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          newarry ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]: line: 45 pushl 1   
17 [0x11]:          movl 0   
18 [0x12]:          movn #0   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          ipushl #2   
24 [0x18]:          ipushl #3   
25 [0x19]:          call @1666 // <std.io#__srt_global.memcopy>   
26 [0x1a]:          nop   
27 [0x1b]:          ret   


function: std#string.replace[2829] params(2) in file: lib/support/0.2.805//string.sharp:49:8: note:  
		    def replace(pos : var, ch: _int8) : string {
		       ^

0 [0x0]: line: 50 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          jne 12   
8 [0x8]: line: 51 pushl 0   
9 [0x9]:          ipushl #1   
10 [0xa]:          call @2861 // <std#string.bounds_error>   
11 [0xb]:          throw    
12 [0xc]:          nop   
13 [0xd]: line: 54 ipushl #2   
14 [0xe]:          movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+1   
19 [0x13]:          popobj2    
20 [0x14]:          movr adx, ebx   
21 [0x15]:          chklen adx   
22 [0x16]:          loadval ebx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]: line: 55 movl 0   
25 [0x19]:          returnobj   
26 [0x1a]:          ret   


function: std#string.append[2830] params(1) in file: lib/support/0.2.805//string.sharp:58:8: note:  
		    def append(ch: var) : string
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 61 movi #1, ebx   
10 [0xa]:          newarry ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @31   
16 [0x10]: line: 63 movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          add ecx, ebx -> ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @1656 // <std.io#__srt_global.realloc>   
31 [0x1f]:          nop   
32 [0x20]: line: 65 ipushl #1   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          movl 0   
38 [0x26]:          movn #0   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          sub ecx, ebx -> ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          loadval ebx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 66 movl 0   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: std#string.append[2831] params(1) in file: lib/support/0.2.805//string.sharp:69:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 69 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @1552 // <std#integer<_int8>.get_value>   
3 [0x3]:          call @2830 // <std#string.append>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#string.append[2832] params(1) in file: lib/support/0.2.805//string.sharp:71:8: note:  
		    def append(immstr: _int8[]) : string
		       ^

0 [0x0]: line: 73 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 75 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          sizeof ebx   
12 [0xc]:          smovr_2 ebx, fp+2   
13 [0xd]: line: 77 movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          pushnull    
18 [0x12]:          itest ebx   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 29   
21 [0x15]: line: 78 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          newarry ebx   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          popobj   
28 [0x1c]:          jmp @44   
29 [0x1d]: line: 80 movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          pushobj   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movl 1   
39 [0x27]:          sizeof ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          call @1656 // <std.io#__srt_global.realloc>   
44 [0x2c]:          nop   
45 [0x2d]: line: 82 movl 0   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          ipushl #2   
51 [0x33]:          istore 0   
53 [0x35]:          movl 1   
54 [0x36]:          sizeof ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          call @1666 // <std.io#__srt_global.memcopy>   
57 [0x39]: line: 83 movl 0   
58 [0x3a]:          returnobj   
59 [0x3b]:          ret   


function: std#string.append[2833] params(2) in file: lib/support/0.2.805//string.sharp:86:8: note:  
		    def append(immstr: _int8[], len: var) : string
		       ^

0 [0x0]: line: 88 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 89 loadl ecx, fp+2   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          lt ecx, ebx   
12 [0xc]:          jne 18   
13 [0xd]: line: 90 new_class @4 // std#exception   
14 [0xe]:          dup    
15 [0xf]:          newstr @13 // length cannot be less than zero   
16 [0x10]:          call @1613 // <std#exception.exception>   
17 [0x11]:          throw    
18 [0x12]:          nop   
19 [0x13]: line: 92 ipushl #2   
20 [0x14]:          movl 1   
21 [0x15]:          sizeof ebx   
22 [0x16]:          loadval ecx   
23 [0x17]:          gt ecx, ebx   
24 [0x18]:          jne 41   
25 [0x19]: line: 93 new_class @4 // std#exception   
26 [0x1a]:          dup    
27 [0x1b]:          new_class @58 // std#string   
28 [0x1c]:          dup    
29 [0x1d]:          newstr @14 // length of:    
30 [0x1e]:          call @2823 // <std#string.string>   
31 [0x1f]:          ipushl #2   
32 [0x20]:          call @2853 // <std#string.operator+>   
33 [0x21]:          newstr @15 //  is greater than the string:    
34 [0x22]:          call @2834 // <std#string.operator+>   
35 [0x23]:          movl 1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          call @2853 // <std#string.operator+>   
39 [0x27]:          call @1614 // <std#exception.exception>   
40 [0x28]:          throw    
41 [0x29]:          nop   
42 [0x2a]: line: 95 movl 0   
43 [0x2b]:          movn #0   
45 [0x2d]:          sizeof ebx   
46 [0x2e]:          smovr_2 ebx, fp+3   
47 [0x2f]: line: 97 movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          pushobj   
51 [0x33]:          pushnull    
52 [0x34]:          itest ebx   
53 [0x35]:          movr cmt, ebx   
54 [0x36]:          jne 62   
55 [0x37]: line: 98 loadl ebx, fp+2   
56 [0x38]:          newarry ebx   
57 [0x39]:          movl 0   
58 [0x3a]:          movn #0   
60 [0x3c]:          popobj   
61 [0x3d]:          jmp @76   
62 [0x3e]: line: 100 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           pushobj   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           sizeof ebx   
70 [0x46]:           rstore ebx   
71 [0x47]:           loadl ebx, fp+2   
72 [0x48]:           loadval ecx   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           call @1656 // <std.io#__srt_global.realloc>   
76 [0x4c]:           nop   
77 [0x4d]: line: 102 movl 0   
78 [0x4e]:           movn #0   
80 [0x50]:           pushobj   
81 [0x51]:           pushl 1   
82 [0x52]:           ipushl #3   
83 [0x53]:           istore 0   
85 [0x55]:           ipushl #2   
86 [0x56]:           call @1666 // <std.io#__srt_global.memcopy>   
87 [0x57]: line: 103 movl 0   
88 [0x58]:           returnobj   
89 [0x59]:           ret   


overload function: std#string.operator+[2834] params(1) in file: lib/support/0.2.805//string.sharp:106:8: note:  
		    def operator+(immstr : _int8[]) : string {
		       ^

0 [0x0]: line: 107 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2823 // <std#string.string>   
7 [0x7]:           movsl #0   
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 108 movl 1   
10 [0xa]:           checknull   
11 [0xb]:           not ebx, ebx   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 21   
14 [0xe]: line: 109 pushl 2   
15 [0xf]:           pushl 1   
16 [0x10]:           call @2832 // <std#string.append>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   
20 [0x14]:           jmp @27   
21 [0x15]: line: 111 pushl 2   
22 [0x16]:           newstr @16 // null   
23 [0x17]:           call @2832 // <std#string.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           nop   


overload function: std#string.operator+[2835] params(1) in file: lib/support/0.2.805//string.sharp:115:8: note:  
		    def operator+(obj : printable) : string {
		       ^

0 [0x0]: line: 116 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2823 // <std#string.string>   
7 [0x7]:           movsl #0   
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 117 movl 1   
10 [0xa]:           checknull   
11 [0xb]:           not ebx, ebx   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 27   
14 [0xe]: line: 118 pushl 2   
15 [0xf]:           pushl 1   
16 [0x10]:           invoke_delegate 2814 { static=0, args=0 }   
18 [0x12]:           popobj2    
19 [0x13]:           movn #0   
21 [0x15]:           pushobj   
22 [0x16]:           call @2832 // <std#string.append>   
23 [0x17]:           popobj2    
24 [0x18]:           returnobj   
25 [0x19]:           ret   
26 [0x1a]:           jmp @33   
27 [0x1b]: line: 120 pushl 2   
28 [0x1c]:           newstr @16 // null   
29 [0x1d]:           call @2832 // <std#string.append>   
30 [0x1e]:           popobj2    
31 [0x1f]:           returnobj   
32 [0x20]:           ret   
33 [0x21]:           nop   


overload function: std#string.operator+[2836] params(1) in file: lib/support/0.2.805//string.sharp:123:7: note:  
		   def operator+(str : string) : string {
		      ^

0 [0x0]: line: 124 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2823 // <std#string.string>   
7 [0x7]:           movsl #0   
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 125 movl 1   
10 [0xa]:           checknull   
11 [0xb]:           not ebx, ebx   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 24   
14 [0xe]: line: 126 pushl 2   
15 [0xf]:           movl 1   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           call @2832 // <std#string.append>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   
23 [0x17]:           jmp @30   
24 [0x18]: line: 128 pushl 2   
25 [0x19]:           newstr @16 // null   
26 [0x1a]:           call @2832 // <std#string.append>   
27 [0x1b]:           popobj2    
28 [0x1c]:           returnobj   
29 [0x1d]:           ret   
30 [0x1e]:           nop   


function: std#string.to_string[2837] params(0) in file: lib/support/0.2.805//string.sharp:131:8: note:  
		    def to_string() := new string(data);
		       ^

0 [0x0]: line: 131 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2823 // <std#string.string>   
7 [0x7]:           movsl #0   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


overload function: std#string.operator==[2838] params(1) in file: lib/support/0.2.805//string.sharp:133:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           sizeof ebx   
7 [0x7]:           loadval ecx   
8 [0x8]:           tne ecx, ebx   
9 [0x9]:           jne 14   
10 [0xa]: line: 135 movi #0, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   
14 [0xe]:           nop   
15 [0xf]: line: 137 istorel 0, fp+2   
17 [0x11]: line: 138 istorel -1, fp+4   
19 [0x13]:           pushl 1   
20 [0x14]:           popl 5   
21 [0x15]:           iaddl 1, fp@4   
23 [0x17]:           movl 5   
24 [0x18]:           sizeof ecx   
25 [0x19]:           loadl ebx, fp+4   
26 [0x1a]:           lt ebx, ecx   
27 [0x1b]:           jne 53   
28 [0x1c]:           iaload ecx, ebx   
29 [0x1d]:           smovr_2 ecx, fp+3   
30 [0x1e]: line: 139 ipushl #3   
31 [0x1f]:           movl 0   
32 [0x20]:           movn #0   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+2   
36 [0x24]:           movr egx, ebx   
37 [0x25]:           inc ebx   
38 [0x26]:           smovr_2 ebx, fp+2   
39 [0x27]:           movr ebx, egx   
40 [0x28]:           popobj2    
41 [0x29]:           movr adx, ebx   
42 [0x2a]:           chklen adx   
43 [0x2b]:           iaload ebx, adx   
44 [0x2c]:           loadval ecx   
45 [0x2d]:           tne ecx, ebx   
46 [0x2e]:           jne 51   
47 [0x2f]: line: 140 movi #0, ebx   
49 [0x31]:           return_val ebx   
50 [0x32]:           ret   
51 [0x33]:           nop   
52 [0x34]:           jmp @21   
53 [0x35]: line: 143 movi #1, ebx   
55 [0x37]:           return_val ebx   
56 [0x38]:           ret   


overload function: std#string.operator==[2839] params(1) in file: lib/support/0.2.805//string.sharp:146:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 16   
12 [0xc]: line: 148 movi #0, ebx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   
16 [0x10]:           nop   
17 [0x11]: line: 150 istorel 0, fp+2   
19 [0x13]: line: 151 istorel -1, fp+4   
21 [0x15]:           movl 1   
22 [0x16]:           movn #0   
24 [0x18]:           pushobj   
25 [0x19]:           popl 5   
26 [0x1a]:           iaddl 1, fp@4   
28 [0x1c]:           movl 5   
29 [0x1d]:           sizeof ecx   
30 [0x1e]:           loadl ebx, fp+4   
31 [0x1f]:           lt ebx, ecx   
32 [0x20]:           jne 58   
33 [0x21]:           iaload ecx, ebx   
34 [0x22]:           smovr_2 ecx, fp+3   
35 [0x23]: line: 152 ipushl #3   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           loadl ebx, fp+2   
41 [0x29]:           movr egx, ebx   
42 [0x2a]:           inc ebx   
43 [0x2b]:           smovr_2 ebx, fp+2   
44 [0x2c]:           movr ebx, egx   
45 [0x2d]:           popobj2    
46 [0x2e]:           movr adx, ebx   
47 [0x2f]:           chklen adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           tne ecx, ebx   
51 [0x33]:           jne 56   
52 [0x34]: line: 153 movi #0, ebx   
54 [0x36]:           return_val ebx   
55 [0x37]:           ret   
56 [0x38]:           nop   
57 [0x39]:           jmp @26   
58 [0x3a]: line: 156 movi #1, ebx   
60 [0x3c]:           return_val ebx   
61 [0x3d]:           ret   


overload function: std#string.operator!=[2840] params(1) in file: lib/support/0.2.805//string.sharp:160:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 160 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2838 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator!=[2841] params(1) in file: lib/support/0.2.805//string.sharp:161:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 161 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2839 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator=[2842] params(1) in file: lib/support/0.2.805//string.sharp:163:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 165 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           del   
8 [0x8]:           jmp @20   
9 [0x9]: line: 167 pushl 1   
10 [0xa]:           istore 0   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @1676 // <std.io#__srt_global.copy>   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           popobj   
20 [0x14]:           nop   
21 [0x15]:           ret   


function: std#string.at[2843] params(1) in file: lib/support/0.2.805//string.sharp:170:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 171 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           jne 12   
8 [0x8]: line: 172 pushl 0   
9 [0x9]:           ipushl #1   
10 [0xa]:           call @2861 // <std#string.bounds_error>   
11 [0xb]:           throw    
12 [0xc]:           nop   
13 [0xd]: line: 173 movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           loadl ebx, fp+1   
18 [0x12]:           popobj2    
19 [0x13]:           movr adx, ebx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   


overload function: std#string.operator[[2844] params(1) in file: lib/support/0.2.805//string.sharp:176:8: note:  
		    def operator[](pos: var) := at(pos);
		       ^

0 [0x0]: line: 176 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2843 // <std#string.at>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.fmt[2845] params(1) in file: lib/support/0.2.805//string.sharp:178:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 179 ipushl #0   
1 [0x1]:           movg @58 // @std#string   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           ret   


function: std#string.set_precision[2846] params(1) in file: lib/support/0.2.805//string.sharp:182:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 183 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 10   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           jne 22   
12 [0xc]: line: 184 new_class @5 // std#illegal_argument_exception   
13 [0xd]:           dup    
14 [0xe]:           new_class @58 // std#string   
15 [0xf]:           dup    
16 [0x10]:           newstr @17 // invalid precision:    
17 [0x11]:           call @2823 // <std#string.string>   
18 [0x12]:           ipushl #0   
19 [0x13]:           call @2853 // <std#string.operator+>   
20 [0x14]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
21 [0x15]:           throw    
22 [0x16]:           nop   
23 [0x17]: line: 185 ipushl #0   
24 [0x18]:           movg @58 // @std#string   
25 [0x19]:           movn #1   
27 [0x1b]:           loadval ebx   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           rmov adx, ebx   
31 [0x1f]:           ret   


function: std#string.get_data[2847] params(0) in file: lib/support/0.2.805//string.sharp:188:8: note:  
		    def get_data() := data;
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.get_elements[2848] params(0) in file: lib/support/0.2.805//string.sharp:190:8: note:  
		    def get_elements() := data;
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.to_array[2849] params(0) in file: lib/support/0.2.805//string.sharp:192:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 12   
8 [0x8]:           pushnull    
9 [0x9]:           popobj2    
10 [0xa]:           returnobj   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 195 movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           istore 0   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           sizeof ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @1676 // <std.io#__srt_global.copy>   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


function: std#string.starts_with[2850] params(1) in file: lib/support/0.2.805//string.sharp:199:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 200 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 13   
3 [0x3]:           movl 1   
4 [0x4]:           movn #0   
6 [0x6]:           sizeof ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           sizeof ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gt ecx, ebx   
14 [0xe]:           jne 19   
15 [0xf]: line: 201 movi #0, ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   
19 [0x13]:           nop   
20 [0x14]: line: 204 istorel 0, fp+2   
22 [0x16]:           ipushl #2   
23 [0x17]:           movl 1   
24 [0x18]:           movn #0   
26 [0x1a]:           sizeof ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           lt ecx, ebx   
29 [0x1d]:           jne 60   
30 [0x1e]: line: 206 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           pushobj   
34 [0x22]:           loadl ebx, fp+2   
35 [0x23]:           popobj2    
36 [0x24]:           movr adx, ebx   
37 [0x25]:           chklen adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movl 1   
41 [0x29]:           movn #0   
43 [0x2b]:           pushobj   
44 [0x2c]:           loadl ebx, fp+2   
45 [0x2d]:           popobj2    
46 [0x2e]:           movr adx, ebx   
47 [0x2f]:           chklen adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           tne ecx, ebx   
51 [0x33]:           jne 56   
52 [0x34]: line: 207 movi #0, ebx   
54 [0x36]:           return_val ebx   
55 [0x37]:           ret   
56 [0x38]:           nop   
57 [0x39]:           iaddl 1, fp@2   
59 [0x3b]:           jmp @22   
60 [0x3c]: line: 209 movi #1, ebx   
62 [0x3e]:           return_val ebx   
63 [0x3f]:           ret   


function: std#string.find[2851] params(1) in file: lib/support/0.2.805//string.sharp:213:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 214 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           jne 16   
12 [0xc]: line: 215 movi #0, ebx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   
16 [0x10]:           nop   
17 [0x11]: line: 218 istorel 0, fp+2   
19 [0x13]: line: 219 istorel 0, fp+3   
21 [0x15]:           ipushl #3   
22 [0x16]:           movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           sizeof ebx   
26 [0x1a]:           loadval ecx   
27 [0x1b]:           lt ecx, ebx   
28 [0x1c]:           jne 94   
29 [0x1d]: line: 220 ipushl #3   
30 [0x1e]:           movl 1   
31 [0x1f]:           movn #0   
33 [0x21]:           sizeof ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           add ecx, ebx -> ebx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movl 0   
38 [0x26]:           movn #0   
40 [0x28]:           sizeof ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           lt ecx, ebx   
43 [0x2b]:           jne 86   
44 [0x2c]: line: 221 istorel 0, fp+4   
46 [0x2e]:           ipushl #4   
47 [0x2f]:           movl 1   
48 [0x30]:           movn #0   
50 [0x32]:           sizeof ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           lt ecx, ebx   
53 [0x35]:           jne 81   
54 [0x36]: line: 222 movl 1   
55 [0x37]:           movn #0   
57 [0x39]:           pushobj   
58 [0x3a]:           loadl ebx, fp+4   
59 [0x3b]:           popobj2    
60 [0x3c]:           movr adx, ebx   
61 [0x3d]:           chklen adx   
62 [0x3e]:           iaload ebx, adx   
63 [0x3f]:           rstore ebx   
64 [0x40]:           movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           pushobj   
68 [0x44]:           loadl ebx, fp+4   
69 [0x45]:           popobj2    
70 [0x46]:           movr adx, ebx   
71 [0x47]:           chklen adx   
72 [0x48]:           iaload ebx, adx   
73 [0x49]:           loadval ecx   
74 [0x4a]:           tne ecx, ebx   
75 [0x4b]:           jne 77   
76 [0x4c]: line: 223 jmp @81   
77 [0x4d]:           nop   
78 [0x4e]:           iaddl 1, fp@4   
80 [0x50]:           jmp @46   
81 [0x51]: line: 226 movi #1, ebx   
83 [0x53]:           return_val ebx   
84 [0x54]:           ret   
85 [0x55]:           jmp @90   
86 [0x56]: line: 227 movi #0, ebx   
88 [0x58]:           return_val ebx   
89 [0x59]:           ret   
90 [0x5a]:           nop   
91 [0x5b]:           iaddl 1, fp@3   
93 [0x5d]:           jmp @21   
94 [0x5e]: line: 230 movi #0, ebx   
96 [0x60]:           return_val ebx   
97 [0x61]:           ret   


function: std#string.ends_with[2852] params(1) in file: lib/support/0.2.805//string.sharp:233:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 234 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           jne 16   
12 [0xc]: line: 235 movi #0, ebx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   
16 [0x10]:           nop   
17 [0x11]: line: 237 movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           sizeof ebx   
21 [0x15]:           rstore ebx   
22 [0x16]:           movl 1   
23 [0x17]:           movn #0   
25 [0x19]:           sizeof ebx   
26 [0x1a]:           loadval ecx   
27 [0x1b]:           sub ecx, ebx -> ebx   
28 [0x1c]:           smovr_2 ebx, fp+2   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           sizeof ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           lt ecx, ebx   
36 [0x24]:           jne 67   
37 [0x25]: line: 238 movl 0   
38 [0x26]:           movn #0   
40 [0x28]:           pushobj   
41 [0x29]:           loadl ebx, fp+2   
42 [0x2a]:           popobj2    
43 [0x2b]:           movr adx, ebx   
44 [0x2c]:           chklen adx   
45 [0x2d]:           iaload ebx, adx   
46 [0x2e]:           rstore ebx   
47 [0x2f]:           movl 1   
48 [0x30]:           movn #0   
50 [0x32]:           pushobj   
51 [0x33]:           loadl ebx, fp+2   
52 [0x34]:           popobj2    
53 [0x35]:           movr adx, ebx   
54 [0x36]:           chklen adx   
55 [0x37]:           iaload ebx, adx   
56 [0x38]:           loadval ecx   
57 [0x39]:           tne ecx, ebx   
58 [0x3a]:           jne 63   
59 [0x3b]: line: 239 movi #0, ebx   
61 [0x3d]:           return_val ebx   
62 [0x3e]:           ret   
63 [0x3f]:           nop   
64 [0x40]:           iaddl 1, fp@2   
66 [0x42]:           jmp @29   
67 [0x43]: line: 242 movi #1, ebx   
69 [0x45]:           return_val ebx   
70 [0x46]:           ret   


overload function: std#string.operator+[2853] params(1) in file: lib/support/0.2.805//string.sharp:245:8: note:  
		    def operator+(num : var) : string {
		       ^

0 [0x0]: line: 246 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2823 // <std#string.string>   
7 [0x7]:           movsl #0   
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 247 pushl 2   
10 [0xa]:           ipushl #1   
11 [0xb]:           call @2855 // <std#string.parse>   
12 [0xc]:           popobj2    
13 [0xd]:           movn #0   
15 [0xf]:           pushobj   
16 [0x10]:           call @2832 // <std#string.append>   
17 [0x11]:           pop   
18 [0x12]: line: 248 movl 2   
19 [0x13]:           returnobj   
20 [0x14]:           ret   


function: std#string.size[2854] params(0) in file: lib/support/0.2.805//string.sharp:251:8: note:  
		    def size() := sizeof(data);
		       ^

0 [0x0]: line: 251 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.parse[2855] params(1) in file: lib/support/0.2.805//string.sharp:253:15: note:  
		    static def parse( number : var ) := new string(snprintf(currentFormat, number, precision));
		              ^

0 [0x0]: line: 253 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movg @58 // @std#string   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           rstore ebx   
9 [0x9]:           ipushl #0   
10 [0xa]:           movg @58 // @std#string   
11 [0xb]:           movn #1   
13 [0xd]:           movi #0, adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @1557 // <std#__srt_global.snprintf>   
18 [0x12]:           call @2823 // <std#string.string>   
19 [0x13]:           movsl #0   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+=[2856] params(1) in file: lib/support/0.2.805//string.sharp:255:8: note:  
		    def operator+=( num: var ) := append(parse(num).data);
		       ^

0 [0x0]: line: 255 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2855 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2832 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2857] params(1) in file: lib/support/0.2.805//string.sharp:257:8: note:  
		    def operator+=( obj: printable ) : string
		       ^

0 [0x0]: line: 259 pushl 1   
1 [0x1]:           invoke_delegate 2814 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 260 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 16   
9 [0x9]:           movl 2   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           pushnull    
14 [0xe]:           itest ebx   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 28   
18 [0x12]: line: 261 pushl 0   
19 [0x13]:           movl 2   
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           call @2832 // <std#string.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           jmp @34   
28 [0x1c]: line: 263 pushl 0   
29 [0x1d]:           newstr @16 // null   
30 [0x1e]:           call @2832 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           nop   


overload function: std#string.operator+=[2858] params(1) in file: lib/support/0.2.805//string.sharp:266:8: note:  
		    def operator+=( str: string ) := append(str.data);
		       ^

0 [0x0]: line: 266 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @2832 // <std#string.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string.operator+=[2859] params(1) in file: lib/support/0.2.805//string.sharp:268:8: note:  
		    def operator+=( str: _int8[] ) := append(str);
		       ^

0 [0x0]: line: 268 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2832 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#string.substring[2860] params(2) in file: lib/support/0.2.805//string.sharp:270:8: note:  
		    def substring(startPos: var, endPos: var) : string {
		       ^

0 [0x0]: line: 271 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           skpe ebx // pc = 12   
9 [0x9]:           loadl ecx, fp+1   
10 [0xa]:           movi #0, ebx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           jne 18   
14 [0xe]: line: 272 pushl 0   
15 [0xf]:           ipushl #1   
16 [0x10]:           call @2861 // <std#string.bounds_error>   
17 [0x11]:           throw    
18 [0x12]:           nop   
19 [0x13]: line: 273 ipushl #2   
20 [0x14]:           loadl ebx, fp+1   
21 [0x15]:           loadval ecx   
22 [0x16]:           lt ecx, ebx   
23 [0x17]:           jne 38   
24 [0x18]: line: 274 new_class @5 // std#illegal_argument_exception   
25 [0x19]:           dup    
26 [0x1a]:           new_class @58 // std#string   
27 [0x1b]:           dup    
28 [0x1c]:           newstr @18 // endPos:    
29 [0x1d]:           call @2823 // <std#string.string>   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @2853 // <std#string.operator+>   
32 [0x20]:           newstr @19 //  cannot be less than the startPos:    
33 [0x21]:           call @2834 // <std#string.operator+>   
34 [0x22]:           ipushl #1   
35 [0x23]:           call @2853 // <std#string.operator+>   
36 [0x24]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
37 [0x25]:           throw    
38 [0x26]:           nop   
39 [0x27]: line: 278 new_class @58 // std#string   
40 [0x28]:           dup    
41 [0x29]:           call @2863 // <std#string.string>   
42 [0x2a]:           movsl #0   
43 [0x2b]:           smovr_3 fp+3   
44 [0x2c]: line: 279 movl 0   
45 [0x2d]:           movn #0   
47 [0x2f]:           pushobj   
48 [0x30]:           ipushl #1   
49 [0x31]:           ipushl #2   
50 [0x32]:           call @1676 // <std.io#__srt_global.copy>   
51 [0x33]:           movl 3   
52 [0x34]:           movn #0   
54 [0x36]:           popobj   
55 [0x37]: line: 280 movl 3   
56 [0x38]:           returnobj   
57 [0x39]:           ret   


function: std#string.bounds_error[2861] params(1) in file: lib/support/0.2.805//string.sharp:283:16: note:  
		    private def bounds_error(pos : var) : error {
		               ^

0 [0x0]: line: 284 new_class @7 // std#out_of_bounds_exception   
1 [0x1]:           dup    
2 [0x2]:           new_class @58 // std#string   
3 [0x3]:           dup    
4 [0x4]:           newstr @20 // Index out of bounds exception at:    
5 [0x5]:           call @2823 // <std#string.string>   
6 [0x6]:           ipushl #1   
7 [0x7]:           call @2853 // <std#string.operator+>   
8 [0x8]:           newstr @21 //  with size of:    
9 [0x9]:           call @2834 // <std#string.operator+>   
10 [0xa]:           movl 0   
11 [0xb]:           movn #0   
13 [0xd]:           sizeof ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2853 // <std#string.operator+>   
16 [0x10]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
17 [0x11]:           movsl #0   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#string.hash[2862] params(0) in file: lib/support/0.2.805//string.sharp:287:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 288 istorel 0, fp+1   
2 [0x2]: line: 289 istorel 1, fp+2   
4 [0x4]: line: 290 istorel -1, fp+4   
6 [0x6]: line: 291 movl 0   
7 [0x7]: line: 292 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 293 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 294 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 296 new_class @40 // std#long   
56 [0x38]:           dup    
57 [0x39]:           ipushl #1   
58 [0x3a]:           call @1965 // <std#long.long>   
59 [0x3b]:           popobj2    
60 [0x3c]:           returnobj   
61 [0x3d]:           ret   


constructor: std#string.string[2863] params(0) in file: lib/support/0.2.805//string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


function: std#string_builder.set_resize_capacity[2864] params(1) in file: lib/support/0.2.805//string_builder.sharp:20:8: note:  
		    def set_resize_capacity(new_capacity: var) {
		       ^

0 [0x0]: line: 21 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


constructor: std#string_builder.string_builder[2865] params(1) in file: lib/support/0.2.805//string_builder.sharp:24:19: note:  
		    string_builder(str : _int8[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]:          call @1835 // <std#_object_._object_>   
49 [0x31]: line: 25 movl 1   
50 [0x32]:          checknull   
51 [0x33]:          not ebx, ebx   
52 [0x34]:          movr cmt, ebx   
53 [0x35]:          jne 58   
54 [0x36]: line: 26 pushl 0   
55 [0x37]:          pushl 1   
56 [0x38]:          call @2876 // <std#string_builder.append>   
57 [0x39]:          pop   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


constructor: std#string_builder.string_builder[2866] params(1) in file: lib/support/0.2.805//string_builder.sharp:30:19: note:  
		    string_builder(ch: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]:          call @1835 // <std#_object_._object_>   
49 [0x31]: line: 31 pushl 0   
50 [0x32]:          ipushl #1   
51 [0x33]:          call @2874 // <std#string_builder.append>   
52 [0x34]:          pop   
53 [0x35]:          ret   


constructor: std#string_builder.string_builder[2867] params(1) in file: lib/support/0.2.805//string_builder.sharp:34:19: note:  
		    string_builder(str : char[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]:          call @1835 // <std#_object_._object_>   
49 [0x31]: line: 35 movl 1   
50 [0x32]:          checknull   
51 [0x33]:          not ebx, ebx   
52 [0x34]:          movr cmt, ebx   
53 [0x35]:          jne 112   
54 [0x36]: line: 36 pushl 0   
55 [0x37]:          movl 1   
56 [0x38]:          sizeof ebx   
57 [0x39]:          rstore ebx   
58 [0x3a]:          call @2871 // <std#string_builder.space_available>   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          not ebx, ebx   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 68   
63 [0x3f]: line: 37 pushl 0   
64 [0x40]:          movl 1   
65 [0x41]:          sizeof ebx   
66 [0x42]:          rstore ebx   
67 [0x43]:          call @2872 // <std#string_builder.expand>   
68 [0x44]:          nop   
69 [0x45]: line: 40 movl 1   
70 [0x46]:          sizeof ebx   
71 [0x47]:          newarry ebx   
72 [0x48]:          movl 0   
73 [0x49]:          movn #0   
75 [0x4b]:          popobj   
76 [0x4c]: line: 41 istorel -1, fp+3   
78 [0x4e]:          pushl 1   
79 [0x4f]:          popl 4   
80 [0x50]:          iaddl 1, fp@3   
82 [0x52]:          movl 4   
83 [0x53]:          sizeof ecx   
84 [0x54]:          loadl ebx, fp+3   
85 [0x55]:          lt ebx, ecx   
86 [0x56]:          jne 112   
87 [0x57]:          movnd ebx   
88 [0x58]:          pushobj   
89 [0x59]:          popl 2   
90 [0x5a]: line: 42 pushl 2   
91 [0x5b]:          call @1552 // <std#integer<_int8>.get_value>   
92 [0x5c]:          movl 0   
93 [0x5d]:          movn #0   
95 [0x5f]:          pushobj   
96 [0x60]:          movl 0   
97 [0x61]:          movn #3   
99 [0x63]:          movi #0, adx   
101 [0x65]:          iaload ebx, adx   
102 [0x66]:          inc ebx   
103 [0x67]:          movi #0, adx   
105 [0x69]:          rmov adx, ebx   
106 [0x6a]:          popobj2    
107 [0x6b]:          movr adx, ebx   
108 [0x6c]:          chklen adx   
109 [0x6d]:          loadval ebx   
110 [0x6e]:          rmov adx, ebx   
111 [0x6f]:          jmp @80   
112 [0x70]:          nop   
113 [0x71]:          ret   


constructor: std#string_builder.string_builder[2868] params(1) in file: lib/support/0.2.805//string_builder.sharp:47:19: note:  
		    string_builder(str: string) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]:          call @1835 // <std#_object_._object_>   
49 [0x31]: line: 48 movl 1   
50 [0x32]:          checknull   
51 [0x33]:          not ebx, ebx   
52 [0x34]:          movr cmt, ebx   
53 [0x35]:          jne 59   
54 [0x36]: line: 49 pushl 0   
55 [0x37]:          pushl 1   
56 [0x38]:          call @2847 // <std#string.get_data>   
57 [0x39]:          call @2876 // <std#string_builder.append>   
58 [0x3a]:          pop   
59 [0x3b]:          nop   
60 [0x3c]:          ret   


constructor: std#string_builder.string_builder[2869] params(1) in file: lib/support/0.2.805//string_builder.sharp:53:19: note:  
		    string_builder(str: string_builder) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]:          call @1835 // <std#_object_._object_>   
49 [0x31]: line: 54 movl 1   
50 [0x32]:          checknull   
51 [0x33]:          not ebx, ebx   
52 [0x34]:          movr cmt, ebx   
53 [0x35]:          jne 61   
54 [0x36]: line: 55 pushl 0   
55 [0x37]:          movl 1   
56 [0x38]:          movn #0   
58 [0x3a]:          pushobj   
59 [0x3b]:          call @2876 // <std#string_builder.append>   
60 [0x3c]:          pop   
61 [0x3d]:          nop   
62 [0x3e]:          ret   


constructor: std#string_builder.string_builder[2870] params(2) in file: lib/support/0.2.805//string_builder.sharp:59:19: note:  
		    string_builder(str : _int8[], offset: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]:          call @1835 // <std#_object_._object_>   
49 [0x31]: line: 60 movl 1   
50 [0x32]:          checknull   
51 [0x33]:          not ebx, ebx   
52 [0x34]:          movr cmt, ebx   
53 [0x35]:          jne 115   
54 [0x36]: line: 61 pushl 0   
55 [0x37]:          movl 1   
56 [0x38]:          sizeof ebx   
57 [0x39]:          rstore ebx   
58 [0x3a]:          loadl ebx, fp+2   
59 [0x3b]:          loadval ecx   
60 [0x3c]:          sub ecx, ebx -> ebx   
61 [0x3d]:          rstore ebx   
62 [0x3e]:          call @2871 // <std#string_builder.space_available>   
63 [0x3f]:          loadval ebx   
64 [0x40]:          not ebx, ebx   
65 [0x41]:          movr cmt, ebx   
66 [0x42]:          jne 72   
67 [0x43]: line: 62 pushl 0   
68 [0x44]:          movl 1   
69 [0x45]:          sizeof ebx   
70 [0x46]:          rstore ebx   
71 [0x47]:          call @2872 // <std#string_builder.expand>   
72 [0x48]:          nop   
73 [0x49]: line: 65 pushl 1   
74 [0x4a]:          movl 0   
75 [0x4b]:          movn #0   
77 [0x4d]:          pushobj   
78 [0x4e]:          movl 0   
79 [0x4f]:          movn #3   
81 [0x51]:          movi #0, adx   
83 [0x53]:          iaload ebx, adx   
84 [0x54]:          inc ebx   
85 [0x55]:          movi #0, adx   
87 [0x57]:          rmov adx, ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          ipushl #2   
90 [0x5a]:          movl 1   
91 [0x5b]:          sizeof ebx   
92 [0x5c]:          rstore ebx   
93 [0x5d]:          call @1666 // <std.io#__srt_global.memcopy>   
94 [0x5e]: line: 66 movl 1   
95 [0x5f]:          sizeof ebx   
96 [0x60]:          rstore ebx   
97 [0x61]:          loadl ebx, fp+2   
98 [0x62]:          loadval ecx   
99 [0x63]:          sub ecx, ebx -> ebx   
100 [0x64]:          rstore ebx   
101 [0x65]:          movi #1, ebx   
103 [0x67]:          loadval ecx   
104 [0x68]:          sub ecx, ebx -> ebx   
105 [0x69]:          rstore ebx   
106 [0x6a]:          movl 0   
107 [0x6b]:          movn #3   
109 [0x6d]:          movi #0, adx   
111 [0x6f]:          iaload ecx, adx   
112 [0x70]:          loadval ebx   
113 [0x71]:          add ecx, ebx -> ebx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          nop   
116 [0x74]:          ret   


function: std#string_builder.space_available[2871] params(1) in file: lib/support/0.2.805//string_builder.sharp:70:8: note:  
		    def space_available(space_required : var) : var {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          sizeof ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          lt ecx, ebx   
22 [0x16]:          return_val cmt   
23 [0x17]:          ret   


function: std#string_builder.expand[2872] params(1) in file: lib/support/0.2.805//string_builder.sharp:74:8: note:  
		    def expand(space_required : var) {
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          loadval ecx   
23 [0x17]:          add ecx, ebx -> ebx   
24 [0x18]:          smovr_2 ebx, fp+2   
25 [0x19]: line: 76 movl 0   
26 [0x1a]:          movn #0   
28 [0x1c]:          pushobj   
29 [0x1d]:          ipushl #2   
30 [0x1e]:          call @1656 // <std.io#__srt_global.realloc>   
31 [0x1f]:          ret   


function: std#string_builder.replace[2873] params(2) in file: lib/support/0.2.805//string_builder.sharp:79:8: note:  
		    def replace(pos : var, ch: _int8) : string_builder {
		       ^

0 [0x0]: line: 80 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          jne 12   
8 [0x8]: line: 81 pushl 0   
9 [0x9]:          ipushl #1   
10 [0xa]:          call @2905 // <std#string_builder.bounds_error>   
11 [0xb]:          throw    
12 [0xc]:          nop   
13 [0xd]: line: 84 ipushl #2   
14 [0xe]:          movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+1   
19 [0x13]:          popobj2    
20 [0x14]:          movr adx, ebx   
21 [0x15]:          chklen adx   
22 [0x16]:          loadval ebx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]: line: 85 movl 0   
25 [0x19]:          returnobj   
26 [0x1a]:          ret   


function: std#string_builder.append[2874] params(1) in file: lib/support/0.2.805//string_builder.sharp:88:8: note:  
		    def append(ch: var) : string_builder
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 91 movi #255, ebx   
10 [0xa]:          newarry ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @39   
16 [0x10]:          movl 0   
17 [0x11]:          movn #3   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          rstore ebx   
23 [0x17]:          movi #1, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          add ecx, ebx -> ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          gte ecx, ebx   
34 [0x22]:          jne 39   
35 [0x23]: line: 93 pushl 0   
36 [0x24]:          istore 0   
38 [0x26]:          call @2872 // <std#string_builder.expand>   
39 [0x27]:          nop   
40 [0x28]: line: 95 ipushl #1   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #0   
44 [0x2c]:          pushobj   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #0   
48 [0x30]:          sizeof ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movi #1, ebx   
52 [0x34]:          loadval ecx   
53 [0x35]:          sub ecx, ebx -> ebx   
54 [0x36]:          popobj2    
55 [0x37]:          movr adx, ebx   
56 [0x38]:          chklen adx   
57 [0x39]:          loadval ebx   
58 [0x3a]:          rmov adx, ebx   
59 [0x3b]: line: 96 movl 0   
60 [0x3c]:          returnobj   
61 [0x3d]:          ret   


function: std#string_builder.append[2875] params(1) in file: lib/support/0.2.805//string_builder.sharp:99:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 99 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @1552 // <std#integer<_int8>.get_value>   
3 [0x3]:          call @2874 // <std#string_builder.append>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#string_builder.append[2876] params(1) in file: lib/support/0.2.805//string_builder.sharp:101:8: note:  
		    def append(immstr: _int8[]) : string_builder
		       ^

0 [0x0]: line: 103 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 105 movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 29   
16 [0x10]: line: 106 movl 1   
17 [0x11]:           sizeof ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #255, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           newarry ebx   
24 [0x18]:           movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           popobj   
28 [0x1c]:           jmp @43   
29 [0x1d]:           pushl 0   
30 [0x1e]:           movl 1   
31 [0x1f]:           sizeof ebx   
32 [0x20]:           rstore ebx   
33 [0x21]:           call @2871 // <std#string_builder.space_available>   
34 [0x22]:           loadval ebx   
35 [0x23]:           not ebx, ebx   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 43   
38 [0x26]: line: 108 pushl 0   
39 [0x27]:           movl 1   
40 [0x28]:           sizeof ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @2872 // <std#string_builder.expand>   
43 [0x2b]:           nop   
44 [0x2c]: line: 110 movl 0   
45 [0x2d]:           movn #0   
47 [0x2f]:           pushobj   
48 [0x30]:           pushl 1   
49 [0x31]:           movl 0   
50 [0x32]:           movn #3   
52 [0x34]:           movi #0, adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           inc ebx   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           rmov adx, ebx   
59 [0x3b]:           rstore ebx   
60 [0x3c]:           istore 0   
62 [0x3e]:           movl 1   
63 [0x3f]:           sizeof ebx   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @1666 // <std.io#__srt_global.memcopy>   
66 [0x42]: line: 111 movl 1   
67 [0x43]:           sizeof ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movi #1, ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           sub ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 0   
75 [0x4b]:           movn #3   
77 [0x4d]:           movi #0, adx   
79 [0x4f]:           iaload ecx, adx   
80 [0x50]:           loadval ebx   
81 [0x51]:           add ecx, ebx -> ebx   
82 [0x52]:           rmov adx, ebx   
83 [0x53]: line: 112 movl 0   
84 [0x54]:           returnobj   
85 [0x55]:           ret   


function: std#string_builder.append[2877] params(2) in file: lib/support/0.2.805//string_builder.sharp:115:8: note:  
		    def append(immstr: _int8[], len: var) : string_builder
		       ^

0 [0x0]: line: 117 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 118 loadl ecx, fp+2   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           lt ecx, ebx   
12 [0xc]:           jne 18   
13 [0xd]: line: 119 new_class @4 // std#exception   
14 [0xe]:           dup    
15 [0xf]:           newstr @13 // length cannot be less than zero   
16 [0x10]:           call @1613 // <std#exception.exception>   
17 [0x11]:           throw    
18 [0x12]:           nop   
19 [0x13]: line: 121 ipushl #2   
20 [0x14]:           movl 1   
21 [0x15]:           sizeof ebx   
22 [0x16]:           loadval ecx   
23 [0x17]:           gt ecx, ebx   
24 [0x18]:           jne 41   
25 [0x19]: line: 122 new_class @4 // std#exception   
26 [0x1a]:           dup    
27 [0x1b]:           new_class @58 // std#string   
28 [0x1c]:           dup    
29 [0x1d]:           newstr @14 // length of:    
30 [0x1e]:           call @2823 // <std#string.string>   
31 [0x1f]:           ipushl #2   
32 [0x20]:           call @2853 // <std#string.operator+>   
33 [0x21]:           newstr @15 //  is greater than the string:    
34 [0x22]:           call @2834 // <std#string.operator+>   
35 [0x23]:           movl 1   
36 [0x24]:           sizeof ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           call @2853 // <std#string.operator+>   
39 [0x27]:           call @1614 // <std#exception.exception>   
40 [0x28]:           throw    
41 [0x29]:           nop   
42 [0x2a]: line: 124 movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           pushnull    
47 [0x2f]:           itest ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 61   
50 [0x32]: line: 125 ipushl #2   
51 [0x33]:           movi #255, ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           add ecx, ebx -> ebx   
55 [0x37]:           newarry ebx   
56 [0x38]:           movl 0   
57 [0x39]:           movn #0   
59 [0x3b]:           popobj   
60 [0x3c]:           jmp @75   
61 [0x3d]:           pushl 0   
62 [0x3e]:           movl 1   
63 [0x3f]:           sizeof ebx   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @2871 // <std#string_builder.space_available>   
66 [0x42]:           loadval ebx   
67 [0x43]:           not ebx, ebx   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 75   
70 [0x46]: line: 127 pushl 0   
71 [0x47]:           movl 1   
72 [0x48]:           sizeof ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           call @2872 // <std#string_builder.expand>   
75 [0x4b]:           nop   
76 [0x4c]: line: 129 movl 0   
77 [0x4d]:           movn #0   
79 [0x4f]:           pushobj   
80 [0x50]:           pushl 1   
81 [0x51]:           movl 0   
82 [0x52]:           movn #3   
84 [0x54]:           movi #0, adx   
86 [0x56]:           iaload ebx, adx   
87 [0x57]:           inc ebx   
88 [0x58]:           movi #0, adx   
90 [0x5a]:           rmov adx, ebx   
91 [0x5b]:           rstore ebx   
92 [0x5c]:           istore 0   
94 [0x5e]:           ipushl #2   
95 [0x5f]:           call @1666 // <std.io#__srt_global.memcopy>   
96 [0x60]: line: 130 movl 1   
97 [0x61]:           sizeof ebx   
98 [0x62]:           rstore ebx   
99 [0x63]:           loadl ebx, fp+2   
100 [0x64]:           loadval ecx   
101 [0x65]:           sub ecx, ebx -> ebx   
102 [0x66]:           rstore ebx   
103 [0x67]:           movi #1, ebx   
105 [0x69]:           loadval ecx   
106 [0x6a]:           sub ecx, ebx -> ebx   
107 [0x6b]:           rstore ebx   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #3   
111 [0x6f]:           movi #0, adx   
113 [0x71]:           iaload ecx, adx   
114 [0x72]:           loadval ebx   
115 [0x73]:           add ecx, ebx -> ebx   
116 [0x74]:           rmov adx, ebx   
117 [0x75]: line: 131 movl 0   
118 [0x76]:           returnobj   
119 [0x77]:           ret   


overload function: std#string_builder.operator+[2878] params(1) in file: lib/support/0.2.805//string_builder.sharp:134:8: note:  
		    def operator+(immstr : _int8[]) : string_builder {
		       ^

0 [0x0]: line: 135 new_class @59 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2865 // <std#string_builder.string_builder>   
7 [0x7]:           movsl #0   
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 136 movl 1   
10 [0xa]:           checknull   
11 [0xb]:           not ebx, ebx   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 21   
14 [0xe]: line: 137 pushl 2   
15 [0xf]:           pushl 1   
16 [0x10]:           call @2876 // <std#string_builder.append>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   
20 [0x14]:           jmp @27   
21 [0x15]: line: 139 pushl 2   
22 [0x16]:           newstr @16 // null   
23 [0x17]:           call @2876 // <std#string_builder.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           nop   


overload function: std#string_builder.operator+[2879] params(1) in file: lib/support/0.2.805//string_builder.sharp:143:8: note:  
		    def operator+(obj : printable) : string_builder {
		       ^

0 [0x0]: line: 144 new_class @59 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2865 // <std#string_builder.string_builder>   
7 [0x7]:           movsl #0   
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 145 movl 1   
10 [0xa]:           checknull   
11 [0xb]:           not ebx, ebx   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 24   
14 [0xe]: line: 146 pushl 2   
15 [0xf]:           pushl 1   
16 [0x10]:           invoke_delegate 2814 { static=0, args=0 }   
18 [0x12]:           call @2847 // <std#string.get_data>   
19 [0x13]:           call @2876 // <std#string_builder.append>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   
23 [0x17]:           jmp @30   
24 [0x18]: line: 148 pushl 2   
25 [0x19]:           newstr @16 // null   
26 [0x1a]:           call @2876 // <std#string_builder.append>   
27 [0x1b]:           popobj2    
28 [0x1c]:           returnobj   
29 [0x1d]:           ret   
30 [0x1e]:           nop   


function: std#string_builder.to_string[2880] params(0) in file: lib/support/0.2.805//string_builder.sharp:151:8: note:  
		    def to_string() := new string(data, 0, cursor + 1);
		       ^

0 [0x0]: line: 151 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           istore 0   
8 [0x8]:           movl 0   
9 [0x9]:           movn #3   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           add ecx, ebx -> ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @2828 // <std#string.string>   
21 [0x15]:           movsl #0   
22 [0x16]:           returnobj   
23 [0x17]:           ret   


overload function: std#string_builder.operator==[2881] params(1) in file: lib/support/0.2.805//string_builder.sharp:153:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           tne ecx, ebx   
16 [0x10]:           jne 21   
17 [0x11]: line: 155 movi #0, ebx   
19 [0x13]:           return_val ebx   
20 [0x14]:           ret   
21 [0x15]:           nop   
22 [0x16]: line: 157 istorel 0, fp+2   
24 [0x18]: line: 158 istorel -1, fp+4   
26 [0x1a]:           pushl 1   
27 [0x1b]:           popl 5   
28 [0x1c]:           iaddl 1, fp@4   
30 [0x1e]:           movl 5   
31 [0x1f]:           sizeof ecx   
32 [0x20]:           loadl ebx, fp+4   
33 [0x21]:           lt ebx, ecx   
34 [0x22]:           jne 60   
35 [0x23]:           iaload ecx, ebx   
36 [0x24]:           smovr_2 ecx, fp+3   
37 [0x25]: line: 159 ipushl #3   
38 [0x26]:           movl 0   
39 [0x27]:           movn #0   
41 [0x29]:           pushobj   
42 [0x2a]:           loadl ebx, fp+2   
43 [0x2b]:           movr egx, ebx   
44 [0x2c]:           inc ebx   
45 [0x2d]:           smovr_2 ebx, fp+2   
46 [0x2e]:           movr ebx, egx   
47 [0x2f]:           popobj2    
48 [0x30]:           movr adx, ebx   
49 [0x31]:           chklen adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           loadval ecx   
52 [0x34]:           tne ecx, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 160 movi #0, ebx   
56 [0x38]:           return_val ebx   
57 [0x39]:           ret   
58 [0x3a]:           nop   
59 [0x3b]:           jmp @28   
60 [0x3c]: line: 163 movi #1, ebx   
62 [0x3e]:           return_val ebx   
63 [0x3f]:           ret   


overload function: std#string_builder.operator==[2882] params(1) in file: lib/support/0.2.805//string_builder.sharp:166:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           pushl 1   
13 [0xd]:           call @2847 // <std#string.get_data>   
14 [0xe]:           popobj2    
15 [0xf]:           sizeof ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           jne 23   
19 [0x13]: line: 168 movi #0, ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 170 istorel 0, fp+2   
26 [0x1a]: line: 171 istorel -1, fp+4   
28 [0x1c]:           pushl 1   
29 [0x1d]:           call @2847 // <std#string.get_data>   
30 [0x1e]:           popl 5   
31 [0x1f]:           iaddl 1, fp@4   
33 [0x21]:           movl 5   
34 [0x22]:           sizeof ecx   
35 [0x23]:           loadl ebx, fp+4   
36 [0x24]:           lt ebx, ecx   
37 [0x25]:           jne 63   
38 [0x26]:           iaload ecx, ebx   
39 [0x27]:           smovr_2 ecx, fp+3   
40 [0x28]: line: 172 ipushl #3   
41 [0x29]:           movl 0   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           loadl ebx, fp+2   
46 [0x2e]:           movr egx, ebx   
47 [0x2f]:           inc ebx   
48 [0x30]:           smovr_2 ebx, fp+2   
49 [0x31]:           movr ebx, egx   
50 [0x32]:           popobj2    
51 [0x33]:           movr adx, ebx   
52 [0x34]:           chklen adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           loadval ecx   
55 [0x37]:           tne ecx, ebx   
56 [0x38]:           jne 61   
57 [0x39]: line: 173 movi #0, ebx   
59 [0x3b]:           return_val ebx   
60 [0x3c]:           ret   
61 [0x3d]:           nop   
62 [0x3e]:           jmp @31   
63 [0x3f]: line: 176 movi #1, ebx   
65 [0x41]:           return_val ebx   
66 [0x42]:           ret   


overload function: std#string_builder.operator!=[2883] params(1) in file: lib/support/0.2.805//string_builder.sharp:180:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 180 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2881 // <std#string_builder.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string_builder.operator!=[2884] params(1) in file: lib/support/0.2.805//string_builder.sharp:182:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2882 // <std#string_builder.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string_builder.operator=[2885] params(1) in file: lib/support/0.2.805//string_builder.sharp:184:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 186 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 20   
4 [0x4]: line: 187 movi #255, ebx   
6 [0x6]:           newarry ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           popobj   
11 [0xb]: line: 188 movi #-1, ebx   
13 [0xd]:           movl 0   
14 [0xe]:           movn #3   
16 [0x10]:           movi #0, adx   
18 [0x12]:           rmov adx, ebx   
19 [0x13]:           jmp @54   
20 [0x14]: line: 191 movl 1   
21 [0x15]:           sizeof ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #255, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           add ecx, ebx -> ebx   
27 [0x1b]:           newarry ebx   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]: line: 192 movl 1   
33 [0x21]:           sizeof ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #3   
37 [0x25]:           movi #0, adx   
39 [0x27]:           rmov adx, ebx   
40 [0x28]: line: 193 pushl 1   
41 [0x29]:           movl 0   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           istore 0   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 1   
51 [0x33]:           sizeof ebx   
52 [0x34]:           rstore ebx   
53 [0x35]:           call @1666 // <std.io#__srt_global.memcopy>   
54 [0x36]:           nop   
55 [0x37]:           ret   


function: std#string_builder.at[2886] params(1) in file: lib/support/0.2.805//string_builder.sharp:197:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 198 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           jne 14   
10 [0xa]: line: 199 pushl 0   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2905 // <std#string_builder.bounds_error>   
13 [0xd]:           throw    
14 [0xe]:           nop   
15 [0xf]: line: 200 movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+1   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           return_val ebx   
25 [0x19]:           ret   


overload function: std#string_builder.operator[[2887] params(1) in file: lib/support/0.2.805//string_builder.sharp:203:8: note:  
		    def operator[](pos: var) : var {
		       ^

0 [0x0]: line: 204 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2886 // <std#string_builder.at>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string_builder.fmt[2888] params(1) in file: lib/support/0.2.805//string_builder.sharp:207:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 208 ipushl #0   
1 [0x1]:           movg @59 // @std#string_builder   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]: line: 209 ipushl #0   
10 [0xa]:           movi #102, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           tne ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skne ebx // pc = 20   
16 [0x10]:           ipushl #0   
17 [0x11]:           movi #70, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           tne ecx, ebx   
21 [0x15]:           jne 31   
22 [0x16]:           istore 0   
24 [0x18]:           movg @59 // @std#string_builder   
25 [0x19]:           movn #1   
27 [0x1b]:           loadval ebx   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           rmov adx, ebx   
31 [0x1f]:           nop   
32 [0x20]:           ret   


function: std#string_builder.set_precision[2889] params(1) in file: lib/support/0.2.805//string_builder.sharp:212:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 213 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 10   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           jne 22   
12 [0xc]: line: 214 new_class @5 // std#illegal_argument_exception   
13 [0xd]:           dup    
14 [0xe]:           new_class @58 // std#string   
15 [0xf]:           dup    
16 [0x10]:           newstr @17 // invalid precision:    
17 [0x11]:           call @2823 // <std#string.string>   
18 [0x12]:           ipushl #0   
19 [0x13]:           call @2853 // <std#string.operator+>   
20 [0x14]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
21 [0x15]:           throw    
22 [0x16]:           nop   
23 [0x17]: line: 215 ipushl #0   
24 [0x18]:           movg @59 // @std#string_builder   
25 [0x19]:           movn #1   
27 [0x1b]:           loadval ebx   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           rmov adx, ebx   
31 [0x1f]:           ret   


function: std#string_builder.to_array[2890] params(0) in file: lib/support/0.2.805//string_builder.sharp:218:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           skpe ebx // pc = 17   
7 [0x7]:           movl 0   
8 [0x8]:           movn #3   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           rstore ebx   
14 [0xe]:           movi #-1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           test ecx, ebx   
18 [0x12]:           jne 23   
19 [0x13]:           pushnull    
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 221 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           istore 0   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #3   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @1676 // <std.io#__srt_global.copy>   
43 [0x2b]:           return_val ebx   
44 [0x2c]:           ret   


function: std#string_builder.starts_with[2891] params(1) in file: lib/support/0.2.805//string_builder.sharp:225:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 226 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 19   
3 [0x3]:           pushl 1   
4 [0x4]:           call @2854 // <std#string.size>   
5 [0x5]:           loadval ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #3   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           rstore ebx   
14 [0xe]:           movi #1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           add ecx, ebx -> ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           gt ecx, ebx   
20 [0x14]:           jne 25   
21 [0x15]: line: 227 movi #0, ebx   
23 [0x17]:           return_val ebx   
24 [0x18]:           ret   
25 [0x19]:           nop   
26 [0x1a]: line: 230 istorel 0, fp+2   
28 [0x1c]:           ipushl #2   
29 [0x1d]:           pushl 1   
30 [0x1e]:           call @2854 // <std#string.size>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           loadval ecx   
33 [0x21]:           lt ecx, ebx   
34 [0x22]:           jne 65   
35 [0x23]: line: 232 movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           pushobj   
39 [0x27]:           loadl ebx, fp+2   
40 [0x28]:           popobj2    
41 [0x29]:           movr adx, ebx   
42 [0x2a]:           chklen adx   
43 [0x2b]:           iaload ebx, adx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           movl 1   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           loadl ebx, fp+2   
50 [0x32]:           popobj2    
51 [0x33]:           movr adx, ebx   
52 [0x34]:           chklen adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           loadval ecx   
55 [0x37]:           tne ecx, ebx   
56 [0x38]:           jne 61   
57 [0x39]: line: 233 movi #0, ebx   
59 [0x3b]:           return_val ebx   
60 [0x3c]:           ret   
61 [0x3d]:           nop   
62 [0x3e]:           iaddl 1, fp@2   
64 [0x40]:           jmp @28   
65 [0x41]: line: 235 movi #1, ebx   
67 [0x43]:           return_val ebx   
68 [0x44]:           ret   


function: std#string_builder.find[2892] params(1) in file: lib/support/0.2.805//string_builder.sharp:238:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 239 pushl 1   
1 [0x1]:           call @2854 // <std#string.size>   
2 [0x2]:           loadval ebx   
3 [0x3]:           rstore ebx   
4 [0x4]:           movl 0   
5 [0x5]:           movn #3   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #1, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           jne 22   
18 [0x12]: line: 240 movi #0, ebx   
20 [0x14]:           return_val ebx   
21 [0x15]:           ret   
22 [0x16]:           nop   
23 [0x17]: line: 243 istorel 0, fp+2   
25 [0x19]: line: 244 istorel 0, fp+3   
27 [0x1b]:           ipushl #3   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #3   
31 [0x1f]:           movi #0, adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movi #1, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           add ecx, ebx -> ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           jne 107   
42 [0x2a]: line: 245 ipushl #3   
43 [0x2b]:           pushl 1   
44 [0x2c]:           call @2854 // <std#string.size>   
45 [0x2d]:           loadval ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           add ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movl 0   
50 [0x32]:           movn #3   
52 [0x34]:           movi #0, adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           rstore ebx   
56 [0x38]:           movi #1, ebx   
58 [0x3a]:           loadval ecx   
59 [0x3b]:           add ecx, ebx -> ebx   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           lt ecx, ebx   
62 [0x3e]:           jne 99   
63 [0x3f]: line: 246 istorel 0, fp+4   
65 [0x41]:           ipushl #4   
66 [0x42]:           pushl 1   
67 [0x43]:           call @2854 // <std#string.size>   
68 [0x44]:           loadval ebx   
69 [0x45]:           loadval ecx   
70 [0x46]:           lt ecx, ebx   
71 [0x47]:           jne 94   
72 [0x48]: line: 247 pushl 1   
73 [0x49]:           ipushl #4   
74 [0x4a]:           call @2844 // <std#string.operator[>   
75 [0x4b]:           loadval ebx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           movl 0   
78 [0x4e]:           movn #0   
80 [0x50]:           pushobj   
81 [0x51]:           loadl ebx, fp+4   
82 [0x52]:           popobj2    
83 [0x53]:           movr adx, ebx   
84 [0x54]:           chklen adx   
85 [0x55]:           iaload ebx, adx   
86 [0x56]:           loadval ecx   
87 [0x57]:           tne ecx, ebx   
88 [0x58]:           jne 90   
89 [0x59]: line: 248 jmp @94   
90 [0x5a]:           nop   
91 [0x5b]:           iaddl 1, fp@4   
93 [0x5d]:           jmp @65   
94 [0x5e]: line: 251 movi #1, ebx   
96 [0x60]:           return_val ebx   
97 [0x61]:           ret   
98 [0x62]:           jmp @103   
99 [0x63]: line: 252 movi #0, ebx   
101 [0x65]:           return_val ebx   
102 [0x66]:           ret   
103 [0x67]:           nop   
104 [0x68]:           iaddl 1, fp@3   
106 [0x6a]:           jmp @27   
107 [0x6b]: line: 255 movi #0, ebx   
109 [0x6d]:           return_val ebx   
110 [0x6e]:           ret   


function: std#string_builder.find[2893] params(1) in file: lib/support/0.2.805//string_builder.sharp:258:8: note:  
		    def find(str: string_builder) : var {
		       ^

0 [0x0]: line: 259 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gt ecx, ebx   
18 [0x12]:           jne 23   
19 [0x13]: line: 260 movi #0, ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 263 istorel 0, fp+2   
26 [0x1a]: line: 264 istorel 0, fp+3   
28 [0x1c]:           ipushl #3   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #3   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #1, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           add ecx, ebx -> ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           jne 110   
43 [0x2b]: line: 265 ipushl #3   
44 [0x2c]:           movl 1   
45 [0x2d]:           movn #0   
47 [0x2f]:           sizeof ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           add ecx, ebx -> ebx   
50 [0x32]:           rstore ebx   
51 [0x33]:           movl 0   
52 [0x34]:           movn #3   
54 [0x36]:           movi #0, adx   
56 [0x38]:           iaload ebx, adx   
57 [0x39]:           rstore ebx   
58 [0x3a]:           movi #1, ebx   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           add ecx, ebx -> ebx   
62 [0x3e]:           loadval ecx   
63 [0x3f]:           lt ecx, ebx   
64 [0x40]:           jne 102   
65 [0x41]: line: 266 istorel 0, fp+4   
67 [0x43]:           ipushl #4   
68 [0x44]:           movl 1   
69 [0x45]:           movn #0   
71 [0x47]:           sizeof ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           lt ecx, ebx   
74 [0x4a]:           jne 97   
75 [0x4b]: line: 267 pushl 1   
76 [0x4c]:           ipushl #4   
77 [0x4d]:           call @2887 // <std#string_builder.operator[>   
78 [0x4e]:           loadval ebx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movl 0   
81 [0x51]:           movn #0   
83 [0x53]:           pushobj   
84 [0x54]:           loadl ebx, fp+4   
85 [0x55]:           popobj2    
86 [0x56]:           movr adx, ebx   
87 [0x57]:           chklen adx   
88 [0x58]:           iaload ebx, adx   
89 [0x59]:           loadval ecx   
90 [0x5a]:           tne ecx, ebx   
91 [0x5b]:           jne 93   
92 [0x5c]: line: 268 jmp @97   
93 [0x5d]:           nop   
94 [0x5e]:           iaddl 1, fp@4   
96 [0x60]:           jmp @67   
97 [0x61]: line: 271 movi #1, ebx   
99 [0x63]:           return_val ebx   
100 [0x64]:           ret   
101 [0x65]:           jmp @106   
102 [0x66]: line: 272 movi #0, ebx   
104 [0x68]:           return_val ebx   
105 [0x69]:           ret   
106 [0x6a]:           nop   
107 [0x6b]:           iaddl 1, fp@3   
109 [0x6d]:           jmp @28   
110 [0x6e]: line: 275 movi #0, ebx   
112 [0x70]:           return_val ebx   
113 [0x71]:           ret   


function: std#string_builder.ends_with[2894] params(1) in file: lib/support/0.2.805//string_builder.sharp:278:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 279 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gte ecx, ebx   
18 [0x12]:           jne 23   
19 [0x13]: line: 280 movi #0, ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 282 movl 0   
25 [0x19]:           movn #3   
27 [0x1b]:           movi #0, adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movi #1, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           add ecx, ebx -> ebx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movl 1   
37 [0x25]:           movn #0   
39 [0x27]:           sizeof ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           movl 0   
45 [0x2d]:           movn #3   
47 [0x2f]:           movi #0, adx   
49 [0x31]:           iaload ebx, adx   
50 [0x32]:           rstore ebx   
51 [0x33]:           movi #1, ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           add ecx, ebx -> ebx   
55 [0x37]:           loadval ecx   
56 [0x38]:           lt ecx, ebx   
57 [0x39]:           jne 88   
58 [0x3a]: line: 283 movl 0   
59 [0x3b]:           movn #0   
61 [0x3d]:           pushobj   
62 [0x3e]:           loadl ebx, fp+2   
63 [0x3f]:           popobj2    
64 [0x40]:           movr adx, ebx   
65 [0x41]:           chklen adx   
66 [0x42]:           iaload ebx, adx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movl 1   
69 [0x45]:           movn #0   
71 [0x47]:           pushobj   
72 [0x48]:           loadl ebx, fp+2   
73 [0x49]:           popobj2    
74 [0x4a]:           movr adx, ebx   
75 [0x4b]:           chklen adx   
76 [0x4c]:           iaload ebx, adx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           tne ecx, ebx   
79 [0x4f]:           jne 84   
80 [0x50]: line: 284 movi #0, ebx   
82 [0x52]:           return_val ebx   
83 [0x53]:           ret   
84 [0x54]:           nop   
85 [0x55]:           iaddl 1, fp@2   
87 [0x57]:           jmp @43   
88 [0x58]: line: 287 movi #1, ebx   
90 [0x5a]:           return_val ebx   
91 [0x5b]:           ret   


overload function: std#string_builder.operator+[2895] params(1) in file: lib/support/0.2.805//string_builder.sharp:290:8: note:  
		    def operator+(num : var) : string_builder {
		       ^

0 [0x0]: line: 291 new_class @59 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2865 // <std#string_builder.string_builder>   
7 [0x7]:           movsl #0   
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 292 pushl 2   
10 [0xa]:           pushl 0   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2897 // <std#string_builder.parse>   
13 [0xd]:           call @2901 // <std#string_builder.get_data>   
14 [0xe]:           call @2876 // <std#string_builder.append>   
15 [0xf]:           pop   
16 [0x10]: line: 293 movl 2   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#string_builder.size[2896] params(0) in file: lib/support/0.2.805//string_builder.sharp:296:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 297 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std#string_builder.parse[2897] params(1) in file: lib/support/0.2.805//string_builder.sharp:300:8: note:  
		    def parse( number : var ) : string_builder
		       ^

0 [0x0]: line: 302 new_class @59 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           movg @59 // @std#string_builder   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           rstore ebx   
9 [0x9]:           ipushl #1   
10 [0xa]:           movg @59 // @std#string_builder   
11 [0xb]:           movn #1   
13 [0xd]:           movi #0, adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @1557 // <std#__srt_global.snprintf>   
18 [0x12]:           call @2865 // <std#string_builder.string_builder>   
19 [0x13]:           movsl #0   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string_builder.operator+=[2898] params(1) in file: lib/support/0.2.805//string_builder.sharp:305:8: note:  
		    def operator+=( num: var ) : string_builder
		       ^

0 [0x0]: line: 307 pushl 0   
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #1   
3 [0x3]:           call @2897 // <std#string_builder.parse>   
4 [0x4]:           call @2901 // <std#string_builder.get_data>   
5 [0x5]:           call @2876 // <std#string_builder.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string_builder.operator+=[2899] params(1) in file: lib/support/0.2.805//string_builder.sharp:310:15: note:  
		    public def operator+=( obj: printable ) : string_builder
		              ^

0 [0x0]: line: 312 pushl 1   
1 [0x1]:           invoke_delegate 2814 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 313 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 14   
9 [0x9]:           pushl 2   
10 [0xa]:           call @2847 // <std#string.get_data>   
11 [0xb]:           pushnull    
12 [0xc]:           itest ebx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 24   
16 [0x10]: line: 314 pushl 0   
17 [0x11]:           pushl 2   
18 [0x12]:           call @2847 // <std#string.get_data>   
19 [0x13]:           call @2876 // <std#string_builder.append>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   
23 [0x17]:           jmp @30   
24 [0x18]: line: 316 pushl 0   
25 [0x19]:           newstr @16 // null   
26 [0x1a]:           call @2876 // <std#string_builder.append>   
27 [0x1b]:           popobj2    
28 [0x1c]:           returnobj   
29 [0x1d]:           ret   
30 [0x1e]:           nop   


overload function: std#string_builder.operator+=[2900] params(1) in file: lib/support/0.2.805//string_builder.sharp:319:8: note:  
		    def operator+=( str: string ) : string_builder
		       ^

0 [0x0]: line: 321 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2847 // <std#string.get_data>   
3 [0x3]:           call @2876 // <std#string_builder.append>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#string_builder.get_data[2901] params(0) in file: lib/support/0.2.805//string_builder.sharp:324:8: note:  
		    def get_data() : _int8[]{
		       ^

0 [0x0]: line: 325 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           return_val ebx   
4 [0x4]:           ret   


overload function: std#string_builder.operator+=[2902] params(1) in file: lib/support/0.2.805//string_builder.sharp:328:8: note:  
		    def operator+=( str: string_builder ) : string_builder
		       ^

0 [0x0]: line: 330 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @2876 // <std#string_builder.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string_builder.operator+=[2903] params(1) in file: lib/support/0.2.805//string_builder.sharp:333:8: note:  
		    def operator+=( str: _int8[] ) : string_builder
		       ^

0 [0x0]: line: 335 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2876 // <std#string_builder.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#string_builder.substring[2904] params(2) in file: lib/support/0.2.805//string_builder.sharp:338:15: note:  
		    public def substring(startPos: var, endPos: var) : string_builder {
		              ^

0 [0x0]: line: 339 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #1, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           add ecx, ebx -> ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gte ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skpe ebx // pc = 19   
16 [0x10]:           loadl ecx, fp+1   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           lt ecx, ebx   
20 [0x14]:           jne 25   
21 [0x15]: line: 340 pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @2905 // <std#string_builder.bounds_error>   
24 [0x18]:           throw    
25 [0x19]:           nop   
26 [0x1a]: line: 341 ipushl #2   
27 [0x1b]:           loadl ebx, fp+1   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           lt ecx, ebx   
30 [0x1e]:           jne 45   
31 [0x1f]: line: 342 new_class @5 // std#illegal_argument_exception   
32 [0x20]:           dup    
33 [0x21]:           new_class @58 // std#string   
34 [0x22]:           dup    
35 [0x23]:           newstr @18 // endPos:    
36 [0x24]:           call @2823 // <std#string.string>   
37 [0x25]:           ipushl #2   
38 [0x26]:           call @2853 // <std#string.operator+>   
39 [0x27]:           newstr @19 //  cannot be less than the startPos:    
40 [0x28]:           call @2834 // <std#string.operator+>   
41 [0x29]:           ipushl #1   
42 [0x2a]:           call @2853 // <std#string.operator+>   
43 [0x2b]:           call @1617 // <std#illegal_argument_exception.illegal_argument_exception>   
44 [0x2c]:           throw    
45 [0x2d]:           nop   
46 [0x2e]: line: 346 new_class @59 // std#string_builder   
47 [0x2f]:           dup    
48 [0x30]:           call @2907 // <std#string_builder.string_builder>   
49 [0x31]:           movsl #0   
50 [0x32]:           smovr_3 fp+3   
51 [0x33]: line: 347 movl 0   
52 [0x34]:           movn #0   
54 [0x36]:           pushobj   
55 [0x37]:           ipushl #1   
56 [0x38]:           ipushl #2   
57 [0x39]:           call @1676 // <std.io#__srt_global.copy>   
58 [0x3a]:           movl 3   
59 [0x3b]:           movn #0   
61 [0x3d]:           popobj   
62 [0x3e]: line: 348 movl 3   
63 [0x3f]:           returnobj   
64 [0x40]:           ret   


function: std#string_builder.bounds_error[2905] params(1) in file: lib/support/0.2.805//string_builder.sharp:351:16: note:  
		    private def bounds_error(pos : var) : error {
		               ^

0 [0x0]: line: 352 new_class @7 // std#out_of_bounds_exception   
1 [0x1]:           dup    
2 [0x2]:           new_class @58 // std#string   
3 [0x3]:           dup    
4 [0x4]:           newstr @20 // Index out of bounds exception at:    
5 [0x5]:           call @2823 // <std#string.string>   
6 [0x6]:           ipushl #1   
7 [0x7]:           call @2853 // <std#string.operator+>   
8 [0x8]:           newstr @21 //  with size of:    
9 [0x9]:           call @2834 // <std#string.operator+>   
10 [0xa]:           movl 0   
11 [0xb]:           movn #3   
13 [0xd]:           movi #0, adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #1, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           add ecx, ebx -> ebx   
21 [0x15]:           rstore ebx   
22 [0x16]:           call @2853 // <std#string.operator+>   
23 [0x17]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:           movsl #0   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std#string_builder.hash[2906] params(0) in file: lib/support/0.2.805//string_builder.sharp:355:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 356 istorel 0, fp+1   
2 [0x2]: line: 357 istorel 1, fp+2   
4 [0x4]: line: 358 istorel -1, fp+4   
6 [0x6]: line: 359 movl 0   
7 [0x7]: line: 360 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 361 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 362 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 364 new_class @40 // std#long   
56 [0x38]:           dup    
57 [0x39]:           ipushl #1   
58 [0x3a]:           call @1965 // <std#long.long>   
59 [0x3b]:           popobj2    
60 [0x3c]:           returnobj   
61 [0x3d]:           ret   


constructor: std#string_builder.string_builder[2907] params(0) in file: lib/support/0.2.805//string_builder.sharp:5:6: note:  
		class string_builder {
		     ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          ret   


function: std#time.nano_time[2908] params(0) in file: lib/support/0.2.805//time.sharp:8:15: note:  
		    static def nano_time() : var {
		              ^

0 [0x0]: line: 9 istorel 0, fp+0   
2 [0x2]: line: 11 int 0xb   : protected asm start
3 [0x3]:          smovr_2 bmr, fp+0   
4 [0x4]: line: 16 loadl ebx, fp+0   : protected asm end
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.nano_to_micro[2909] params(1) in file: lib/support/0.2.805//time.sharp:20:15: note:  
		    static def nano_to_micro(nano: var) : var {
		              ^

0 [0x0]: line: 21 ipushl #0   
1 [0x1]:          movi #1000, ebx   
3 [0x3]:          loadval ecx   
4 [0x4]:          div ecx, ebx -> ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.nano_to_mills[2910] params(1) in file: lib/support/0.2.805//time.sharp:24:15: note:  
		    static def nano_to_mills(nano: var) : var {
		              ^

0 [0x0]: line: 25 ipushl #0   
1 [0x1]:          call @2909 // <std#time.nano_to_micro>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#time.nano_to_secs[2911] params(1) in file: lib/support/0.2.805//time.sharp:28:22: note:  
		    public static def nano_to_secs(nano: var) : var {
		                     ^

0 [0x0]: line: 29 ipushl #0   
1 [0x1]:          call @2910 // <std#time.nano_to_mills>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#time.mills_time[2912] params(0) in file: lib/support/0.2.805//time.sharp:32:15: note:  
		    static def mills_time() : var {
		              ^

0 [0x0]: line: 33 call @2908 // <std#time.nano_time>   
1 [0x1]:          call @2910 // <std#time.nano_to_mills>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std#time.sleep[2913] params(1) in file: lib/support/0.2.805//time.sharp:36:15: note:  
		    static def sleep(time: var) {
		              ^

0 [0x0]: line: 37 movg @61 // @std#time_unit   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #0   
5 [0x5]:          call @2914 // <std#time.sleep>   
6 [0x6]:          ret   


function: std#time.sleep[2914] params(2) in file: lib/support/0.2.805//time.sharp:40:15: note:  
		    static def sleep(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 41 loadl ecx, fp+1   
1 [0x1]:          movi #0, ebx   
3 [0x3]:          lt ecx, ebx   
4 [0x4]:          jne 15   
5 [0x5]: line: 42 new_class @4 // std#exception   
6 [0x6]:          dup    
7 [0x7]:          new_class @58 // std#string   
8 [0x8]:          dup    
9 [0x9]:          newstr @22 // cannot sleep for negative time:    
10 [0xa]:          call @2823 // <std#string.string>   
11 [0xb]:          ipushl #1   
12 [0xc]:          call @2853 // <std#string.operator+>   
13 [0xd]:          call @1614 // <std#exception.exception>   
14 [0xe]:          throw    
15 [0xf]:          nop   
16 [0x10]: line: 44 pushl 0   
17 [0x11]:          movg @61 // @std#time_unit   
18 [0x12]:          movn #0   
20 [0x14]:          pushobj   
21 [0x15]:          call @1603 // <std#_enum_.operator==>   
22 [0x16]:          loadval ebx   
23 [0x17]:          movr cmt, ebx   
24 [0x18]:          jne 38   
25 [0x19]: line: 45 ipushl #1   
26 [0x1a]:          movi #1000000, ebx   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          mul ecx, ebx -> ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          call @2916 // <std#time.adjust_time>   
32 [0x20]:          loadl ebx, fp+1   
33 [0x21]:          loadval ebx   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          jmp @76   
38 [0x26]:          pushl 0   
39 [0x27]:          movg @61 // @std#time_unit   
40 [0x28]:          movn #1   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @1603 // <std#_enum_.operator==>   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 60   
47 [0x2f]: line: 47 ipushl #1   
48 [0x30]:          movi #1000, ebx   
50 [0x32]:          loadval ecx   
51 [0x33]:          mul ecx, ebx -> ebx   
52 [0x34]:          rstore ebx   
53 [0x35]:          call @2916 // <std#time.adjust_time>   
54 [0x36]:          loadl ebx, fp+1   
55 [0x37]:          loadval ebx   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          rmov adx, ebx   
59 [0x3b]:          jmp @76   
60 [0x3c]:          pushl 0   
61 [0x3d]:          movg @61 // @std#time_unit   
62 [0x3e]:          movn #2   
64 [0x40]:          pushobj   
65 [0x41]:          call @1603 // <std#_enum_.operator==>   
66 [0x42]:          loadval ebx   
67 [0x43]:          movr cmt, ebx   
68 [0x44]:          jne 76   
69 [0x45]: line: 49 ipushl #1   
70 [0x46]:          call @2916 // <std#time.adjust_time>   
71 [0x47]:          loadl ebx, fp+1   
72 [0x48]:          loadval ebx   
73 [0x49]:          movi #0, adx   
75 [0x4b]:          rmov adx, ebx   
76 [0x4c]:          nop   
77 [0x4d]: line: 52 loadl ebx, fp+1   : protected asm start
78 [0x4e]:          sleep ebx   
79 [0x4f]:          ret   : protected asm end


function: std#time.wait[2915] params(2) in file: lib/support/0.2.805//time.sharp:58:15: note:  
		    static def wait(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 60 pushl 0   
1 [0x1]:          movg @61 // @std#time_unit   
2 [0x2]:          movn #0   
4 [0x4]:          pushobj   
5 [0x5]:          call @1603 // <std#_enum_.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 19   
9 [0x9]: line: 61 istore 1000   
11 [0xb]:          loadl ebx, fp+1   
12 [0xc]:          movi #0, adx   
14 [0xe]:          iaload ecx, adx   
15 [0xf]:          loadval ebx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]:          jmp @56   
19 [0x13]:          pushl 0   
20 [0x14]:          movg @61 // @std#time_unit   
21 [0x15]:          movn #2   
23 [0x17]:          pushobj   
24 [0x18]:          call @1603 // <std#_enum_.operator==>   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 38   
28 [0x1c]: line: 63 istore 1000   
30 [0x1e]:          loadl ebx, fp+1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ecx, adx   
34 [0x22]:          loadval ebx   
35 [0x23]:          div ecx, ebx -> ebx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          jmp @56   
38 [0x26]:          pushl 0   
39 [0x27]:          movg @61 // @std#time_unit   
40 [0x28]:          movn #3   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @1603 // <std#_enum_.operator==>   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 56   
47 [0x2f]: line: 65 istore 1000000   
49 [0x31]:          loadl ebx, fp+1   
50 [0x32]:          movi #0, adx   
52 [0x34]:          iaload ecx, adx   
53 [0x35]:          loadval ebx   
54 [0x36]:          div ecx, ebx -> ebx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]:          nop   
57 [0x39]: line: 68 loadl adx, fp+1   : protected asm start
58 [0x3a]:          int 0x14   
59 [0x3b]:          ret   : protected asm end


function: std#time.adjust_time[2916] params(1) in file: lib/support/0.2.805//time.sharp:80:23: note:  
		    private static def adjust_time(usec: var) : var {
		                      ^

0 [0x0]: line: 82 call @1836 // <platform#build.is_windows>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 11   
4 [0x4]: line: 83 ipushl #0   
5 [0x5]:          movi #1000, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          div ecx, ebx -> ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   
11 [0xb]:          nop   
12 [0xc]: line: 86 loadl ebx, fp+0   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#time.measure[2917] params(2) in file: lib/support/0.2.805//time.sharp:89:15: note:  
		    static def measure(tm_unit: time_unit, block: ()()) : var {
		              ^

0 [0x0]: line: 90 call @2908 // <std#time.nano_time>   
1 [0x1]:          ipopl 2   
2 [0x2]:          istorel 0, fp+3   
4 [0x4]: line: 91 ipushl #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]: line: 92 call @2908 // <std#time.nano_time>   
8 [0x8]:          ipopl 3   
9 [0x9]: line: 94 pushl 0   
10 [0xa]:          movg @61 // @std#time_unit   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          call @1603 // <std#_enum_.operator==>   
15 [0xf]:          loadval ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 25   
18 [0x12]: line: 96 ipushl #2   
19 [0x13]:          call @2911 // <std#time.nano_to_secs>   
20 [0x14]:          ipopl 2   
21 [0x15]: line: 97 ipushl #3   
22 [0x16]:          call @2911 // <std#time.nano_to_secs>   
23 [0x17]:          ipopl 3   
24 [0x18]:          jmp @56   
25 [0x19]:          pushl 0   
26 [0x1a]:          movg @61 // @std#time_unit   
27 [0x1b]:          movn #1   
29 [0x1d]:          pushobj   
30 [0x1e]:          call @1603 // <std#_enum_.operator==>   
31 [0x1f]:          loadval ebx   
32 [0x20]:          movr cmt, ebx   
33 [0x21]:          jne 41   
34 [0x22]: line: 100 ipushl #2   
35 [0x23]:           call @2910 // <std#time.nano_to_mills>   
36 [0x24]:           ipopl 2   
37 [0x25]: line: 101 ipushl #3   
38 [0x26]:           call @2910 // <std#time.nano_to_mills>   
39 [0x27]:           ipopl 3   
40 [0x28]:           jmp @56   
41 [0x29]:           pushl 0   
42 [0x2a]:           movg @61 // @std#time_unit   
43 [0x2b]:           movn #2   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @1603 // <std#_enum_.operator==>   
47 [0x2f]:           loadval ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 56   
50 [0x32]: line: 104 ipushl #2   
51 [0x33]:           call @2909 // <std#time.nano_to_micro>   
52 [0x34]:           ipopl 2   
53 [0x35]: line: 105 ipushl #3   
54 [0x36]:           call @2909 // <std#time.nano_to_micro>   
55 [0x37]:           ipopl 3   
56 [0x38]:           nop   
57 [0x39]: line: 109 ipushl #3   
58 [0x3a]:           loadl ebx, fp+2   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           sub ecx, ebx -> ebx   
61 [0x3d]:           return_val ebx   
62 [0x3e]:           ret   


constructor: std#time.time[2918] params(0) in file: lib/support/0.2.805//time.sharp:5:6: note:  
		class time {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


std#unique.hash[2919] params(0) in file: lib/support/0.2.805//unique.sharp:11:8: note:  
		    def hash() : long;
		       ^



std#unique.guid[2920] params(0) in file: lib/support/0.2.805//unique.sharp:12:8: note:  
		    def guid() : long;
		       ^



constructor: std#unique.unique[2921] params(0) in file: lib/support/0.2.805//unique.sharp:10:10: note:  
		interface unique {
		         ^

0 [0x0]:         ret   


constructor: std#hashmap<std.io#thread,std.io.task#job_controller>.hashmap[2922] params(1) in file: lib/support/0.2.805//hashmap.sharp:10:19: note:  
		    public hashmap(initialCapacity: var) {
		                  ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         pushl 0   
8 [0x8]:         call @1835 // <std#_object_._object_>   
9 [0x9]: line: 11 loadl ebx, fp+1   
10 [0xa]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]: line: 12 movl 0   
16 [0x10]:          movn #0   
18 [0x12]:          sizeof ebx   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          movi #0, adx   
25 [0x19]:          iaload ebx, adx   
26 [0x1a]:          loadval ecx   
27 [0x1b]:          mul ecx, ebx -> ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #2   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]:          ret   


constructor: std#hashmap<std.io#thread,std.io.task#job_controller>.hashmap[2923] params(0) in file: lib/support/0.2.805//hashmap.sharp:15:19: note:  
		    public hashmap() {
		                  ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         pushl 0   
8 [0x8]:         call @1835 // <std#_object_._object_>   
9 [0x9]: line: 16 movi #128, ebx   
11 [0xb]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]: line: 17 movi #96, ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          ret   


function: std#hashmap<std.io#thread,std.io.task#job_controller>.set_threshold[2924] params(1) in file: lib/support/0.2.805//hashmap.sharp:20:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 21 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 22 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          sizeof ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          loadval ecx   
15 [0xf]:          mul ecx, ebx -> ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #2   
19 [0x13]:          movi #0, adx   
21 [0x15]:          rmov adx, ebx   
22 [0x16]:          ret   


function: std#hashmap<std.io#thread,std.io.task#job_controller>.hash[2925] params(1) in file: lib/support/0.2.805//hashmap.sharp:25:8: note:  
		    def hash(key: k) : var {
		       ^

0 [0x0]: line: 26 pushl 1   
1 [0x1]:          call @1770 // <std.io#thread.hash>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @279 // <std#integer<_int64>.operator%>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std#hashmap<std.io#thread,std.io.task#job_controller>.resize[2926] params(0) in file: lib/support/0.2.805//hashmap.sharp:29:8: note:  
		    def resize() {
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 31 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
17 [0x11]:          movl 0   
18 [0x12]:          movn #0   
20 [0x14]:          popobj   
21 [0x15]: line: 32 movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          sizeof ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          loadval ecx   
33 [0x21]:          mul ecx, ebx -> ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #2   
37 [0x25]:          movi #0, adx   
39 [0x27]:          rmov adx, ebx   
40 [0x28]: line: 33 istorel -1, fp+3   
42 [0x2a]:          pushl 1   
43 [0x2b]:          popl 4   
44 [0x2c]:          iaddl 1, fp@3   
46 [0x2e]:          movl 4   
47 [0x2f]:          sizeof ecx   
48 [0x30]:          loadl ebx, fp+3   
49 [0x31]:          lt ebx, ecx   
50 [0x32]:          jne 99   
51 [0x33]:          movnd ebx   
52 [0x34]:          pushobj   
53 [0x35]:          popl 2   
54 [0x36]: line: 35 movl 2   
55 [0x37]:          checknull   
56 [0x38]:          not ebx, ebx   
57 [0x39]:          movr cmt, ebx   
58 [0x3a]:          jne 98   
59 [0x3b]: line: 37 movl 2   
60 [0x3c]:          movn #2   
62 [0x3e]:          smovr_3 fp+5   
63 [0x3f]: line: 38 pushl 0   
64 [0x40]:          movl 2   
65 [0x41]:          movn #0   
67 [0x43]:          pushobj   
68 [0x44]:          call @2925 // <std#hashmap<std.io#thread,std.io.task#job_controller>.hash>   
69 [0x45]:          ipopl 6   
70 [0x46]: line: 39 movl 0   
71 [0x47]:          movn #0   
73 [0x49]:          pushobj   
74 [0x4a]:          loadl ebx, fp+6   
75 [0x4b]:          popobj2    
76 [0x4c]:          movr adx, ebx   
77 [0x4d]:          chklen adx   
78 [0x4e]:          movnd adx   
79 [0x4f]:          pushobj   
80 [0x50]:          movl 2   
81 [0x51]:          movn #2   
83 [0x53]:          popobj   
84 [0x54]: line: 40 pushl 2   
85 [0x55]:          movl 0   
86 [0x56]:          movn #0   
88 [0x58]:          pushobj   
89 [0x59]:          loadl ebx, fp+6   
90 [0x5a]:          popobj2    
91 [0x5b]:          movr adx, ebx   
92 [0x5c]:          chklen adx   
93 [0x5d]:          movnd adx   
94 [0x5e]:          popobj   
95 [0x5f]: line: 41 movl 5   
96 [0x60]:          smovr_3 fp+2   
97 [0x61]:          jmp @54   
98 [0x62]:          jmp @44   
99 [0x63]: line: 45 pushnull    
100 [0x64]:          popobj2    
101 [0x65]:          smovr_3 fp+1   
102 [0x66]:          ret   


function: std#hashmap<std.io#thread,std.io.task#job_controller>.at[2927] params(1) in file: lib/support/0.2.805//hashmap.sharp:48:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @2925 // <std#hashmap<std.io#thread,std.io.task#job_controller>.hash>   
3 [0x3]:          ipopl 2   
4 [0x4]: line: 50 istorel -1, fp+3   
6 [0x6]: line: 51 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 53 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+2   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          pushobj   
18 [0x12]:          pushnull    
19 [0x13]:          itest ebx   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 26   
22 [0x16]: line: 54 movl 4   
23 [0x17]:          returnobj   
24 [0x18]:          ret   
25 [0x19]:          jmp @64   
26 [0x1a]: line: 56 movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          pushobj   
30 [0x1e]:          loadl ebx, fp+2   
31 [0x1f]:          popobj2    
32 [0x20]:          movr adx, ebx   
33 [0x21]:          chklen adx   
34 [0x22]:          movnd adx   
35 [0x23]:          smovr_3 fp+5   
36 [0x24]: line: 57 movl 5   
37 [0x25]:          checknull   
38 [0x26]:          not ebx, ebx   
39 [0x27]:          movr cmt, ebx   
40 [0x28]:          jne 61   
41 [0x29]: line: 58 movl 5   
42 [0x2a]:          movn #0   
44 [0x2c]:          pushobj   
45 [0x2d]:          pushl 1   
46 [0x2e]:          call @1788 // <std.io#thread.operator==>   
47 [0x2f]:          loadval ebx   
48 [0x30]:          movr cmt, ebx   
49 [0x31]:          jne 55   
50 [0x32]: line: 59 movl 5   
51 [0x33]:          movn #1   
53 [0x35]:          returnobj   
54 [0x36]:          ret   
55 [0x37]:          nop   
56 [0x38]: line: 61 movl 5   
57 [0x39]:          movn #2   
59 [0x3b]:          smovr_3 fp+5   
60 [0x3c]:          jmp @36   
61 [0x3d]: line: 64 movl 4   
62 [0x3e]:          returnobj   
63 [0x3f]:          ret   
64 [0x40]:          nop   


function: std#hashmap<std.io#thread,std.io.task#job_controller>.put[2928] params(2) in file: lib/support/0.2.805//hashmap.sharp:68:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 69 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @2925 // <std#hashmap<std.io#thread,std.io.task#job_controller>.hash>   
3 [0x3]:          ipopl 3   
4 [0x4]: line: 70 movl 4   
5 [0x5]:          del   
6 [0x6]: line: 71 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          loadl ebx, fp+3   
11 [0xb]:          popobj2    
12 [0xc]:          movr adx, ebx   
13 [0xd]:          chklen adx   
14 [0xe]:          movnd adx   
15 [0xf]:          smovr_3 fp+5   
16 [0x10]: line: 73 movl 5   
17 [0x11]:          checknull   
18 [0x12]:          not ebx, ebx   
19 [0x13]:          skne ebx // pc = 27   
20 [0x14]:          movl 5   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          pushl 1   
25 [0x19]:          itest ebx   
26 [0x1a]:          not ebx, ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 36   
29 [0x1d]: line: 74 movl 5   
30 [0x1e]:          smovr_3 fp+4   
31 [0x1f]: line: 75 movl 5   
32 [0x20]:          movn #2   
34 [0x22]:          smovr_3 fp+5   
35 [0x23]:          jmp @16   
36 [0x24]: line: 78 movl 5   
37 [0x25]:          checknull   
38 [0x26]:          movr cmt, ebx   
39 [0x27]:          jne 85   
40 [0x28]: line: 79 movl 0   
41 [0x29]:          movn #3   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          iaload ebx, adx   
46 [0x2e]:          movr egx, ebx   
47 [0x2f]:          inc ebx   
48 [0x30]:          movi #0, adx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 80 new_class @83 // std.io.task#entry<std.io#thread,std.io.task#job_controller>   
52 [0x34]:          dup    
53 [0x35]:          pushl 1   
54 [0x36]:          pushl 2   
55 [0x37]:          call @3045 // <std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry>   
56 [0x38]:          movsl #0   
57 [0x39]:          smovr_3 fp+5   
58 [0x3a]: line: 81 movl 4   
59 [0x3b]:          checknull   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 74   
62 [0x3e]: line: 82 pushl 5   
63 [0x3f]:          movl 0   
64 [0x40]:          movn #0   
66 [0x42]:          pushobj   
67 [0x43]:          loadl ebx, fp+3   
68 [0x44]:          popobj2    
69 [0x45]:          movr adx, ebx   
70 [0x46]:          chklen adx   
71 [0x47]:          movnd adx   
72 [0x48]:          popobj   
73 [0x49]:          jmp @79   
74 [0x4a]: line: 84 pushl 5   
75 [0x4b]:          movl 4   
76 [0x4c]:          movn #2   
78 [0x4e]:          popobj   
79 [0x4f]:          nop   
80 [0x50]: line: 87 movi #1, ebx   
82 [0x52]:          return_val ebx   
83 [0x53]:          ret   
84 [0x54]:          jmp @94   
85 [0x55]: line: 89 pushl 2   
86 [0x56]:          movl 5   
87 [0x57]:          movn #1   
89 [0x59]:          popobj   
90 [0x5a]: line: 90 movi #0, ebx   
92 [0x5c]:          return_val ebx   
93 [0x5d]:          ret   
94 [0x5e]:          nop   


function: std#hashmap<std.io#thread,std.io.task#job_controller>.remove[2929] params(1) in file: lib/support/0.2.805//hashmap.sharp:94:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 95 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @2925 // <std#hashmap<std.io#thread,std.io.task#job_controller>.hash>   
3 [0x3]:          ipopl 2   
4 [0x4]: line: 96 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          popobj2    
10 [0xa]:          movr adx, ebx   
11 [0xb]:          chklen adx   
12 [0xc]:          movnd adx   
13 [0xd]:          pushobj   
14 [0xe]:          pushnull    
15 [0xf]:          itest ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 97   
18 [0x12]: line: 97 movl 3   
19 [0x13]:          del   
20 [0x14]: line: 98 movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          loadl ebx, fp+2   
25 [0x19]:          popobj2    
26 [0x1a]:          movr adx, ebx   
27 [0x1b]:          chklen adx   
28 [0x1c]:          movnd adx   
29 [0x1d]:          smovr_3 fp+4   
30 [0x1e]: line: 99 movl 4   
31 [0x1f]:          checknull   
32 [0x20]:          not ebx, ebx   
33 [0x21]:          skne ebx // pc = 41   
34 [0x22]:          movl 4   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          pushl 1   
39 [0x27]:          itest ebx   
40 [0x28]:          not ebx, ebx   
41 [0x29]:          movr cmt, ebx   
42 [0x2a]:          jne 50   
43 [0x2b]: line: 100 movl 4   
44 [0x2c]:           smovr_3 fp+3   
45 [0x2d]: line: 101 movl 4   
46 [0x2e]:           movn #2   
48 [0x30]:           smovr_3 fp+4   
49 [0x31]:           jmp @30   
50 [0x32]: line: 104 movl 4   
51 [0x33]:           movn #0   
53 [0x35]:           pushobj   
54 [0x36]:           pushl 1   
55 [0x37]:           call @1788 // <std.io#thread.operator==>   
56 [0x38]:           loadval ebx   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 96   
59 [0x3b]: line: 105 movl 3   
60 [0x3c]:           checknull   
61 [0x3d]:           movr cmt, ebx   
62 [0x3e]:           jne 79   
63 [0x3f]: line: 106 movl 4   
64 [0x40]:           movn #2   
66 [0x42]:           smovr_3 fp+5   
67 [0x43]: line: 107 pushl 5   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           pushobj   
72 [0x48]:           loadl ebx, fp+2   
73 [0x49]:           popobj2    
74 [0x4a]:           movr adx, ebx   
75 [0x4b]:           chklen adx   
76 [0x4c]:           movnd adx   
77 [0x4d]:           popobj   
78 [0x4e]:           jmp @91   
79 [0x4f]: line: 109 movl 4   
80 [0x50]:           movn #2   
82 [0x52]:           smovr_3 fp+6   
83 [0x53]: line: 110 pushl 6   
84 [0x54]:           movl 3   
85 [0x55]:           movn #2   
87 [0x57]:           popobj   
88 [0x58]: line: 111 pushnull    
89 [0x59]:           popobj2    
90 [0x5a]:           smovr_3 fp+4   
91 [0x5b]:           nop   
92 [0x5c]: line: 114 movi #1, ebx   
94 [0x5e]:           return_val ebx   
95 [0x5f]:           ret   
96 [0x60]:           nop   
97 [0x61]:           nop   
98 [0x62]: line: 118 movi #0, ebx   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   


constructor: std#hashmap<std#int,std.io#thread>.hashmap[2930] params(1) in file: lib/support/0.2.805//hashmap.sharp:10:19: note:  
		    public hashmap(initialCapacity: var) {
		                  ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         pushl 0   
8 [0x8]:         call @1835 // <std#_object_._object_>   
9 [0x9]: line: 11 loadl ebx, fp+1   
10 [0xa]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]: line: 12 movl 0   
16 [0x10]:          movn #0   
18 [0x12]:          sizeof ebx   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          movi #0, adx   
25 [0x19]:          iaload ebx, adx   
26 [0x1a]:          loadval ecx   
27 [0x1b]:          mul ecx, ebx -> ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #2   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]:          ret   


constructor: std#hashmap<std#int,std.io#thread>.hashmap[2931] params(0) in file: lib/support/0.2.805//hashmap.sharp:15:19: note:  
		    public hashmap() {
		                  ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         pushl 0   
8 [0x8]:         call @1835 // <std#_object_._object_>   
9 [0x9]: line: 16 movi #128, ebx   
11 [0xb]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]: line: 17 movi #96, ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          ret   


function: std#hashmap<std#int,std.io#thread>.set_threshold[2932] params(1) in file: lib/support/0.2.805//hashmap.sharp:20:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 21 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 22 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          sizeof ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          loadval ecx   
15 [0xf]:          mul ecx, ebx -> ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #2   
19 [0x13]:          movi #0, adx   
21 [0x15]:          rmov adx, ebx   
22 [0x16]:          ret   


function: std#hashmap<std#int,std.io#thread>.hash[2933] params(1) in file: lib/support/0.2.805//hashmap.sharp:25:8: note:  
		    def hash(key: k) : var {
		       ^

0 [0x0]: line: 26 pushl 1   
1 [0x1]:          call @590 // <std#integer<_int32>.hash>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @279 // <std#integer<_int64>.operator%>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std#hashmap<std#int,std.io#thread>.resize[2934] params(0) in file: lib/support/0.2.805//hashmap.sharp:29:8: note:  
		    def resize() {
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 31 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
17 [0x11]:          movl 0   
18 [0x12]:          movn #0   
20 [0x14]:          popobj   
21 [0x15]: line: 32 movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          sizeof ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          loadval ecx   
33 [0x21]:          mul ecx, ebx -> ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #2   
37 [0x25]:          movi #0, adx   
39 [0x27]:          rmov adx, ebx   
40 [0x28]: line: 33 istorel -1, fp+3   
42 [0x2a]:          pushl 1   
43 [0x2b]:          popl 4   
44 [0x2c]:          iaddl 1, fp@3   
46 [0x2e]:          movl 4   
47 [0x2f]:          sizeof ecx   
48 [0x30]:          loadl ebx, fp+3   
49 [0x31]:          lt ebx, ecx   
50 [0x32]:          jne 99   
51 [0x33]:          movnd ebx   
52 [0x34]:          pushobj   
53 [0x35]:          popl 2   
54 [0x36]: line: 35 movl 2   
55 [0x37]:          checknull   
56 [0x38]:          not ebx, ebx   
57 [0x39]:          movr cmt, ebx   
58 [0x3a]:          jne 98   
59 [0x3b]: line: 37 movl 2   
60 [0x3c]:          movn #2   
62 [0x3e]:          smovr_3 fp+5   
63 [0x3f]: line: 38 pushl 0   
64 [0x40]:          movl 2   
65 [0x41]:          movn #0   
67 [0x43]:          pushobj   
68 [0x44]:          call @2933 // <std#hashmap<std#int,std.io#thread>.hash>   
69 [0x45]:          ipopl 6   
70 [0x46]: line: 39 movl 0   
71 [0x47]:          movn #0   
73 [0x49]:          pushobj   
74 [0x4a]:          loadl ebx, fp+6   
75 [0x4b]:          popobj2    
76 [0x4c]:          movr adx, ebx   
77 [0x4d]:          chklen adx   
78 [0x4e]:          movnd adx   
79 [0x4f]:          pushobj   
80 [0x50]:          movl 2   
81 [0x51]:          movn #2   
83 [0x53]:          popobj   
84 [0x54]: line: 40 pushl 2   
85 [0x55]:          movl 0   
86 [0x56]:          movn #0   
88 [0x58]:          pushobj   
89 [0x59]:          loadl ebx, fp+6   
90 [0x5a]:          popobj2    
91 [0x5b]:          movr adx, ebx   
92 [0x5c]:          chklen adx   
93 [0x5d]:          movnd adx   
94 [0x5e]:          popobj   
95 [0x5f]: line: 41 movl 5   
96 [0x60]:          smovr_3 fp+2   
97 [0x61]:          jmp @54   
98 [0x62]:          jmp @44   
99 [0x63]: line: 45 pushnull    
100 [0x64]:          popobj2    
101 [0x65]:          smovr_3 fp+1   
102 [0x66]:          ret   


function: std#hashmap<std#int,std.io#thread>.at[2935] params(1) in file: lib/support/0.2.805//hashmap.sharp:48:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @2933 // <std#hashmap<std#int,std.io#thread>.hash>   
3 [0x3]:          ipopl 2   
4 [0x4]: line: 50 istorel -1, fp+3   
6 [0x6]: line: 51 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 53 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+2   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          pushobj   
18 [0x12]:          pushnull    
19 [0x13]:          itest ebx   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 26   
22 [0x16]: line: 54 movl 4   
23 [0x17]:          returnobj   
24 [0x18]:          ret   
25 [0x19]:          jmp @64   
26 [0x1a]: line: 56 movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          pushobj   
30 [0x1e]:          loadl ebx, fp+2   
31 [0x1f]:          popobj2    
32 [0x20]:          movr adx, ebx   
33 [0x21]:          chklen adx   
34 [0x22]:          movnd adx   
35 [0x23]:          smovr_3 fp+5   
36 [0x24]: line: 57 movl 5   
37 [0x25]:          checknull   
38 [0x26]:          not ebx, ebx   
39 [0x27]:          movr cmt, ebx   
40 [0x28]:          jne 61   
41 [0x29]: line: 58 movl 5   
42 [0x2a]:          movn #0   
44 [0x2c]:          pushobj   
45 [0x2d]:          pushl 1   
46 [0x2e]:          call @598 // <std#integer<_int32>.operator==>   
47 [0x2f]:          loadval ebx   
48 [0x30]:          movr cmt, ebx   
49 [0x31]:          jne 55   
50 [0x32]: line: 59 movl 5   
51 [0x33]:          movn #1   
53 [0x35]:          returnobj   
54 [0x36]:          ret   
55 [0x37]:          nop   
56 [0x38]: line: 61 movl 5   
57 [0x39]:          movn #2   
59 [0x3b]:          smovr_3 fp+5   
60 [0x3c]:          jmp @36   
61 [0x3d]: line: 64 movl 4   
62 [0x3e]:          returnobj   
63 [0x3f]:          ret   
64 [0x40]:          nop   


function: std#hashmap<std#int,std.io#thread>.put[2936] params(2) in file: lib/support/0.2.805//hashmap.sharp:68:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 69 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @2933 // <std#hashmap<std#int,std.io#thread>.hash>   
3 [0x3]:          ipopl 3   
4 [0x4]: line: 70 movl 4   
5 [0x5]:          del   
6 [0x6]: line: 71 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          loadl ebx, fp+3   
11 [0xb]:          popobj2    
12 [0xc]:          movr adx, ebx   
13 [0xd]:          chklen adx   
14 [0xe]:          movnd adx   
15 [0xf]:          smovr_3 fp+5   
16 [0x10]: line: 73 movl 5   
17 [0x11]:          checknull   
18 [0x12]:          not ebx, ebx   
19 [0x13]:          skne ebx // pc = 27   
20 [0x14]:          movl 5   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          pushl 1   
25 [0x19]:          call @597 // <std#integer<_int32>.operator!=>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 36   
29 [0x1d]: line: 74 movl 5   
30 [0x1e]:          smovr_3 fp+4   
31 [0x1f]: line: 75 movl 5   
32 [0x20]:          movn #2   
34 [0x22]:          smovr_3 fp+5   
35 [0x23]:          jmp @16   
36 [0x24]: line: 78 movl 5   
37 [0x25]:          checknull   
38 [0x26]:          movr cmt, ebx   
39 [0x27]:          jne 85   
40 [0x28]: line: 79 movl 0   
41 [0x29]:          movn #3   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          iaload ebx, adx   
46 [0x2e]:          movr egx, ebx   
47 [0x2f]:          inc ebx   
48 [0x30]:          movi #0, adx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 80 new_class @84 // std.io#entry<std#int,std.io#thread>   
52 [0x34]:          dup    
53 [0x35]:          pushl 1   
54 [0x36]:          pushl 2   
55 [0x37]:          call @3048 // <std.io#entry<std#int,std.io#thread>.entry>   
56 [0x38]:          movsl #0   
57 [0x39]:          smovr_3 fp+5   
58 [0x3a]: line: 81 movl 4   
59 [0x3b]:          checknull   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 74   
62 [0x3e]: line: 82 pushl 5   
63 [0x3f]:          movl 0   
64 [0x40]:          movn #0   
66 [0x42]:          pushobj   
67 [0x43]:          loadl ebx, fp+3   
68 [0x44]:          popobj2    
69 [0x45]:          movr adx, ebx   
70 [0x46]:          chklen adx   
71 [0x47]:          movnd adx   
72 [0x48]:          popobj   
73 [0x49]:          jmp @79   
74 [0x4a]: line: 84 pushl 5   
75 [0x4b]:          movl 4   
76 [0x4c]:          movn #2   
78 [0x4e]:          popobj   
79 [0x4f]:          nop   
80 [0x50]: line: 87 movi #1, ebx   
82 [0x52]:          return_val ebx   
83 [0x53]:          ret   
84 [0x54]:          jmp @94   
85 [0x55]: line: 89 pushl 2   
86 [0x56]:          movl 5   
87 [0x57]:          movn #1   
89 [0x59]:          popobj   
90 [0x5a]: line: 90 movi #0, ebx   
92 [0x5c]:          return_val ebx   
93 [0x5d]:          ret   
94 [0x5e]:          nop   


function: std#hashmap<std#int,std.io#thread>.remove[2937] params(1) in file: lib/support/0.2.805//hashmap.sharp:94:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 95 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @2933 // <std#hashmap<std#int,std.io#thread>.hash>   
3 [0x3]:          ipopl 2   
4 [0x4]: line: 96 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          popobj2    
10 [0xa]:          movr adx, ebx   
11 [0xb]:          chklen adx   
12 [0xc]:          movnd adx   
13 [0xd]:          pushobj   
14 [0xe]:          pushnull    
15 [0xf]:          itest ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 97   
18 [0x12]: line: 97 movl 3   
19 [0x13]:          del   
20 [0x14]: line: 98 movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          loadl ebx, fp+2   
25 [0x19]:          popobj2    
26 [0x1a]:          movr adx, ebx   
27 [0x1b]:          chklen adx   
28 [0x1c]:          movnd adx   
29 [0x1d]:          smovr_3 fp+4   
30 [0x1e]: line: 99 movl 4   
31 [0x1f]:          checknull   
32 [0x20]:          not ebx, ebx   
33 [0x21]:          skne ebx // pc = 41   
34 [0x22]:          movl 4   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          pushl 1   
39 [0x27]:          call @597 // <std#integer<_int32>.operator!=>   
40 [0x28]:          loadval ebx   
41 [0x29]:          movr cmt, ebx   
42 [0x2a]:          jne 50   
43 [0x2b]: line: 100 movl 4   
44 [0x2c]:           smovr_3 fp+3   
45 [0x2d]: line: 101 movl 4   
46 [0x2e]:           movn #2   
48 [0x30]:           smovr_3 fp+4   
49 [0x31]:           jmp @30   
50 [0x32]: line: 104 movl 4   
51 [0x33]:           movn #0   
53 [0x35]:           pushobj   
54 [0x36]:           pushl 1   
55 [0x37]:           call @598 // <std#integer<_int32>.operator==>   
56 [0x38]:           loadval ebx   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 96   
59 [0x3b]: line: 105 movl 3   
60 [0x3c]:           checknull   
61 [0x3d]:           movr cmt, ebx   
62 [0x3e]:           jne 79   
63 [0x3f]: line: 106 movl 4   
64 [0x40]:           movn #2   
66 [0x42]:           smovr_3 fp+5   
67 [0x43]: line: 107 pushl 5   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           pushobj   
72 [0x48]:           loadl ebx, fp+2   
73 [0x49]:           popobj2    
74 [0x4a]:           movr adx, ebx   
75 [0x4b]:           chklen adx   
76 [0x4c]:           movnd adx   
77 [0x4d]:           popobj   
78 [0x4e]:           jmp @91   
79 [0x4f]: line: 109 movl 4   
80 [0x50]:           movn #2   
82 [0x52]:           smovr_3 fp+6   
83 [0x53]: line: 110 pushl 6   
84 [0x54]:           movl 3   
85 [0x55]:           movn #2   
87 [0x57]:           popobj   
88 [0x58]: line: 111 pushnull    
89 [0x59]:           popobj2    
90 [0x5a]:           smovr_3 fp+4   
91 [0x5b]:           nop   
92 [0x5c]: line: 114 movi #1, ebx   
94 [0x5e]:           return_val ebx   
95 [0x5f]:           ret   
96 [0x60]:           nop   
97 [0x61]:           nop   
98 [0x62]: line: 118 movi #0, ebx   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   


constructor: std.io.task#observable<var>.observable[2938] params(1) in file: lib/support/0.2.805//io//task//observable.sharp:7:19: note:  
			public observable(initial : t) {
		                  ^

0 [0x0]:         new_class @85 // std#synced_list<std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @3051 // <std#synced_list<std.io#thread>.synced_list>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #2   
6 [0x6]:         popobj   
7 [0x7]:         pushl 0   
8 [0x8]:         call @1835 // <std#_object_._object_>   
9 [0x9]: line: 8 ipushl #1   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         loadval ebx   
14 [0xe]:         movi #0, adx   
16 [0x10]:         rmov adx, ebx   
17 [0x11]:         ret   


function: std.io.task#observable<var>.post[2939] params(1) in file: lib/support/0.2.805//io//task//observable.sharp:11:12: note:  
			public def post(data : t) {
		           ^

0 [0x0]: line: 12 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 13 movi #1, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]: line: 14 pushl 0   
17 [0x11]:          call @2941 // <std.io.task#observable<var>.notify_all>   
18 [0x12]: line: 15 movi #0, ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          movi #0, adx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]:          ret   


function: std.io.task#observable<var>.observe_forever[2940] params(1) in file: lib/support/0.2.805//io//task//observable.sharp:18:12: note:  
			public def observe_forever(on_update: (observable<t>)()) {
		           ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          call @1765 // <std.io#thread.current>   
5 [0x5]:          call @3062 // <std#synced_list<std.io#thread>.add>   
6 [0x6]: line: 21 call @1767 // <std.io#thread.wait>   : try start: try block start
7 [0x7]: line: 22 ipushl #1   
8 [0x8]: line: 23 pushl 0   
9 [0x9]: line: 24 smov ebx, sp+[-1]   
10 [0xa]:          calld ebx   
11 [0xb]:          movi #1, ebx   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          je 6   
15 [0xf]:          jmp @36   : try block end
16 [0x10]: line: 27 movl 0   : catch(std.io.task#cancellation_exception)
17 [0x11]:          movn #2   
19 [0x13]:          pushobj   
20 [0x14]:          call @1765 // <std.io#thread.current>   
21 [0x15]:          istore 3093   
23 [0x17]:          call @3069 // <std#synced_list<std.io#thread>.remove>   
24 [0x18]:          jmp @36   
25 [0x19]: line: 29 movl 0   : catch(std#exception)
26 [0x1a]:          movn #2   
28 [0x1c]:          pushobj   
29 [0x1d]:          call @1765 // <std.io#thread.current>   
30 [0x1e]:          istore 3094   
32 [0x20]:          call @3069 // <std#synced_list<std.io#thread>.remove>   
33 [0x21]: line: 30 pushl 2   
34 [0x22]:          throw    
35 [0x23]:          jmp @36   
36 [0x24]:          nop   : try end
37 [0x25]:          ret   


function: std.io.task#observable<var>.notify_all[2941] params(0) in file: lib/support/0.2.805//io//task//observable.sharp:34:5: note:  
			def notify_all() {
		    ^

0 [0x0]: line: 35 istorel -1, fp+2   
2 [0x2]:          movl 0   
3 [0x3]:          movn #2   
5 [0x5]:          pushobj   
6 [0x6]:          invoke_delegate 8 { static=0, args=0 }   
8 [0x8]:          popl 3   
9 [0x9]:          iaddl 1, fp@2   
11 [0xb]:          movl 3   
12 [0xc]:          sizeof ecx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          lt ebx, ecx   
15 [0xf]:          jne 23   
16 [0x10]:          movnd ebx   
17 [0x11]:          pushobj   
18 [0x12]:          popl 1   
19 [0x13]: line: 36 pushl 1   
20 [0x14]:          call @1762 // <std.io#thread.wait_and_notify>   
21 [0x15]:          pop   
22 [0x16]:          jmp @9   
23 [0x17]:          ret   


function: std.io.task#observable<var>.get_data[2942] params(0) in file: lib/support/0.2.805//io//task//observable.sharp:40:12: note:  
			public def get_data() : t = data;
		           ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io.task#observable<var>.stop[2943] params(0) in file: lib/support/0.2.805//io//task//observable.sharp:42:12: note:  
			public def stop() {
		           ^

0 [0x0]: line: 43 new_class @18 // std.io.task#cancellation_exception   
1 [0x1]:          dup    
2 [0x2]:          call @1696 // <std.io.task#cancellation_exception.cancellation_exception>   
3 [0x3]:          throw    
4 [0x4]:          ret   


constructor: std.io.task#observable<var>.observable[2944] params(0) in file: lib/support/0.2.805//io//task//observable.sharp:5:13: note:  
		public class observable<t> {
		            ^

0 [0x0]:         new_class @85 // std#synced_list<std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @3051 // <std#synced_list<std.io#thread>.synced_list>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #2   
6 [0x6]:         popobj   
7 [0x7]:         ret   


constructor: std.io.task#deferred<var>.deferred[2945] params(1) in file: lib/support/0.2.805//io//task//deferred.sharp:7:10: note:  
			deferred(scheduled_job : job) {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2944 // <std.io.task#observable<var>.observable>   
2 [0x2]: line: 8 pushl 1   
3 [0x3]:         movl 0   
4 [0x4]:         movn #3   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std.io.task#deferred<var>.await[2946] params(0) in file: lib/support/0.2.805//io//task//deferred.sharp:11:5: note:  
			def await(): t {
		    ^

0 [0x0]: line: 12 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 13 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          return_val ebx   
15 [0xf]:          ret   
16 [0x10]:          nop   
17 [0x11]: line: 15 movi #1, ebx   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 51   
21 [0x15]: line: 16 movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          iaload ebx, adx   
27 [0x1b]:          skpe ebx // pc = 34   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #3   
31 [0x1f]:          pushobj   
32 [0x20]:          call @1711 // <std.io.task#job.is_finished>   
33 [0x21]:          loadval ebx   
34 [0x22]:          movr cmt, ebx   
35 [0x23]:          jne 45   
36 [0x24]: line: 17 movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movi #0, adx   
41 [0x29]:          iaload ebx, adx   
42 [0x2a]:          return_val ebx   
43 [0x2b]:          ret   
44 [0x2c]:          jmp @48   
45 [0x2d]: line: 19 istore 2   
47 [0x2f]:          call @1766 // <std.io#thread.sleep>   
48 [0x30]:          nop   
49 [0x31]: line: 20 call @1771 // <std.io#thread.yield>   
50 [0x32]:          jmp @17   
51 [0x33]: line: 23 movl 0   
52 [0x34]:          movn #1   
54 [0x36]:          movi #0, adx   
56 [0x38]:          iaload ebx, adx   
57 [0x39]:          return_val ebx   
58 [0x3a]:          ret   


function: std.io.task#deferred<var>.get_job[2947] params(0) in file: lib/support/0.2.805//io//task//deferred.sharp:26:5: note:  
			def get_job() := scheduled_job;
		    ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


constructor: std.io.task#deferred<var>.deferred[2948] params(0) in file: lib/support/0.2.805//io//task//deferred.sharp:5:6: note:  
		class deferred<t> base observable<t> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2944 // <std.io.task#observable<var>.observable>   
2 [0x2]:         ret   


function: std#throwable.get_stack_trace[2949] params(0) in file: lib/support/0.2.805//exceptions.sharp:13:25: note:  
		    stack_trace : string;
		                        ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 17   
8 [0x8]: line: 16 movl 0   
9 [0x9]:          movn #2   
11 [0xb]:          pushobj   
12 [0xc]:          call @1846 // <platform.kernel#vm.get_stack_trace>   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          popobj   
17 [0x11]:          nop   
18 [0x12]: line: 20 movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          returnobj   
22 [0x16]:          ret   


constructor: std#list<std.io#thread>.list[2950] params(0) in file: lib/support/0.2.805//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io#thread[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std.io#thread>.list[2951] params(1) in file: lib/support/0.2.805//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: std#list<std.io#thread>.empty[2952] params(0) in file: lib/support/0.2.805//list.sharp:21:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std.io#thread>.set_compact[2953] params(1) in file: lib/support/0.2.805//list.sharp:23:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 24 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<std.io#thread>.get_elements[2954] params(0) in file: lib/support/0.2.805//list.sharp:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 21   
14 [0xe]:          movl 0   
15 [0xf]:          _ulck   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @40   
21 [0x15]: line: 30 movl 0   
22 [0x16]:          _ulck   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @1674 // <std.io#__srt_global.copy>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   
40 [0x28]:          nop   
41 [0x29]:          movl 0   
42 [0x2a]:          _ulck   


overload function: std#list<std.io#thread>.operator[[2955] params(1) in file: lib/support/0.2.805//list.sharp:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 14   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 36 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:          dup    
18 [0x12]:          pushl 0   
19 [0x13]:          ipushl #1   
20 [0x14]:          call @2971 // <std#list<std.io#thread>.out_of_bounds_msg>   
21 [0x15]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 37 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          movnd adx   
33 [0x21]:          returnobj   
34 [0x22]:          ret   


function: std#list<std.io#thread>.at[2956] params(1) in file: lib/support/0.2.805//list.sharp:40:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 41 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 14   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 42 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:          dup    
18 [0x12]:          pushl 0   
19 [0x13]:          ipushl #1   
20 [0x14]:          call @2971 // <std#list<std.io#thread>.out_of_bounds_msg>   
21 [0x15]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 43 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          movnd adx   
33 [0x21]:          returnobj   
34 [0x22]:          ret   


function: std#list<std.io#thread>.last[2957] params(0) in file: lib/support/0.2.805//list.sharp:46:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 47 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2956 // <std#list<std.io#thread>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<std.io#thread>.put[2958] params(2) in file: lib/support/0.2.805//list.sharp:50:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 51 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 14   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 52 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:          dup    
18 [0x12]:          pushl 0   
19 [0x13]:          ipushl #1   
20 [0x14]:          call @2971 // <std#list<std.io#thread>.out_of_bounds_msg>   
21 [0x15]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 54 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          movnd adx   
33 [0x21]:          smovr_3 fp+3   
34 [0x22]: line: 55 pushl 2   
35 [0x23]:          movl 0   
36 [0x24]:          movn #1   
38 [0x26]:          pushobj   
39 [0x27]:          loadl ebx, fp+1   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]: line: 56 movl 3   
46 [0x2e]:          returnobj   
47 [0x2f]:          ret   


function: std#list<std.io#thread>.expand[2959] params(0) in file: lib/support/0.2.805//list.sharp:59:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 61 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @1654 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 63 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @1654 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<std.io#thread>.clear[2960] params(0) in file: lib/support/0.2.805//list.sharp:66:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 67 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 68 movi #0, ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]:          ret   


function: std#list<std.io#thread>.add_all[2961] params(1) in file: lib/support/0.2.805//list.sharp:71:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 72 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @1674 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #25, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 73 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<std.io#thread>.add[2962] params(1) in file: lib/support/0.2.805//list.sharp:76:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          jne 16   
14 [0xe]: line: 78 pushl 0   
15 [0xf]:          call @2959 // <std#list<std.io#thread>.expand>   
16 [0x10]:          nop   
17 [0x11]: line: 79 pushl 1   
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          pushobj   
22 [0x16]:          movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          movr egx, ebx   
29 [0x1d]:          inc ebx   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]:          movr ebx, egx   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          popobj   
39 [0x27]:          ret   


function: std#list<std.io#thread>.indexof[2963] params(1) in file: lib/support/0.2.805//list.sharp:82:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 83 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          jne 34   
12 [0xc]: line: 84 pushl 1   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          pushobj   
17 [0x11]:          loadl ebx, fp+2   
18 [0x12]:          popobj2    
19 [0x13]:          movr adx, ebx   
20 [0x14]:          chklen adx   
21 [0x15]:          movnd adx   
22 [0x16]:          pushobj   
23 [0x17]:          call @1788 // <std.io#thread.operator==>   
24 [0x18]:          loadval ebx   
25 [0x19]:          movr cmt, ebx   
26 [0x1a]:          jne 30   
27 [0x1b]: line: 85 loadl ebx, fp+2   
28 [0x1c]:          return_val ebx   
29 [0x1d]:          ret   
30 [0x1e]:          nop   
31 [0x1f]:          iaddl 1, fp@2   
33 [0x21]:          jmp @2   
34 [0x22]: line: 89 movi #-1, ebx   
36 [0x24]:          return_val ebx   
37 [0x25]:          ret   


function: std#list<std.io#thread>.pop_back[2964] params(0) in file: lib/support/0.2.805//list.sharp:92:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gt ecx, ebx   
11 [0xb]:          jne 36   
12 [0xc]: line: 94 movl 1   
13 [0xd]:          del   
14 [0xe]: line: 95 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          movr egx, ebx   
26 [0x1a]:          dec ebx   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          movr ebx, egx   
31 [0x1f]:          popobj2    
32 [0x20]:          movr adx, ebx   
33 [0x21]:          chklen adx   
34 [0x22]:          movnd adx   
35 [0x23]:          popobj   
36 [0x24]:          nop   
37 [0x25]:          ret   


function: std#list<std.io#thread>.size[2965] params(0) in file: lib/support/0.2.805//list.sharp:99:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#list<std.io#thread>.insert[2966] params(2) in file: lib/support/0.2.805//list.sharp:101:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 102 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 14   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           jne 23   
16 [0x10]: line: 103 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:           dup    
18 [0x12]:           pushl 0   
19 [0x13]:           ipushl #1   
20 [0x14]:           call @2971 // <std#list<std.io#thread>.out_of_bounds_msg>   
21 [0x15]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:           throw    
23 [0x17]:           nop   
24 [0x18]: line: 105 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           movi #0, adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movi #0, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           test ecx, ebx   
35 [0x23]:           jne 40   
36 [0x24]: line: 106 pushl 0   
37 [0x25]:           pushl 2   
38 [0x26]:           call @2962 // <std#list<std.io#thread>.add>   
39 [0x27]:           jmp @125   
40 [0x28]: line: 108 movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           movi #0, adx   
45 [0x2d]:           iaload ebx, adx   
46 [0x2e]:           rstore ebx   
47 [0x2f]:           movl 0   
48 [0x30]:           movn #1   
50 [0x32]:           sizeof ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           gte ecx, ebx   
53 [0x35]:           jne 56   
54 [0x36]: line: 109 pushl 0   
55 [0x37]:           call @2959 // <std#list<std.io#thread>.expand>   
56 [0x38]:           nop   
57 [0x39]: line: 110 movl 0   
58 [0x3a]:           movn #0   
60 [0x3c]:           movi #0, adx   
62 [0x3e]:           iaload ebx, adx   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           movi #0, adx   
67 [0x43]:           rmov adx, ebx   
68 [0x44]: line: 111 movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movi #1, ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           sub ecx, ebx -> ebx   
79 [0x4f]:           smovr_2 ebx, fp+3   
80 [0x50]:           ipushl #3   
81 [0x51]:           loadl ebx, fp+1   
82 [0x52]:           loadval ecx   
83 [0x53]:           gt ecx, ebx   
84 [0x54]:           jne 114   
85 [0x55]: line: 112 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           sub ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]:           loadl ebx, fp+3   
110 [0x6e]:           movr egx, ebx   
111 [0x6f]:           dec ebx   
112 [0x70]:           smovr_2 ebx, fp+3   
113 [0x71]:           jmp @80   
114 [0x72]: line: 113 pushl 2   
115 [0x73]:           movl 0   
116 [0x74]:           movn #1   
118 [0x76]:           pushobj   
119 [0x77]:           loadl ebx, fp+1   
120 [0x78]:           popobj2    
121 [0x79]:           movr adx, ebx   
122 [0x7a]:           chklen adx   
123 [0x7b]:           movnd adx   
124 [0x7c]:           popobj   
125 [0x7d]:           nop   
126 [0x7e]:           ret   


function: std#list<std.io#thread>.remove[2967] params(1) in file: lib/support/0.2.805//list.sharp:118:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 119 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           jne 35   
12 [0xc]: line: 120 pushl 1   
13 [0xd]:           movl 0   
14 [0xe]:           movn #1   
16 [0x10]:           pushobj   
17 [0x11]:           loadl ebx, fp+2   
18 [0x12]:           popobj2    
19 [0x13]:           movr adx, ebx   
20 [0x14]:           chklen adx   
21 [0x15]:           movnd adx   
22 [0x16]:           pushobj   
23 [0x17]:           call @1788 // <std.io#thread.operator==>   
24 [0x18]:           loadval ebx   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 31   
27 [0x1b]: line: 121 pushl 0   
28 [0x1c]:           ipushl #2   
29 [0x1d]:           call @2969 // <std#list<std.io#thread>.remove_at>   
30 [0x1e]: line: 122 ret   
31 [0x1f]:           nop   
32 [0x20]:           iaddl 1, fp@2   
34 [0x22]:           jmp @2   
35 [0x23]:           ret   


function: std#list<std.io#thread>.remove[2968] params(2) in file: lib/support/0.2.805//list.sharp:127:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 128 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           jne 37   
12 [0xc]: line: 129 ipushl #2   
13 [0xd]:           pushl 1   
14 [0xe]:           movl 0   
15 [0xf]:           movn #1   
17 [0x11]:           pushobj   
18 [0x12]:           loadl ebx, fp+3   
19 [0x13]:           popobj2    
20 [0x14]:           movr adx, ebx   
21 [0x15]:           chklen adx   
22 [0x16]:           movnd adx   
23 [0x17]:           pushobj   
24 [0x18]:           smov ebx, sp+[-2]   
25 [0x19]:           calld ebx   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 130 pushl 0   
30 [0x1e]:           ipushl #3   
31 [0x1f]:           call @2969 // <std#list<std.io#thread>.remove_at>   
32 [0x20]: line: 131 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@3   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: std#list<std.io#thread>.remove_at[2969] params(1) in file: lib/support/0.2.805//list.sharp:136:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 137 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 14   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           jne 23   
16 [0x10]: line: 138 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:           dup    
18 [0x12]:           pushl 0   
19 [0x13]:           ipushl #1   
20 [0x14]:           call @2971 // <std#list<std.io#thread>.out_of_bounds_msg>   
21 [0x15]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:           throw    
23 [0x17]:           nop   
24 [0x18]: line: 140 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           movi #0, adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movi #2, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           test ecx, ebx   
35 [0x23]:           jne 66   
36 [0x24]: line: 141 ipushl #1   
37 [0x25]:           movi #0, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           test ecx, ebx   
41 [0x29]:           jne 64   
42 [0x2a]: line: 142 movl 0   
43 [0x2b]:           movn #1   
45 [0x2d]:           pushobj   
46 [0x2e]:           movi #1, ebx   
48 [0x30]:           popobj2    
49 [0x31]:           movr adx, ebx   
50 [0x32]:           chklen adx   
51 [0x33]:           movnd adx   
52 [0x34]:           pushobj   
53 [0x35]:           movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           pushobj   
57 [0x39]:           movi #0, ebx   
59 [0x3b]:           popobj2    
60 [0x3c]:           movr adx, ebx   
61 [0x3d]:           chklen adx   
62 [0x3e]:           movnd adx   
63 [0x3f]:           popobj   
64 [0x40]:           nop   
65 [0x41]:           jmp @124   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           movi #1, ebx   
75 [0x4b]:           loadval ecx   
76 [0x4c]:           gt ecx, ebx   
77 [0x4d]:           jne 124   
78 [0x4e]: line: 145 movl 0   
79 [0x4f]:           movn #0   
81 [0x51]:           movi #0, adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           rstore ebx   
85 [0x55]:           movi #1, ebx   
87 [0x57]:           loadval ecx   
88 [0x58]:           sub ecx, ebx -> ebx   
89 [0x59]:           smovr_2 ebx, fp+2   
90 [0x5a]: line: 146 loadl ebx, fp+1   
91 [0x5b]:           smovr_2 ebx, fp+3   
92 [0x5c]:           ipushl #3   
93 [0x5d]:           loadl ebx, fp+2   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           lt ecx, ebx   
96 [0x60]:           jne 124   
97 [0x61]: line: 147 movl 0   
98 [0x62]:           movn #1   
100 [0x64]:           pushobj   
101 [0x65]:           ipushl #3   
102 [0x66]:           movi #1, ebx   
104 [0x68]:           loadval ecx   
105 [0x69]:           add ecx, ebx -> ebx   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           pushobj   
111 [0x6f]:           movl 0   
112 [0x70]:           movn #1   
114 [0x72]:           pushobj   
115 [0x73]:           loadl ebx, fp+3   
116 [0x74]:           popobj2    
117 [0x75]:           movr adx, ebx   
118 [0x76]:           chklen adx   
119 [0x77]:           movnd adx   
120 [0x78]:           popobj   
121 [0x79]:           iaddl 1, fp@3   
123 [0x7b]:           jmp @92   
124 [0x7c]:           nop   
125 [0x7d]: line: 150 pushl 0   
126 [0x7e]:           call @2964 // <std#list<std.io#thread>.pop_back>   
127 [0x7f]:           ret   


function: std#list<std.io#thread>.to_string[2970] params(0) in file: lib/support/0.2.805//list.sharp:153:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 154 new_class @59 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           call @2907 // <std#string_builder.string_builder>   
3 [0x3]:           movsl #0   
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 156 pushl 1   
6 [0x6]:           newstr @56 // [    
7 [0x7]:           call @2903 // <std#string_builder.operator+=>   
8 [0x8]:           pop   
9 [0x9]: line: 157 istorel 0, fp+2   
11 [0xb]:           ipushl #2   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           loadval ecx   
19 [0x13]:           lt ecx, ebx   
20 [0x14]:           jne 57   
21 [0x15]: line: 158 pushl 1   
22 [0x16]:           movl 0   
23 [0x17]:           movn #1   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           pushobj   
32 [0x20]:           call @2899 // <std#string_builder.operator+=>   
33 [0x21]:           pop   
34 [0x22]: line: 160 ipushl #2   
35 [0x23]:           movi #1, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           add ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           movi #0, adx   
45 [0x2d]:           iaload ebx, adx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           lt ecx, ebx   
48 [0x30]:           jne 53   
49 [0x31]: line: 161 pushl 1   
50 [0x32]:           newstr @57 // ,    
51 [0x33]:           call @2903 // <std#string_builder.operator+=>   
52 [0x34]:           pop   
53 [0x35]:           nop   
54 [0x36]:           iaddl 1, fp@2   
56 [0x38]:           jmp @11   
57 [0x39]: line: 165 pushl 1   
58 [0x3a]:           newstr @58 //  ]   
59 [0x3b]:           call @2903 // <std#string_builder.operator+=>   
60 [0x3c]:           pop   
61 [0x3d]: line: 166 pushl 1   
62 [0x3e]:           call @2880 // <std#string_builder.to_string>   
63 [0x3f]:           popobj2    
64 [0x40]:           returnobj   
65 [0x41]:           ret   


function: std#list<std.io#thread>.out_of_bounds_msg[2971] params(1) in file: lib/support/0.2.805//list.sharp:169:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 170 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @59 // Index:    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           ipushl #1   
5 [0x5]:           call @2853 // <std#string.operator+>   
6 [0x6]:           newstr @60 // , size:    
7 [0x7]:           call @2834 // <std#string.operator+>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2853 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


std#loopable<std.io.task#job>.get_elements[2972] params(0) in file: lib/support/0.2.805//loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std.io.task#job>.loopable[2973] params(0) in file: lib/support/0.2.805//loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#synced_list<std.io.task#job>.synced_list[2974] params(0) in file: lib/support/0.2.805//synced_list.sharp:13:16: note:  
		    synced_list() {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#synced_list<std.io.task#job>.synced_list[2975] params(1) in file: lib/support/0.2.805//synced_list.sharp:17:16: note:  
		    synced_list(starting_capacity: var) {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: std#synced_list<std.io.task#job>.set_compact[2976] params(1) in file: lib/support/0.2.805//synced_list.sharp:21:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 23 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #2   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          _ulck   
12 [0xc]:          ret   


function: std#synced_list<std.io.task#job>.get_elements[2977] params(0) in file: lib/support/0.2.805//synced_list.sharp:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 21   
14 [0xe]:          movl 0   
15 [0xf]:          _ulck   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @40   
21 [0x15]: line: 30 movl 0   
22 [0x16]:          _ulck   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @1674 // <std.io#__srt_global.copy>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   
40 [0x28]:          nop   
41 [0x29]:          movl 0   
42 [0x2a]:          _ulck   


overload function: std#synced_list<std.io.task#job>.operator[[2978] params(1) in file: lib/support/0.2.805//synced_list.sharp:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 36 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 16   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          jne 25   
18 [0x12]: line: 37 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:          dup    
20 [0x14]:          pushl 0   
21 [0x15]:          ipushl #1   
22 [0x16]:          call @3017 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
23 [0x17]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:          throw    
25 [0x19]:          nop   
26 [0x1a]: line: 38 movl 0   
27 [0x1b]:          _ulck   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          loadl ebx, fp+1   
33 [0x21]:          popobj2    
34 [0x22]:          movr adx, ebx   
35 [0x23]:          chklen adx   
36 [0x24]:          movnd adx   
37 [0x25]:          returnobj   
38 [0x26]:          ret   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   


function: std#synced_list<std.io.task#job>.at[2979] params(1) in file: lib/support/0.2.805//synced_list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 44 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 16   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          jne 25   
18 [0x12]: line: 45 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:          dup    
20 [0x14]:          pushl 0   
21 [0x15]:          ipushl #1   
22 [0x16]:          call @3017 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
23 [0x17]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:          throw    
25 [0x19]:          nop   
26 [0x1a]: line: 46 movl 0   
27 [0x1b]:          _ulck   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          loadl ebx, fp+1   
33 [0x21]:          popobj2    
34 [0x22]:          movr adx, ebx   
35 [0x23]:          chklen adx   
36 [0x24]:          movnd adx   
37 [0x25]:          returnobj   
38 [0x26]:          ret   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   


function: std#synced_list<std.io.task#job>.last[2980] params(0) in file: lib/support/0.2.805//synced_list.sharp:50:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 51 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2979 // <std#synced_list<std.io.task#job>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#synced_list<std.io.task#job>.put[2981] params(2) in file: lib/support/0.2.805//synced_list.sharp:54:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 16   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          jne 25   
18 [0x12]: line: 57 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:          dup    
20 [0x14]:          pushl 0   
21 [0x15]:          ipushl #1   
22 [0x16]:          call @3017 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
23 [0x17]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:          throw    
25 [0x19]:          nop   
26 [0x1a]: line: 59 movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          pushobj   
30 [0x1e]:          loadl ebx, fp+1   
31 [0x1f]:          popobj2    
32 [0x20]:          movr adx, ebx   
33 [0x21]:          chklen adx   
34 [0x22]:          movnd adx   
35 [0x23]:          smovr_3 fp+3   
36 [0x24]: line: 60 pushl 2   
37 [0x25]:          movl 0   
38 [0x26]:          movn #1   
40 [0x28]:          pushobj   
41 [0x29]:          loadl ebx, fp+1   
42 [0x2a]:          popobj2    
43 [0x2b]:          movr adx, ebx   
44 [0x2c]:          chklen adx   
45 [0x2d]:          movnd adx   
46 [0x2e]:          popobj   
47 [0x2f]: line: 61 movl 0   
48 [0x30]:          _ulck   
49 [0x31]:          movl 3   
50 [0x32]:          returnobj   
51 [0x33]:          ret   
52 [0x34]:          movl 0   
53 [0x35]:          _ulck   


function: std#synced_list<std.io.task#job>.expand[2982] params(0) in file: lib/support/0.2.805//synced_list.sharp:65:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 67 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @1654 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 69 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @1654 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#synced_list<std.io.task#job>.clear[2983] params(0) in file: lib/support/0.2.805//synced_list.sharp:72:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]: line: 75 movi #0, ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]:          movl 0   
18 [0x12]:          _ulck   
19 [0x13]:          ret   


constructor: std#list<std.io.task#job>.list[2984] params(0) in file: lib/support/0.2.805//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std.io.task#job>.list[2985] params(1) in file: lib/support/0.2.805//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: std#list<std.io.task#job>.empty[2986] params(0) in file: lib/support/0.2.805//list.sharp:21:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std.io.task#job>.set_compact[2987] params(1) in file: lib/support/0.2.805//list.sharp:23:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 24 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<std.io.task#job>.get_elements[2988] params(0) in file: lib/support/0.2.805//list.sharp:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 21   
14 [0xe]:          movl 0   
15 [0xf]:          _ulck   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @40   
21 [0x15]: line: 30 movl 0   
22 [0x16]:          _ulck   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @1674 // <std.io#__srt_global.copy>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   
40 [0x28]:          nop   
41 [0x29]:          movl 0   
42 [0x2a]:          _ulck   


overload function: std#list<std.io.task#job>.operator[[2989] params(1) in file: lib/support/0.2.805//list.sharp:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 14   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 36 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:          dup    
18 [0x12]:          pushl 0   
19 [0x13]:          ipushl #1   
20 [0x14]:          call @3005 // <std#list<std.io.task#job>.out_of_bounds_msg>   
21 [0x15]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 37 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          movnd adx   
33 [0x21]:          returnobj   
34 [0x22]:          ret   


function: std#list<std.io.task#job>.at[2990] params(1) in file: lib/support/0.2.805//list.sharp:40:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 41 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 14   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 42 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:          dup    
18 [0x12]:          pushl 0   
19 [0x13]:          ipushl #1   
20 [0x14]:          call @3005 // <std#list<std.io.task#job>.out_of_bounds_msg>   
21 [0x15]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 43 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          movnd adx   
33 [0x21]:          returnobj   
34 [0x22]:          ret   


function: std#list<std.io.task#job>.last[2991] params(0) in file: lib/support/0.2.805//list.sharp:46:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 47 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2990 // <std#list<std.io.task#job>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<std.io.task#job>.put[2992] params(2) in file: lib/support/0.2.805//list.sharp:50:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 51 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 14   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 52 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:          dup    
18 [0x12]:          pushl 0   
19 [0x13]:          ipushl #1   
20 [0x14]:          call @3005 // <std#list<std.io.task#job>.out_of_bounds_msg>   
21 [0x15]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 54 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          movnd adx   
33 [0x21]:          smovr_3 fp+3   
34 [0x22]: line: 55 pushl 2   
35 [0x23]:          movl 0   
36 [0x24]:          movn #1   
38 [0x26]:          pushobj   
39 [0x27]:          loadl ebx, fp+1   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]: line: 56 movl 3   
46 [0x2e]:          returnobj   
47 [0x2f]:          ret   


function: std#list<std.io.task#job>.expand[2993] params(0) in file: lib/support/0.2.805//list.sharp:59:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 61 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @1654 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 63 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @1654 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<std.io.task#job>.clear[2994] params(0) in file: lib/support/0.2.805//list.sharp:66:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 67 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io.task#job[]   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 68 movi #0, ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]:          ret   


function: std#list<std.io.task#job>.add_all[2995] params(1) in file: lib/support/0.2.805//list.sharp:71:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 72 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @1674 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #19, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 73 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<std.io.task#job>.add[2996] params(1) in file: lib/support/0.2.805//list.sharp:76:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          jne 16   
14 [0xe]: line: 78 pushl 0   
15 [0xf]:          call @2993 // <std#list<std.io.task#job>.expand>   
16 [0x10]:          nop   
17 [0x11]: line: 79 pushl 1   
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          pushobj   
22 [0x16]:          movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          movr egx, ebx   
29 [0x1d]:          inc ebx   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]:          movr ebx, egx   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          popobj   
39 [0x27]:          ret   


function: std#list<std.io.task#job>.indexof[2997] params(1) in file: lib/support/0.2.805//list.sharp:82:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 83 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          jne 33   
12 [0xc]: line: 84 pushl 1   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          pushobj   
17 [0x11]:          loadl ebx, fp+2   
18 [0x12]:          popobj2    
19 [0x13]:          movr adx, ebx   
20 [0x14]:          chklen adx   
21 [0x15]:          movnd adx   
22 [0x16]:          pushobj   
23 [0x17]:          itest ebx   
24 [0x18]:          movr cmt, ebx   
25 [0x19]:          jne 29   
26 [0x1a]: line: 85 loadl ebx, fp+2   
27 [0x1b]:          return_val ebx   
28 [0x1c]:          ret   
29 [0x1d]:          nop   
30 [0x1e]:          iaddl 1, fp@2   
32 [0x20]:          jmp @2   
33 [0x21]: line: 89 movi #-1, ebx   
35 [0x23]:          return_val ebx   
36 [0x24]:          ret   


function: std#list<std.io.task#job>.pop_back[2998] params(0) in file: lib/support/0.2.805//list.sharp:92:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gt ecx, ebx   
11 [0xb]:          jne 36   
12 [0xc]: line: 94 movl 1   
13 [0xd]:          del   
14 [0xe]: line: 95 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          movr egx, ebx   
26 [0x1a]:          dec ebx   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          movr ebx, egx   
31 [0x1f]:          popobj2    
32 [0x20]:          movr adx, ebx   
33 [0x21]:          chklen adx   
34 [0x22]:          movnd adx   
35 [0x23]:          popobj   
36 [0x24]:          nop   
37 [0x25]:          ret   


function: std#list<std.io.task#job>.size[2999] params(0) in file: lib/support/0.2.805//list.sharp:99:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#list<std.io.task#job>.insert[3000] params(2) in file: lib/support/0.2.805//list.sharp:101:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 102 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 14   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           jne 23   
16 [0x10]: line: 103 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:           dup    
18 [0x12]:           pushl 0   
19 [0x13]:           ipushl #1   
20 [0x14]:           call @3005 // <std#list<std.io.task#job>.out_of_bounds_msg>   
21 [0x15]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:           throw    
23 [0x17]:           nop   
24 [0x18]: line: 105 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           movi #0, adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movi #0, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           test ecx, ebx   
35 [0x23]:           jne 40   
36 [0x24]: line: 106 pushl 0   
37 [0x25]:           pushl 2   
38 [0x26]:           call @2996 // <std#list<std.io.task#job>.add>   
39 [0x27]:           jmp @125   
40 [0x28]: line: 108 movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           movi #0, adx   
45 [0x2d]:           iaload ebx, adx   
46 [0x2e]:           rstore ebx   
47 [0x2f]:           movl 0   
48 [0x30]:           movn #1   
50 [0x32]:           sizeof ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           gte ecx, ebx   
53 [0x35]:           jne 56   
54 [0x36]: line: 109 pushl 0   
55 [0x37]:           call @2993 // <std#list<std.io.task#job>.expand>   
56 [0x38]:           nop   
57 [0x39]: line: 110 movl 0   
58 [0x3a]:           movn #0   
60 [0x3c]:           movi #0, adx   
62 [0x3e]:           iaload ebx, adx   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           movi #0, adx   
67 [0x43]:           rmov adx, ebx   
68 [0x44]: line: 111 movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movi #1, ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           sub ecx, ebx -> ebx   
79 [0x4f]:           smovr_2 ebx, fp+3   
80 [0x50]:           ipushl #3   
81 [0x51]:           loadl ebx, fp+1   
82 [0x52]:           loadval ecx   
83 [0x53]:           gt ecx, ebx   
84 [0x54]:           jne 114   
85 [0x55]: line: 112 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           sub ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]:           loadl ebx, fp+3   
110 [0x6e]:           movr egx, ebx   
111 [0x6f]:           dec ebx   
112 [0x70]:           smovr_2 ebx, fp+3   
113 [0x71]:           jmp @80   
114 [0x72]: line: 113 pushl 2   
115 [0x73]:           movl 0   
116 [0x74]:           movn #1   
118 [0x76]:           pushobj   
119 [0x77]:           loadl ebx, fp+1   
120 [0x78]:           popobj2    
121 [0x79]:           movr adx, ebx   
122 [0x7a]:           chklen adx   
123 [0x7b]:           movnd adx   
124 [0x7c]:           popobj   
125 [0x7d]:           nop   
126 [0x7e]:           ret   


function: std#list<std.io.task#job>.remove[3001] params(1) in file: lib/support/0.2.805//list.sharp:118:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 119 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           jne 34   
12 [0xc]: line: 120 pushl 1   
13 [0xd]:           movl 0   
14 [0xe]:           movn #1   
16 [0x10]:           pushobj   
17 [0x11]:           loadl ebx, fp+2   
18 [0x12]:           popobj2    
19 [0x13]:           movr adx, ebx   
20 [0x14]:           chklen adx   
21 [0x15]:           movnd adx   
22 [0x16]:           pushobj   
23 [0x17]:           itest ebx   
24 [0x18]:           movr cmt, ebx   
25 [0x19]:           jne 30   
26 [0x1a]: line: 121 pushl 0   
27 [0x1b]:           ipushl #2   
28 [0x1c]:           call @3003 // <std#list<std.io.task#job>.remove_at>   
29 [0x1d]: line: 122 ret   
30 [0x1e]:           nop   
31 [0x1f]:           iaddl 1, fp@2   
33 [0x21]:           jmp @2   
34 [0x22]:           ret   


function: std#list<std.io.task#job>.remove[3002] params(2) in file: lib/support/0.2.805//list.sharp:127:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 128 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           jne 37   
12 [0xc]: line: 129 ipushl #2   
13 [0xd]:           pushl 1   
14 [0xe]:           movl 0   
15 [0xf]:           movn #1   
17 [0x11]:           pushobj   
18 [0x12]:           loadl ebx, fp+3   
19 [0x13]:           popobj2    
20 [0x14]:           movr adx, ebx   
21 [0x15]:           chklen adx   
22 [0x16]:           movnd adx   
23 [0x17]:           pushobj   
24 [0x18]:           smov ebx, sp+[-2]   
25 [0x19]:           calld ebx   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 130 pushl 0   
30 [0x1e]:           ipushl #3   
31 [0x1f]:           call @3003 // <std#list<std.io.task#job>.remove_at>   
32 [0x20]: line: 131 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@3   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: std#list<std.io.task#job>.remove_at[3003] params(1) in file: lib/support/0.2.805//list.sharp:136:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 137 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 14   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           jne 23   
16 [0x10]: line: 138 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:           dup    
18 [0x12]:           pushl 0   
19 [0x13]:           ipushl #1   
20 [0x14]:           call @3005 // <std#list<std.io.task#job>.out_of_bounds_msg>   
21 [0x15]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:           throw    
23 [0x17]:           nop   
24 [0x18]: line: 140 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           movi #0, adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movi #2, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           test ecx, ebx   
35 [0x23]:           jne 66   
36 [0x24]: line: 141 ipushl #1   
37 [0x25]:           movi #0, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           test ecx, ebx   
41 [0x29]:           jne 64   
42 [0x2a]: line: 142 movl 0   
43 [0x2b]:           movn #1   
45 [0x2d]:           pushobj   
46 [0x2e]:           movi #1, ebx   
48 [0x30]:           popobj2    
49 [0x31]:           movr adx, ebx   
50 [0x32]:           chklen adx   
51 [0x33]:           movnd adx   
52 [0x34]:           pushobj   
53 [0x35]:           movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           pushobj   
57 [0x39]:           movi #0, ebx   
59 [0x3b]:           popobj2    
60 [0x3c]:           movr adx, ebx   
61 [0x3d]:           chklen adx   
62 [0x3e]:           movnd adx   
63 [0x3f]:           popobj   
64 [0x40]:           nop   
65 [0x41]:           jmp @124   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           movi #1, ebx   
75 [0x4b]:           loadval ecx   
76 [0x4c]:           gt ecx, ebx   
77 [0x4d]:           jne 124   
78 [0x4e]: line: 145 movl 0   
79 [0x4f]:           movn #0   
81 [0x51]:           movi #0, adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           rstore ebx   
85 [0x55]:           movi #1, ebx   
87 [0x57]:           loadval ecx   
88 [0x58]:           sub ecx, ebx -> ebx   
89 [0x59]:           smovr_2 ebx, fp+2   
90 [0x5a]: line: 146 loadl ebx, fp+1   
91 [0x5b]:           smovr_2 ebx, fp+3   
92 [0x5c]:           ipushl #3   
93 [0x5d]:           loadl ebx, fp+2   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           lt ecx, ebx   
96 [0x60]:           jne 124   
97 [0x61]: line: 147 movl 0   
98 [0x62]:           movn #1   
100 [0x64]:           pushobj   
101 [0x65]:           ipushl #3   
102 [0x66]:           movi #1, ebx   
104 [0x68]:           loadval ecx   
105 [0x69]:           add ecx, ebx -> ebx   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           pushobj   
111 [0x6f]:           movl 0   
112 [0x70]:           movn #1   
114 [0x72]:           pushobj   
115 [0x73]:           loadl ebx, fp+3   
116 [0x74]:           popobj2    
117 [0x75]:           movr adx, ebx   
118 [0x76]:           chklen adx   
119 [0x77]:           movnd adx   
120 [0x78]:           popobj   
121 [0x79]:           iaddl 1, fp@3   
123 [0x7b]:           jmp @92   
124 [0x7c]:           nop   
125 [0x7d]: line: 150 pushl 0   
126 [0x7e]:           call @2998 // <std#list<std.io.task#job>.pop_back>   
127 [0x7f]:           ret   


function: std#list<std.io.task#job>.to_string[3004] params(0) in file: lib/support/0.2.805//list.sharp:153:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 154 new_class @59 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           call @2907 // <std#string_builder.string_builder>   
3 [0x3]:           movsl #0   
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 156 pushl 1   
6 [0x6]:           newstr @56 // [    
7 [0x7]:           call @2903 // <std#string_builder.operator+=>   
8 [0x8]:           pop   
9 [0x9]: line: 157 istorel 0, fp+2   
11 [0xb]:           ipushl #2   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           loadval ecx   
19 [0x13]:           lt ecx, ebx   
20 [0x14]:           jne 57   
21 [0x15]: line: 158 pushl 1   
22 [0x16]:           movl 0   
23 [0x17]:           movn #1   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           pushobj   
32 [0x20]:           call @2899 // <std#string_builder.operator+=>   
33 [0x21]:           pop   
34 [0x22]: line: 160 ipushl #2   
35 [0x23]:           movi #1, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           add ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           movi #0, adx   
45 [0x2d]:           iaload ebx, adx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           lt ecx, ebx   
48 [0x30]:           jne 53   
49 [0x31]: line: 161 pushl 1   
50 [0x32]:           newstr @57 // ,    
51 [0x33]:           call @2903 // <std#string_builder.operator+=>   
52 [0x34]:           pop   
53 [0x35]:           nop   
54 [0x36]:           iaddl 1, fp@2   
56 [0x38]:           jmp @11   
57 [0x39]: line: 165 pushl 1   
58 [0x3a]:           newstr @58 //  ]   
59 [0x3b]:           call @2903 // <std#string_builder.operator+=>   
60 [0x3c]:           pop   
61 [0x3d]: line: 166 pushl 1   
62 [0x3e]:           call @2880 // <std#string_builder.to_string>   
63 [0x3f]:           popobj2    
64 [0x40]:           returnobj   
65 [0x41]:           ret   


function: std#list<std.io.task#job>.out_of_bounds_msg[3005] params(1) in file: lib/support/0.2.805//list.sharp:169:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 170 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @59 // Index:    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           ipushl #1   
5 [0x5]:           call @2853 // <std#string.operator+>   
6 [0x6]:           newstr @60 // , size:    
7 [0x7]:           call @2834 // <std#string.operator+>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2853 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#synced_list<std.io.task#job>.add_all[3006] params(1) in file: lib/support/0.2.805//synced_list.sharp:79:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 81 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @1674 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #19, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 82 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movl 0   
38 [0x26]:          _ulck   
39 [0x27]:          ret   


function: std#synced_list<std.io.task#job>.add[3007] params(1) in file: lib/support/0.2.805//synced_list.sharp:86:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 88 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          sizeof ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 89 pushl 0   
17 [0x11]:          call @2982 // <std#synced_list<std.io.task#job>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 90 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          movl 0   
42 [0x2a]:          _ulck   
43 [0x2b]:          ret   


function: std#synced_list<std.io.task#job>.indexof[3008] params(1) in file: lib/support/0.2.805//synced_list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 96 istorel 0, fp+2   
4 [0x4]:          ipushl #2   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          lt ecx, ebx   
13 [0xd]:          jne 37   
14 [0xe]: line: 97 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 33   
28 [0x1c]: line: 98 movl 0   
29 [0x1d]:          _ulck   
30 [0x1e]:          loadl ebx, fp+2   
31 [0x1f]:          return_val ebx   
32 [0x20]:          ret   
33 [0x21]:          nop   
34 [0x22]:          iaddl 1, fp@2   
36 [0x24]:          jmp @4   
37 [0x25]: line: 102 movl 0   
38 [0x26]:           _ulck   
39 [0x27]:           movi #-1, ebx   
41 [0x29]:           return_val ebx   
42 [0x2a]:           ret   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   


function: std#synced_list<std.io.task#job>.pop_back[3009] params(0) in file: lib/support/0.2.805//synced_list.sharp:106:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           jne 36   
12 [0xc]: line: 108 movl 1   
13 [0xd]:           del   
14 [0xe]: line: 109 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           movi #0, adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           movr egx, ebx   
26 [0x1a]:           dec ebx   
27 [0x1b]:           movi #0, adx   
29 [0x1d]:           rmov adx, ebx   
30 [0x1e]:           movr ebx, egx   
31 [0x1f]:           popobj2    
32 [0x20]:           movr adx, ebx   
33 [0x21]:           chklen adx   
34 [0x22]:           movnd adx   
35 [0x23]:           popobj   
36 [0x24]:           nop   
37 [0x25]:           ret   


function: std#synced_list<std.io.task#job>.size[3010] params(0) in file: lib/support/0.2.805//synced_list.sharp:113:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 115 movl 0   
3 [0x3]:           _ulck   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   
12 [0xc]:           movl 0   
13 [0xd]:           _ulck   


function: std#synced_list<std.io.task#job>.empty[3011] params(0) in file: lib/support/0.2.805//synced_list.sharp:119:8: note:  
		    def empty() : var {
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 121 movl 0   
3 [0x3]:           _ulck   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   
17 [0x11]:           movl 0   
18 [0x12]:           _ulck   


function: std#synced_list<std.io.task#job>.insert[3012] params(2) in file: lib/support/0.2.805//synced_list.sharp:125:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 127 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 16   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 128 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:           dup    
20 [0x14]:           pushl 0   
21 [0x15]:           ipushl #1   
22 [0x16]:           call @3017 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
23 [0x17]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:           throw    
25 [0x19]:           nop   
26 [0x1a]: line: 130 movl 0   
27 [0x1b]:           movn #0   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           iaload ebx, adx   
32 [0x20]:           rstore ebx   
33 [0x21]:           movi #0, ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           test ecx, ebx   
37 [0x25]:           jne 42   
38 [0x26]: line: 131 pushl 0   
39 [0x27]:           pushl 2   
40 [0x28]:           call @3007 // <std#synced_list<std.io.task#job>.add>   
41 [0x29]:           jmp @127   
42 [0x2a]: line: 133 movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           movi #0, adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movl 0   
50 [0x32]:           movn #1   
52 [0x34]:           sizeof ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           gte ecx, ebx   
55 [0x37]:           jne 58   
56 [0x38]: line: 134 pushl 0   
57 [0x39]:           call @2982 // <std#synced_list<std.io.task#job>.expand>   
58 [0x3a]:           nop   
59 [0x3b]: line: 135 movl 0   
60 [0x3c]:           movn #0   
62 [0x3e]:           movi #0, adx   
64 [0x40]:           iaload ebx, adx   
65 [0x41]:           movr egx, ebx   
66 [0x42]:           inc ebx   
67 [0x43]:           movi #0, adx   
69 [0x45]:           rmov adx, ebx   
70 [0x46]: line: 136 movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           movi #0, adx   
75 [0x4b]:           iaload ebx, adx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           movi #1, ebx   
79 [0x4f]:           loadval ecx   
80 [0x50]:           sub ecx, ebx -> ebx   
81 [0x51]:           smovr_2 ebx, fp+3   
82 [0x52]:           ipushl #3   
83 [0x53]:           loadl ebx, fp+1   
84 [0x54]:           loadval ecx   
85 [0x55]:           gt ecx, ebx   
86 [0x56]:           jne 116   
87 [0x57]: line: 137 movl 0   
88 [0x58]:           movn #1   
90 [0x5a]:           pushobj   
91 [0x5b]:           ipushl #3   
92 [0x5c]:           movi #1, ebx   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           sub ecx, ebx -> ebx   
96 [0x60]:           popobj2    
97 [0x61]:           movr adx, ebx   
98 [0x62]:           chklen adx   
99 [0x63]:           movnd adx   
100 [0x64]:           pushobj   
101 [0x65]:           movl 0   
102 [0x66]:           movn #1   
104 [0x68]:           pushobj   
105 [0x69]:           loadl ebx, fp+3   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           popobj   
111 [0x6f]:           loadl ebx, fp+3   
112 [0x70]:           movr egx, ebx   
113 [0x71]:           dec ebx   
114 [0x72]:           smovr_2 ebx, fp+3   
115 [0x73]:           jmp @82   
116 [0x74]: line: 138 pushl 2   
117 [0x75]:           movl 0   
118 [0x76]:           movn #1   
120 [0x78]:           pushobj   
121 [0x79]:           loadl ebx, fp+1   
122 [0x7a]:           popobj2    
123 [0x7b]:           movr adx, ebx   
124 [0x7c]:           chklen adx   
125 [0x7d]:           movnd adx   
126 [0x7e]:           popobj   
127 [0x7f]:           nop   
128 [0x80]:           movl 0   
129 [0x81]:           _ulck   
130 [0x82]:           ret   


function: std#synced_list<std.io.task#job>.remove[3013] params(1) in file: lib/support/0.2.805//synced_list.sharp:144:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 146 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 147 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 34   
28 [0x1c]: line: 148 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3015 // <std#synced_list<std.io.task#job>.remove_at>   
31 [0x1f]: line: 149 movl 0   
32 [0x20]:           _ulck   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@2   
37 [0x25]:           jmp @4   
38 [0x26]:           movl 0   
39 [0x27]:           _ulck   
40 [0x28]:           ret   


function: std#synced_list<std.io.task#job>.remove[3014] params(2) in file: lib/support/0.2.805//synced_list.sharp:155:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 157 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           jne 41   
14 [0xe]: line: 158 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 37   
31 [0x1f]: line: 159 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3015 // <std#synced_list<std.io.task#job>.remove_at>   
34 [0x22]: line: 160 movl 0   
35 [0x23]:           _ulck   
36 [0x24]:           ret   
37 [0x25]:           nop   
38 [0x26]:           iaddl 1, fp@3   
40 [0x28]:           jmp @4   
41 [0x29]:           movl 0   
42 [0x2a]:           _ulck   
43 [0x2b]:           ret   


function: std#synced_list<std.io.task#job>.remove_at[3015] params(1) in file: lib/support/0.2.805//synced_list.sharp:166:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 168 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 16   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 169 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:           dup    
20 [0x14]:           pushl 0   
21 [0x15]:           ipushl #1   
22 [0x16]:           call @3017 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
23 [0x17]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:           throw    
25 [0x19]:           nop   
26 [0x1a]: line: 171 movl 0   
27 [0x1b]:           movn #0   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           iaload ebx, adx   
32 [0x20]:           rstore ebx   
33 [0x21]:           movi #2, ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           test ecx, ebx   
37 [0x25]:           jne 68   
38 [0x26]: line: 172 ipushl #1   
39 [0x27]:           movi #0, ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           test ecx, ebx   
43 [0x2b]:           jne 66   
44 [0x2c]: line: 173 movl 0   
45 [0x2d]:           movn #1   
47 [0x2f]:           pushobj   
48 [0x30]:           movi #1, ebx   
50 [0x32]:           popobj2    
51 [0x33]:           movr adx, ebx   
52 [0x34]:           chklen adx   
53 [0x35]:           movnd adx   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           movi #0, ebx   
61 [0x3d]:           popobj2    
62 [0x3e]:           movr adx, ebx   
63 [0x3f]:           chklen adx   
64 [0x40]:           movnd adx   
65 [0x41]:           popobj   
66 [0x42]:           nop   
67 [0x43]:           jmp @126   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movi #1, ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           gt ecx, ebx   
79 [0x4f]:           jne 126   
80 [0x50]: line: 176 movl 0   
81 [0x51]:           movn #0   
83 [0x53]:           movi #0, adx   
85 [0x55]:           iaload ebx, adx   
86 [0x56]:           rstore ebx   
87 [0x57]:           movi #1, ebx   
89 [0x59]:           loadval ecx   
90 [0x5a]:           sub ecx, ebx -> ebx   
91 [0x5b]:           smovr_2 ebx, fp+2   
92 [0x5c]: line: 177 loadl ebx, fp+1   
93 [0x5d]:           smovr_2 ebx, fp+3   
94 [0x5e]:           ipushl #3   
95 [0x5f]:           loadl ebx, fp+2   
96 [0x60]:           loadval ecx   
97 [0x61]:           lt ecx, ebx   
98 [0x62]:           jne 126   
99 [0x63]: line: 178 movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           ipushl #3   
104 [0x68]:           movi #1, ebx   
106 [0x6a]:           loadval ecx   
107 [0x6b]:           add ecx, ebx -> ebx   
108 [0x6c]:           popobj2    
109 [0x6d]:           movr adx, ebx   
110 [0x6e]:           chklen adx   
111 [0x6f]:           movnd adx   
112 [0x70]:           pushobj   
113 [0x71]:           movl 0   
114 [0x72]:           movn #1   
116 [0x74]:           pushobj   
117 [0x75]:           loadl ebx, fp+3   
118 [0x76]:           popobj2    
119 [0x77]:           movr adx, ebx   
120 [0x78]:           chklen adx   
121 [0x79]:           movnd adx   
122 [0x7a]:           popobj   
123 [0x7b]:           iaddl 1, fp@3   
125 [0x7d]:           jmp @94   
126 [0x7e]:           nop   
127 [0x7f]: line: 181 pushl 0   
128 [0x80]:           call @3009 // <std#synced_list<std.io.task#job>.pop_back>   
129 [0x81]:           movl 0   
130 [0x82]:           _ulck   
131 [0x83]:           ret   


function: std#synced_list<std.io.task#job>.to_string[3016] params(0) in file: lib/support/0.2.805//synced_list.sharp:185:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 187 new_class @59 // std#string_builder   
3 [0x3]:           dup    
4 [0x4]:           call @2907 // <std#string_builder.string_builder>   
5 [0x5]:           movsl #0   
6 [0x6]:           smovr_3 fp+1   
7 [0x7]: line: 189 pushl 1   
8 [0x8]:           newstr @56 // [    
9 [0x9]:           call @2903 // <std#string_builder.operator+=>   
10 [0xa]:           pop   
11 [0xb]: line: 190 istorel 0, fp+2   
13 [0xd]:           ipushl #2   
14 [0xe]:           movl 0   
15 [0xf]:           movn #0   
17 [0x11]:           movi #0, adx   
19 [0x13]:           iaload ebx, adx   
20 [0x14]:           loadval ecx   
21 [0x15]:           lt ecx, ebx   
22 [0x16]:           jne 59   
23 [0x17]: line: 191 pushl 1   
24 [0x18]:           movl 0   
25 [0x19]:           movn #1   
27 [0x1b]:           pushobj   
28 [0x1c]:           loadl ebx, fp+2   
29 [0x1d]:           popobj2    
30 [0x1e]:           movr adx, ebx   
31 [0x1f]:           chklen adx   
32 [0x20]:           movnd adx   
33 [0x21]:           pushobj   
34 [0x22]:           call @2899 // <std#string_builder.operator+=>   
35 [0x23]:           pop   
36 [0x24]: line: 193 ipushl #2   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           movi #0, adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           loadval ecx   
49 [0x31]:           lt ecx, ebx   
50 [0x32]:           jne 55   
51 [0x33]: line: 194 pushl 1   
52 [0x34]:           newstr @57 // ,    
53 [0x35]:           call @2903 // <std#string_builder.operator+=>   
54 [0x36]:           pop   
55 [0x37]:           nop   
56 [0x38]:           iaddl 1, fp@2   
58 [0x3a]:           jmp @13   
59 [0x3b]: line: 198 pushl 1   
60 [0x3c]:           newstr @58 //  ]   
61 [0x3d]:           call @2903 // <std#string_builder.operator+=>   
62 [0x3e]:           pop   
63 [0x3f]: line: 199 movl 0   
64 [0x40]:           _ulck   
65 [0x41]:           pushl 1   
66 [0x42]:           call @2880 // <std#string_builder.to_string>   
67 [0x43]:           popobj2    
68 [0x44]:           returnobj   
69 [0x45]:           ret   
70 [0x46]:           movl 0   
71 [0x47]:           _ulck   


function: std#synced_list<std.io.task#job>.out_of_bounds_msg[3017] params(1) in file: lib/support/0.2.805//synced_list.sharp:203:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 204 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @59 // Index:    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           ipushl #1   
5 [0x5]:           call @2853 // <std#string.operator+>   
6 [0x6]:           newstr @60 // , size:    
7 [0x7]:           call @2834 // <std#string.operator+>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2853 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


std#loopable<var>.get_elements[3018] params(0) in file: lib/support/0.2.805//loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<var>.loopable[3019] params(0) in file: lib/support/0.2.805//loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#list<var>.list[3020] params(0) in file: lib/support/0.2.805//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          newarry ebx   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<var>.list[3021] params(1) in file: lib/support/0.2.805//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          newarry ebx   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: std#list<var>.empty[3022] params(0) in file: lib/support/0.2.805//list.sharp:21:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<var>.set_compact[3023] params(1) in file: lib/support/0.2.805//list.sharp:23:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 24 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<var>.get_elements[3024] params(0) in file: lib/support/0.2.805//list.sharp:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 21   
14 [0xe]:          movl 0   
15 [0xf]:          _ulck   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @39   
21 [0x15]: line: 30 movl 0   
22 [0x16]:          _ulck   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @1675 // <std.io#__srt_global.copy>   
37 [0x25]:          return_val ebx   
38 [0x26]:          ret   
39 [0x27]:          nop   
40 [0x28]:          movl 0   
41 [0x29]:          _ulck   


overload function: std#list<var>.operator[[3025] params(1) in file: lib/support/0.2.805//list.sharp:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 14   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 36 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:          dup    
18 [0x12]:          pushl 0   
19 [0x13]:          ipushl #1   
20 [0x14]:          call @3041 // <std#list<var>.out_of_bounds_msg>   
21 [0x15]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 37 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          return_val ebx   
34 [0x22]:          ret   


function: std#list<var>.at[3026] params(1) in file: lib/support/0.2.805//list.sharp:40:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 41 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 14   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 42 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:          dup    
18 [0x12]:          pushl 0   
19 [0x13]:          ipushl #1   
20 [0x14]:          call @3041 // <std#list<var>.out_of_bounds_msg>   
21 [0x15]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 43 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          return_val ebx   
34 [0x22]:          ret   


function: std#list<var>.last[3027] params(0) in file: lib/support/0.2.805//list.sharp:46:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 47 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3026 // <std#list<var>.at>   
14 [0xe]:          loadval ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: std#list<var>.put[3028] params(2) in file: lib/support/0.2.805//list.sharp:50:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 51 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 14   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          jne 23   
16 [0x10]: line: 52 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:          dup    
18 [0x12]:          pushl 0   
19 [0x13]:          ipushl #1   
20 [0x14]:          call @3041 // <std#list<var>.out_of_bounds_msg>   
21 [0x15]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 54 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          smovr_2 ebx, fp+3   
34 [0x22]: line: 55 ipushl #2   
35 [0x23]:          movl 0   
36 [0x24]:          movn #1   
38 [0x26]:          pushobj   
39 [0x27]:          loadl ebx, fp+1   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]: line: 56 loadl ebx, fp+3   
46 [0x2e]:          return_val ebx   
47 [0x2f]:          ret   


function: std#list<var>.expand[3029] params(0) in file: lib/support/0.2.805//list.sharp:59:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 61 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @1655 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 63 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @1655 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<var>.clear[3030] params(0) in file: lib/support/0.2.805//list.sharp:66:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 67 movi #10, ebx   
2 [0x2]:          newarry ebx   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 68 movi #0, ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]:          ret   


function: std#list<var>.add_all[3031] params(1) in file: lib/support/0.2.805//list.sharp:71:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 72 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @1675 // <std.io#__srt_global.copy>   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          popobj   
18 [0x12]: line: 73 movl 1   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          ret   


function: std#list<var>.add[3032] params(1) in file: lib/support/0.2.805//list.sharp:76:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          jne 16   
14 [0xe]: line: 78 pushl 0   
15 [0xf]:          call @3029 // <std#list<var>.expand>   
16 [0x10]:          nop   
17 [0x11]: line: 79 ipushl #1   
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          pushobj   
22 [0x16]:          movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          movr egx, ebx   
29 [0x1d]:          inc ebx   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]:          movr ebx, egx   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          loadval ebx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          ret   


function: std#list<var>.indexof[3033] params(1) in file: lib/support/0.2.805//list.sharp:82:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 83 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          jne 32   
12 [0xc]: line: 84 ipushl #1   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          pushobj   
17 [0x11]:          loadl ebx, fp+2   
18 [0x12]:          popobj2    
19 [0x13]:          movr adx, ebx   
20 [0x14]:          chklen adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          loadval ecx   
23 [0x17]:          test ecx, ebx   
24 [0x18]:          jne 28   
25 [0x19]: line: 85 loadl ebx, fp+2   
26 [0x1a]:          return_val ebx   
27 [0x1b]:          ret   
28 [0x1c]:          nop   
29 [0x1d]:          iaddl 1, fp@2   
31 [0x1f]:          jmp @2   
32 [0x20]: line: 89 movi #-1, ebx   
34 [0x22]:          return_val ebx   
35 [0x23]:          ret   


function: std#list<var>.pop_back[3034] params(0) in file: lib/support/0.2.805//list.sharp:92:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gt ecx, ebx   
11 [0xb]:          jne 36   
12 [0xc]: line: 94 istorel 0, fp+1   
14 [0xe]: line: 95 ipushl #1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          movr egx, ebx   
26 [0x1a]:          dec ebx   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          movr ebx, egx   
31 [0x1f]:          popobj2    
32 [0x20]:          movr adx, ebx   
33 [0x21]:          chklen adx   
34 [0x22]:          loadval ebx   
35 [0x23]:          rmov adx, ebx   
36 [0x24]:          nop   
37 [0x25]:          ret   


function: std#list<var>.size[3035] params(0) in file: lib/support/0.2.805//list.sharp:99:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#list<var>.insert[3036] params(2) in file: lib/support/0.2.805//list.sharp:101:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 102 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 14   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           jne 23   
16 [0x10]: line: 103 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:           dup    
18 [0x12]:           pushl 0   
19 [0x13]:           ipushl #1   
20 [0x14]:           call @3041 // <std#list<var>.out_of_bounds_msg>   
21 [0x15]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:           throw    
23 [0x17]:           nop   
24 [0x18]: line: 105 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           movi #0, adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movi #0, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           test ecx, ebx   
35 [0x23]:           jne 40   
36 [0x24]: line: 106 pushl 0   
37 [0x25]:           ipushl #2   
38 [0x26]:           call @3032 // <std#list<var>.add>   
39 [0x27]:           jmp @125   
40 [0x28]: line: 108 movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           movi #0, adx   
45 [0x2d]:           iaload ebx, adx   
46 [0x2e]:           rstore ebx   
47 [0x2f]:           movl 0   
48 [0x30]:           movn #1   
50 [0x32]:           sizeof ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           gte ecx, ebx   
53 [0x35]:           jne 56   
54 [0x36]: line: 109 pushl 0   
55 [0x37]:           call @3029 // <std#list<var>.expand>   
56 [0x38]:           nop   
57 [0x39]: line: 110 movl 0   
58 [0x3a]:           movn #0   
60 [0x3c]:           movi #0, adx   
62 [0x3e]:           iaload ebx, adx   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           movi #0, adx   
67 [0x43]:           rmov adx, ebx   
68 [0x44]: line: 111 movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movi #1, ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           sub ecx, ebx -> ebx   
79 [0x4f]:           smovr_2 ebx, fp+3   
80 [0x50]:           ipushl #3   
81 [0x51]:           loadl ebx, fp+1   
82 [0x52]:           loadval ecx   
83 [0x53]:           gt ecx, ebx   
84 [0x54]:           jne 114   
85 [0x55]: line: 112 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           sub ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           iaload ebx, adx   
98 [0x62]:           rstore ebx   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           loadval ebx   
108 [0x6c]:           rmov adx, ebx   
109 [0x6d]:           loadl ebx, fp+3   
110 [0x6e]:           movr egx, ebx   
111 [0x6f]:           dec ebx   
112 [0x70]:           smovr_2 ebx, fp+3   
113 [0x71]:           jmp @80   
114 [0x72]: line: 113 ipushl #2   
115 [0x73]:           movl 0   
116 [0x74]:           movn #1   
118 [0x76]:           pushobj   
119 [0x77]:           loadl ebx, fp+1   
120 [0x78]:           popobj2    
121 [0x79]:           movr adx, ebx   
122 [0x7a]:           chklen adx   
123 [0x7b]:           loadval ebx   
124 [0x7c]:           rmov adx, ebx   
125 [0x7d]:           nop   
126 [0x7e]:           ret   


function: std#list<var>.remove[3037] params(1) in file: lib/support/0.2.805//list.sharp:118:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 119 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           jne 33   
12 [0xc]: line: 120 ipushl #1   
13 [0xd]:           movl 0   
14 [0xe]:           movn #1   
16 [0x10]:           pushobj   
17 [0x11]:           loadl ebx, fp+2   
18 [0x12]:           popobj2    
19 [0x13]:           movr adx, ebx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           test ecx, ebx   
24 [0x18]:           jne 29   
25 [0x19]: line: 121 pushl 0   
26 [0x1a]:           ipushl #2   
27 [0x1b]:           call @3039 // <std#list<var>.remove_at>   
28 [0x1c]: line: 122 ret   
29 [0x1d]:           nop   
30 [0x1e]:           iaddl 1, fp@2   
32 [0x20]:           jmp @2   
33 [0x21]:           ret   


function: std#list<var>.remove[3038] params(2) in file: lib/support/0.2.805//list.sharp:127:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 128 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           jne 37   
12 [0xc]: line: 129 ipushl #2   
13 [0xd]:           ipushl #1   
14 [0xe]:           movl 0   
15 [0xf]:           movn #1   
17 [0x11]:           pushobj   
18 [0x12]:           loadl ebx, fp+3   
19 [0x13]:           popobj2    
20 [0x14]:           movr adx, ebx   
21 [0x15]:           chklen adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           rstore ebx   
24 [0x18]:           smov ebx, sp+[-2]   
25 [0x19]:           calld ebx   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 130 pushl 0   
30 [0x1e]:           ipushl #3   
31 [0x1f]:           call @3039 // <std#list<var>.remove_at>   
32 [0x20]: line: 131 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@3   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: std#list<var>.remove_at[3039] params(1) in file: lib/support/0.2.805//list.sharp:136:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 137 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 14   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           jne 23   
16 [0x10]: line: 138 new_class @7 // std#out_of_bounds_exception   
17 [0x11]:           dup    
18 [0x12]:           pushl 0   
19 [0x13]:           ipushl #1   
20 [0x14]:           call @3041 // <std#list<var>.out_of_bounds_msg>   
21 [0x15]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
22 [0x16]:           throw    
23 [0x17]:           nop   
24 [0x18]: line: 140 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           movi #0, adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movi #2, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           test ecx, ebx   
35 [0x23]:           jne 66   
36 [0x24]: line: 141 ipushl #1   
37 [0x25]:           movi #0, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           test ecx, ebx   
41 [0x29]:           jne 64   
42 [0x2a]: line: 142 movl 0   
43 [0x2b]:           movn #1   
45 [0x2d]:           pushobj   
46 [0x2e]:           movi #1, ebx   
48 [0x30]:           popobj2    
49 [0x31]:           movr adx, ebx   
50 [0x32]:           chklen adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           rstore ebx   
53 [0x35]:           movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           pushobj   
57 [0x39]:           movi #0, ebx   
59 [0x3b]:           popobj2    
60 [0x3c]:           movr adx, ebx   
61 [0x3d]:           chklen adx   
62 [0x3e]:           loadval ebx   
63 [0x3f]:           rmov adx, ebx   
64 [0x40]:           nop   
65 [0x41]:           jmp @124   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           movi #1, ebx   
75 [0x4b]:           loadval ecx   
76 [0x4c]:           gt ecx, ebx   
77 [0x4d]:           jne 124   
78 [0x4e]: line: 145 movl 0   
79 [0x4f]:           movn #0   
81 [0x51]:           movi #0, adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           rstore ebx   
85 [0x55]:           movi #1, ebx   
87 [0x57]:           loadval ecx   
88 [0x58]:           sub ecx, ebx -> ebx   
89 [0x59]:           smovr_2 ebx, fp+2   
90 [0x5a]: line: 146 loadl ebx, fp+1   
91 [0x5b]:           smovr_2 ebx, fp+3   
92 [0x5c]:           ipushl #3   
93 [0x5d]:           loadl ebx, fp+2   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           lt ecx, ebx   
96 [0x60]:           jne 124   
97 [0x61]: line: 147 movl 0   
98 [0x62]:           movn #1   
100 [0x64]:           pushobj   
101 [0x65]:           ipushl #3   
102 [0x66]:           movi #1, ebx   
104 [0x68]:           loadval ecx   
105 [0x69]:           add ecx, ebx -> ebx   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           iaload ebx, adx   
110 [0x6e]:           rstore ebx   
111 [0x6f]:           movl 0   
112 [0x70]:           movn #1   
114 [0x72]:           pushobj   
115 [0x73]:           loadl ebx, fp+3   
116 [0x74]:           popobj2    
117 [0x75]:           movr adx, ebx   
118 [0x76]:           chklen adx   
119 [0x77]:           loadval ebx   
120 [0x78]:           rmov adx, ebx   
121 [0x79]:           iaddl 1, fp@3   
123 [0x7b]:           jmp @92   
124 [0x7c]:           nop   
125 [0x7d]: line: 150 pushl 0   
126 [0x7e]:           call @3034 // <std#list<var>.pop_back>   
127 [0x7f]:           ret   


function: std#list<var>.to_string[3040] params(0) in file: lib/support/0.2.805//list.sharp:153:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 154 new_class @59 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           call @2907 // <std#string_builder.string_builder>   
3 [0x3]:           movsl #0   
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 156 pushl 1   
6 [0x6]:           newstr @56 // [    
7 [0x7]:           call @2903 // <std#string_builder.operator+=>   
8 [0x8]:           pop   
9 [0x9]: line: 157 istorel 0, fp+2   
11 [0xb]:           ipushl #2   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           loadval ecx   
19 [0x13]:           lt ecx, ebx   
20 [0x14]:           jne 57   
21 [0x15]: line: 158 pushl 1   
22 [0x16]:           movl 0   
23 [0x17]:           movn #1   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           call @2898 // <std#string_builder.operator+=>   
33 [0x21]:           pop   
34 [0x22]: line: 160 ipushl #2   
35 [0x23]:           movi #1, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           add ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           movi #0, adx   
45 [0x2d]:           iaload ebx, adx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           lt ecx, ebx   
48 [0x30]:           jne 53   
49 [0x31]: line: 161 pushl 1   
50 [0x32]:           newstr @57 // ,    
51 [0x33]:           call @2903 // <std#string_builder.operator+=>   
52 [0x34]:           pop   
53 [0x35]:           nop   
54 [0x36]:           iaddl 1, fp@2   
56 [0x38]:           jmp @11   
57 [0x39]: line: 165 pushl 1   
58 [0x3a]:           newstr @58 //  ]   
59 [0x3b]:           call @2903 // <std#string_builder.operator+=>   
60 [0x3c]:           pop   
61 [0x3d]: line: 166 pushl 1   
62 [0x3e]:           call @2880 // <std#string_builder.to_string>   
63 [0x3f]:           popobj2    
64 [0x40]:           returnobj   
65 [0x41]:           ret   


function: std#list<var>.out_of_bounds_msg[3041] params(1) in file: lib/support/0.2.805//list.sharp:169:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 170 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @59 // Index:    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           ipushl #1   
5 [0x5]:           call @2853 // <std#string.operator+>   
6 [0x6]:           newstr @60 // , size:    
7 [0x7]:           call @2834 // <std#string.operator+>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2853 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#_nil_.set_instance[3042] params(1) in file: lib/support/0.2.805//nil.sharp:11:44: note:  
		    static instance : _nil_ = new _nil_ { };
		                                           ^

0 [0x0]:         ret   


function: std.reflect#reflect.set_reflect_obj[3043] params(1) in file: lib/support/0.2.805//reflect//reflection.sharp:5:35: note:  
		        get { return reflect_obj; }
		                                  ^

0 [0x0]:         ret   


function: std.reflect#reflect.get_reflect_obj[3044] params(0) in file: lib/support/0.2.805//reflect//reflection.sharp:4:25: note:  
		    reflect_obj : object;
		                        ^

0 [0x0]: line: 5 movl 0   
1 [0x1]:         movn #0   
3 [0x3]:         returnobj   
4 [0x4]:         ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[3045] params(2) in file: lib/support/0.2.805//hashmap.sharp:126:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 127 pushl 1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           popobj   
7 [0x7]: line: 128 pushl 2   
8 [0x8]:           movl 0   
9 [0x9]:           movn #1   
11 [0xb]:           popobj   
12 [0xc]:           ret   


function: std.io.task#entry<std.io#thread,std.io.task#job_controller>.to_string[3046] params(0) in file: lib/support/0.2.805//hashmap.sharp:131:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 132 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @61 // key    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @2835 // <std#string.operator+>   
9 [0x9]:           newstr @62 //  value    
10 [0xa]:           call @2834 // <std#string.operator+>   
11 [0xb]:           movl 0   
12 [0xc]:           movn #1   
14 [0xe]:           pushobj   
15 [0xf]:           call @2835 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[3047] params(0) in file: lib/support/0.2.805//hashmap.sharp:121:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[3048] params(2) in file: lib/support/0.2.805//hashmap.sharp:126:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 127 pushl 1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           popobj   
7 [0x7]: line: 128 pushl 2   
8 [0x8]:           movl 0   
9 [0x9]:           movn #1   
11 [0xb]:           popobj   
12 [0xc]:           ret   


function: std.io#entry<std#int,std.io#thread>.to_string[3049] params(0) in file: lib/support/0.2.805//hashmap.sharp:131:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 132 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @61 // key    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @2835 // <std#string.operator+>   
9 [0x9]:           newstr @62 //  value    
10 [0xa]:           call @2834 // <std#string.operator+>   
11 [0xb]:           movl 0   
12 [0xc]:           movn #1   
14 [0xe]:           pushobj   
15 [0xf]:           call @2835 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[3050] params(0) in file: lib/support/0.2.805//hashmap.sharp:121:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#synced_list<std.io#thread>.synced_list[3051] params(0) in file: lib/support/0.2.805//synced_list.sharp:13:16: note:  
		    synced_list() {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io#thread[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#synced_list<std.io#thread>.synced_list[3052] params(1) in file: lib/support/0.2.805//synced_list.sharp:17:16: note:  
		    synced_list(starting_capacity: var) {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1835 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: std#synced_list<std.io#thread>.set_compact[3053] params(1) in file: lib/support/0.2.805//synced_list.sharp:21:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 23 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #2   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          _ulck   
12 [0xc]:          ret   


function: std#synced_list<std.io#thread>.get_elements[3054] params(0) in file: lib/support/0.2.805//synced_list.sharp:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 21   
14 [0xe]:          movl 0   
15 [0xf]:          _ulck   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @40   
21 [0x15]: line: 30 movl 0   
22 [0x16]:          _ulck   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @1674 // <std.io#__srt_global.copy>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   
40 [0x28]:          nop   
41 [0x29]:          movl 0   
42 [0x2a]:          _ulck   


overload function: std#synced_list<std.io#thread>.operator[[3055] params(1) in file: lib/support/0.2.805//synced_list.sharp:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 36 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 16   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          jne 25   
18 [0x12]: line: 37 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:          dup    
20 [0x14]:          pushl 0   
21 [0x15]:          ipushl #1   
22 [0x16]:          call @3072 // <std#synced_list<std.io#thread>.out_of_bounds_msg>   
23 [0x17]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:          throw    
25 [0x19]:          nop   
26 [0x1a]: line: 38 movl 0   
27 [0x1b]:          _ulck   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          loadl ebx, fp+1   
33 [0x21]:          popobj2    
34 [0x22]:          movr adx, ebx   
35 [0x23]:          chklen adx   
36 [0x24]:          movnd adx   
37 [0x25]:          returnobj   
38 [0x26]:          ret   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   


function: std#synced_list<std.io#thread>.at[3056] params(1) in file: lib/support/0.2.805//synced_list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 44 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 16   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          jne 25   
18 [0x12]: line: 45 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:          dup    
20 [0x14]:          pushl 0   
21 [0x15]:          ipushl #1   
22 [0x16]:          call @3072 // <std#synced_list<std.io#thread>.out_of_bounds_msg>   
23 [0x17]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:          throw    
25 [0x19]:          nop   
26 [0x1a]: line: 46 movl 0   
27 [0x1b]:          _ulck   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          loadl ebx, fp+1   
33 [0x21]:          popobj2    
34 [0x22]:          movr adx, ebx   
35 [0x23]:          chklen adx   
36 [0x24]:          movnd adx   
37 [0x25]:          returnobj   
38 [0x26]:          ret   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   


function: std#synced_list<std.io#thread>.last[3057] params(0) in file: lib/support/0.2.805//synced_list.sharp:50:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 51 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3056 // <std#synced_list<std.io#thread>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#synced_list<std.io#thread>.put[3058] params(2) in file: lib/support/0.2.805//synced_list.sharp:54:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 16   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          jne 25   
18 [0x12]: line: 57 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:          dup    
20 [0x14]:          pushl 0   
21 [0x15]:          ipushl #1   
22 [0x16]:          call @3072 // <std#synced_list<std.io#thread>.out_of_bounds_msg>   
23 [0x17]:          call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:          throw    
25 [0x19]:          nop   
26 [0x1a]: line: 59 movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          pushobj   
30 [0x1e]:          loadl ebx, fp+1   
31 [0x1f]:          popobj2    
32 [0x20]:          movr adx, ebx   
33 [0x21]:          chklen adx   
34 [0x22]:          movnd adx   
35 [0x23]:          smovr_3 fp+3   
36 [0x24]: line: 60 pushl 2   
37 [0x25]:          movl 0   
38 [0x26]:          movn #1   
40 [0x28]:          pushobj   
41 [0x29]:          loadl ebx, fp+1   
42 [0x2a]:          popobj2    
43 [0x2b]:          movr adx, ebx   
44 [0x2c]:          chklen adx   
45 [0x2d]:          movnd adx   
46 [0x2e]:          popobj   
47 [0x2f]: line: 61 movl 0   
48 [0x30]:          _ulck   
49 [0x31]:          movl 3   
50 [0x32]:          returnobj   
51 [0x33]:          ret   
52 [0x34]:          movl 0   
53 [0x35]:          _ulck   


function: std#synced_list<std.io#thread>.expand[3059] params(0) in file: lib/support/0.2.805//synced_list.sharp:65:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 67 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @1654 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 69 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @1654 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#synced_list<std.io#thread>.clear[3060] params(0) in file: lib/support/0.2.805//synced_list.sharp:72:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io#thread[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]: line: 75 movi #0, ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]:          movl 0   
18 [0x12]:          _ulck   
19 [0x13]:          ret   


function: std#synced_list<std.io#thread>.add_all[3061] params(1) in file: lib/support/0.2.805//synced_list.sharp:79:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 81 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @1674 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #25, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 82 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movl 0   
38 [0x26]:          _ulck   
39 [0x27]:          ret   


function: std#synced_list<std.io#thread>.add[3062] params(1) in file: lib/support/0.2.805//synced_list.sharp:86:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 88 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          sizeof ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 89 pushl 0   
17 [0x11]:          call @3059 // <std#synced_list<std.io#thread>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 90 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          movl 0   
42 [0x2a]:          _ulck   
43 [0x2b]:          ret   


function: std#synced_list<std.io#thread>.indexof[3063] params(1) in file: lib/support/0.2.805//synced_list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 96 istorel 0, fp+2   
4 [0x4]:          ipushl #2   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          lt ecx, ebx   
13 [0xd]:          jne 38   
14 [0xe]: line: 97 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          call @1788 // <std.io#thread.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 34   
29 [0x1d]: line: 98 movl 0   
30 [0x1e]:          _ulck   
31 [0x1f]:          loadl ebx, fp+2   
32 [0x20]:          return_val ebx   
33 [0x21]:          ret   
34 [0x22]:          nop   
35 [0x23]:          iaddl 1, fp@2   
37 [0x25]:          jmp @4   
38 [0x26]: line: 102 movl 0   
39 [0x27]:           _ulck   
40 [0x28]:           movi #-1, ebx   
42 [0x2a]:           return_val ebx   
43 [0x2b]:           ret   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   


function: std#synced_list<std.io#thread>.pop_back[3064] params(0) in file: lib/support/0.2.805//synced_list.sharp:106:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           jne 36   
12 [0xc]: line: 108 movl 1   
13 [0xd]:           del   
14 [0xe]: line: 109 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           movi #0, adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           movr egx, ebx   
26 [0x1a]:           dec ebx   
27 [0x1b]:           movi #0, adx   
29 [0x1d]:           rmov adx, ebx   
30 [0x1e]:           movr ebx, egx   
31 [0x1f]:           popobj2    
32 [0x20]:           movr adx, ebx   
33 [0x21]:           chklen adx   
34 [0x22]:           movnd adx   
35 [0x23]:           popobj   
36 [0x24]:           nop   
37 [0x25]:           ret   


function: std#synced_list<std.io#thread>.size[3065] params(0) in file: lib/support/0.2.805//synced_list.sharp:113:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 115 movl 0   
3 [0x3]:           _ulck   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   
12 [0xc]:           movl 0   
13 [0xd]:           _ulck   


function: std#synced_list<std.io#thread>.empty[3066] params(0) in file: lib/support/0.2.805//synced_list.sharp:119:8: note:  
		    def empty() : var {
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 121 movl 0   
3 [0x3]:           _ulck   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   
17 [0x11]:           movl 0   
18 [0x12]:           _ulck   


function: std#synced_list<std.io#thread>.insert[3067] params(2) in file: lib/support/0.2.805//synced_list.sharp:125:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 127 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 16   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 128 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:           dup    
20 [0x14]:           pushl 0   
21 [0x15]:           ipushl #1   
22 [0x16]:           call @3072 // <std#synced_list<std.io#thread>.out_of_bounds_msg>   
23 [0x17]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:           throw    
25 [0x19]:           nop   
26 [0x1a]: line: 130 movl 0   
27 [0x1b]:           movn #0   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           iaload ebx, adx   
32 [0x20]:           rstore ebx   
33 [0x21]:           movi #0, ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           test ecx, ebx   
37 [0x25]:           jne 42   
38 [0x26]: line: 131 pushl 0   
39 [0x27]:           pushl 2   
40 [0x28]:           call @3062 // <std#synced_list<std.io#thread>.add>   
41 [0x29]:           jmp @127   
42 [0x2a]: line: 133 movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           movi #0, adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movl 0   
50 [0x32]:           movn #1   
52 [0x34]:           sizeof ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           gte ecx, ebx   
55 [0x37]:           jne 58   
56 [0x38]: line: 134 pushl 0   
57 [0x39]:           call @3059 // <std#synced_list<std.io#thread>.expand>   
58 [0x3a]:           nop   
59 [0x3b]: line: 135 movl 0   
60 [0x3c]:           movn #0   
62 [0x3e]:           movi #0, adx   
64 [0x40]:           iaload ebx, adx   
65 [0x41]:           movr egx, ebx   
66 [0x42]:           inc ebx   
67 [0x43]:           movi #0, adx   
69 [0x45]:           rmov adx, ebx   
70 [0x46]: line: 136 movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           movi #0, adx   
75 [0x4b]:           iaload ebx, adx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           movi #1, ebx   
79 [0x4f]:           loadval ecx   
80 [0x50]:           sub ecx, ebx -> ebx   
81 [0x51]:           smovr_2 ebx, fp+3   
82 [0x52]:           ipushl #3   
83 [0x53]:           loadl ebx, fp+1   
84 [0x54]:           loadval ecx   
85 [0x55]:           gt ecx, ebx   
86 [0x56]:           jne 116   
87 [0x57]: line: 137 movl 0   
88 [0x58]:           movn #1   
90 [0x5a]:           pushobj   
91 [0x5b]:           ipushl #3   
92 [0x5c]:           movi #1, ebx   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           sub ecx, ebx -> ebx   
96 [0x60]:           popobj2    
97 [0x61]:           movr adx, ebx   
98 [0x62]:           chklen adx   
99 [0x63]:           movnd adx   
100 [0x64]:           pushobj   
101 [0x65]:           movl 0   
102 [0x66]:           movn #1   
104 [0x68]:           pushobj   
105 [0x69]:           loadl ebx, fp+3   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           popobj   
111 [0x6f]:           loadl ebx, fp+3   
112 [0x70]:           movr egx, ebx   
113 [0x71]:           dec ebx   
114 [0x72]:           smovr_2 ebx, fp+3   
115 [0x73]:           jmp @82   
116 [0x74]: line: 138 pushl 2   
117 [0x75]:           movl 0   
118 [0x76]:           movn #1   
120 [0x78]:           pushobj   
121 [0x79]:           loadl ebx, fp+1   
122 [0x7a]:           popobj2    
123 [0x7b]:           movr adx, ebx   
124 [0x7c]:           chklen adx   
125 [0x7d]:           movnd adx   
126 [0x7e]:           popobj   
127 [0x7f]:           nop   
128 [0x80]:           movl 0   
129 [0x81]:           _ulck   
130 [0x82]:           ret   


function: std#synced_list<std.io#thread>.remove[3068] params(1) in file: lib/support/0.2.805//synced_list.sharp:144:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 146 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 147 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           call @1788 // <std.io#thread.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 35   
29 [0x1d]: line: 148 pushl 0   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @3070 // <std#synced_list<std.io#thread>.remove_at>   
32 [0x20]: line: 149 movl 0   
33 [0x21]:           _ulck   
34 [0x22]:           ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@2   
38 [0x26]:           jmp @4   
39 [0x27]:           movl 0   
40 [0x28]:           _ulck   
41 [0x29]:           ret   


function: std#synced_list<std.io#thread>.remove[3069] params(2) in file: lib/support/0.2.805//synced_list.sharp:155:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 157 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           jne 41   
14 [0xe]: line: 158 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 37   
31 [0x1f]: line: 159 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3070 // <std#synced_list<std.io#thread>.remove_at>   
34 [0x22]: line: 160 movl 0   
35 [0x23]:           _ulck   
36 [0x24]:           ret   
37 [0x25]:           nop   
38 [0x26]:           iaddl 1, fp@3   
40 [0x28]:           jmp @4   
41 [0x29]:           movl 0   
42 [0x2a]:           _ulck   
43 [0x2b]:           ret   


function: std#synced_list<std.io#thread>.remove_at[3070] params(1) in file: lib/support/0.2.805//synced_list.sharp:166:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 168 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 16   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 169 new_class @7 // std#out_of_bounds_exception   
19 [0x13]:           dup    
20 [0x14]:           pushl 0   
21 [0x15]:           ipushl #1   
22 [0x16]:           call @3072 // <std#synced_list<std.io#thread>.out_of_bounds_msg>   
23 [0x17]:           call @1623 // <std#out_of_bounds_exception.out_of_bounds_exception>   
24 [0x18]:           throw    
25 [0x19]:           nop   
26 [0x1a]: line: 171 movl 0   
27 [0x1b]:           movn #0   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           iaload ebx, adx   
32 [0x20]:           rstore ebx   
33 [0x21]:           movi #2, ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           test ecx, ebx   
37 [0x25]:           jne 68   
38 [0x26]: line: 172 ipushl #1   
39 [0x27]:           movi #0, ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           test ecx, ebx   
43 [0x2b]:           jne 66   
44 [0x2c]: line: 173 movl 0   
45 [0x2d]:           movn #1   
47 [0x2f]:           pushobj   
48 [0x30]:           movi #1, ebx   
50 [0x32]:           popobj2    
51 [0x33]:           movr adx, ebx   
52 [0x34]:           chklen adx   
53 [0x35]:           movnd adx   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           movi #0, ebx   
61 [0x3d]:           popobj2    
62 [0x3e]:           movr adx, ebx   
63 [0x3f]:           chklen adx   
64 [0x40]:           movnd adx   
65 [0x41]:           popobj   
66 [0x42]:           nop   
67 [0x43]:           jmp @126   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movi #1, ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           gt ecx, ebx   
79 [0x4f]:           jne 126   
80 [0x50]: line: 176 movl 0   
81 [0x51]:           movn #0   
83 [0x53]:           movi #0, adx   
85 [0x55]:           iaload ebx, adx   
86 [0x56]:           rstore ebx   
87 [0x57]:           movi #1, ebx   
89 [0x59]:           loadval ecx   
90 [0x5a]:           sub ecx, ebx -> ebx   
91 [0x5b]:           smovr_2 ebx, fp+2   
92 [0x5c]: line: 177 loadl ebx, fp+1   
93 [0x5d]:           smovr_2 ebx, fp+3   
94 [0x5e]:           ipushl #3   
95 [0x5f]:           loadl ebx, fp+2   
96 [0x60]:           loadval ecx   
97 [0x61]:           lt ecx, ebx   
98 [0x62]:           jne 126   
99 [0x63]: line: 178 movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           ipushl #3   
104 [0x68]:           movi #1, ebx   
106 [0x6a]:           loadval ecx   
107 [0x6b]:           add ecx, ebx -> ebx   
108 [0x6c]:           popobj2    
109 [0x6d]:           movr adx, ebx   
110 [0x6e]:           chklen adx   
111 [0x6f]:           movnd adx   
112 [0x70]:           pushobj   
113 [0x71]:           movl 0   
114 [0x72]:           movn #1   
116 [0x74]:           pushobj   
117 [0x75]:           loadl ebx, fp+3   
118 [0x76]:           popobj2    
119 [0x77]:           movr adx, ebx   
120 [0x78]:           chklen adx   
121 [0x79]:           movnd adx   
122 [0x7a]:           popobj   
123 [0x7b]:           iaddl 1, fp@3   
125 [0x7d]:           jmp @94   
126 [0x7e]:           nop   
127 [0x7f]: line: 181 pushl 0   
128 [0x80]:           call @3064 // <std#synced_list<std.io#thread>.pop_back>   
129 [0x81]:           movl 0   
130 [0x82]:           _ulck   
131 [0x83]:           ret   


function: std#synced_list<std.io#thread>.to_string[3071] params(0) in file: lib/support/0.2.805//synced_list.sharp:185:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 187 new_class @59 // std#string_builder   
3 [0x3]:           dup    
4 [0x4]:           call @2907 // <std#string_builder.string_builder>   
5 [0x5]:           movsl #0   
6 [0x6]:           smovr_3 fp+1   
7 [0x7]: line: 189 pushl 1   
8 [0x8]:           newstr @56 // [    
9 [0x9]:           call @2903 // <std#string_builder.operator+=>   
10 [0xa]:           pop   
11 [0xb]: line: 190 istorel 0, fp+2   
13 [0xd]:           ipushl #2   
14 [0xe]:           movl 0   
15 [0xf]:           movn #0   
17 [0x11]:           movi #0, adx   
19 [0x13]:           iaload ebx, adx   
20 [0x14]:           loadval ecx   
21 [0x15]:           lt ecx, ebx   
22 [0x16]:           jne 59   
23 [0x17]: line: 191 pushl 1   
24 [0x18]:           movl 0   
25 [0x19]:           movn #1   
27 [0x1b]:           pushobj   
28 [0x1c]:           loadl ebx, fp+2   
29 [0x1d]:           popobj2    
30 [0x1e]:           movr adx, ebx   
31 [0x1f]:           chklen adx   
32 [0x20]:           movnd adx   
33 [0x21]:           pushobj   
34 [0x22]:           call @2899 // <std#string_builder.operator+=>   
35 [0x23]:           pop   
36 [0x24]: line: 193 ipushl #2   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           movi #0, adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           loadval ecx   
49 [0x31]:           lt ecx, ebx   
50 [0x32]:           jne 55   
51 [0x33]: line: 194 pushl 1   
52 [0x34]:           newstr @57 // ,    
53 [0x35]:           call @2903 // <std#string_builder.operator+=>   
54 [0x36]:           pop   
55 [0x37]:           nop   
56 [0x38]:           iaddl 1, fp@2   
58 [0x3a]:           jmp @13   
59 [0x3b]: line: 198 pushl 1   
60 [0x3c]:           newstr @58 //  ]   
61 [0x3d]:           call @2903 // <std#string_builder.operator+=>   
62 [0x3e]:           pop   
63 [0x3f]: line: 199 movl 0   
64 [0x40]:           _ulck   
65 [0x41]:           pushl 1   
66 [0x42]:           call @2880 // <std#string_builder.to_string>   
67 [0x43]:           popobj2    
68 [0x44]:           returnobj   
69 [0x45]:           ret   
70 [0x46]:           movl 0   
71 [0x47]:           _ulck   


function: std#synced_list<std.io#thread>.out_of_bounds_msg[3072] params(1) in file: lib/support/0.2.805//synced_list.sharp:203:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 204 new_class @58 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @59 // Index:    
3 [0x3]:           call @2823 // <std#string.string>   
4 [0x4]:           ipushl #1   
5 [0x5]:           call @2853 // <std#string.operator+>   
6 [0x6]:           newstr @60 // , size:    
7 [0x7]:           call @2834 // <std#string.operator+>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2853 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: app#__srt_global.$03internal_static_init[3073] params(0) in file: tests/syntax.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         istore 0   
2 [0x2]:         movg @0 // @app#__srt_global   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std.io#__srt_global.$03internal_static_init[3074] params(0) in file: lib/support/0.2.805//io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @32 // std#_object_   
1 [0x1]:         dup    
2 [0x2]:         call @1835 // <std#_object_._object_>   
3 [0x3]:         movg @16 // @std.io#__srt_global   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std.io.task#job.$03internal_static_init[3075] params(0) in file: lib/support/0.2.805//io//task//job.sharp:5:13: note:  
		public class job {
		            ^

0 [0x0]:         istore 0   
2 [0x2]:         movg @19 // @std.io.task#job   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std.io.task#__srt_global.$03internal_static_init[3076] params(0) in file: lib/support/0.2.805//io//task//task.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @22 // std.io.task#job_master   
1 [0x1]:         dup    
2 [0x2]:         call @1727 // <std.io.task#job_master.job_master>   
3 [0x3]:         movg @17 // @std.io.task#__srt_global   
4 [0x4]:         movn #2   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std.io#thread_group.$03internal_static_init[3077] params(0) in file: lib/support/0.2.805//io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @26 // std.io#thread_group   
1 [0x1]:         dup    
2 [0x2]:         new_class @58 // std#string   
3 [0x3]:         dup    
4 [0x4]:         newstr @2 // main   
5 [0x5]:         call @2823 // <std#string.string>   
6 [0x6]:         call @1789 // <std.io#thread_group.thread_group>   
7 [0x7]:         movg @26 // @std.io#thread_group   
8 [0x8]:         movn #0   
10 [0xa]:         popobj   
11 [0xb]:         ret   
12 [0xc]:         ret   


function: std#_nil_.$03internal_static_init[3078] params(0) in file: lib/support/0.2.805//nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         new_class @31 // std#_nil_   
1 [0x1]:         movg @31 // @std#_nil_   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         ret   
6 [0x6]:         ret   


function: std#__srt_global.$03internal_static_init[3079] params(0) in file: lib/support/0.2.805//object.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         istore 0   
2 [0x2]:         movg @1 // @std#__srt_global   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#string.$03internal_static_init[3080] params(0) in file: lib/support/0.2.805//string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @58 // @std#string   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @58 // @std#string   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std#string_builder.$03internal_static_init[3081] params(0) in file: lib/support/0.2.805//string_builder.sharp:5:6: note:  
		class string_builder {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @59 // @std#string_builder   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @59 // @std#string_builder   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std#time.$03internal_static_init[3082] params(0) in file: lib/support/0.2.805//time.sharp:5:6: note:  
		class time {
		     ^

0 [0x0]:         istore 4294967295   
2 [0x2]:         movg @60 // @std#time   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std.io#thread_result.$03internal_static_init[3083] params(0) in file: lib/support/0.2.805//io//thread_kernel.sharp:3:5: note:  
		import platform.kernel;
		    ^

0 [0x0]: line: 42 istorel 0, fp+0   
2 [0x2]: line: 43 movi #17, ebx   
4 [0x4]:          new_classarray ebx  // std.io#thread_result[]   
5 [0x5]:          movg @28 // @std.io#thread_result   
6 [0x6]:          movn #17   
8 [0x8]:          popobj   
9 [0x9]: line: 44 movg @28 // @std.io#thread_result   
10 [0xa]:          movn #0   
12 [0xc]:          pushobj   
13 [0xd]:          movg @28 // @std.io#thread_result   
14 [0xe]:          movn #17   
16 [0x10]:          pushobj   
17 [0x11]:          loadl ebx, fp+0   
18 [0x12]:          movr egx, ebx   
19 [0x13]:          inc ebx   
20 [0x14]:          smovr_2 ebx, fp+0   
21 [0x15]:          movr ebx, egx   
22 [0x16]:          popobj2    
23 [0x17]:          movr adx, ebx   
24 [0x18]:          chklen adx   
25 [0x19]:          movnd adx   
26 [0x1a]:          popobj   
27 [0x1b]: line: 45 movg @28 // @std.io#thread_result   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          movg @28 // @std.io#thread_result   
32 [0x20]:          movn #17   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+0   
36 [0x24]:          movr egx, ebx   
37 [0x25]:          inc ebx   
38 [0x26]:          smovr_2 ebx, fp+0   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]: line: 46 movg @28 // @std.io#thread_result   
46 [0x2e]:          movn #2   
48 [0x30]:          pushobj   
49 [0x31]:          movg @28 // @std.io#thread_result   
50 [0x32]:          movn #17   
52 [0x34]:          pushobj   
53 [0x35]:          loadl ebx, fp+0   
54 [0x36]:          movr egx, ebx   
55 [0x37]:          inc ebx   
56 [0x38]:          smovr_2 ebx, fp+0   
57 [0x39]:          movr ebx, egx   
58 [0x3a]:          popobj2    
59 [0x3b]:          movr adx, ebx   
60 [0x3c]:          chklen adx   
61 [0x3d]:          movnd adx   
62 [0x3e]:          popobj   
63 [0x3f]: line: 47 movg @28 // @std.io#thread_result   
64 [0x40]:          movn #3   
66 [0x42]:          pushobj   
67 [0x43]:          movg @28 // @std.io#thread_result   
68 [0x44]:          movn #17   
70 [0x46]:          pushobj   
71 [0x47]:          loadl ebx, fp+0   
72 [0x48]:          movr egx, ebx   
73 [0x49]:          inc ebx   
74 [0x4a]:          smovr_2 ebx, fp+0   
75 [0x4b]:          movr ebx, egx   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          popobj   
81 [0x51]: line: 48 movg @28 // @std.io#thread_result   
82 [0x52]:          movn #4   
84 [0x54]:          pushobj   
85 [0x55]:          movg @28 // @std.io#thread_result   
86 [0x56]:          movn #17   
88 [0x58]:          pushobj   
89 [0x59]:          loadl ebx, fp+0   
90 [0x5a]:          movr egx, ebx   
91 [0x5b]:          inc ebx   
92 [0x5c]:          smovr_2 ebx, fp+0   
93 [0x5d]:          movr ebx, egx   
94 [0x5e]:          popobj2    
95 [0x5f]:          movr adx, ebx   
96 [0x60]:          chklen adx   
97 [0x61]:          movnd adx   
98 [0x62]:          popobj   
99 [0x63]: line: 49 movg @28 // @std.io#thread_result   
100 [0x64]:          movn #5   
102 [0x66]:          pushobj   
103 [0x67]:          movg @28 // @std.io#thread_result   
104 [0x68]:          movn #17   
106 [0x6a]:          pushobj   
107 [0x6b]:          loadl ebx, fp+0   
108 [0x6c]:          movr egx, ebx   
109 [0x6d]:          inc ebx   
110 [0x6e]:          smovr_2 ebx, fp+0   
111 [0x6f]:          movr ebx, egx   
112 [0x70]:          popobj2    
113 [0x71]:          movr adx, ebx   
114 [0x72]:          chklen adx   
115 [0x73]:          movnd adx   
116 [0x74]:          popobj   
117 [0x75]: line: 50 movg @28 // @std.io#thread_result   
118 [0x76]:          movn #6   
120 [0x78]:          pushobj   
121 [0x79]:          movg @28 // @std.io#thread_result   
122 [0x7a]:          movn #17   
124 [0x7c]:          pushobj   
125 [0x7d]:          loadl ebx, fp+0   
126 [0x7e]:          movr egx, ebx   
127 [0x7f]:          inc ebx   
128 [0x80]:          smovr_2 ebx, fp+0   
129 [0x81]:          movr ebx, egx   
130 [0x82]:          popobj2    
131 [0x83]:          movr adx, ebx   
132 [0x84]:          chklen adx   
133 [0x85]:          movnd adx   
134 [0x86]:          popobj   
135 [0x87]: line: 51 movg @28 // @std.io#thread_result   
136 [0x88]:          movn #7   
138 [0x8a]:          pushobj   
139 [0x8b]:          movg @28 // @std.io#thread_result   
140 [0x8c]:          movn #17   
142 [0x8e]:          pushobj   
143 [0x8f]:          loadl ebx, fp+0   
144 [0x90]:          movr egx, ebx   
145 [0x91]:          inc ebx   
146 [0x92]:          smovr_2 ebx, fp+0   
147 [0x93]:          movr ebx, egx   
148 [0x94]:          popobj2    
149 [0x95]:          movr adx, ebx   
150 [0x96]:          chklen adx   
151 [0x97]:          movnd adx   
152 [0x98]:          popobj   
153 [0x99]: line: 52 movg @28 // @std.io#thread_result   
154 [0x9a]:          movn #8   
156 [0x9c]:          pushobj   
157 [0x9d]:          movg @28 // @std.io#thread_result   
158 [0x9e]:          movn #17   
160 [0xa0]:          pushobj   
161 [0xa1]:          loadl ebx, fp+0   
162 [0xa2]:          movr egx, ebx   
163 [0xa3]:          inc ebx   
164 [0xa4]:          smovr_2 ebx, fp+0   
165 [0xa5]:          movr ebx, egx   
166 [0xa6]:          popobj2    
167 [0xa7]:          movr adx, ebx   
168 [0xa8]:          chklen adx   
169 [0xa9]:          movnd adx   
170 [0xaa]:          popobj   
171 [0xab]: line: 53 movg @28 // @std.io#thread_result   
172 [0xac]:          movn #9   
174 [0xae]:          pushobj   
175 [0xaf]:          movg @28 // @std.io#thread_result   
176 [0xb0]:          movn #17   
178 [0xb2]:          pushobj   
179 [0xb3]:          loadl ebx, fp+0   
180 [0xb4]:          movr egx, ebx   
181 [0xb5]:          inc ebx   
182 [0xb6]:          smovr_2 ebx, fp+0   
183 [0xb7]:          movr ebx, egx   
184 [0xb8]:          popobj2    
185 [0xb9]:          movr adx, ebx   
186 [0xba]:          chklen adx   
187 [0xbb]:          movnd adx   
188 [0xbc]:          popobj   
189 [0xbd]: line: 54 movg @28 // @std.io#thread_result   
190 [0xbe]:          movn #10   
192 [0xc0]:          pushobj   
193 [0xc1]:          movg @28 // @std.io#thread_result   
194 [0xc2]:          movn #17   
196 [0xc4]:          pushobj   
197 [0xc5]:          loadl ebx, fp+0   
198 [0xc6]:          movr egx, ebx   
199 [0xc7]:          inc ebx   
200 [0xc8]:          smovr_2 ebx, fp+0   
201 [0xc9]:          movr ebx, egx   
202 [0xca]:          popobj2    
203 [0xcb]:          movr adx, ebx   
204 [0xcc]:          chklen adx   
205 [0xcd]:          movnd adx   
206 [0xce]:          popobj   
207 [0xcf]: line: 55 movg @28 // @std.io#thread_result   
208 [0xd0]:          movn #11   
210 [0xd2]:          pushobj   
211 [0xd3]:          movg @28 // @std.io#thread_result   
212 [0xd4]:          movn #17   
214 [0xd6]:          pushobj   
215 [0xd7]:          loadl ebx, fp+0   
216 [0xd8]:          movr egx, ebx   
217 [0xd9]:          inc ebx   
218 [0xda]:          smovr_2 ebx, fp+0   
219 [0xdb]:          movr ebx, egx   
220 [0xdc]:          popobj2    
221 [0xdd]:          movr adx, ebx   
222 [0xde]:          chklen adx   
223 [0xdf]:          movnd adx   
224 [0xe0]:          popobj   
225 [0xe1]: line: 56 movg @28 // @std.io#thread_result   
226 [0xe2]:          movn #12   
228 [0xe4]:          pushobj   
229 [0xe5]:          movg @28 // @std.io#thread_result   
230 [0xe6]:          movn #17   
232 [0xe8]:          pushobj   
233 [0xe9]:          loadl ebx, fp+0   
234 [0xea]:          movr egx, ebx   
235 [0xeb]:          inc ebx   
236 [0xec]:          smovr_2 ebx, fp+0   
237 [0xed]:          movr ebx, egx   
238 [0xee]:          popobj2    
239 [0xef]:          movr adx, ebx   
240 [0xf0]:          chklen adx   
241 [0xf1]:          movnd adx   
242 [0xf2]:          popobj   
243 [0xf3]: line: 57 movg @28 // @std.io#thread_result   
244 [0xf4]:          movn #13   
246 [0xf6]:          pushobj   
247 [0xf7]:          movg @28 // @std.io#thread_result   
248 [0xf8]:          movn #17   
250 [0xfa]:          pushobj   
251 [0xfb]:          loadl ebx, fp+0   
252 [0xfc]:          movr egx, ebx   
253 [0xfd]:          inc ebx   
254 [0xfe]:          smovr_2 ebx, fp+0   
255 [0xff]:          movr ebx, egx   
256 [0x100]:          popobj2    
257 [0x101]:          movr adx, ebx   
258 [0x102]:          chklen adx   
259 [0x103]:          movnd adx   
260 [0x104]:          popobj   
261 [0x105]: line: 58 movg @28 // @std.io#thread_result   
262 [0x106]:          movn #14   
264 [0x108]:          pushobj   
265 [0x109]:          movg @28 // @std.io#thread_result   
266 [0x10a]:          movn #17   
268 [0x10c]:          pushobj   
269 [0x10d]:          loadl ebx, fp+0   
270 [0x10e]:          movr egx, ebx   
271 [0x10f]:          inc ebx   
272 [0x110]:          smovr_2 ebx, fp+0   
273 [0x111]:          movr ebx, egx   
274 [0x112]:          popobj2    
275 [0x113]:          movr adx, ebx   
276 [0x114]:          chklen adx   
277 [0x115]:          movnd adx   
278 [0x116]:          popobj   
279 [0x117]: line: 59 movg @28 // @std.io#thread_result   
280 [0x118]:          movn #15   
282 [0x11a]:          pushobj   
283 [0x11b]:          movg @28 // @std.io#thread_result   
284 [0x11c]:          movn #17   
286 [0x11e]:          pushobj   
287 [0x11f]:          loadl ebx, fp+0   
288 [0x120]:          movr egx, ebx   
289 [0x121]:          inc ebx   
290 [0x122]:          smovr_2 ebx, fp+0   
291 [0x123]:          movr ebx, egx   
292 [0x124]:          popobj2    
293 [0x125]:          movr adx, ebx   
294 [0x126]:          chklen adx   
295 [0x127]:          movnd adx   
296 [0x128]:          popobj   
297 [0x129]: line: 60 movg @28 // @std.io#thread_result   
298 [0x12a]:          movn #16   
300 [0x12c]:          pushobj   
301 [0x12d]:          movg @28 // @std.io#thread_result   
302 [0x12e]:          movn #17   
304 [0x130]:          pushobj   
305 [0x131]:          loadl ebx, fp+0   
306 [0x132]:          movr egx, ebx   
307 [0x133]:          inc ebx   
308 [0x134]:          smovr_2 ebx, fp+0   
309 [0x135]:          movr ebx, egx   
310 [0x136]:          popobj2    
311 [0x137]:          movr adx, ebx   
312 [0x138]:          chklen adx   
313 [0x139]:          movnd adx   
314 [0x13a]:          popobj   
315 [0x13b]:          ret   
316 [0x13c]:          ret   


function: std.io.task#deferred_task<var>.for_result[3084] params(2) in file: lib/support/0.2.805//io//task//deferred_task.sharp:5:15: note:  
		    static def for_result(builder : job_builder, main: (object, object[])()) : deferred<t> {
		              ^

0 [0x0]: line: 6 new_class @75 // std.io.task#deferred<var>   
1 [0x1]:         dup    
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         pushobj   
6 [0x6]:         call @2945 // <std.io.task#deferred<var>.deferred>   
7 [0x7]:         movsl #0   
8 [0x8]:         smovr_3 fp+2   
9 [0x9]: line: 7 pushl 2   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         movn #7   
15 [0xf]:         popobj   
16 [0x10]: line: 8 pushl 0   
17 [0x11]:         ipushl #1   
18 [0x12]:         call @1723 // <std.io.task#job_builder.operator=>   
19 [0x13]:         pop   
20 [0x14]: line: 9 movl 2   
21 [0x15]:         returnobj   
22 [0x16]:         ret   


function: std.io.task#deferred_task<var>.for_result[3085] params(2) in file: lib/support/0.2.805//io//task//deferred_task.sharp:12:15: note:  
		    static def for_result(builder : job_builder, main: (object)()) : deferred<t> {
		              ^

0 [0x0]: line: 13 new_class @75 // std.io.task#deferred<var>   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          call @2945 // <std.io.task#deferred<var>.deferred>   
7 [0x7]:          movsl #0   
8 [0x8]:          smovr_3 fp+2   
9 [0x9]: line: 14 pushl 2   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          movn #7   
15 [0xf]:          popobj   
16 [0x10]: line: 15 pushl 0   
17 [0x11]:          ipushl #1   
18 [0x12]:          call @1724 // <std.io.task#job_builder.operator=>   
19 [0x13]:          pop   
20 [0x14]: line: 16 movl 2   
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#deferred_task<var>.for_result[3086] params(1) in file: lib/support/0.2.805//io//task//deferred_task.sharp:19:15: note:  
		    static def for_result(main: (object, object[])()) : deferred<t> {
		              ^

0 [0x0]: line: 20 call @1748 // <std.io.task#task.builder>   
1 [0x1]:          popobj2    
2 [0x2]:          smovr_3 fp+1   
3 [0x3]: line: 21 new_class @75 // std.io.task#deferred<var>   
4 [0x4]:          dup    
5 [0x5]:          movl 1   
6 [0x6]:          movn #1   
8 [0x8]:          pushobj   
9 [0x9]:          call @2945 // <std.io.task#deferred<var>.deferred>   
10 [0xa]:          movsl #0   
11 [0xb]:          smovr_3 fp+2   
12 [0xc]: line: 22 pushl 2   
13 [0xd]:          movl 1   
14 [0xe]:          movn #1   
16 [0x10]:          movn #7   
18 [0x12]:          popobj   
19 [0x13]: line: 23 pushl 1   
20 [0x14]:          ipushl #0   
21 [0x15]:          call @1723 // <std.io.task#job_builder.operator=>   
22 [0x16]:          pop   
23 [0x17]: line: 24 movl 2   
24 [0x18]:          returnobj   
25 [0x19]:          ret   


function: std.io.task#deferred_task<var>.for_result[3087] params(1) in file: lib/support/0.2.805//io//task//deferred_task.sharp:27:15: note:  
		    static def for_result(main: (object)()) : deferred<t> {
		              ^

0 [0x0]: line: 28 call @1748 // <std.io.task#task.builder>   
1 [0x1]:          popobj2    
2 [0x2]:          smovr_3 fp+1   
3 [0x3]: line: 29 new_class @75 // std.io.task#deferred<var>   
4 [0x4]:          dup    
5 [0x5]:          movl 1   
6 [0x6]:          movn #1   
8 [0x8]:          pushobj   
9 [0x9]:          call @2945 // <std.io.task#deferred<var>.deferred>   
10 [0xa]:          movsl #0   
11 [0xb]:          smovr_3 fp+2   
12 [0xc]: line: 30 pushl 2   
13 [0xd]:          movl 1   
14 [0xe]:          movn #1   
16 [0x10]:          movn #7   
18 [0x12]:          popobj   
19 [0x13]: line: 31 pushl 1   
20 [0x14]:          ipushl #0   
21 [0x15]:          call @1724 // <std.io.task#job_builder.operator=>   
22 [0x16]:          pop   
23 [0x17]: line: 32 movl 2   
24 [0x18]:          returnobj   
25 [0x19]:          ret   


constructor: std.io.task#deferred_task<var>.deferred_task[3088] params(0) in file: lib/support/0.2.805//io//task//deferred_task.sharp:3:6: note:  
		class deferred_task<t> base deferred<t> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2948 // <std.io.task#deferred<var>.deferred>   
2 [0x2]:         ret   


lambda: app#__srt_global.anon_func#3089[3089] params(1) in file: tests/syntax.sharp:13:44: note:  
		    future = deferred_task<var>.for_result({ obs ->
		                                           ^

0 [0x0]: line: 14 movl 0   
1 [0x1]:          movi #76, cmt   
3 [0x3]:          cast cmt   
4 [0x4]:          smovr_3 fp+1   
5 [0x5]: line: 15 pushl 1   
6 [0x6]:          istore 105   
8 [0x8]:          call @2939 // <std.io.task#observable<var>.post>   
9 [0x9]: line: 16 istore 500   
11 [0xb]:          call @1766 // <std.io#thread.sleep>   
12 [0xc]: line: 17 pushl 1   
13 [0xd]:          istore 105   
15 [0xf]:          call @2939 // <std.io.task#observable<var>.post>   
16 [0x10]: line: 18 istore 500   
18 [0x12]:          call @1766 // <std.io#thread.sleep>   
19 [0x13]: line: 19 pushl 1   
20 [0x14]:          istore 500   
22 [0x16]:          call @2939 // <std.io.task#observable<var>.post>   
23 [0x17]:          ret   


lambda: app#__srt_global.anon_func#3090[3090] params(1) in file: tests/syntax.sharp:22:28: note:  
		    future.observe_forever({ obs ->
		                           ^

0 [0x0]: line: 23 new_class @58 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @63 // recieved:    
3 [0x3]:          call @2823 // <std#string.string>   
4 [0x4]:          movg @0 // @app#__srt_global   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          call @2942 // <std.io.task#observable<var>.get_data>   
9 [0x9]:          call @2853 // <std#string.operator+>   
10 [0xa]:          call @1576 // <std#__srt_global.println>   
11 [0xb]: line: 25 movg @0 // @app#__srt_global   
12 [0xc]:          movn #1   
14 [0xe]:          pushobj   
15 [0xf]:          call @2942 // <std.io.task#observable<var>.get_data>   
16 [0x10]:          loadval ebx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movi #500, ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          test ecx, ebx   
22 [0x16]:          jne 25   
23 [0x17]: line: 26 pushl 0   
24 [0x18]:          call @2943 // <std.io.task#observable<var>.stop>   
25 [0x19]:          nop   
26 [0x1a]:          ret   


lambda: std.io.task#__srt_global.anon_func#3091[3091] params(2) in file: lib/support/0.2.805//io//task//job_master.sharp:67:35: note:  
				job_queue.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                  ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #11   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #11   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: std.io.task#__srt_global.anon_func#3092[3092] params(1) in file: lib/support/0.2.805//io//task//job_scheduler.sharp:87:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 88 pushl 0   
1 [0x1]:          call @1785 // <std.io#thread.is_active>   
2 [0x2]:          loadval ebx   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          skpe ebx // pc = 17   
5 [0x5]:          movg @17 // @std.io.task#__srt_global   
6 [0x6]:          movn #2   
8 [0x8]:          pushobj   
9 [0x9]:          pushl 0   
10 [0xa]:          call @1732 // <std.io.task#job_master.get_host_controller>   
11 [0xb]:          popobj2    
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          pushnull    
16 [0x10]:          itest ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


lambda: std.io.task#__srt_global.anon_func#3093[3093] params(2) in file: lib/support/0.2.805//io//task//observable.sharp:27:42: note:  
				    observers.remove(thread.current(), {it, it2 -> return it.id == it2.id; });
		                                         ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #2   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: std.io.task#__srt_global.anon_func#3094[3094] params(2) in file: lib/support/0.2.805//io//task//observable.sharp:29:42: note:  
				    observers.remove(thread.current(), {it, it2 -> return it.id == it2.id; });
		                                         ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #2   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


